{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 624,
  "text": "void main ( ) { int p ; int num1 , num2 , remainder , numerator , denominator ; scanf ( \"%d\" , & p ) ; int gcd [ p ] , lcm [ p ] ; int i ; for ( i = 0 ; i < p ; i ++ ) { scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd [ i ] = denominator ; lcm [ i ] = num1 * num2 / gcd [ i ] ; } for ( i = 0 ; i < p ; i ++ ) { printf ( \"%d %d\\n\" , gcd [ i ] , lcm [ i ] ) ; } }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 624,
      "text": "void main ( ) { int p ; int num1 , num2 , remainder , numerator , denominator ; scanf ( \"%d\" , & p ) ; int gcd [ p ] , lcm [ p ] ; int i ; for ( i = 0 ; i < p ; i ++ ) { scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd [ i ] = denominator ; lcm [ i ] = num1 * num2 / gcd [ i ] ; } for ( i = 0 ; i < p ; i ++ ) { printf ( \"%d %d\\n\" , gcd [ i ] , lcm [ i ] ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 4,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 5,
          "end_byte": 13,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 5,
              "end_byte": 9,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 10,
              "end_byte": 13,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 10,
                  "end_byte": 11,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 12,
                  "end_byte": 13,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 14,
          "end_byte": 624,
          "text": "{ int p ; int num1 , num2 , remainder , numerator , denominator ; scanf ( \"%d\" , & p ) ; int gcd [ p ] , lcm [ p ] ; int i ; for ( i = 0 ; i < p ; i ++ ) { scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd [ i ] = denominator ; lcm [ i ] = num1 * num2 / gcd [ i ] ; } for ( i = 0 ; i < p ; i ++ ) { printf ( \"%d %d\\n\" , gcd [ i ] , lcm [ i ] ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 14,
              "end_byte": 15,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 16,
              "end_byte": 23,
              "text": "int p ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 16,
                  "end_byte": 19,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 20,
                  "end_byte": 21,
                  "text": "p",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 22,
                  "end_byte": 23,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 24,
              "end_byte": 79,
              "text": "int num1 , num2 , remainder , numerator , denominator ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 24,
                  "end_byte": 27,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 28,
                  "end_byte": 32,
                  "text": "num1",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 33,
                  "end_byte": 34,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 35,
                  "end_byte": 39,
                  "text": "num2",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 40,
                  "end_byte": 41,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 42,
                  "end_byte": 51,
                  "text": "remainder",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 52,
                  "end_byte": 53,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 54,
                  "end_byte": 63,
                  "text": "numerator",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 64,
                  "end_byte": 65,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 66,
                  "end_byte": 77,
                  "text": "denominator",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 78,
                  "end_byte": 79,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 80,
              "end_byte": 102,
              "text": "scanf ( \"%d\" , & p ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 80,
                  "end_byte": 100,
                  "text": "scanf ( \"%d\" , & p )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 80,
                      "end_byte": 85,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 86,
                      "end_byte": 100,
                      "text": "( \"%d\" , & p )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 86,
                          "end_byte": 87,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 88,
                          "end_byte": 92,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 88,
                              "end_byte": 89,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 89,
                              "end_byte": 91,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 91,
                              "end_byte": 92,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 93,
                          "end_byte": 94,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 95,
                          "end_byte": 98,
                          "text": "& p",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 95,
                              "end_byte": 96,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 97,
                              "end_byte": 98,
                              "text": "p",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 99,
                          "end_byte": 100,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 101,
                  "end_byte": 102,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 103,
              "end_byte": 130,
              "text": "int gcd [ p ] , lcm [ p ] ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 103,
                  "end_byte": 106,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 107,
                  "end_byte": 116,
                  "text": "gcd [ p ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 107,
                      "end_byte": 110,
                      "text": "gcd",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 111,
                      "end_byte": 112,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 113,
                      "end_byte": 114,
                      "text": "p",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 115,
                      "end_byte": 116,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 117,
                  "end_byte": 118,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 119,
                  "end_byte": 128,
                  "text": "lcm [ p ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 119,
                      "end_byte": 122,
                      "text": "lcm",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 123,
                      "end_byte": 124,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 125,
                      "end_byte": 126,
                      "text": "p",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 127,
                      "end_byte": 128,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 129,
                  "end_byte": 130,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 131,
              "end_byte": 138,
              "text": "int i ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 131,
                  "end_byte": 134,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 135,
                  "end_byte": 136,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 137,
                  "end_byte": 138,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 139,
              "end_byte": 542,
              "text": "for ( i = 0 ; i < p ; i ++ ) { scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd [ i ] = denominator ; lcm [ i ] = num1 * num2 / gcd [ i ] ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 139,
                  "end_byte": 142,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 143,
                  "end_byte": 144,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 145,
                  "end_byte": 150,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 145,
                      "end_byte": 146,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 147,
                      "end_byte": 148,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 149,
                      "end_byte": 150,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 151,
                  "end_byte": 152,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 153,
                  "end_byte": 158,
                  "text": "i < p",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 153,
                      "end_byte": 154,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 155,
                      "end_byte": 156,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 157,
                      "end_byte": 158,
                      "text": "p",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 159,
                  "end_byte": 160,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 161,
                  "end_byte": 165,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 161,
                      "end_byte": 162,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 163,
                      "end_byte": 165,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 166,
                  "end_byte": 167,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 168,
                  "end_byte": 542,
                  "text": "{ scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd [ i ] = denominator ; lcm [ i ] = num1 * num2 / gcd [ i ] ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 168,
                      "end_byte": 169,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 170,
                      "end_byte": 207,
                      "text": "scanf ( \"%d %d\" , & num1 , & num2 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 170,
                          "end_byte": 205,
                          "text": "scanf ( \"%d %d\" , & num1 , & num2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 170,
                              "end_byte": 175,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 176,
                              "end_byte": 205,
                              "text": "( \"%d %d\" , & num1 , & num2 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 176,
                                  "end_byte": 177,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 178,
                                  "end_byte": 185,
                                  "text": "\"%d %d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 178,
                                      "end_byte": 179,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 179,
                                      "end_byte": 184,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 184,
                                      "end_byte": 185,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 186,
                                  "end_byte": 187,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 188,
                                  "end_byte": 194,
                                  "text": "& num1",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 188,
                                      "end_byte": 189,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 190,
                                      "end_byte": 194,
                                      "text": "num1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 195,
                                  "end_byte": 196,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 197,
                                  "end_byte": 203,
                                  "text": "& num2",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 197,
                                      "end_byte": 198,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 199,
                                      "end_byte": 203,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 204,
                                  "end_byte": 205,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 206,
                          "end_byte": 207,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 208,
                      "end_byte": 319,
                      "text": "if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 208,
                          "end_byte": 210,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 211,
                          "end_byte": 226,
                          "text": "( num1 > num2 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 211,
                              "end_byte": 212,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 213,
                              "end_byte": 224,
                              "text": "num1 > num2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 213,
                                  "end_byte": 217,
                                  "text": "num1",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 218,
                                  "end_byte": 219,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 220,
                                  "end_byte": 224,
                                  "text": "num2",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 225,
                              "end_byte": 226,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 227,
                          "end_byte": 270,
                          "text": "{ numerator = num1 ; denominator = num2 ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 227,
                              "end_byte": 228,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 229,
                              "end_byte": 247,
                              "text": "numerator = num1 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 229,
                                  "end_byte": 245,
                                  "text": "numerator = num1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 229,
                                      "end_byte": 238,
                                      "text": "numerator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 239,
                                      "end_byte": 240,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 241,
                                      "end_byte": 245,
                                      "text": "num1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 246,
                                  "end_byte": 247,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 248,
                              "end_byte": 268,
                              "text": "denominator = num2 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 248,
                                  "end_byte": 266,
                                  "text": "denominator = num2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 248,
                                      "end_byte": 259,
                                      "text": "denominator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 260,
                                      "end_byte": 261,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 262,
                                      "end_byte": 266,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 267,
                                  "end_byte": 268,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 269,
                              "end_byte": 270,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 271,
                          "end_byte": 319,
                          "text": "else { numerator = num2 ; denominator = num1 ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 271,
                              "end_byte": 275,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 276,
                              "end_byte": 319,
                              "text": "{ numerator = num2 ; denominator = num1 ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 276,
                                  "end_byte": 277,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 278,
                                  "end_byte": 296,
                                  "text": "numerator = num2 ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 278,
                                      "end_byte": 294,
                                      "text": "numerator = num2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 278,
                                          "end_byte": 287,
                                          "text": "numerator",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 288,
                                          "end_byte": 289,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 290,
                                          "end_byte": 294,
                                          "text": "num2",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 295,
                                      "end_byte": 296,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 297,
                                  "end_byte": 317,
                                  "text": "denominator = num1 ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 297,
                                      "end_byte": 315,
                                      "text": "denominator = num1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 297,
                                          "end_byte": 308,
                                          "text": "denominator",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 309,
                                          "end_byte": 310,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 311,
                                          "end_byte": 315,
                                          "text": "num1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 316,
                                      "end_byte": 317,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 318,
                                  "end_byte": 319,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 320,
                      "end_byte": 357,
                      "text": "remainder = numerator % denominator ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 320,
                          "end_byte": 355,
                          "text": "remainder = numerator % denominator",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 320,
                              "end_byte": 329,
                              "text": "remainder",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 330,
                              "end_byte": 331,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 332,
                              "end_byte": 355,
                              "text": "numerator % denominator",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 332,
                                  "end_byte": 341,
                                  "text": "numerator",
                                  "children": []
                                },
                                {
                                  "type": "%",
                                  "start_byte": 342,
                                  "end_byte": 343,
                                  "text": "%",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 344,
                                  "end_byte": 355,
                                  "text": "denominator",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 356,
                          "end_byte": 357,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 358,
                      "end_byte": 476,
                      "text": "while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 358,
                          "end_byte": 363,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 364,
                          "end_byte": 382,
                          "text": "( remainder != 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 364,
                              "end_byte": 365,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 366,
                              "end_byte": 380,
                              "text": "remainder != 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 366,
                                  "end_byte": 375,
                                  "text": "remainder",
                                  "children": []
                                },
                                {
                                  "type": "!=",
                                  "start_byte": 376,
                                  "end_byte": 378,
                                  "text": "!=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 379,
                                  "end_byte": 380,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 381,
                              "end_byte": 382,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 383,
                          "end_byte": 476,
                          "text": "{ numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 383,
                              "end_byte": 384,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 385,
                              "end_byte": 410,
                              "text": "numerator = denominator ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 385,
                                  "end_byte": 408,
                                  "text": "numerator = denominator",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 385,
                                      "end_byte": 394,
                                      "text": "numerator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 395,
                                      "end_byte": 396,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 397,
                                      "end_byte": 408,
                                      "text": "denominator",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 409,
                                  "end_byte": 410,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 411,
                              "end_byte": 436,
                              "text": "denominator = remainder ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 411,
                                  "end_byte": 434,
                                  "text": "denominator = remainder",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 411,
                                      "end_byte": 422,
                                      "text": "denominator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 423,
                                      "end_byte": 424,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 425,
                                      "end_byte": 434,
                                      "text": "remainder",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 435,
                                  "end_byte": 436,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 437,
                              "end_byte": 474,
                              "text": "remainder = numerator % denominator ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 437,
                                  "end_byte": 472,
                                  "text": "remainder = numerator % denominator",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 437,
                                      "end_byte": 446,
                                      "text": "remainder",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 447,
                                      "end_byte": 448,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 449,
                                      "end_byte": 472,
                                      "text": "numerator % denominator",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 449,
                                          "end_byte": 458,
                                          "text": "numerator",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 459,
                                          "end_byte": 460,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 461,
                                          "end_byte": 472,
                                          "text": "denominator",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 473,
                                  "end_byte": 474,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 475,
                              "end_byte": 476,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 477,
                      "end_byte": 502,
                      "text": "gcd [ i ] = denominator ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 477,
                          "end_byte": 500,
                          "text": "gcd [ i ] = denominator",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 477,
                              "end_byte": 486,
                              "text": "gcd [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 477,
                                  "end_byte": 480,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 481,
                                  "end_byte": 486,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 481,
                                      "end_byte": 482,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 483,
                                      "end_byte": 484,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 485,
                                      "end_byte": 486,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 487,
                              "end_byte": 488,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 489,
                              "end_byte": 500,
                              "text": "denominator",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 501,
                          "end_byte": 502,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 503,
                      "end_byte": 540,
                      "text": "lcm [ i ] = num1 * num2 / gcd [ i ] ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 503,
                          "end_byte": 538,
                          "text": "lcm [ i ] = num1 * num2 / gcd [ i ]",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 503,
                              "end_byte": 512,
                              "text": "lcm [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 503,
                                  "end_byte": 506,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 507,
                                  "end_byte": 512,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 507,
                                      "end_byte": 508,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 509,
                                      "end_byte": 510,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 511,
                                      "end_byte": 512,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 513,
                              "end_byte": 514,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 515,
                              "end_byte": 538,
                              "text": "num1 * num2 / gcd [ i ]",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 515,
                                  "end_byte": 526,
                                  "text": "num1 * num2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 515,
                                      "end_byte": 519,
                                      "text": "num1",
                                      "children": []
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 520,
                                      "end_byte": 521,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 522,
                                      "end_byte": 526,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 527,
                                  "end_byte": 528,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 529,
                                  "end_byte": 538,
                                  "text": "gcd [ i ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 529,
                                      "end_byte": 532,
                                      "text": "gcd",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 533,
                                      "end_byte": 538,
                                      "text": "[ i ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 533,
                                          "end_byte": 534,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 535,
                                          "end_byte": 536,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 537,
                                          "end_byte": 538,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 539,
                          "end_byte": 540,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 541,
                      "end_byte": 542,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 543,
              "end_byte": 622,
              "text": "for ( i = 0 ; i < p ; i ++ ) { printf ( \"%d %d\\n\" , gcd [ i ] , lcm [ i ] ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 543,
                  "end_byte": 546,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 547,
                  "end_byte": 548,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 549,
                  "end_byte": 554,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 549,
                      "end_byte": 550,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 551,
                      "end_byte": 552,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 553,
                      "end_byte": 554,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 555,
                  "end_byte": 556,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 557,
                  "end_byte": 562,
                  "text": "i < p",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 557,
                      "end_byte": 558,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 559,
                      "end_byte": 560,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 561,
                      "end_byte": 562,
                      "text": "p",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 563,
                  "end_byte": 564,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 565,
                  "end_byte": 569,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 565,
                      "end_byte": 566,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 567,
                      "end_byte": 569,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 570,
                  "end_byte": 571,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 572,
                  "end_byte": 622,
                  "text": "{ printf ( \"%d %d\\n\" , gcd [ i ] , lcm [ i ] ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 572,
                      "end_byte": 573,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 574,
                      "end_byte": 620,
                      "text": "printf ( \"%d %d\\n\" , gcd [ i ] , lcm [ i ] ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 574,
                          "end_byte": 618,
                          "text": "printf ( \"%d %d\\n\" , gcd [ i ] , lcm [ i ] )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 574,
                              "end_byte": 580,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 581,
                              "end_byte": 618,
                              "text": "( \"%d %d\\n\" , gcd [ i ] , lcm [ i ] )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 581,
                                  "end_byte": 582,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 583,
                                  "end_byte": 592,
                                  "text": "\"%d %d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 583,
                                      "end_byte": 584,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 584,
                                      "end_byte": 589,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 589,
                                      "end_byte": 591,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 591,
                                      "end_byte": 592,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 593,
                                  "end_byte": 594,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 595,
                                  "end_byte": 604,
                                  "text": "gcd [ i ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 595,
                                      "end_byte": 598,
                                      "text": "gcd",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 599,
                                      "end_byte": 604,
                                      "text": "[ i ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 599,
                                          "end_byte": 600,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 601,
                                          "end_byte": 602,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 603,
                                          "end_byte": 604,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 605,
                                  "end_byte": 606,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 607,
                                  "end_byte": 616,
                                  "text": "lcm [ i ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 607,
                                      "end_byte": 610,
                                      "text": "lcm",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 611,
                                      "end_byte": 616,
                                      "text": "[ i ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 611,
                                          "end_byte": 612,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 613,
                                          "end_byte": 614,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 615,
                                          "end_byte": 616,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 617,
                                  "end_byte": 618,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 619,
                          "end_byte": 620,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 621,
                      "end_byte": 622,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 623,
              "end_byte": 624,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}