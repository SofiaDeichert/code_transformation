{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 412,
  "text": "long long int gcd ( long long int a , long long int b ) { while ( a != b ) { if ( a > b ) a = a - b ; if ( a < b ) b = b - a ; } printf ( \"%lld\" , a ) ; printf ( \" \" ) ; return a ; } int main ( ) { int t ; long long int num1 , num2 , temp ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%lld%lld\" , & num1 , & num2 ) ; temp = ( num1 * num2 ) / gcd ( num1 , num2 ) ; printf ( \"%lld\\n\" , temp ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 182,
      "text": "long long int gcd ( long long int a , long long int b ) { while ( a != b ) { if ( a > b ) a = a - b ; if ( a < b ) b = b - a ; } printf ( \"%lld\" , a ) ; printf ( \" \" ) ; return a ; }",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 0,
          "end_byte": 13,
          "text": "long long int",
          "children": [
            {
              "type": "long",
              "start_byte": 0,
              "end_byte": 4,
              "text": "long",
              "children": []
            },
            {
              "type": "long",
              "start_byte": 5,
              "end_byte": 9,
              "text": "long",
              "children": []
            },
            {
              "type": "primitive_type",
              "start_byte": 10,
              "end_byte": 13,
              "text": "int",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 14,
          "end_byte": 55,
          "text": "gcd ( long long int a , long long int b )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 14,
              "end_byte": 17,
              "text": "gcd",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 18,
              "end_byte": 55,
              "text": "( long long int a , long long int b )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 18,
                  "end_byte": 19,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 20,
                  "end_byte": 35,
                  "text": "long long int a",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 20,
                      "end_byte": 33,
                      "text": "long long int",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 20,
                          "end_byte": 24,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "long",
                          "start_byte": 25,
                          "end_byte": 29,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "primitive_type",
                          "start_byte": 30,
                          "end_byte": 33,
                          "text": "int",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 34,
                      "end_byte": 35,
                      "text": "a",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 36,
                  "end_byte": 37,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 38,
                  "end_byte": 53,
                  "text": "long long int b",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 38,
                      "end_byte": 51,
                      "text": "long long int",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 38,
                          "end_byte": 42,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "long",
                          "start_byte": 43,
                          "end_byte": 47,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "primitive_type",
                          "start_byte": 48,
                          "end_byte": 51,
                          "text": "int",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 52,
                      "end_byte": 53,
                      "text": "b",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 54,
                  "end_byte": 55,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 56,
          "end_byte": 182,
          "text": "{ while ( a != b ) { if ( a > b ) a = a - b ; if ( a < b ) b = b - a ; } printf ( \"%lld\" , a ) ; printf ( \" \" ) ; return a ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 56,
              "end_byte": 57,
              "text": "{",
              "children": []
            },
            {
              "type": "while_statement",
              "start_byte": 58,
              "end_byte": 128,
              "text": "while ( a != b ) { if ( a > b ) a = a - b ; if ( a < b ) b = b - a ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 58,
                  "end_byte": 63,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 64,
                  "end_byte": 74,
                  "text": "( a != b )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 64,
                      "end_byte": 65,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 66,
                      "end_byte": 72,
                      "text": "a != b",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 66,
                          "end_byte": 67,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": "!=",
                          "start_byte": 68,
                          "end_byte": 70,
                          "text": "!=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 71,
                          "end_byte": 72,
                          "text": "b",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 73,
                      "end_byte": 74,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 75,
                  "end_byte": 128,
                  "text": "{ if ( a > b ) a = a - b ; if ( a < b ) b = b - a ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 75,
                      "end_byte": 76,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 77,
                      "end_byte": 101,
                      "text": "if ( a > b ) a = a - b ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 77,
                          "end_byte": 79,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 80,
                          "end_byte": 89,
                          "text": "( a > b )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 80,
                              "end_byte": 81,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 82,
                              "end_byte": 87,
                              "text": "a > b",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 82,
                                  "end_byte": 83,
                                  "text": "a",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 84,
                                  "end_byte": 85,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 86,
                                  "end_byte": 87,
                                  "text": "b",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 88,
                              "end_byte": 89,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 90,
                          "end_byte": 101,
                          "text": "a = a - b ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 90,
                              "end_byte": 99,
                              "text": "a = a - b",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 90,
                                  "end_byte": 91,
                                  "text": "a",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 92,
                                  "end_byte": 93,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 94,
                                  "end_byte": 99,
                                  "text": "a - b",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 94,
                                      "end_byte": 95,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": "-",
                                      "start_byte": 96,
                                      "end_byte": 97,
                                      "text": "-",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 98,
                                      "end_byte": 99,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 100,
                              "end_byte": 101,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 102,
                      "end_byte": 126,
                      "text": "if ( a < b ) b = b - a ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 102,
                          "end_byte": 104,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 105,
                          "end_byte": 114,
                          "text": "( a < b )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 105,
                              "end_byte": 106,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 107,
                              "end_byte": 112,
                              "text": "a < b",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 107,
                                  "end_byte": 108,
                                  "text": "a",
                                  "children": []
                                },
                                {
                                  "type": "<",
                                  "start_byte": 109,
                                  "end_byte": 110,
                                  "text": "<",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 111,
                                  "end_byte": 112,
                                  "text": "b",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 113,
                              "end_byte": 114,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 115,
                          "end_byte": 126,
                          "text": "b = b - a ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 115,
                              "end_byte": 124,
                              "text": "b = b - a",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 115,
                                  "end_byte": 116,
                                  "text": "b",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 117,
                                  "end_byte": 118,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 119,
                                  "end_byte": 124,
                                  "text": "b - a",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 119,
                                      "end_byte": 120,
                                      "text": "b",
                                      "children": []
                                    },
                                    {
                                      "type": "-",
                                      "start_byte": 121,
                                      "end_byte": 122,
                                      "text": "-",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 123,
                                      "end_byte": 124,
                                      "text": "a",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 125,
                              "end_byte": 126,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 127,
                      "end_byte": 128,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 129,
              "end_byte": 152,
              "text": "printf ( \"%lld\" , a ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 129,
                  "end_byte": 150,
                  "text": "printf ( \"%lld\" , a )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 129,
                      "end_byte": 135,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 136,
                      "end_byte": 150,
                      "text": "( \"%lld\" , a )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 136,
                          "end_byte": 137,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 138,
                          "end_byte": 144,
                          "text": "\"%lld\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 138,
                              "end_byte": 139,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 139,
                              "end_byte": 143,
                              "text": "%lld",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 143,
                              "end_byte": 144,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 145,
                          "end_byte": 146,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 147,
                          "end_byte": 148,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": ")",
                          "start_byte": 149,
                          "end_byte": 150,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 151,
                  "end_byte": 152,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 153,
              "end_byte": 169,
              "text": "printf ( \" \" ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 153,
                  "end_byte": 167,
                  "text": "printf ( \" \" )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 153,
                      "end_byte": 159,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 160,
                      "end_byte": 167,
                      "text": "( \" \" )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 160,
                          "end_byte": 161,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 162,
                          "end_byte": 165,
                          "text": "\" \"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 162,
                              "end_byte": 163,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 163,
                              "end_byte": 164,
                              "text": " ",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 164,
                              "end_byte": 165,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 166,
                          "end_byte": 167,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 168,
                  "end_byte": 169,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 170,
              "end_byte": 180,
              "text": "return a ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 170,
                  "end_byte": 176,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 177,
                  "end_byte": 178,
                  "text": "a",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 179,
                  "end_byte": 180,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 181,
              "end_byte": 182,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 183,
      "end_byte": 412,
      "text": "int main ( ) { int t ; long long int num1 , num2 , temp ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%lld%lld\" , & num1 , & num2 ) ; temp = ( num1 * num2 ) / gcd ( num1 , num2 ) ; printf ( \"%lld\\n\" , temp ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 183,
          "end_byte": 186,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 187,
          "end_byte": 195,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 187,
              "end_byte": 191,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 192,
              "end_byte": 195,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 192,
                  "end_byte": 193,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 194,
                  "end_byte": 195,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 196,
          "end_byte": 412,
          "text": "{ int t ; long long int num1 , num2 , temp ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%lld%lld\" , & num1 , & num2 ) ; temp = ( num1 * num2 ) / gcd ( num1 , num2 ) ; printf ( \"%lld\\n\" , temp ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 196,
              "end_byte": 197,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 198,
              "end_byte": 205,
              "text": "int t ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 198,
                  "end_byte": 201,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 202,
                  "end_byte": 203,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 204,
                  "end_byte": 205,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 206,
              "end_byte": 240,
              "text": "long long int num1 , num2 , temp ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 206,
                  "end_byte": 219,
                  "text": "long long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 206,
                      "end_byte": 210,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "long",
                      "start_byte": 211,
                      "end_byte": 215,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 216,
                      "end_byte": 219,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 220,
                  "end_byte": 224,
                  "text": "num1",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 225,
                  "end_byte": 226,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 227,
                  "end_byte": 231,
                  "text": "num2",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 232,
                  "end_byte": 233,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 234,
                  "end_byte": 238,
                  "text": "temp",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 239,
                  "end_byte": 240,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 241,
              "end_byte": 263,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 241,
                  "end_byte": 261,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 241,
                      "end_byte": 246,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 247,
                      "end_byte": 261,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 247,
                          "end_byte": 248,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 249,
                          "end_byte": 253,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 249,
                              "end_byte": 250,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 250,
                              "end_byte": 252,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 252,
                              "end_byte": 253,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 254,
                          "end_byte": 255,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 256,
                          "end_byte": 259,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 256,
                              "end_byte": 257,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 258,
                              "end_byte": 259,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 260,
                          "end_byte": 261,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 262,
                  "end_byte": 263,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 264,
              "end_byte": 399,
              "text": "while ( t -- ) { scanf ( \"%lld%lld\" , & num1 , & num2 ) ; temp = ( num1 * num2 ) / gcd ( num1 , num2 ) ; printf ( \"%lld\\n\" , temp ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 264,
                  "end_byte": 269,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 270,
                  "end_byte": 278,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 270,
                      "end_byte": 271,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 272,
                      "end_byte": 276,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 272,
                          "end_byte": 273,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 274,
                          "end_byte": 276,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 277,
                      "end_byte": 278,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 279,
                  "end_byte": 399,
                  "text": "{ scanf ( \"%lld%lld\" , & num1 , & num2 ) ; temp = ( num1 * num2 ) / gcd ( num1 , num2 ) ; printf ( \"%lld\\n\" , temp ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 279,
                      "end_byte": 280,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 281,
                      "end_byte": 321,
                      "text": "scanf ( \"%lld%lld\" , & num1 , & num2 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 281,
                          "end_byte": 319,
                          "text": "scanf ( \"%lld%lld\" , & num1 , & num2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 281,
                              "end_byte": 286,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 287,
                              "end_byte": 319,
                              "text": "( \"%lld%lld\" , & num1 , & num2 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 287,
                                  "end_byte": 288,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 289,
                                  "end_byte": 299,
                                  "text": "\"%lld%lld\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 289,
                                      "end_byte": 290,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 290,
                                      "end_byte": 298,
                                      "text": "%lld%lld",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 298,
                                      "end_byte": 299,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 300,
                                  "end_byte": 301,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 302,
                                  "end_byte": 308,
                                  "text": "& num1",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 302,
                                      "end_byte": 303,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 304,
                                      "end_byte": 308,
                                      "text": "num1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 309,
                                  "end_byte": 310,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 311,
                                  "end_byte": 317,
                                  "text": "& num2",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 311,
                                      "end_byte": 312,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 313,
                                      "end_byte": 317,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 318,
                                  "end_byte": 319,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 320,
                          "end_byte": 321,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 322,
                      "end_byte": 368,
                      "text": "temp = ( num1 * num2 ) / gcd ( num1 , num2 ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 322,
                          "end_byte": 366,
                          "text": "temp = ( num1 * num2 ) / gcd ( num1 , num2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 322,
                              "end_byte": 326,
                              "text": "temp",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 327,
                              "end_byte": 328,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 329,
                              "end_byte": 366,
                              "text": "( num1 * num2 ) / gcd ( num1 , num2 )",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 329,
                                  "end_byte": 344,
                                  "text": "( num1 * num2 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 329,
                                      "end_byte": 330,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 331,
                                      "end_byte": 342,
                                      "text": "num1 * num2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 331,
                                          "end_byte": 335,
                                          "text": "num1",
                                          "children": []
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 336,
                                          "end_byte": 337,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 338,
                                          "end_byte": 342,
                                          "text": "num2",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 343,
                                      "end_byte": 344,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 345,
                                  "end_byte": 346,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 347,
                                  "end_byte": 366,
                                  "text": "gcd ( num1 , num2 )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 347,
                                      "end_byte": 350,
                                      "text": "gcd",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 351,
                                      "end_byte": 366,
                                      "text": "( num1 , num2 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 351,
                                          "end_byte": 352,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 353,
                                          "end_byte": 357,
                                          "text": "num1",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 358,
                                          "end_byte": 359,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 360,
                                          "end_byte": 364,
                                          "text": "num2",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 365,
                                          "end_byte": 366,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 367,
                          "end_byte": 368,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 369,
                      "end_byte": 397,
                      "text": "printf ( \"%lld\\n\" , temp ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 369,
                          "end_byte": 395,
                          "text": "printf ( \"%lld\\n\" , temp )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 369,
                              "end_byte": 375,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 376,
                              "end_byte": 395,
                              "text": "( \"%lld\\n\" , temp )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 376,
                                  "end_byte": 377,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 378,
                                  "end_byte": 386,
                                  "text": "\"%lld\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 378,
                                      "end_byte": 379,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 379,
                                      "end_byte": 383,
                                      "text": "%lld",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 383,
                                      "end_byte": 385,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 385,
                                      "end_byte": 386,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 387,
                                  "end_byte": 388,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 389,
                                  "end_byte": 393,
                                  "text": "temp",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 394,
                                  "end_byte": 395,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 396,
                          "end_byte": 397,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 398,
                      "end_byte": 399,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 400,
              "end_byte": 410,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 400,
                  "end_byte": 406,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 407,
                  "end_byte": 408,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 409,
                  "end_byte": 410,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 411,
              "end_byte": 412,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}