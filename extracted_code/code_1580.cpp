int array [ 100 ] [ 100 ] ; int cache [ 100 ] [ 100 ] ; int visited [ 100 ] [ 100 ] ; int solve ( int , int , int ) ; int main ( ) { int testno , rownum , j , k , i , output ; scanf ( "%d" , & testno ) ; for ( i = 0 ; i < testno ; i ++ ) { scanf ( "%d" , & rownum ) ; for ( j = 0 ; j < rownum ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { visited [ j ] [ k ] = 0 ; scanf ( "%d" , & array [ j ] [ k ] ) ; } } output = solve ( 0 , 0 , rownum ) ; printf ( "%d\n" , output ) ; } return 0 ; } int solve ( int i , int j , int n ) { int t1 , t2 , t ; if ( i > n ) return 0 ; else if ( visited [ i ] [ j ] == 1 ) return cache [ i ] [ j ] ; else { t1 = solve ( i + 1 , j , n ) ; t2 = solve ( i + 1 , j + 1 , n ) ; t = array [ i ] [ j ] + MAX ( t1 , t2 ) ; cache [ i ] [ j ] = t ; visited [ i ] [ j ] = t ; return t ; } }