int findMax ( int num1 , int num2 ) { return num1 >= num2 ? num1 : num2 ; } int main ( ) { void printMaxSum ( int * * , int ) ; int numLines , numCases ; int * * elemArr = NULL ; int count , i , j ; scanf ( "%d" , & numCases ) ; for ( count = 0 ; count < numCases ; count ++ ) { scanf ( "%d" , & numLines ) ; elemArr = ( int * * ) malloc ( sizeof ( int * ) * numLines ) ; for ( i = 1 ; i <= numLines ; i ++ ) { elemArr [ i - 1 ] = ( int * ) malloc ( sizeof ( int ) * i ) ; for ( j = 0 ; j < i ; j ++ ) scanf ( "%d" , & elemArr [ i - 1 ] [ j ] ) ; } printMaxSum ( elemArr , numLines ) ; for ( i = 0 ; i < numLines ; i ++ ) free ( elemArr [ i ] ) ; free ( elemArr ) ; } return 0 ; } void printMaxSum ( int * * elemArr , int numLines ) { int i , j ; int * maxArr = ( int * ) malloc ( sizeof ( int ) * numLines ) ; for ( i = 0 ; i < numLines ; i ++ ) { maxArr [ i ] = elemArr [ numLines - 1 ] [ i ] ; } for ( i = numLines - 1 ; i > 0 ; i -- ) { for ( j = 0 ; j < i ; j ++ ) { maxArr [ j ] = findMax ( maxArr [ j ] , maxArr [ j + 1 ] ) ; maxArr [ j ] = maxArr [ j ] + elemArr [ i - 1 ] [ j ] ; } } printf ( "%d\n" , maxArr [ 0 ] ) ; free ( maxArr ) ; }