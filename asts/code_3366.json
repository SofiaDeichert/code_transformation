{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 511,
  "text": "int main ( ) { int A , B , gcd , lcm , remainder , numerator , denominator , T , i ; scanf ( \"%d\" , & T ) ; for ( i = 0 ; i < T ; i ++ ) { scanf ( \"%d %d\" , & A , & B ) ; if ( A > B ) { numerator = A ; denominator = B ; } else { numerator = B ; denominator = A ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = A * B / gcd ; printf ( \"%d %d\\n\" , gcd , lcm ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 511,
      "text": "int main ( ) { int A , B , gcd , lcm , remainder , numerator , denominator , T , i ; scanf ( \"%d\" , & T ) ; for ( i = 0 ; i < T ; i ++ ) { scanf ( \"%d %d\" , & A , & B ) ; if ( A > B ) { numerator = A ; denominator = B ; } else { numerator = B ; denominator = A ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = A * B / gcd ; printf ( \"%d %d\\n\" , gcd , lcm ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 511,
          "text": "{ int A , B , gcd , lcm , remainder , numerator , denominator , T , i ; scanf ( \"%d\" , & T ) ; for ( i = 0 ; i < T ; i ++ ) { scanf ( \"%d %d\" , & A , & B ) ; if ( A > B ) { numerator = A ; denominator = B ; } else { numerator = B ; denominator = A ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = A * B / gcd ; printf ( \"%d %d\\n\" , gcd , lcm ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 84,
              "text": "int A , B , gcd , lcm , remainder , numerator , denominator , T , i ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": "A",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 23,
                  "end_byte": 24,
                  "text": "B",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 27,
                  "end_byte": 30,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 31,
                  "end_byte": 32,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 33,
                  "end_byte": 36,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 37,
                  "end_byte": 38,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 39,
                  "end_byte": 48,
                  "text": "remainder",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 49,
                  "end_byte": 50,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 51,
                  "end_byte": 60,
                  "text": "numerator",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 61,
                  "end_byte": 62,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 63,
                  "end_byte": 74,
                  "text": "denominator",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 75,
                  "end_byte": 76,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 77,
                  "end_byte": 78,
                  "text": "T",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 79,
                  "end_byte": 80,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 81,
                  "end_byte": 82,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 83,
                  "end_byte": 84,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 85,
              "end_byte": 107,
              "text": "scanf ( \"%d\" , & T ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 85,
                  "end_byte": 105,
                  "text": "scanf ( \"%d\" , & T )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 85,
                      "end_byte": 90,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 91,
                      "end_byte": 105,
                      "text": "( \"%d\" , & T )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 91,
                          "end_byte": 92,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 93,
                          "end_byte": 97,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 93,
                              "end_byte": 94,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 94,
                              "end_byte": 96,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 96,
                              "end_byte": 97,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 98,
                          "end_byte": 99,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 100,
                          "end_byte": 103,
                          "text": "& T",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 100,
                              "end_byte": 101,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 102,
                              "end_byte": 103,
                              "text": "T",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 104,
                          "end_byte": 105,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 106,
                  "end_byte": 107,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 108,
              "end_byte": 498,
              "text": "for ( i = 0 ; i < T ; i ++ ) { scanf ( \"%d %d\" , & A , & B ) ; if ( A > B ) { numerator = A ; denominator = B ; } else { numerator = B ; denominator = A ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = A * B / gcd ; printf ( \"%d %d\\n\" , gcd , lcm ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 108,
                  "end_byte": 111,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 112,
                  "end_byte": 113,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 114,
                  "end_byte": 119,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 114,
                      "end_byte": 115,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 116,
                      "end_byte": 117,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 118,
                      "end_byte": 119,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 120,
                  "end_byte": 121,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 122,
                  "end_byte": 127,
                  "text": "i < T",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 122,
                      "end_byte": 123,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 124,
                      "end_byte": 125,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 126,
                      "end_byte": 127,
                      "text": "T",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 128,
                  "end_byte": 129,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 130,
                  "end_byte": 134,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 130,
                      "end_byte": 131,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 132,
                      "end_byte": 134,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 135,
                  "end_byte": 136,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 137,
                  "end_byte": 498,
                  "text": "{ scanf ( \"%d %d\" , & A , & B ) ; if ( A > B ) { numerator = A ; denominator = B ; } else { numerator = B ; denominator = A ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = A * B / gcd ; printf ( \"%d %d\\n\" , gcd , lcm ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 137,
                      "end_byte": 138,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 139,
                      "end_byte": 170,
                      "text": "scanf ( \"%d %d\" , & A , & B ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 139,
                          "end_byte": 168,
                          "text": "scanf ( \"%d %d\" , & A , & B )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 139,
                              "end_byte": 144,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 145,
                              "end_byte": 168,
                              "text": "( \"%d %d\" , & A , & B )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 145,
                                  "end_byte": 146,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 147,
                                  "end_byte": 154,
                                  "text": "\"%d %d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 147,
                                      "end_byte": 148,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 148,
                                      "end_byte": 153,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 153,
                                      "end_byte": 154,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 155,
                                  "end_byte": 156,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 157,
                                  "end_byte": 160,
                                  "text": "& A",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 157,
                                      "end_byte": 158,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 159,
                                      "end_byte": 160,
                                      "text": "A",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 161,
                                  "end_byte": 162,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 163,
                                  "end_byte": 166,
                                  "text": "& B",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 163,
                                      "end_byte": 164,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 165,
                                      "end_byte": 166,
                                      "text": "B",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 167,
                                  "end_byte": 168,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 169,
                          "end_byte": 170,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 171,
                      "end_byte": 264,
                      "text": "if ( A > B ) { numerator = A ; denominator = B ; } else { numerator = B ; denominator = A ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 171,
                          "end_byte": 173,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 174,
                          "end_byte": 183,
                          "text": "( A > B )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 174,
                              "end_byte": 175,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 176,
                              "end_byte": 181,
                              "text": "A > B",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 176,
                                  "end_byte": 177,
                                  "text": "A",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 178,
                                  "end_byte": 179,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 180,
                                  "end_byte": 181,
                                  "text": "B",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 182,
                              "end_byte": 183,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 184,
                          "end_byte": 221,
                          "text": "{ numerator = A ; denominator = B ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 184,
                              "end_byte": 185,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 186,
                              "end_byte": 201,
                              "text": "numerator = A ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 186,
                                  "end_byte": 199,
                                  "text": "numerator = A",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 186,
                                      "end_byte": 195,
                                      "text": "numerator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 196,
                                      "end_byte": 197,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 198,
                                      "end_byte": 199,
                                      "text": "A",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 200,
                                  "end_byte": 201,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 202,
                              "end_byte": 219,
                              "text": "denominator = B ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 202,
                                  "end_byte": 217,
                                  "text": "denominator = B",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 202,
                                      "end_byte": 213,
                                      "text": "denominator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 214,
                                      "end_byte": 215,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 216,
                                      "end_byte": 217,
                                      "text": "B",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 218,
                                  "end_byte": 219,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 220,
                              "end_byte": 221,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 222,
                          "end_byte": 264,
                          "text": "else { numerator = B ; denominator = A ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 222,
                              "end_byte": 226,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 227,
                              "end_byte": 264,
                              "text": "{ numerator = B ; denominator = A ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 227,
                                  "end_byte": 228,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 229,
                                  "end_byte": 244,
                                  "text": "numerator = B ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 229,
                                      "end_byte": 242,
                                      "text": "numerator = B",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 229,
                                          "end_byte": 238,
                                          "text": "numerator",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 239,
                                          "end_byte": 240,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 241,
                                          "end_byte": 242,
                                          "text": "B",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 243,
                                      "end_byte": 244,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 245,
                                  "end_byte": 262,
                                  "text": "denominator = A ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 245,
                                      "end_byte": 260,
                                      "text": "denominator = A",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 245,
                                          "end_byte": 256,
                                          "text": "denominator",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 257,
                                          "end_byte": 258,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 259,
                                          "end_byte": 260,
                                          "text": "A",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 261,
                                      "end_byte": 262,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 263,
                                  "end_byte": 264,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 265,
                      "end_byte": 302,
                      "text": "remainder = numerator % denominator ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 265,
                          "end_byte": 300,
                          "text": "remainder = numerator % denominator",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 265,
                              "end_byte": 274,
                              "text": "remainder",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 275,
                              "end_byte": 276,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 277,
                              "end_byte": 300,
                              "text": "numerator % denominator",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 277,
                                  "end_byte": 286,
                                  "text": "numerator",
                                  "children": []
                                },
                                {
                                  "type": "%",
                                  "start_byte": 287,
                                  "end_byte": 288,
                                  "text": "%",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 289,
                                  "end_byte": 300,
                                  "text": "denominator",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 301,
                          "end_byte": 302,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 303,
                      "end_byte": 421,
                      "text": "while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 303,
                          "end_byte": 308,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 309,
                          "end_byte": 327,
                          "text": "( remainder != 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 309,
                              "end_byte": 310,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 311,
                              "end_byte": 325,
                              "text": "remainder != 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 311,
                                  "end_byte": 320,
                                  "text": "remainder",
                                  "children": []
                                },
                                {
                                  "type": "!=",
                                  "start_byte": 321,
                                  "end_byte": 323,
                                  "text": "!=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 324,
                                  "end_byte": 325,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 326,
                              "end_byte": 327,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 328,
                          "end_byte": 421,
                          "text": "{ numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 328,
                              "end_byte": 329,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 330,
                              "end_byte": 355,
                              "text": "numerator = denominator ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 330,
                                  "end_byte": 353,
                                  "text": "numerator = denominator",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 330,
                                      "end_byte": 339,
                                      "text": "numerator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 340,
                                      "end_byte": 341,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 342,
                                      "end_byte": 353,
                                      "text": "denominator",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 354,
                                  "end_byte": 355,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 356,
                              "end_byte": 381,
                              "text": "denominator = remainder ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 356,
                                  "end_byte": 379,
                                  "text": "denominator = remainder",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 356,
                                      "end_byte": 367,
                                      "text": "denominator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 368,
                                      "end_byte": 369,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 370,
                                      "end_byte": 379,
                                      "text": "remainder",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 380,
                                  "end_byte": 381,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 382,
                              "end_byte": 419,
                              "text": "remainder = numerator % denominator ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 382,
                                  "end_byte": 417,
                                  "text": "remainder = numerator % denominator",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 382,
                                      "end_byte": 391,
                                      "text": "remainder",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 392,
                                      "end_byte": 393,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 394,
                                      "end_byte": 417,
                                      "text": "numerator % denominator",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 394,
                                          "end_byte": 403,
                                          "text": "numerator",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 404,
                                          "end_byte": 405,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 406,
                                          "end_byte": 417,
                                          "text": "denominator",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 418,
                                  "end_byte": 419,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 420,
                              "end_byte": 421,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 422,
                      "end_byte": 441,
                      "text": "gcd = denominator ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 422,
                          "end_byte": 439,
                          "text": "gcd = denominator",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 422,
                              "end_byte": 425,
                              "text": "gcd",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 426,
                              "end_byte": 427,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 428,
                              "end_byte": 439,
                              "text": "denominator",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 440,
                          "end_byte": 441,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 442,
                      "end_byte": 461,
                      "text": "lcm = A * B / gcd ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 442,
                          "end_byte": 459,
                          "text": "lcm = A * B / gcd",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 442,
                              "end_byte": 445,
                              "text": "lcm",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 446,
                              "end_byte": 447,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 448,
                              "end_byte": 459,
                              "text": "A * B / gcd",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 448,
                                  "end_byte": 453,
                                  "text": "A * B",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 448,
                                      "end_byte": 449,
                                      "text": "A",
                                      "children": []
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 450,
                                      "end_byte": 451,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 452,
                                      "end_byte": 453,
                                      "text": "B",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 454,
                                  "end_byte": 455,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 456,
                                  "end_byte": 459,
                                  "text": "gcd",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 460,
                          "end_byte": 461,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 462,
                      "end_byte": 496,
                      "text": "printf ( \"%d %d\\n\" , gcd , lcm ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 462,
                          "end_byte": 494,
                          "text": "printf ( \"%d %d\\n\" , gcd , lcm )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 462,
                              "end_byte": 468,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 469,
                              "end_byte": 494,
                              "text": "( \"%d %d\\n\" , gcd , lcm )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 469,
                                  "end_byte": 470,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 471,
                                  "end_byte": 480,
                                  "text": "\"%d %d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 471,
                                      "end_byte": 472,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 472,
                                      "end_byte": 477,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 477,
                                      "end_byte": 479,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 479,
                                      "end_byte": 480,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 481,
                                  "end_byte": 482,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 483,
                                  "end_byte": 486,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 487,
                                  "end_byte": 488,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 489,
                                  "end_byte": 492,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 493,
                                  "end_byte": 494,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 495,
                          "end_byte": 496,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 497,
                      "end_byte": 498,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 499,
              "end_byte": 509,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 499,
                  "end_byte": 505,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 506,
                  "end_byte": 507,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 508,
                  "end_byte": 509,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 510,
              "end_byte": 511,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}