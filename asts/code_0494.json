{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 426,
  "text": "int main ( ) { int store , num1 , num2 , temp , m , check = 0 , tst , i ; long int lcm , hcf ; scanf ( \"%d\" , & tst ) ; while ( check < tst ) { scanf ( \"%d%d\" , & num1 , & num2 ) ; if ( num1 < num2 ) { temp = num2 ; num2 = num1 ; num1 = temp ; } for ( i = 1 ; i <= num2 ; i ++ ) { if ( num1 % i == 0 && num2 % i == 0 ) { hcf = i ; } } lcm = num1 / hcf ; lcm = lcm * num2 ; printf ( \"%lld %lld\\n\" , hcf , lcm ) ; check ++ ; } }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 426,
      "text": "int main ( ) { int store , num1 , num2 , temp , m , check = 0 , tst , i ; long int lcm , hcf ; scanf ( \"%d\" , & tst ) ; while ( check < tst ) { scanf ( \"%d%d\" , & num1 , & num2 ) ; if ( num1 < num2 ) { temp = num2 ; num2 = num1 ; num1 = temp ; } for ( i = 1 ; i <= num2 ; i ++ ) { if ( num1 % i == 0 && num2 % i == 0 ) { hcf = i ; } } lcm = num1 / hcf ; lcm = lcm * num2 ; printf ( \"%lld %lld\\n\" , hcf , lcm ) ; check ++ ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 426,
          "text": "{ int store , num1 , num2 , temp , m , check = 0 , tst , i ; long int lcm , hcf ; scanf ( \"%d\" , & tst ) ; while ( check < tst ) { scanf ( \"%d%d\" , & num1 , & num2 ) ; if ( num1 < num2 ) { temp = num2 ; num2 = num1 ; num1 = temp ; } for ( i = 1 ; i <= num2 ; i ++ ) { if ( num1 % i == 0 && num2 % i == 0 ) { hcf = i ; } } lcm = num1 / hcf ; lcm = lcm * num2 ; printf ( \"%lld %lld\\n\" , hcf , lcm ) ; check ++ ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 73,
              "text": "int store , num1 , num2 , temp , m , check = 0 , tst , i ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 24,
                  "text": "store",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 27,
                  "end_byte": 31,
                  "text": "num1",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 32,
                  "end_byte": 33,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 34,
                  "end_byte": 38,
                  "text": "num2",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 39,
                  "end_byte": 40,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 41,
                  "end_byte": 45,
                  "text": "temp",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 46,
                  "end_byte": 47,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 48,
                  "end_byte": 49,
                  "text": "m",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 50,
                  "end_byte": 51,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 52,
                  "end_byte": 61,
                  "text": "check = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 52,
                      "end_byte": 57,
                      "text": "check",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 58,
                      "end_byte": 59,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 60,
                      "end_byte": 61,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 62,
                  "end_byte": 63,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 64,
                  "end_byte": 67,
                  "text": "tst",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 68,
                  "end_byte": 69,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 70,
                  "end_byte": 71,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 72,
                  "end_byte": 73,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 74,
              "end_byte": 94,
              "text": "long int lcm , hcf ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 74,
                  "end_byte": 82,
                  "text": "long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 74,
                      "end_byte": 78,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 79,
                      "end_byte": 82,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 83,
                  "end_byte": 86,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 87,
                  "end_byte": 88,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 89,
                  "end_byte": 92,
                  "text": "hcf",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 93,
                  "end_byte": 94,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 95,
              "end_byte": 119,
              "text": "scanf ( \"%d\" , & tst ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 95,
                  "end_byte": 117,
                  "text": "scanf ( \"%d\" , & tst )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 95,
                      "end_byte": 100,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 101,
                      "end_byte": 117,
                      "text": "( \"%d\" , & tst )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 101,
                          "end_byte": 102,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 103,
                          "end_byte": 107,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 103,
                              "end_byte": 104,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 104,
                              "end_byte": 106,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 106,
                              "end_byte": 107,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 108,
                          "end_byte": 109,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 110,
                          "end_byte": 115,
                          "text": "& tst",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 110,
                              "end_byte": 111,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 112,
                              "end_byte": 115,
                              "text": "tst",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 116,
                          "end_byte": 117,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 118,
                  "end_byte": 119,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 120,
              "end_byte": 424,
              "text": "while ( check < tst ) { scanf ( \"%d%d\" , & num1 , & num2 ) ; if ( num1 < num2 ) { temp = num2 ; num2 = num1 ; num1 = temp ; } for ( i = 1 ; i <= num2 ; i ++ ) { if ( num1 % i == 0 && num2 % i == 0 ) { hcf = i ; } } lcm = num1 / hcf ; lcm = lcm * num2 ; printf ( \"%lld %lld\\n\" , hcf , lcm ) ; check ++ ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 120,
                  "end_byte": 125,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 126,
                  "end_byte": 141,
                  "text": "( check < tst )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 126,
                      "end_byte": 127,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 128,
                      "end_byte": 139,
                      "text": "check < tst",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 128,
                          "end_byte": 133,
                          "text": "check",
                          "children": []
                        },
                        {
                          "type": "<",
                          "start_byte": 134,
                          "end_byte": 135,
                          "text": "<",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 136,
                          "end_byte": 139,
                          "text": "tst",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 140,
                      "end_byte": 141,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 142,
                  "end_byte": 424,
                  "text": "{ scanf ( \"%d%d\" , & num1 , & num2 ) ; if ( num1 < num2 ) { temp = num2 ; num2 = num1 ; num1 = temp ; } for ( i = 1 ; i <= num2 ; i ++ ) { if ( num1 % i == 0 && num2 % i == 0 ) { hcf = i ; } } lcm = num1 / hcf ; lcm = lcm * num2 ; printf ( \"%lld %lld\\n\" , hcf , lcm ) ; check ++ ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 142,
                      "end_byte": 143,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 144,
                      "end_byte": 180,
                      "text": "scanf ( \"%d%d\" , & num1 , & num2 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 144,
                          "end_byte": 178,
                          "text": "scanf ( \"%d%d\" , & num1 , & num2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 144,
                              "end_byte": 149,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 150,
                              "end_byte": 178,
                              "text": "( \"%d%d\" , & num1 , & num2 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 150,
                                  "end_byte": 151,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 152,
                                  "end_byte": 158,
                                  "text": "\"%d%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 152,
                                      "end_byte": 153,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 153,
                                      "end_byte": 157,
                                      "text": "%d%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 157,
                                      "end_byte": 158,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 159,
                                  "end_byte": 160,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 161,
                                  "end_byte": 167,
                                  "text": "& num1",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 161,
                                      "end_byte": 162,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 163,
                                      "end_byte": 167,
                                      "text": "num1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 168,
                                  "end_byte": 169,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 170,
                                  "end_byte": 176,
                                  "text": "& num2",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 170,
                                      "end_byte": 171,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 172,
                                      "end_byte": 176,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 177,
                                  "end_byte": 178,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 179,
                          "end_byte": 180,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 181,
                      "end_byte": 245,
                      "text": "if ( num1 < num2 ) { temp = num2 ; num2 = num1 ; num1 = temp ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 181,
                          "end_byte": 183,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 184,
                          "end_byte": 199,
                          "text": "( num1 < num2 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 184,
                              "end_byte": 185,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 186,
                              "end_byte": 197,
                              "text": "num1 < num2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 186,
                                  "end_byte": 190,
                                  "text": "num1",
                                  "children": []
                                },
                                {
                                  "type": "<",
                                  "start_byte": 191,
                                  "end_byte": 192,
                                  "text": "<",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 193,
                                  "end_byte": 197,
                                  "text": "num2",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 198,
                              "end_byte": 199,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 200,
                          "end_byte": 245,
                          "text": "{ temp = num2 ; num2 = num1 ; num1 = temp ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 200,
                              "end_byte": 201,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 202,
                              "end_byte": 215,
                              "text": "temp = num2 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 202,
                                  "end_byte": 213,
                                  "text": "temp = num2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 202,
                                      "end_byte": 206,
                                      "text": "temp",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 207,
                                      "end_byte": 208,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 209,
                                      "end_byte": 213,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 214,
                                  "end_byte": 215,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 216,
                              "end_byte": 229,
                              "text": "num2 = num1 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 216,
                                  "end_byte": 227,
                                  "text": "num2 = num1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 216,
                                      "end_byte": 220,
                                      "text": "num2",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 221,
                                      "end_byte": 222,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 223,
                                      "end_byte": 227,
                                      "text": "num1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 228,
                                  "end_byte": 229,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 230,
                              "end_byte": 243,
                              "text": "num1 = temp ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 230,
                                  "end_byte": 241,
                                  "text": "num1 = temp",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 230,
                                      "end_byte": 234,
                                      "text": "num1",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 235,
                                      "end_byte": 236,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 237,
                                      "end_byte": 241,
                                      "text": "temp",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 242,
                                  "end_byte": 243,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 244,
                              "end_byte": 245,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 246,
                      "end_byte": 334,
                      "text": "for ( i = 1 ; i <= num2 ; i ++ ) { if ( num1 % i == 0 && num2 % i == 0 ) { hcf = i ; } }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 246,
                          "end_byte": 249,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 250,
                          "end_byte": 251,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 252,
                          "end_byte": 257,
                          "text": "i = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 252,
                              "end_byte": 253,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 254,
                              "end_byte": 255,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 256,
                              "end_byte": 257,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 258,
                          "end_byte": 259,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 260,
                          "end_byte": 269,
                          "text": "i <= num2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 260,
                              "end_byte": 261,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 262,
                              "end_byte": 264,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 265,
                              "end_byte": 269,
                              "text": "num2",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 270,
                          "end_byte": 271,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 272,
                          "end_byte": 276,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 272,
                              "end_byte": 273,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 274,
                              "end_byte": 276,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 277,
                          "end_byte": 278,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 279,
                          "end_byte": 334,
                          "text": "{ if ( num1 % i == 0 && num2 % i == 0 ) { hcf = i ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 279,
                              "end_byte": 280,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 281,
                              "end_byte": 332,
                              "text": "if ( num1 % i == 0 && num2 % i == 0 ) { hcf = i ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 281,
                                  "end_byte": 283,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 284,
                                  "end_byte": 318,
                                  "text": "( num1 % i == 0 && num2 % i == 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 284,
                                      "end_byte": 285,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 286,
                                      "end_byte": 316,
                                      "text": "num1 % i == 0 && num2 % i == 0",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 286,
                                          "end_byte": 299,
                                          "text": "num1 % i == 0",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 286,
                                              "end_byte": 294,
                                              "text": "num1 % i",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 286,
                                                  "end_byte": 290,
                                                  "text": "num1",
                                                  "children": []
                                                },
                                                {
                                                  "type": "%",
                                                  "start_byte": 291,
                                                  "end_byte": 292,
                                                  "text": "%",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 293,
                                                  "end_byte": 294,
                                                  "text": "i",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "==",
                                              "start_byte": 295,
                                              "end_byte": 297,
                                              "text": "==",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 298,
                                              "end_byte": 299,
                                              "text": "0",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "&&",
                                          "start_byte": 300,
                                          "end_byte": 302,
                                          "text": "&&",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 303,
                                          "end_byte": 316,
                                          "text": "num2 % i == 0",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 303,
                                              "end_byte": 311,
                                              "text": "num2 % i",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 303,
                                                  "end_byte": 307,
                                                  "text": "num2",
                                                  "children": []
                                                },
                                                {
                                                  "type": "%",
                                                  "start_byte": 308,
                                                  "end_byte": 309,
                                                  "text": "%",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 310,
                                                  "end_byte": 311,
                                                  "text": "i",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "==",
                                              "start_byte": 312,
                                              "end_byte": 314,
                                              "text": "==",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 315,
                                              "end_byte": 316,
                                              "text": "0",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 317,
                                      "end_byte": 318,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 319,
                                  "end_byte": 332,
                                  "text": "{ hcf = i ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 319,
                                      "end_byte": 320,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 321,
                                      "end_byte": 330,
                                      "text": "hcf = i ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 321,
                                          "end_byte": 328,
                                          "text": "hcf = i",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 321,
                                              "end_byte": 324,
                                              "text": "hcf",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 325,
                                              "end_byte": 326,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 327,
                                              "end_byte": 328,
                                              "text": "i",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 329,
                                          "end_byte": 330,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 331,
                                      "end_byte": 332,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 333,
                              "end_byte": 334,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 335,
                      "end_byte": 353,
                      "text": "lcm = num1 / hcf ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 335,
                          "end_byte": 351,
                          "text": "lcm = num1 / hcf",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 335,
                              "end_byte": 338,
                              "text": "lcm",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 339,
                              "end_byte": 340,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 341,
                              "end_byte": 351,
                              "text": "num1 / hcf",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 341,
                                  "end_byte": 345,
                                  "text": "num1",
                                  "children": []
                                },
                                {
                                  "type": "/",
                                  "start_byte": 346,
                                  "end_byte": 347,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 348,
                                  "end_byte": 351,
                                  "text": "hcf",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 352,
                          "end_byte": 353,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 354,
                      "end_byte": 372,
                      "text": "lcm = lcm * num2 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 354,
                          "end_byte": 370,
                          "text": "lcm = lcm * num2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 354,
                              "end_byte": 357,
                              "text": "lcm",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 358,
                              "end_byte": 359,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 360,
                              "end_byte": 370,
                              "text": "lcm * num2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 360,
                                  "end_byte": 363,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": "*",
                                  "start_byte": 364,
                                  "end_byte": 365,
                                  "text": "*",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 366,
                                  "end_byte": 370,
                                  "text": "num2",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 371,
                          "end_byte": 372,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 373,
                      "end_byte": 411,
                      "text": "printf ( \"%lld %lld\\n\" , hcf , lcm ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 373,
                          "end_byte": 409,
                          "text": "printf ( \"%lld %lld\\n\" , hcf , lcm )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 373,
                              "end_byte": 379,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 380,
                              "end_byte": 409,
                              "text": "( \"%lld %lld\\n\" , hcf , lcm )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 380,
                                  "end_byte": 381,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 382,
                                  "end_byte": 395,
                                  "text": "\"%lld %lld\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 382,
                                      "end_byte": 383,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 383,
                                      "end_byte": 392,
                                      "text": "%lld %lld",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 392,
                                      "end_byte": 394,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 394,
                                      "end_byte": 395,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 396,
                                  "end_byte": 397,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 398,
                                  "end_byte": 401,
                                  "text": "hcf",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 402,
                                  "end_byte": 403,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 404,
                                  "end_byte": 407,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 408,
                                  "end_byte": 409,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 410,
                          "end_byte": 411,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 412,
                      "end_byte": 422,
                      "text": "check ++ ;",
                      "children": [
                        {
                          "type": "update_expression",
                          "start_byte": 412,
                          "end_byte": 420,
                          "text": "check ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 412,
                              "end_byte": 417,
                              "text": "check",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 418,
                              "end_byte": 420,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 421,
                          "end_byte": 422,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 423,
                      "end_byte": 424,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 425,
              "end_byte": 426,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}