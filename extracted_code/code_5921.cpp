int find ( int * * , int , int , int ) ; int main ( ) { int t ; scanf ( "%d" , & t ) ; while ( t -- ) { int n , i , j , ans = 0 ; scanf ( "%d" , & n ) ; int * * ar = ( int * * ) ( malloc ( n * ( sizeof ( int * ) ) ) ) ; for ( i = 0 ; i < n ; i ++ ) { ar [ i ] = ( int * ) ( malloc ( ( i + 1 ) * ( sizeof ( int ) ) ) ) ; } for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j < i + 1 ; j ++ ) { scanf ( "%d" , & ar [ i ] [ j ] ) ; } } ans = find ( ar , 0 , 0 , n ) ; printf ( "%d" , ans ) ; } return 0 ; } int find ( int * * ar , int i , int j , int n ) { int max = 0 ; if ( i != n - 1 ) { int a1 = find ( ar , i + 1 , j , n ) ; int a2 = find ( ar , i + 1 , j + 1 , n ) ; max = a1 > a2 ? a1 : a2 ; return ( max + ar [ i ] [ j ] ) ; } else return ar [ i ] [ j ] ; }