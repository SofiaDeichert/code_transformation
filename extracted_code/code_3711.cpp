int max ( int a , int b ) { if ( a > b ) return a ; else return b ; } int triangle ( int size , int i , int j , int * * a ) { if ( i == size - 1 ) return a [ i ] [ j ] ; else return a [ i ] [ j ] + max ( triangle ( size , i + 1 , j , a ) , triangle ( size , i + 1 , j + 1 , a ) ) ; } int main ( ) { int i , j , n , k , l ; scanf ( "%d" , & k ) ; for ( l = 0 ; l < k ; l ++ ) { scanf ( "%d" , & n ) ; int * * a = ( int * * ) malloc ( ( sizeof ( int * ) * n ) ) ; for ( i = 0 ; i < n ; i ++ ) a [ i ] = ( int * ) malloc ( ( sizeof ( int ) ) * n ) ; for ( i = 0 ; i < n ; i ++ ) { j = 0 ; while ( j <= i ) { scanf ( "%d" , & ( a [ i ] [ j ] ) ) ; j ++ ; } } printf ( "%d\n" , triangle ( n , 0 , 0 , a ) ) ; free ( a ) ; } return 0 ; }