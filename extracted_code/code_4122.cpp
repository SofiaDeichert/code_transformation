int max ( int a , int b ) { return ( a > b ) ? a : b ; } int find ( int tri [ ] [ MAX ] , int best [ ] [ MAX ] , int i , int j , int rows ) { if ( i == rows - 1 ) return tri [ i ] [ j ] ; else if ( best [ i ] [ j ] != 0 ) return best [ i ] [ j ] ; return best [ i ] [ j ] = ( tri [ i ] [ j ] + max ( find ( tri , best , i + 1 , j , rows ) , find ( tri , best , i + 1 , j + 1 , rows ) ) ) ; } int main ( ) { int t , rows , i , j ; int tri [ MAX ] [ MAX ] ; int best [ MAX ] [ MAX ] ; scanf ( "%d " , & t ) ; while ( t -- ) { scanf ( "%d " , & rows ) ; for ( i = 0 ; i < rows ; i ++ ) for ( j = 0 ; j <= i ; j ++ ) { best [ i ] [ j ] = 0 ; scanf ( "%d " , & tri [ i ] [ j ] ) ; } printf ( "%d\n" , find ( tri , best , 0 , 0 , rows ) ) ; } }