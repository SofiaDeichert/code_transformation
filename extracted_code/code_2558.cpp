int max ( int a , int b ) { return ( a > b ) ? a : b ; } int main ( void ) { int * t , i , j , n , k , num , count = 0 , m ; scanf ( "%d" , & n ) ; while ( n -- ) { scanf ( "%d" , & k ) ; count = 0 ; t = ( int * ) malloc ( sizeof ( int ) * k * k ) ; for ( i = 0 ; i < k ; i ++ ) { for ( j = 0 ; j < k ; j ++ ) { * ( t + i * j + k ) = 0 ; } } for ( i = 0 ; i < k ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & num ) ; * ( t + i * k + j ) = num ; } } for ( i = k - 2 ; i >= 0 ; i -- ) { for ( j = k - 2 - count ; j >= 0 ; j -- ) { m = max ( * ( t + ( i + 1 ) * k + ( j + 1 ) ) , * ( t + ( i + 1 ) * k + j ) ) ; * ( t + i * k + j ) = m + * ( t + i * k + j ) ; } count ++ ; } printf ( "%d" , * ( t + 0 * k + 0 ) ) ; free ( t ) ; } return 0 ; }