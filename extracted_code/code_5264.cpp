long findmax ( long a [ ] , long check [ ] , long n ) { long max = 0 , i , j , k , idx , count = 0 ; for ( i = 0 ; i < n ; i ++ ) { if ( check [ i ] == 1 ) count ++ ; } if ( count == 1 ) return 0 ; for ( i = 0 ; i < n ; i ++ ) { if ( check [ i ] == 1 && a [ i ] >= max ) { max = a [ i ] ; idx = i ; } } check [ idx ] = 0 ; j = idx - 1 ; k = idx + 1 ; if ( j < 0 ) { for ( i = k ; i < n ; i ++ ) { if ( check [ i ] == 1 ) return a [ i ] ; } } if ( k >= n ) { for ( i = j ; i >= 0 ; i -- ) { if ( check [ i ] == 1 ) return a [ i ] ; } } while ( j >= 0 && k < n ) { if ( check [ j ] == 1 && check [ k ] == 1 ) { if ( a [ j ] <= a [ k ] ) return a [ j ] ; else return a [ k ] ; } else if ( check [ j ] == 1 && check [ k ] == 0 ) { k ++ ; } else if ( check [ j ] == 0 && check [ k ] == 1 ) { j -- ; } else { j -- ; k ++ ; } } return a [ idx ] ; } int main ( ) { int t ; scanf ( "%d" , & t ) ; while ( t -- ) { long n , i ; scanf ( "%ld" , & n ) ; long a [ n + 1 ] , sum ; long check [ n + 1 ] ; for ( i = 0 ; i < n ; i ++ ) scanf ( "%ld" , & a [ i ] ) ; for ( i = 0 ; i < n ; i ++ ) check [ i ] = 1 ; sum = 0 ; for ( i = 0 ; i < n ; i ++ ) { sum += findmax ( a , check , n ) ; } printf ( "%ld\n" , sum ) ; } return 0 ; }