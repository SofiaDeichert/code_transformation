int maxsum ( int arr [ ] [ 100 ] , int row , int col ) ; int max ( int a , int b ) ; int n ; int main ( ) { int arr [ 100 ] [ 100 ] , i , j , t ; scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j < i + 1 ; j ++ ) { scanf ( "%d" , & arr [ i ] [ j ] ) ; } } printf ( "%d\n%d" , maxsum ( arr , 0 , 0 ) ) ; } return 0 ; } int max ( int a , int b ) { if ( a > b ) return a ; else return b ; } int maxsum ( int arr [ ] [ 100 ] , int row , int col ) { int maxm = 0 ; int sum = 0 ; int dp [ 100 ] [ 100 ] = { 0 } ; if ( row == n - 1 ) { maxm = arr [ row ] [ col ] ; dp [ row ] [ col ] = maxm ; return maxm ; } else { if ( dp [ row ] [ col ] == 0 ) { dp [ row ] [ col ] = arr [ row ] [ col ] + max ( maxsum ( arr , row + 1 , col ) , maxsum ( arr , row + 1 , col + 1 ) ) ; } maxm += dp [ row ] [ col ] ; return maxm ; } }