int * * a ; int max ( int a , int b ) { if ( a > b ) return ( a ) ; return ( b ) ; } int check ( int size ) { int sum ; int i = size - 2 , j ; while ( i > - 1 ) { j = i ; while ( j > - 1 ) { a [ i ] [ j ] += max ( a [ i + 1 ] [ j ] , a [ i + 1 ] [ j + 1 ] ) ; j -- ; } i -- ; } return ( a [ 0 ] [ 0 ] ) ; } int main ( ) { int testcases , size , i , j , sum ; scanf ( "%d" , & testcases ) ; while ( testcases != 0 ) { scanf ( "%d" , & size ) ; a = ( int * * ) malloc ( size * ( sizeof ( int * ) ) ) ; for ( i = 0 ; i < size ; i ++ ) { a [ i ] = ( int * ) malloc ( ( i + 1 ) * ( sizeof ( int * ) ) ) ; for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & a [ i ] [ j ] ) ; } } sum = check ( size ) ; printf ( "%d\n" , sum ) ; free ( a ) ; testcases -- ; } return ( 0 ) ; }