{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 593,
  "text": "int main ( ) { int a = 0 , b = 0 , r , max , a1 , b1 ; printf ( \"enter two positive numbers:\" ) ; scanf ( \"%d\" , & a ) ; scanf ( \"%d\" , & b ) ; if ( a != 0 && b != 0 ) { a1 = a ; b1 = b ; if ( a > b ) { while ( r == 0 ) { r = a1 % b1 ; a1 = b1 ; b1 = r ; } printf ( \"GCD of %d and %d is %d\\n\" , a , b , b1 ) ; } else { while ( r == 0 ) { r = b1 % a1 ; a1 = r ; b1 = a1 ; } printf ( \"GCD of %d and %d is %d\" , a , b , a1 ) ; } } max = ( a > b ) ? a : b ; while ( 1 ) { if ( max % a == 0 && max % b == 0 ) { printf ( \"LCM of %d and %d is %d\\n\" , a , b , max ) ; break ; } ++ max ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 593,
      "text": "int main ( ) { int a = 0 , b = 0 , r , max , a1 , b1 ; printf ( \"enter two positive numbers:\" ) ; scanf ( \"%d\" , & a ) ; scanf ( \"%d\" , & b ) ; if ( a != 0 && b != 0 ) { a1 = a ; b1 = b ; if ( a > b ) { while ( r == 0 ) { r = a1 % b1 ; a1 = b1 ; b1 = r ; } printf ( \"GCD of %d and %d is %d\\n\" , a , b , b1 ) ; } else { while ( r == 0 ) { r = b1 % a1 ; a1 = r ; b1 = a1 ; } printf ( \"GCD of %d and %d is %d\" , a , b , a1 ) ; } } max = ( a > b ) ? a : b ; while ( 1 ) { if ( max % a == 0 && max % b == 0 ) { printf ( \"LCM of %d and %d is %d\\n\" , a , b , max ) ; break ; } ++ max ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 593,
          "text": "{ int a = 0 , b = 0 , r , max , a1 , b1 ; printf ( \"enter two positive numbers:\" ) ; scanf ( \"%d\" , & a ) ; scanf ( \"%d\" , & b ) ; if ( a != 0 && b != 0 ) { a1 = a ; b1 = b ; if ( a > b ) { while ( r == 0 ) { r = a1 % b1 ; a1 = b1 ; b1 = r ; } printf ( \"GCD of %d and %d is %d\\n\" , a , b , b1 ) ; } else { while ( r == 0 ) { r = b1 % a1 ; a1 = r ; b1 = a1 ; } printf ( \"GCD of %d and %d is %d\" , a , b , a1 ) ; } } max = ( a > b ) ? a : b ; while ( 1 ) { if ( max % a == 0 && max % b == 0 ) { printf ( \"LCM of %d and %d is %d\\n\" , a , b , max ) ; break ; } ++ max ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 54,
              "text": "int a = 0 , b = 0 , r , max , a1 , b1 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 19,
                  "end_byte": 24,
                  "text": "a = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 19,
                      "end_byte": 20,
                      "text": "a",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 21,
                      "end_byte": 22,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 23,
                      "end_byte": 24,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 27,
                  "end_byte": 32,
                  "text": "b = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 27,
                      "end_byte": 28,
                      "text": "b",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 29,
                      "end_byte": 30,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 31,
                      "end_byte": 32,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 33,
                  "end_byte": 34,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 35,
                  "end_byte": 36,
                  "text": "r",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 37,
                  "end_byte": 38,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 39,
                  "end_byte": 42,
                  "text": "max",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 43,
                  "end_byte": 44,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 45,
                  "end_byte": 47,
                  "text": "a1",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 48,
                  "end_byte": 49,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 50,
                  "end_byte": 52,
                  "text": "b1",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 53,
                  "end_byte": 54,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 55,
              "end_byte": 97,
              "text": "printf ( \"enter two positive numbers:\" ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 55,
                  "end_byte": 95,
                  "text": "printf ( \"enter two positive numbers:\" )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 55,
                      "end_byte": 61,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 62,
                      "end_byte": 95,
                      "text": "( \"enter two positive numbers:\" )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 62,
                          "end_byte": 63,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 64,
                          "end_byte": 93,
                          "text": "\"enter two positive numbers:\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 64,
                              "end_byte": 65,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 65,
                              "end_byte": 92,
                              "text": "enter two positive numbers:",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 92,
                              "end_byte": 93,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 94,
                          "end_byte": 95,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 96,
                  "end_byte": 97,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 98,
              "end_byte": 120,
              "text": "scanf ( \"%d\" , & a ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 98,
                  "end_byte": 118,
                  "text": "scanf ( \"%d\" , & a )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 98,
                      "end_byte": 103,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 104,
                      "end_byte": 118,
                      "text": "( \"%d\" , & a )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 104,
                          "end_byte": 105,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 106,
                          "end_byte": 110,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 106,
                              "end_byte": 107,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 107,
                              "end_byte": 109,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 109,
                              "end_byte": 110,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 111,
                          "end_byte": 112,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 113,
                          "end_byte": 116,
                          "text": "& a",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 113,
                              "end_byte": 114,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 115,
                              "end_byte": 116,
                              "text": "a",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 117,
                          "end_byte": 118,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 119,
                  "end_byte": 120,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 121,
              "end_byte": 143,
              "text": "scanf ( \"%d\" , & b ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 121,
                  "end_byte": 141,
                  "text": "scanf ( \"%d\" , & b )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 121,
                      "end_byte": 126,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 127,
                      "end_byte": 141,
                      "text": "( \"%d\" , & b )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 127,
                          "end_byte": 128,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 129,
                          "end_byte": 133,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 129,
                              "end_byte": 130,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 130,
                              "end_byte": 132,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 132,
                              "end_byte": 133,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 134,
                          "end_byte": 135,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 136,
                          "end_byte": 139,
                          "text": "& b",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 136,
                              "end_byte": 137,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 138,
                              "end_byte": 139,
                              "text": "b",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 140,
                          "end_byte": 141,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 142,
                  "end_byte": 143,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 144,
              "end_byte": 427,
              "text": "if ( a != 0 && b != 0 ) { a1 = a ; b1 = b ; if ( a > b ) { while ( r == 0 ) { r = a1 % b1 ; a1 = b1 ; b1 = r ; } printf ( \"GCD of %d and %d is %d\\n\" , a , b , b1 ) ; } else { while ( r == 0 ) { r = b1 % a1 ; a1 = r ; b1 = a1 ; } printf ( \"GCD of %d and %d is %d\" , a , b , a1 ) ; } }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 144,
                  "end_byte": 146,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 147,
                  "end_byte": 167,
                  "text": "( a != 0 && b != 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 147,
                      "end_byte": 148,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 149,
                      "end_byte": 165,
                      "text": "a != 0 && b != 0",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 149,
                          "end_byte": 155,
                          "text": "a != 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 149,
                              "end_byte": 150,
                              "text": "a",
                              "children": []
                            },
                            {
                              "type": "!=",
                              "start_byte": 151,
                              "end_byte": 153,
                              "text": "!=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 154,
                              "end_byte": 155,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "&&",
                          "start_byte": 156,
                          "end_byte": 158,
                          "text": "&&",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 159,
                          "end_byte": 165,
                          "text": "b != 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 159,
                              "end_byte": 160,
                              "text": "b",
                              "children": []
                            },
                            {
                              "type": "!=",
                              "start_byte": 161,
                              "end_byte": 163,
                              "text": "!=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 164,
                              "end_byte": 165,
                              "text": "0",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 166,
                      "end_byte": 167,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 168,
                  "end_byte": 427,
                  "text": "{ a1 = a ; b1 = b ; if ( a > b ) { while ( r == 0 ) { r = a1 % b1 ; a1 = b1 ; b1 = r ; } printf ( \"GCD of %d and %d is %d\\n\" , a , b , b1 ) ; } else { while ( r == 0 ) { r = b1 % a1 ; a1 = r ; b1 = a1 ; } printf ( \"GCD of %d and %d is %d\" , a , b , a1 ) ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 168,
                      "end_byte": 169,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 170,
                      "end_byte": 178,
                      "text": "a1 = a ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 170,
                          "end_byte": 176,
                          "text": "a1 = a",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 170,
                              "end_byte": 172,
                              "text": "a1",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 173,
                              "end_byte": 174,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 175,
                              "end_byte": 176,
                              "text": "a",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 177,
                          "end_byte": 178,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 179,
                      "end_byte": 187,
                      "text": "b1 = b ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 179,
                          "end_byte": 185,
                          "text": "b1 = b",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 179,
                              "end_byte": 181,
                              "text": "b1",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 182,
                              "end_byte": 183,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 184,
                              "end_byte": 185,
                              "text": "b",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 186,
                          "end_byte": 187,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 188,
                      "end_byte": 425,
                      "text": "if ( a > b ) { while ( r == 0 ) { r = a1 % b1 ; a1 = b1 ; b1 = r ; } printf ( \"GCD of %d and %d is %d\\n\" , a , b , b1 ) ; } else { while ( r == 0 ) { r = b1 % a1 ; a1 = r ; b1 = a1 ; } printf ( \"GCD of %d and %d is %d\" , a , b , a1 ) ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 188,
                          "end_byte": 190,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 191,
                          "end_byte": 200,
                          "text": "( a > b )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 191,
                              "end_byte": 192,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 193,
                              "end_byte": 198,
                              "text": "a > b",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 193,
                                  "end_byte": 194,
                                  "text": "a",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 195,
                                  "end_byte": 196,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 197,
                                  "end_byte": 198,
                                  "text": "b",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 199,
                              "end_byte": 200,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 201,
                          "end_byte": 311,
                          "text": "{ while ( r == 0 ) { r = a1 % b1 ; a1 = b1 ; b1 = r ; } printf ( \"GCD of %d and %d is %d\\n\" , a , b , b1 ) ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 201,
                              "end_byte": 202,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "while_statement",
                              "start_byte": 203,
                              "end_byte": 256,
                              "text": "while ( r == 0 ) { r = a1 % b1 ; a1 = b1 ; b1 = r ; }",
                              "children": [
                                {
                                  "type": "while",
                                  "start_byte": 203,
                                  "end_byte": 208,
                                  "text": "while",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 209,
                                  "end_byte": 219,
                                  "text": "( r == 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 209,
                                      "end_byte": 210,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 211,
                                      "end_byte": 217,
                                      "text": "r == 0",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 211,
                                          "end_byte": 212,
                                          "text": "r",
                                          "children": []
                                        },
                                        {
                                          "type": "==",
                                          "start_byte": 213,
                                          "end_byte": 215,
                                          "text": "==",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 216,
                                          "end_byte": 217,
                                          "text": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 218,
                                      "end_byte": 219,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 220,
                                  "end_byte": 256,
                                  "text": "{ r = a1 % b1 ; a1 = b1 ; b1 = r ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 220,
                                      "end_byte": 221,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 222,
                                      "end_byte": 235,
                                      "text": "r = a1 % b1 ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 222,
                                          "end_byte": 233,
                                          "text": "r = a1 % b1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 222,
                                              "end_byte": 223,
                                              "text": "r",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 224,
                                              "end_byte": 225,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 226,
                                              "end_byte": 233,
                                              "text": "a1 % b1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 226,
                                                  "end_byte": 228,
                                                  "text": "a1",
                                                  "children": []
                                                },
                                                {
                                                  "type": "%",
                                                  "start_byte": 229,
                                                  "end_byte": 230,
                                                  "text": "%",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 231,
                                                  "end_byte": 233,
                                                  "text": "b1",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 234,
                                          "end_byte": 235,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 236,
                                      "end_byte": 245,
                                      "text": "a1 = b1 ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 236,
                                          "end_byte": 243,
                                          "text": "a1 = b1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 236,
                                              "end_byte": 238,
                                              "text": "a1",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 239,
                                              "end_byte": 240,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 241,
                                              "end_byte": 243,
                                              "text": "b1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 244,
                                          "end_byte": 245,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 246,
                                      "end_byte": 254,
                                      "text": "b1 = r ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 246,
                                          "end_byte": 252,
                                          "text": "b1 = r",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 246,
                                              "end_byte": 248,
                                              "text": "b1",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 249,
                                              "end_byte": 250,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 251,
                                              "end_byte": 252,
                                              "text": "r",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 253,
                                          "end_byte": 254,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 255,
                                      "end_byte": 256,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 257,
                              "end_byte": 309,
                              "text": "printf ( \"GCD of %d and %d is %d\\n\" , a , b , b1 ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 257,
                                  "end_byte": 307,
                                  "text": "printf ( \"GCD of %d and %d is %d\\n\" , a , b , b1 )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 257,
                                      "end_byte": 263,
                                      "text": "printf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 264,
                                      "end_byte": 307,
                                      "text": "( \"GCD of %d and %d is %d\\n\" , a , b , b1 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 264,
                                          "end_byte": 265,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 266,
                                          "end_byte": 292,
                                          "text": "\"GCD of %d and %d is %d\\n\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 266,
                                              "end_byte": 267,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 267,
                                              "end_byte": 289,
                                              "text": "GCD of %d and %d is %d",
                                              "children": []
                                            },
                                            {
                                              "type": "escape_sequence",
                                              "start_byte": 289,
                                              "end_byte": 291,
                                              "text": "\\n",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 291,
                                              "end_byte": 292,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 293,
                                          "end_byte": 294,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 295,
                                          "end_byte": 296,
                                          "text": "a",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 297,
                                          "end_byte": 298,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 299,
                                          "end_byte": 300,
                                          "text": "b",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 301,
                                          "end_byte": 302,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 303,
                                          "end_byte": 305,
                                          "text": "b1",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 306,
                                          "end_byte": 307,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 308,
                                  "end_byte": 309,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 310,
                              "end_byte": 311,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 312,
                          "end_byte": 425,
                          "text": "else { while ( r == 0 ) { r = b1 % a1 ; a1 = r ; b1 = a1 ; } printf ( \"GCD of %d and %d is %d\" , a , b , a1 ) ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 312,
                              "end_byte": 316,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 317,
                              "end_byte": 425,
                              "text": "{ while ( r == 0 ) { r = b1 % a1 ; a1 = r ; b1 = a1 ; } printf ( \"GCD of %d and %d is %d\" , a , b , a1 ) ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 317,
                                  "end_byte": 318,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "while_statement",
                                  "start_byte": 319,
                                  "end_byte": 372,
                                  "text": "while ( r == 0 ) { r = b1 % a1 ; a1 = r ; b1 = a1 ; }",
                                  "children": [
                                    {
                                      "type": "while",
                                      "start_byte": 319,
                                      "end_byte": 324,
                                      "text": "while",
                                      "children": []
                                    },
                                    {
                                      "type": "condition_clause",
                                      "start_byte": 325,
                                      "end_byte": 335,
                                      "text": "( r == 0 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 325,
                                          "end_byte": 326,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 327,
                                          "end_byte": 333,
                                          "text": "r == 0",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 327,
                                              "end_byte": 328,
                                              "text": "r",
                                              "children": []
                                            },
                                            {
                                              "type": "==",
                                              "start_byte": 329,
                                              "end_byte": 331,
                                              "text": "==",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 332,
                                              "end_byte": 333,
                                              "text": "0",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 334,
                                          "end_byte": 335,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "compound_statement",
                                      "start_byte": 336,
                                      "end_byte": 372,
                                      "text": "{ r = b1 % a1 ; a1 = r ; b1 = a1 ; }",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start_byte": 336,
                                          "end_byte": 337,
                                          "text": "{",
                                          "children": []
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 338,
                                          "end_byte": 351,
                                          "text": "r = b1 % a1 ;",
                                          "children": [
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 338,
                                              "end_byte": 349,
                                              "text": "r = b1 % a1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 338,
                                                  "end_byte": 339,
                                                  "text": "r",
                                                  "children": []
                                                },
                                                {
                                                  "type": "=",
                                                  "start_byte": 340,
                                                  "end_byte": 341,
                                                  "text": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 342,
                                                  "end_byte": 349,
                                                  "text": "b1 % a1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 342,
                                                      "end_byte": 344,
                                                      "text": "b1",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "%",
                                                      "start_byte": 345,
                                                      "end_byte": 346,
                                                      "text": "%",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 347,
                                                      "end_byte": 349,
                                                      "text": "a1",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 350,
                                              "end_byte": 351,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 352,
                                          "end_byte": 360,
                                          "text": "a1 = r ;",
                                          "children": [
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 352,
                                              "end_byte": 358,
                                              "text": "a1 = r",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 352,
                                                  "end_byte": 354,
                                                  "text": "a1",
                                                  "children": []
                                                },
                                                {
                                                  "type": "=",
                                                  "start_byte": 355,
                                                  "end_byte": 356,
                                                  "text": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 357,
                                                  "end_byte": 358,
                                                  "text": "r",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 359,
                                              "end_byte": 360,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 361,
                                          "end_byte": 370,
                                          "text": "b1 = a1 ;",
                                          "children": [
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 361,
                                              "end_byte": 368,
                                              "text": "b1 = a1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 361,
                                                  "end_byte": 363,
                                                  "text": "b1",
                                                  "children": []
                                                },
                                                {
                                                  "type": "=",
                                                  "start_byte": 364,
                                                  "end_byte": 365,
                                                  "text": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 366,
                                                  "end_byte": 368,
                                                  "text": "a1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 369,
                                              "end_byte": 370,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start_byte": 371,
                                          "end_byte": 372,
                                          "text": "}",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 373,
                                  "end_byte": 423,
                                  "text": "printf ( \"GCD of %d and %d is %d\" , a , b , a1 ) ;",
                                  "children": [
                                    {
                                      "type": "call_expression",
                                      "start_byte": 373,
                                      "end_byte": 421,
                                      "text": "printf ( \"GCD of %d and %d is %d\" , a , b , a1 )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 373,
                                          "end_byte": 379,
                                          "text": "printf",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 380,
                                          "end_byte": 421,
                                          "text": "( \"GCD of %d and %d is %d\" , a , b , a1 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 380,
                                              "end_byte": 381,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "string_literal",
                                              "start_byte": 382,
                                              "end_byte": 406,
                                              "text": "\"GCD of %d and %d is %d\"",
                                              "children": [
                                                {
                                                  "type": "\"",
                                                  "start_byte": 382,
                                                  "end_byte": 383,
                                                  "text": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_content",
                                                  "start_byte": 383,
                                                  "end_byte": 405,
                                                  "text": "GCD of %d and %d is %d",
                                                  "children": []
                                                },
                                                {
                                                  "type": "\"",
                                                  "start_byte": 405,
                                                  "end_byte": 406,
                                                  "text": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 407,
                                              "end_byte": 408,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 409,
                                              "end_byte": 410,
                                              "text": "a",
                                              "children": []
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 411,
                                              "end_byte": 412,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 413,
                                              "end_byte": 414,
                                              "text": "b",
                                              "children": []
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 415,
                                              "end_byte": 416,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 417,
                                              "end_byte": 419,
                                              "text": "a1",
                                              "children": []
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 420,
                                              "end_byte": 421,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 422,
                                      "end_byte": 423,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 424,
                                  "end_byte": 425,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 426,
                      "end_byte": 427,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 428,
              "end_byte": 453,
              "text": "max = ( a > b ) ? a : b ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 428,
                  "end_byte": 451,
                  "text": "max = ( a > b ) ? a : b",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 428,
                      "end_byte": 431,
                      "text": "max",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 432,
                      "end_byte": 433,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "conditional_expression",
                      "start_byte": 434,
                      "end_byte": 451,
                      "text": "( a > b ) ? a : b",
                      "children": [
                        {
                          "type": "parenthesized_expression",
                          "start_byte": 434,
                          "end_byte": 443,
                          "text": "( a > b )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 434,
                              "end_byte": 435,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 436,
                              "end_byte": 441,
                              "text": "a > b",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 436,
                                  "end_byte": 437,
                                  "text": "a",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 438,
                                  "end_byte": 439,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 440,
                                  "end_byte": 441,
                                  "text": "b",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 442,
                              "end_byte": 443,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "?",
                          "start_byte": 444,
                          "end_byte": 445,
                          "text": "?",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 446,
                          "end_byte": 447,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": ":",
                          "start_byte": 448,
                          "end_byte": 449,
                          "text": ":",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 450,
                          "end_byte": 451,
                          "text": "b",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 452,
                  "end_byte": 453,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 454,
              "end_byte": 580,
              "text": "while ( 1 ) { if ( max % a == 0 && max % b == 0 ) { printf ( \"LCM of %d and %d is %d\\n\" , a , b , max ) ; break ; } ++ max ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 454,
                  "end_byte": 459,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 460,
                  "end_byte": 465,
                  "text": "( 1 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 460,
                      "end_byte": 461,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 462,
                      "end_byte": 463,
                      "text": "1",
                      "children": []
                    },
                    {
                      "type": ")",
                      "start_byte": 464,
                      "end_byte": 465,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 466,
                  "end_byte": 580,
                  "text": "{ if ( max % a == 0 && max % b == 0 ) { printf ( \"LCM of %d and %d is %d\\n\" , a , b , max ) ; break ; } ++ max ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 466,
                      "end_byte": 467,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 468,
                      "end_byte": 569,
                      "text": "if ( max % a == 0 && max % b == 0 ) { printf ( \"LCM of %d and %d is %d\\n\" , a , b , max ) ; break ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 468,
                          "end_byte": 470,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 471,
                          "end_byte": 503,
                          "text": "( max % a == 0 && max % b == 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 471,
                              "end_byte": 472,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 473,
                              "end_byte": 501,
                              "text": "max % a == 0 && max % b == 0",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 473,
                                  "end_byte": 485,
                                  "text": "max % a == 0",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 473,
                                      "end_byte": 480,
                                      "text": "max % a",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 473,
                                          "end_byte": 476,
                                          "text": "max",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 477,
                                          "end_byte": 478,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 479,
                                          "end_byte": 480,
                                          "text": "a",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "==",
                                      "start_byte": 481,
                                      "end_byte": 483,
                                      "text": "==",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 484,
                                      "end_byte": 485,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "&&",
                                  "start_byte": 486,
                                  "end_byte": 488,
                                  "text": "&&",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 489,
                                  "end_byte": 501,
                                  "text": "max % b == 0",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 489,
                                      "end_byte": 496,
                                      "text": "max % b",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 489,
                                          "end_byte": 492,
                                          "text": "max",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 493,
                                          "end_byte": 494,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 495,
                                          "end_byte": 496,
                                          "text": "b",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "==",
                                      "start_byte": 497,
                                      "end_byte": 499,
                                      "text": "==",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 500,
                                      "end_byte": 501,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 502,
                              "end_byte": 503,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 504,
                          "end_byte": 569,
                          "text": "{ printf ( \"LCM of %d and %d is %d\\n\" , a , b , max ) ; break ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 504,
                              "end_byte": 505,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 506,
                              "end_byte": 559,
                              "text": "printf ( \"LCM of %d and %d is %d\\n\" , a , b , max ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 506,
                                  "end_byte": 557,
                                  "text": "printf ( \"LCM of %d and %d is %d\\n\" , a , b , max )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 506,
                                      "end_byte": 512,
                                      "text": "printf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 513,
                                      "end_byte": 557,
                                      "text": "( \"LCM of %d and %d is %d\\n\" , a , b , max )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 513,
                                          "end_byte": 514,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 515,
                                          "end_byte": 541,
                                          "text": "\"LCM of %d and %d is %d\\n\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 515,
                                              "end_byte": 516,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 516,
                                              "end_byte": 538,
                                              "text": "LCM of %d and %d is %d",
                                              "children": []
                                            },
                                            {
                                              "type": "escape_sequence",
                                              "start_byte": 538,
                                              "end_byte": 540,
                                              "text": "\\n",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 540,
                                              "end_byte": 541,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 542,
                                          "end_byte": 543,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 544,
                                          "end_byte": 545,
                                          "text": "a",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 546,
                                          "end_byte": 547,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 548,
                                          "end_byte": 549,
                                          "text": "b",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 550,
                                          "end_byte": 551,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 552,
                                          "end_byte": 555,
                                          "text": "max",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 556,
                                          "end_byte": 557,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 558,
                                  "end_byte": 559,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "break_statement",
                              "start_byte": 560,
                              "end_byte": 567,
                              "text": "break ;",
                              "children": [
                                {
                                  "type": "break",
                                  "start_byte": 560,
                                  "end_byte": 565,
                                  "text": "break",
                                  "children": []
                                },
                                {
                                  "type": ";",
                                  "start_byte": 566,
                                  "end_byte": 567,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 568,
                              "end_byte": 569,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 570,
                      "end_byte": 578,
                      "text": "++ max ;",
                      "children": [
                        {
                          "type": "update_expression",
                          "start_byte": 570,
                          "end_byte": 576,
                          "text": "++ max",
                          "children": [
                            {
                              "type": "++",
                              "start_byte": 570,
                              "end_byte": 572,
                              "text": "++",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 573,
                              "end_byte": 576,
                              "text": "max",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 577,
                          "end_byte": 578,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 579,
                      "end_byte": 580,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 581,
              "end_byte": 591,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 581,
                  "end_byte": 587,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 588,
                  "end_byte": 589,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 590,
                  "end_byte": 591,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 592,
              "end_byte": 593,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}