int findMax ( int pathVal [ 103 ] [ 103 ] , int cache [ 103 ] [ 103 ] , int i , int j , int n ) { int t1 , t2 , t ; if ( i > n ) return 0 ; else { if ( cache [ i ] [ j ] != - 1 ) return cache [ i ] [ j ] ; else { t1 = findMax ( pathVal , cache , i + 1 , j , n ) ; t2 = findMax ( pathVal , cache , i + 1 , j + 1 , n ) ; t = max ( t1 , t2 ) + pathVal [ i ] [ j ] ; cache [ i ] [ j ] = t ; return t ; } } } int main ( void ) { int t , i , j , n ; int pathVal [ 103 ] [ 103 ] ; int cache [ 103 ] [ 103 ] ; scanf ( "%d" , & t ) ; int result ; while ( t -- ) { for ( i = 0 ; i < 103 ; i ++ ) { for ( j = 0 ; j < 103 ; j ++ ) { cache [ i ] [ j ] = - 1 ; } } scanf ( "%d" , & n ) ; for ( i = 1 ; i <= n ; i ++ ) { for ( j = 1 ; j <= i ; j ++ ) { scanf ( "%d" , & pathVal [ i ] [ j ] ) ; } } result = findMax ( pathVal , cache , 1 , 1 , n ) ; printf ( "%d\n" , result ) ; } return 0 ; }