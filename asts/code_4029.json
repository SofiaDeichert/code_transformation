{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 769,
  "text": "int gcd ( int , int ) ; int lcm ( int , int ) ; int main ( ) { int t = 0 , a = 0 , b = 0 ; scanf ( \"%d\" , & t ) ; while ( t -- > 0 ) { scanf ( \"%d %d\" , & a , & b ) ; int g = gcd ( a , b ) ; int l = lcm ( a , b ) ; printf ( \"%d %d\\n\" , g , l ) ; } return 0 ; } int gcd ( int x , int y ) { int dividend = 0 , divisor = 0 , rem = 0 ; if ( x > y ) { dividend = x ; divisor = y ; } else { dividend = y ; divisor = x ; } while ( divisor ) { rem = dividend % divisor ; dividend = divisor ; divisor = rem ; } return dividend ; } int lcm ( int x , int y ) { int min = 0 , max = 0 , lc = 0 , a = 1 , i = 0 ; if ( x < y ) { min = x ; max = y ; } else { min = y ; max = x ; } for ( i = 1 ; i <= min ; i ++ ) { a = max * i ; if ( a % min == 0 ) { lc = a ; break ; } } return lc ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 23,
      "text": "int gcd ( int , int ) ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 21,
          "text": "gcd ( int , int )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 7,
              "text": "gcd",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 8,
              "end_byte": 21,
              "text": "( int , int )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 8,
                  "end_byte": 9,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 10,
                  "end_byte": 13,
                  "text": "int",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 10,
                      "end_byte": 13,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 14,
                  "end_byte": 15,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 16,
                  "end_byte": 19,
                  "text": "int",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 16,
                      "end_byte": 19,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 20,
                  "end_byte": 21,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 22,
          "end_byte": 23,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 24,
      "end_byte": 47,
      "text": "int lcm ( int , int ) ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 24,
          "end_byte": 27,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 28,
          "end_byte": 45,
          "text": "lcm ( int , int )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 28,
              "end_byte": 31,
              "text": "lcm",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 32,
              "end_byte": 45,
              "text": "( int , int )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 32,
                  "end_byte": 33,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 34,
                  "end_byte": 37,
                  "text": "int",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 34,
                      "end_byte": 37,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 38,
                  "end_byte": 39,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 40,
                  "end_byte": 43,
                  "text": "int",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 40,
                      "end_byte": 43,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 44,
                  "end_byte": 45,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 46,
          "end_byte": 47,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 48,
      "end_byte": 260,
      "text": "int main ( ) { int t = 0 , a = 0 , b = 0 ; scanf ( \"%d\" , & t ) ; while ( t -- > 0 ) { scanf ( \"%d %d\" , & a , & b ) ; int g = gcd ( a , b ) ; int l = lcm ( a , b ) ; printf ( \"%d %d\\n\" , g , l ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 48,
          "end_byte": 51,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 52,
          "end_byte": 60,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 52,
              "end_byte": 56,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 57,
              "end_byte": 60,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 57,
                  "end_byte": 58,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 59,
                  "end_byte": 60,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 61,
          "end_byte": 260,
          "text": "{ int t = 0 , a = 0 , b = 0 ; scanf ( \"%d\" , & t ) ; while ( t -- > 0 ) { scanf ( \"%d %d\" , & a , & b ) ; int g = gcd ( a , b ) ; int l = lcm ( a , b ) ; printf ( \"%d %d\\n\" , g , l ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 61,
              "end_byte": 62,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 63,
              "end_byte": 90,
              "text": "int t = 0 , a = 0 , b = 0 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 63,
                  "end_byte": 66,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 67,
                  "end_byte": 72,
                  "text": "t = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 67,
                      "end_byte": 68,
                      "text": "t",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 69,
                      "end_byte": 70,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 71,
                      "end_byte": 72,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 73,
                  "end_byte": 74,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 75,
                  "end_byte": 80,
                  "text": "a = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 75,
                      "end_byte": 76,
                      "text": "a",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 77,
                      "end_byte": 78,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 79,
                      "end_byte": 80,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 81,
                  "end_byte": 82,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 83,
                  "end_byte": 88,
                  "text": "b = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 83,
                      "end_byte": 84,
                      "text": "b",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 85,
                      "end_byte": 86,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 87,
                      "end_byte": 88,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 89,
                  "end_byte": 90,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 91,
              "end_byte": 113,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 91,
                  "end_byte": 111,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 91,
                      "end_byte": 96,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 97,
                      "end_byte": 111,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 97,
                          "end_byte": 98,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 99,
                          "end_byte": 103,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 99,
                              "end_byte": 100,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 100,
                              "end_byte": 102,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 102,
                              "end_byte": 103,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 104,
                          "end_byte": 105,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 106,
                          "end_byte": 109,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 106,
                              "end_byte": 107,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 108,
                              "end_byte": 109,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 110,
                          "end_byte": 111,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 112,
                  "end_byte": 113,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 114,
              "end_byte": 247,
              "text": "while ( t -- > 0 ) { scanf ( \"%d %d\" , & a , & b ) ; int g = gcd ( a , b ) ; int l = lcm ( a , b ) ; printf ( \"%d %d\\n\" , g , l ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 114,
                  "end_byte": 119,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 120,
                  "end_byte": 132,
                  "text": "( t -- > 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 120,
                      "end_byte": 121,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 122,
                      "end_byte": 130,
                      "text": "t -- > 0",
                      "children": [
                        {
                          "type": "update_expression",
                          "start_byte": 122,
                          "end_byte": 126,
                          "text": "t --",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 122,
                              "end_byte": 123,
                              "text": "t",
                              "children": []
                            },
                            {
                              "type": "--",
                              "start_byte": 124,
                              "end_byte": 126,
                              "text": "--",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ">",
                          "start_byte": 127,
                          "end_byte": 128,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 129,
                          "end_byte": 130,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 131,
                      "end_byte": 132,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 133,
                  "end_byte": 247,
                  "text": "{ scanf ( \"%d %d\" , & a , & b ) ; int g = gcd ( a , b ) ; int l = lcm ( a , b ) ; printf ( \"%d %d\\n\" , g , l ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 133,
                      "end_byte": 134,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 135,
                      "end_byte": 166,
                      "text": "scanf ( \"%d %d\" , & a , & b ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 135,
                          "end_byte": 164,
                          "text": "scanf ( \"%d %d\" , & a , & b )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 135,
                              "end_byte": 140,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 141,
                              "end_byte": 164,
                              "text": "( \"%d %d\" , & a , & b )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 141,
                                  "end_byte": 142,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 143,
                                  "end_byte": 150,
                                  "text": "\"%d %d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 143,
                                      "end_byte": 144,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 144,
                                      "end_byte": 149,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 149,
                                      "end_byte": 150,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 151,
                                  "end_byte": 152,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 153,
                                  "end_byte": 156,
                                  "text": "& a",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 153,
                                      "end_byte": 154,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 155,
                                      "end_byte": 156,
                                      "text": "a",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 157,
                                  "end_byte": 158,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 159,
                                  "end_byte": 162,
                                  "text": "& b",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 159,
                                      "end_byte": 160,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 161,
                                      "end_byte": 162,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 163,
                                  "end_byte": 164,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 165,
                          "end_byte": 166,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 167,
                      "end_byte": 190,
                      "text": "int g = gcd ( a , b ) ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 167,
                          "end_byte": 170,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "init_declarator",
                          "start_byte": 171,
                          "end_byte": 188,
                          "text": "g = gcd ( a , b )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 171,
                              "end_byte": 172,
                              "text": "g",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 173,
                              "end_byte": 174,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 175,
                              "end_byte": 188,
                              "text": "gcd ( a , b )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 175,
                                  "end_byte": 178,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 179,
                                  "end_byte": 188,
                                  "text": "( a , b )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 179,
                                      "end_byte": 180,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 181,
                                      "end_byte": 182,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 183,
                                      "end_byte": 184,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 185,
                                      "end_byte": 186,
                                      "text": "b",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 187,
                                      "end_byte": 188,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 189,
                          "end_byte": 190,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 191,
                      "end_byte": 214,
                      "text": "int l = lcm ( a , b ) ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 191,
                          "end_byte": 194,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "init_declarator",
                          "start_byte": 195,
                          "end_byte": 212,
                          "text": "l = lcm ( a , b )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 195,
                              "end_byte": 196,
                              "text": "l",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 197,
                              "end_byte": 198,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 199,
                              "end_byte": 212,
                              "text": "lcm ( a , b )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 199,
                                  "end_byte": 202,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 203,
                                  "end_byte": 212,
                                  "text": "( a , b )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 203,
                                      "end_byte": 204,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 205,
                                      "end_byte": 206,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 207,
                                      "end_byte": 208,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 209,
                                      "end_byte": 210,
                                      "text": "b",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 211,
                                      "end_byte": 212,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 213,
                          "end_byte": 214,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 215,
                      "end_byte": 245,
                      "text": "printf ( \"%d %d\\n\" , g , l ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 215,
                          "end_byte": 243,
                          "text": "printf ( \"%d %d\\n\" , g , l )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 215,
                              "end_byte": 221,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 222,
                              "end_byte": 243,
                              "text": "( \"%d %d\\n\" , g , l )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 222,
                                  "end_byte": 223,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 224,
                                  "end_byte": 233,
                                  "text": "\"%d %d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 224,
                                      "end_byte": 225,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 225,
                                      "end_byte": 230,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 230,
                                      "end_byte": 232,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 232,
                                      "end_byte": 233,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 234,
                                  "end_byte": 235,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 236,
                                  "end_byte": 237,
                                  "text": "g",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 238,
                                  "end_byte": 239,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 240,
                                  "end_byte": 241,
                                  "text": "l",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 242,
                                  "end_byte": 243,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 244,
                          "end_byte": 245,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 246,
                      "end_byte": 247,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 248,
              "end_byte": 258,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 248,
                  "end_byte": 254,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 255,
                  "end_byte": 256,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 257,
                  "end_byte": 258,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 259,
              "end_byte": 260,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 261,
      "end_byte": 521,
      "text": "int gcd ( int x , int y ) { int dividend = 0 , divisor = 0 , rem = 0 ; if ( x > y ) { dividend = x ; divisor = y ; } else { dividend = y ; divisor = x ; } while ( divisor ) { rem = dividend % divisor ; dividend = divisor ; divisor = rem ; } return dividend ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 261,
          "end_byte": 264,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 265,
          "end_byte": 286,
          "text": "gcd ( int x , int y )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 265,
              "end_byte": 268,
              "text": "gcd",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 269,
              "end_byte": 286,
              "text": "( int x , int y )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 269,
                  "end_byte": 270,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 271,
                  "end_byte": 276,
                  "text": "int x",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 271,
                      "end_byte": 274,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 275,
                      "end_byte": 276,
                      "text": "x",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 277,
                  "end_byte": 278,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 279,
                  "end_byte": 284,
                  "text": "int y",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 279,
                      "end_byte": 282,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 283,
                      "end_byte": 284,
                      "text": "y",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 285,
                  "end_byte": 286,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 287,
          "end_byte": 521,
          "text": "{ int dividend = 0 , divisor = 0 , rem = 0 ; if ( x > y ) { dividend = x ; divisor = y ; } else { dividend = y ; divisor = x ; } while ( divisor ) { rem = dividend % divisor ; dividend = divisor ; divisor = rem ; } return dividend ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 287,
              "end_byte": 288,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 289,
              "end_byte": 331,
              "text": "int dividend = 0 , divisor = 0 , rem = 0 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 289,
                  "end_byte": 292,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 293,
                  "end_byte": 305,
                  "text": "dividend = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 293,
                      "end_byte": 301,
                      "text": "dividend",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 302,
                      "end_byte": 303,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 304,
                      "end_byte": 305,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 306,
                  "end_byte": 307,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 308,
                  "end_byte": 319,
                  "text": "divisor = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 308,
                      "end_byte": 315,
                      "text": "divisor",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 316,
                      "end_byte": 317,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 318,
                      "end_byte": 319,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 320,
                  "end_byte": 321,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 322,
                  "end_byte": 329,
                  "text": "rem = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 322,
                      "end_byte": 325,
                      "text": "rem",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 326,
                      "end_byte": 327,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 328,
                      "end_byte": 329,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 330,
                  "end_byte": 331,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 332,
              "end_byte": 415,
              "text": "if ( x > y ) { dividend = x ; divisor = y ; } else { dividend = y ; divisor = x ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 332,
                  "end_byte": 334,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 335,
                  "end_byte": 344,
                  "text": "( x > y )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 335,
                      "end_byte": 336,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 337,
                      "end_byte": 342,
                      "text": "x > y",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 337,
                          "end_byte": 338,
                          "text": "x",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 339,
                          "end_byte": 340,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 341,
                          "end_byte": 342,
                          "text": "y",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 343,
                      "end_byte": 344,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 345,
                  "end_byte": 377,
                  "text": "{ dividend = x ; divisor = y ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 345,
                      "end_byte": 346,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 347,
                      "end_byte": 361,
                      "text": "dividend = x ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 347,
                          "end_byte": 359,
                          "text": "dividend = x",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 347,
                              "end_byte": 355,
                              "text": "dividend",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 356,
                              "end_byte": 357,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 358,
                              "end_byte": 359,
                              "text": "x",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 360,
                          "end_byte": 361,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 362,
                      "end_byte": 375,
                      "text": "divisor = y ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 362,
                          "end_byte": 373,
                          "text": "divisor = y",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 362,
                              "end_byte": 369,
                              "text": "divisor",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 370,
                              "end_byte": 371,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 372,
                              "end_byte": 373,
                              "text": "y",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 374,
                          "end_byte": 375,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 376,
                      "end_byte": 377,
                      "text": "}",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 378,
                  "end_byte": 415,
                  "text": "else { dividend = y ; divisor = x ; }",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 378,
                      "end_byte": 382,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "compound_statement",
                      "start_byte": 383,
                      "end_byte": 415,
                      "text": "{ dividend = y ; divisor = x ; }",
                      "children": [
                        {
                          "type": "{",
                          "start_byte": 383,
                          "end_byte": 384,
                          "text": "{",
                          "children": []
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 385,
                          "end_byte": 399,
                          "text": "dividend = y ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 385,
                              "end_byte": 397,
                              "text": "dividend = y",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 385,
                                  "end_byte": 393,
                                  "text": "dividend",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 394,
                                  "end_byte": 395,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 396,
                                  "end_byte": 397,
                                  "text": "y",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 398,
                              "end_byte": 399,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 400,
                          "end_byte": 413,
                          "text": "divisor = x ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 400,
                              "end_byte": 411,
                              "text": "divisor = x",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 400,
                                  "end_byte": 407,
                                  "text": "divisor",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 408,
                                  "end_byte": 409,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 410,
                                  "end_byte": 411,
                                  "text": "x",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 412,
                              "end_byte": 413,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start_byte": 414,
                          "end_byte": 415,
                          "text": "}",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 416,
              "end_byte": 501,
              "text": "while ( divisor ) { rem = dividend % divisor ; dividend = divisor ; divisor = rem ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 416,
                  "end_byte": 421,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 422,
                  "end_byte": 433,
                  "text": "( divisor )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 422,
                      "end_byte": 423,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 424,
                      "end_byte": 431,
                      "text": "divisor",
                      "children": []
                    },
                    {
                      "type": ")",
                      "start_byte": 432,
                      "end_byte": 433,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 434,
                  "end_byte": 501,
                  "text": "{ rem = dividend % divisor ; dividend = divisor ; divisor = rem ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 434,
                      "end_byte": 435,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 436,
                      "end_byte": 462,
                      "text": "rem = dividend % divisor ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 436,
                          "end_byte": 460,
                          "text": "rem = dividend % divisor",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 436,
                              "end_byte": 439,
                              "text": "rem",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 440,
                              "end_byte": 441,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 442,
                              "end_byte": 460,
                              "text": "dividend % divisor",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 442,
                                  "end_byte": 450,
                                  "text": "dividend",
                                  "children": []
                                },
                                {
                                  "type": "%",
                                  "start_byte": 451,
                                  "end_byte": 452,
                                  "text": "%",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 453,
                                  "end_byte": 460,
                                  "text": "divisor",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 461,
                          "end_byte": 462,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 463,
                      "end_byte": 483,
                      "text": "dividend = divisor ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 463,
                          "end_byte": 481,
                          "text": "dividend = divisor",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 463,
                              "end_byte": 471,
                              "text": "dividend",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 472,
                              "end_byte": 473,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 474,
                              "end_byte": 481,
                              "text": "divisor",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 482,
                          "end_byte": 483,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 484,
                      "end_byte": 499,
                      "text": "divisor = rem ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 484,
                          "end_byte": 497,
                          "text": "divisor = rem",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 484,
                              "end_byte": 491,
                              "text": "divisor",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 492,
                              "end_byte": 493,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 494,
                              "end_byte": 497,
                              "text": "rem",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 498,
                          "end_byte": 499,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 500,
                      "end_byte": 501,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 502,
              "end_byte": 519,
              "text": "return dividend ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 502,
                  "end_byte": 508,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 509,
                  "end_byte": 517,
                  "text": "dividend",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 518,
                  "end_byte": 519,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 520,
              "end_byte": 521,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 522,
      "end_byte": 769,
      "text": "int lcm ( int x , int y ) { int min = 0 , max = 0 , lc = 0 , a = 1 , i = 0 ; if ( x < y ) { min = x ; max = y ; } else { min = y ; max = x ; } for ( i = 1 ; i <= min ; i ++ ) { a = max * i ; if ( a % min == 0 ) { lc = a ; break ; } } return lc ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 522,
          "end_byte": 525,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 526,
          "end_byte": 547,
          "text": "lcm ( int x , int y )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 526,
              "end_byte": 529,
              "text": "lcm",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 530,
              "end_byte": 547,
              "text": "( int x , int y )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 530,
                  "end_byte": 531,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 532,
                  "end_byte": 537,
                  "text": "int x",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 532,
                      "end_byte": 535,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 536,
                      "end_byte": 537,
                      "text": "x",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 538,
                  "end_byte": 539,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 540,
                  "end_byte": 545,
                  "text": "int y",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 540,
                      "end_byte": 543,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 544,
                      "end_byte": 545,
                      "text": "y",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 546,
                  "end_byte": 547,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 548,
          "end_byte": 769,
          "text": "{ int min = 0 , max = 0 , lc = 0 , a = 1 , i = 0 ; if ( x < y ) { min = x ; max = y ; } else { min = y ; max = x ; } for ( i = 1 ; i <= min ; i ++ ) { a = max * i ; if ( a % min == 0 ) { lc = a ; break ; } } return lc ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 548,
              "end_byte": 549,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 550,
              "end_byte": 598,
              "text": "int min = 0 , max = 0 , lc = 0 , a = 1 , i = 0 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 550,
                  "end_byte": 553,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 554,
                  "end_byte": 561,
                  "text": "min = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 554,
                      "end_byte": 557,
                      "text": "min",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 558,
                      "end_byte": 559,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 560,
                      "end_byte": 561,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 562,
                  "end_byte": 563,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 564,
                  "end_byte": 571,
                  "text": "max = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 564,
                      "end_byte": 567,
                      "text": "max",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 568,
                      "end_byte": 569,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 570,
                      "end_byte": 571,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 572,
                  "end_byte": 573,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 574,
                  "end_byte": 580,
                  "text": "lc = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 574,
                      "end_byte": 576,
                      "text": "lc",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 577,
                      "end_byte": 578,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 579,
                      "end_byte": 580,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 581,
                  "end_byte": 582,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 583,
                  "end_byte": 588,
                  "text": "a = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 583,
                      "end_byte": 584,
                      "text": "a",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 585,
                      "end_byte": 586,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 587,
                      "end_byte": 588,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 589,
                  "end_byte": 590,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 591,
                  "end_byte": 596,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 591,
                      "end_byte": 592,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 593,
                      "end_byte": 594,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 595,
                      "end_byte": 596,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 597,
                  "end_byte": 598,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 599,
              "end_byte": 664,
              "text": "if ( x < y ) { min = x ; max = y ; } else { min = y ; max = x ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 599,
                  "end_byte": 601,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 602,
                  "end_byte": 611,
                  "text": "( x < y )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 602,
                      "end_byte": 603,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 604,
                      "end_byte": 609,
                      "text": "x < y",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 604,
                          "end_byte": 605,
                          "text": "x",
                          "children": []
                        },
                        {
                          "type": "<",
                          "start_byte": 606,
                          "end_byte": 607,
                          "text": "<",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 608,
                          "end_byte": 609,
                          "text": "y",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 610,
                      "end_byte": 611,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 612,
                  "end_byte": 635,
                  "text": "{ min = x ; max = y ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 612,
                      "end_byte": 613,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 614,
                      "end_byte": 623,
                      "text": "min = x ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 614,
                          "end_byte": 621,
                          "text": "min = x",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 614,
                              "end_byte": 617,
                              "text": "min",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 618,
                              "end_byte": 619,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 620,
                              "end_byte": 621,
                              "text": "x",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 622,
                          "end_byte": 623,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 624,
                      "end_byte": 633,
                      "text": "max = y ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 624,
                          "end_byte": 631,
                          "text": "max = y",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 624,
                              "end_byte": 627,
                              "text": "max",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 628,
                              "end_byte": 629,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 630,
                              "end_byte": 631,
                              "text": "y",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 632,
                          "end_byte": 633,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 634,
                      "end_byte": 635,
                      "text": "}",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 636,
                  "end_byte": 664,
                  "text": "else { min = y ; max = x ; }",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 636,
                      "end_byte": 640,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "compound_statement",
                      "start_byte": 641,
                      "end_byte": 664,
                      "text": "{ min = y ; max = x ; }",
                      "children": [
                        {
                          "type": "{",
                          "start_byte": 641,
                          "end_byte": 642,
                          "text": "{",
                          "children": []
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 643,
                          "end_byte": 652,
                          "text": "min = y ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 643,
                              "end_byte": 650,
                              "text": "min = y",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 643,
                                  "end_byte": 646,
                                  "text": "min",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 647,
                                  "end_byte": 648,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 649,
                                  "end_byte": 650,
                                  "text": "y",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 651,
                              "end_byte": 652,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 653,
                          "end_byte": 662,
                          "text": "max = x ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 653,
                              "end_byte": 660,
                              "text": "max = x",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 653,
                                  "end_byte": 656,
                                  "text": "max",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 657,
                                  "end_byte": 658,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 659,
                                  "end_byte": 660,
                                  "text": "x",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 661,
                              "end_byte": 662,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start_byte": 663,
                          "end_byte": 664,
                          "text": "}",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 665,
              "end_byte": 755,
              "text": "for ( i = 1 ; i <= min ; i ++ ) { a = max * i ; if ( a % min == 0 ) { lc = a ; break ; } }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 665,
                  "end_byte": 668,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 669,
                  "end_byte": 670,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 671,
                  "end_byte": 676,
                  "text": "i = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 671,
                      "end_byte": 672,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 673,
                      "end_byte": 674,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 675,
                      "end_byte": 676,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 677,
                  "end_byte": 678,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 679,
                  "end_byte": 687,
                  "text": "i <= min",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 679,
                      "end_byte": 680,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<=",
                      "start_byte": 681,
                      "end_byte": 683,
                      "text": "<=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 684,
                      "end_byte": 687,
                      "text": "min",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 688,
                  "end_byte": 689,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 690,
                  "end_byte": 694,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 690,
                      "end_byte": 691,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 692,
                      "end_byte": 694,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 695,
                  "end_byte": 696,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 697,
                  "end_byte": 755,
                  "text": "{ a = max * i ; if ( a % min == 0 ) { lc = a ; break ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 697,
                      "end_byte": 698,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 699,
                      "end_byte": 712,
                      "text": "a = max * i ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 699,
                          "end_byte": 710,
                          "text": "a = max * i",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 699,
                              "end_byte": 700,
                              "text": "a",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 701,
                              "end_byte": 702,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 703,
                              "end_byte": 710,
                              "text": "max * i",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 703,
                                  "end_byte": 706,
                                  "text": "max",
                                  "children": []
                                },
                                {
                                  "type": "*",
                                  "start_byte": 707,
                                  "end_byte": 708,
                                  "text": "*",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 709,
                                  "end_byte": 710,
                                  "text": "i",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 711,
                          "end_byte": 712,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 713,
                      "end_byte": 753,
                      "text": "if ( a % min == 0 ) { lc = a ; break ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 713,
                          "end_byte": 715,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 716,
                          "end_byte": 732,
                          "text": "( a % min == 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 716,
                              "end_byte": 717,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 718,
                              "end_byte": 730,
                              "text": "a % min == 0",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 718,
                                  "end_byte": 725,
                                  "text": "a % min",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 718,
                                      "end_byte": 719,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": "%",
                                      "start_byte": 720,
                                      "end_byte": 721,
                                      "text": "%",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 722,
                                      "end_byte": 725,
                                      "text": "min",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "==",
                                  "start_byte": 726,
                                  "end_byte": 728,
                                  "text": "==",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 729,
                                  "end_byte": 730,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 731,
                              "end_byte": 732,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 733,
                          "end_byte": 753,
                          "text": "{ lc = a ; break ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 733,
                              "end_byte": 734,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 735,
                              "end_byte": 743,
                              "text": "lc = a ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 735,
                                  "end_byte": 741,
                                  "text": "lc = a",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 735,
                                      "end_byte": 737,
                                      "text": "lc",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 738,
                                      "end_byte": 739,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 740,
                                      "end_byte": 741,
                                      "text": "a",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 742,
                                  "end_byte": 743,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "break_statement",
                              "start_byte": 744,
                              "end_byte": 751,
                              "text": "break ;",
                              "children": [
                                {
                                  "type": "break",
                                  "start_byte": 744,
                                  "end_byte": 749,
                                  "text": "break",
                                  "children": []
                                },
                                {
                                  "type": ";",
                                  "start_byte": 750,
                                  "end_byte": 751,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 752,
                              "end_byte": 753,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 754,
                      "end_byte": 755,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 756,
              "end_byte": 767,
              "text": "return lc ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 756,
                  "end_byte": 762,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 763,
                  "end_byte": 765,
                  "text": "lc",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 766,
                  "end_byte": 767,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 768,
              "end_byte": 769,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}