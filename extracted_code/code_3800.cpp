int cache [ 100 ] [ 100 ] ; int max ( int a , int b ) { return ( a > b ) ? a : b ; } int solve ( int ln , int i , int j , int arr [ ] [ 100 ] ) { int t , t1 , t2 ; if ( i > ln ) return 0 ; if ( cache [ i ] [ j ] >= 0 ) { return cache [ i ] [ j ] ; } t1 = solve ( ln , i + 1 , j , arr ) ; t2 = solve ( ln , i + 1 , j + 1 , arr ) ; t = max ( t1 , t2 ) + arr [ i ] [ j ] ; cache [ i ] [ j ] = t ; return t ; } int main ( ) { int x , y ; int n , ln ; short int i , j ; int arr [ 100 ] [ 100 ] ; scanf ( "%d" , & n ) ; while ( n -- ) { scanf ( "%d" , & ln ) ; for ( i = 0 ; i < ln ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & arr [ i ] [ j ] ) ; } } for ( x = 0 ; x < ln ; x ++ ) { for ( y = 0 ; y <= x ; y ++ ) { cache [ x ] [ y ] = - 1 ; } } printf ( "%d\n" , solve ( ln , 0 , 0 , arr ) ) ; } return 0 ; }