{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 720,
  "text": "int isSbAry ( int f , int s ) ; int getarry ( int a ) ; main ( ) { int t , n , i , cnt = 0 ; scanf ( \"%d\" , & t ) ; for ( i = 0 ; i < t ; i ++ ) { scanf ( \"%d\" , & n ) ; cnt = getarry ( n ) ; printf ( \"%d\" , cnt + n ) ; } } int getarry ( n ) { int a = n , ar [ n ] , i , j , t , b = 0 , c = 0 ; for ( i = 0 ; i < a ; i ++ ) { scanf ( \"%d\" , & ar [ i ] ) ; } for ( i = 0 ; i < a - 1 ; i ++ ) for ( j = i + 1 ; j < a ; j ++ ) if ( ar [ i ] >= ar [ j ] ) { t = ar [ i ] ; ar [ i ] = ar [ j ] ; ar [ j ] = t ; } for ( i = 0 ; i < a ; i ++ ) { c = isSbAry ( ar [ i ] , ar [ i + 1 ] ) ; b = b + c ; } return b ; } int isSbAry ( int f , int s ) { if ( f == s ) return 1 ; else if ( ( f + 1 ) == s ) return 1 ; else return 0 ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 31,
      "text": "int isSbAry ( int f , int s ) ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 29,
          "text": "isSbAry ( int f , int s )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 11,
              "text": "isSbAry",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 12,
              "end_byte": 29,
              "text": "( int f , int s )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 12,
                  "end_byte": 13,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 14,
                  "end_byte": 19,
                  "text": "int f",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 14,
                      "end_byte": 17,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 18,
                      "end_byte": 19,
                      "text": "f",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 20,
                  "end_byte": 21,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 22,
                  "end_byte": 27,
                  "text": "int s",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 22,
                      "end_byte": 25,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 26,
                      "end_byte": 27,
                      "text": "s",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 28,
                  "end_byte": 29,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 30,
          "end_byte": 31,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 32,
      "end_byte": 55,
      "text": "int getarry ( int a ) ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 32,
          "end_byte": 35,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 36,
          "end_byte": 53,
          "text": "getarry ( int a )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 36,
              "end_byte": 43,
              "text": "getarry",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 44,
              "end_byte": 53,
              "text": "( int a )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 44,
                  "end_byte": 45,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 46,
                  "end_byte": 51,
                  "text": "int a",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 46,
                      "end_byte": 49,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 50,
                      "end_byte": 51,
                      "text": "a",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 52,
                  "end_byte": 53,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 54,
          "end_byte": 55,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 56,
      "end_byte": 223,
      "text": "main ( ) { int t , n , i , cnt = 0 ; scanf ( \"%d\" , & t ) ; for ( i = 0 ; i < t ; i ++ ) { scanf ( \"%d\" , & n ) ; cnt = getarry ( n ) ; printf ( \"%d\" , cnt + n ) ; } }",
      "children": [
        {
          "type": "function_declarator",
          "start_byte": 56,
          "end_byte": 64,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 56,
              "end_byte": 60,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 61,
              "end_byte": 64,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 61,
                  "end_byte": 62,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 63,
                  "end_byte": 64,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 65,
          "end_byte": 223,
          "text": "{ int t , n , i , cnt = 0 ; scanf ( \"%d\" , & t ) ; for ( i = 0 ; i < t ; i ++ ) { scanf ( \"%d\" , & n ) ; cnt = getarry ( n ) ; printf ( \"%d\" , cnt + n ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 65,
              "end_byte": 66,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 67,
              "end_byte": 92,
              "text": "int t , n , i , cnt = 0 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 67,
                  "end_byte": 70,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 71,
                  "end_byte": 72,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 73,
                  "end_byte": 74,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 75,
                  "end_byte": 76,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 77,
                  "end_byte": 78,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 79,
                  "end_byte": 80,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 81,
                  "end_byte": 82,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 83,
                  "end_byte": 90,
                  "text": "cnt = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 83,
                      "end_byte": 86,
                      "text": "cnt",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 87,
                      "end_byte": 88,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 89,
                      "end_byte": 90,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 91,
                  "end_byte": 92,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 93,
              "end_byte": 115,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 93,
                  "end_byte": 113,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 93,
                      "end_byte": 98,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 99,
                      "end_byte": 113,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 99,
                          "end_byte": 100,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 101,
                          "end_byte": 105,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 101,
                              "end_byte": 102,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 102,
                              "end_byte": 104,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 104,
                              "end_byte": 105,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 106,
                          "end_byte": 107,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 108,
                          "end_byte": 111,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 108,
                              "end_byte": 109,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 110,
                              "end_byte": 111,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 112,
                          "end_byte": 113,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 114,
                  "end_byte": 115,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 116,
              "end_byte": 221,
              "text": "for ( i = 0 ; i < t ; i ++ ) { scanf ( \"%d\" , & n ) ; cnt = getarry ( n ) ; printf ( \"%d\" , cnt + n ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 116,
                  "end_byte": 119,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 120,
                  "end_byte": 121,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 122,
                  "end_byte": 127,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 122,
                      "end_byte": 123,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 124,
                      "end_byte": 125,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 126,
                      "end_byte": 127,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 128,
                  "end_byte": 129,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 130,
                  "end_byte": 135,
                  "text": "i < t",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 130,
                      "end_byte": 131,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 132,
                      "end_byte": 133,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 134,
                      "end_byte": 135,
                      "text": "t",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 136,
                  "end_byte": 137,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 138,
                  "end_byte": 142,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 138,
                      "end_byte": 139,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 140,
                      "end_byte": 142,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 143,
                  "end_byte": 144,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 145,
                  "end_byte": 221,
                  "text": "{ scanf ( \"%d\" , & n ) ; cnt = getarry ( n ) ; printf ( \"%d\" , cnt + n ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 145,
                      "end_byte": 146,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 147,
                      "end_byte": 169,
                      "text": "scanf ( \"%d\" , & n ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 147,
                          "end_byte": 167,
                          "text": "scanf ( \"%d\" , & n )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 147,
                              "end_byte": 152,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 153,
                              "end_byte": 167,
                              "text": "( \"%d\" , & n )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 153,
                                  "end_byte": 154,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 155,
                                  "end_byte": 159,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 155,
                                      "end_byte": 156,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 156,
                                      "end_byte": 158,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 158,
                                      "end_byte": 159,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 160,
                                  "end_byte": 161,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 162,
                                  "end_byte": 165,
                                  "text": "& n",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 162,
                                      "end_byte": 163,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 164,
                                      "end_byte": 165,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 166,
                                  "end_byte": 167,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 168,
                          "end_byte": 169,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 170,
                      "end_byte": 191,
                      "text": "cnt = getarry ( n ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 170,
                          "end_byte": 189,
                          "text": "cnt = getarry ( n )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 170,
                              "end_byte": 173,
                              "text": "cnt",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 174,
                              "end_byte": 175,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 176,
                              "end_byte": 189,
                              "text": "getarry ( n )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 176,
                                  "end_byte": 183,
                                  "text": "getarry",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 184,
                                  "end_byte": 189,
                                  "text": "( n )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 184,
                                      "end_byte": 185,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 186,
                                      "end_byte": 187,
                                      "text": "n",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 188,
                                      "end_byte": 189,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 190,
                          "end_byte": 191,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 192,
                      "end_byte": 219,
                      "text": "printf ( \"%d\" , cnt + n ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 192,
                          "end_byte": 217,
                          "text": "printf ( \"%d\" , cnt + n )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 192,
                              "end_byte": 198,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 199,
                              "end_byte": 217,
                              "text": "( \"%d\" , cnt + n )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 199,
                                  "end_byte": 200,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 201,
                                  "end_byte": 205,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 201,
                                      "end_byte": 202,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 202,
                                      "end_byte": 204,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 204,
                                      "end_byte": 205,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 206,
                                  "end_byte": 207,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 208,
                                  "end_byte": 215,
                                  "text": "cnt + n",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 208,
                                      "end_byte": 211,
                                      "text": "cnt",
                                      "children": []
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 212,
                                      "end_byte": 213,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 214,
                                      "end_byte": 215,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 216,
                                  "end_byte": 217,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 218,
                          "end_byte": 219,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 220,
                      "end_byte": 221,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 222,
              "end_byte": 223,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 224,
      "end_byte": 607,
      "text": "int getarry ( n ) { int a = n , ar [ n ] , i , j , t , b = 0 , c = 0 ; for ( i = 0 ; i < a ; i ++ ) { scanf ( \"%d\" , & ar [ i ] ) ; } for ( i = 0 ; i < a - 1 ; i ++ ) for ( j = i + 1 ; j < a ; j ++ ) if ( ar [ i ] >= ar [ j ] ) { t = ar [ i ] ; ar [ i ] = ar [ j ] ; ar [ j ] = t ; } for ( i = 0 ; i < a ; i ++ ) { c = isSbAry ( ar [ i ] , ar [ i + 1 ] ) ; b = b + c ; } return b ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 224,
          "end_byte": 227,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 228,
          "end_byte": 241,
          "text": "getarry ( n )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 228,
              "end_byte": 235,
              "text": "getarry",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 236,
              "end_byte": 241,
              "text": "( n )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 236,
                  "end_byte": 237,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 238,
                  "end_byte": 239,
                  "text": "n",
                  "children": [
                    {
                      "type": "type_identifier",
                      "start_byte": 238,
                      "end_byte": 239,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 240,
                  "end_byte": 241,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 242,
          "end_byte": 607,
          "text": "{ int a = n , ar [ n ] , i , j , t , b = 0 , c = 0 ; for ( i = 0 ; i < a ; i ++ ) { scanf ( \"%d\" , & ar [ i ] ) ; } for ( i = 0 ; i < a - 1 ; i ++ ) for ( j = i + 1 ; j < a ; j ++ ) if ( ar [ i ] >= ar [ j ] ) { t = ar [ i ] ; ar [ i ] = ar [ j ] ; ar [ j ] = t ; } for ( i = 0 ; i < a ; i ++ ) { c = isSbAry ( ar [ i ] , ar [ i + 1 ] ) ; b = b + c ; } return b ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 242,
              "end_byte": 243,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 244,
              "end_byte": 294,
              "text": "int a = n , ar [ n ] , i , j , t , b = 0 , c = 0 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 244,
                  "end_byte": 247,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 248,
                  "end_byte": 253,
                  "text": "a = n",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 248,
                      "end_byte": 249,
                      "text": "a",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 250,
                      "end_byte": 251,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 252,
                      "end_byte": 253,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 254,
                  "end_byte": 255,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 256,
                  "end_byte": 264,
                  "text": "ar [ n ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 256,
                      "end_byte": 258,
                      "text": "ar",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 259,
                      "end_byte": 260,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 261,
                      "end_byte": 262,
                      "text": "n",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 263,
                      "end_byte": 264,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 265,
                  "end_byte": 266,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 267,
                  "end_byte": 268,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 269,
                  "end_byte": 270,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 271,
                  "end_byte": 272,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 273,
                  "end_byte": 274,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 275,
                  "end_byte": 276,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 277,
                  "end_byte": 278,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 279,
                  "end_byte": 284,
                  "text": "b = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 279,
                      "end_byte": 280,
                      "text": "b",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 281,
                      "end_byte": 282,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 283,
                      "end_byte": 284,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 285,
                  "end_byte": 286,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 287,
                  "end_byte": 292,
                  "text": "c = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 287,
                      "end_byte": 288,
                      "text": "c",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 289,
                      "end_byte": 290,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 291,
                      "end_byte": 292,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 293,
                  "end_byte": 294,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 295,
              "end_byte": 357,
              "text": "for ( i = 0 ; i < a ; i ++ ) { scanf ( \"%d\" , & ar [ i ] ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 295,
                  "end_byte": 298,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 299,
                  "end_byte": 300,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 301,
                  "end_byte": 306,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 301,
                      "end_byte": 302,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 303,
                      "end_byte": 304,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 305,
                      "end_byte": 306,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 307,
                  "end_byte": 308,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 309,
                  "end_byte": 314,
                  "text": "i < a",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 309,
                      "end_byte": 310,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 311,
                      "end_byte": 312,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 313,
                      "end_byte": 314,
                      "text": "a",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 315,
                  "end_byte": 316,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 317,
                  "end_byte": 321,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 317,
                      "end_byte": 318,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 319,
                      "end_byte": 321,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 322,
                  "end_byte": 323,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 324,
                  "end_byte": 357,
                  "text": "{ scanf ( \"%d\" , & ar [ i ] ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 324,
                      "end_byte": 325,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 326,
                      "end_byte": 355,
                      "text": "scanf ( \"%d\" , & ar [ i ] ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 326,
                          "end_byte": 353,
                          "text": "scanf ( \"%d\" , & ar [ i ] )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 326,
                              "end_byte": 331,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 332,
                              "end_byte": 353,
                              "text": "( \"%d\" , & ar [ i ] )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 332,
                                  "end_byte": 333,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 334,
                                  "end_byte": 338,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 334,
                                      "end_byte": 335,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 335,
                                      "end_byte": 337,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 337,
                                      "end_byte": 338,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 339,
                                  "end_byte": 340,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 341,
                                  "end_byte": 351,
                                  "text": "& ar [ i ]",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 341,
                                      "end_byte": 342,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 343,
                                      "end_byte": 351,
                                      "text": "ar [ i ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 343,
                                          "end_byte": 345,
                                          "text": "ar",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 346,
                                          "end_byte": 351,
                                          "text": "[ i ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 346,
                                              "end_byte": 347,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 348,
                                              "end_byte": 349,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 350,
                                              "end_byte": 351,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 352,
                                  "end_byte": 353,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 354,
                          "end_byte": 355,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 356,
                      "end_byte": 357,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 358,
              "end_byte": 507,
              "text": "for ( i = 0 ; i < a - 1 ; i ++ ) for ( j = i + 1 ; j < a ; j ++ ) if ( ar [ i ] >= ar [ j ] ) { t = ar [ i ] ; ar [ i ] = ar [ j ] ; ar [ j ] = t ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 358,
                  "end_byte": 361,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 362,
                  "end_byte": 363,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 364,
                  "end_byte": 369,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 364,
                      "end_byte": 365,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 366,
                      "end_byte": 367,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 368,
                      "end_byte": 369,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 370,
                  "end_byte": 371,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 372,
                  "end_byte": 381,
                  "text": "i < a - 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 372,
                      "end_byte": 373,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 374,
                      "end_byte": 375,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 376,
                      "end_byte": 381,
                      "text": "a - 1",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 376,
                          "end_byte": 377,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": "-",
                          "start_byte": 378,
                          "end_byte": 379,
                          "text": "-",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 380,
                          "end_byte": 381,
                          "text": "1",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 382,
                  "end_byte": 383,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 384,
                  "end_byte": 388,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 384,
                      "end_byte": 385,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 386,
                      "end_byte": 388,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 389,
                  "end_byte": 390,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "for_statement",
                  "start_byte": 391,
                  "end_byte": 507,
                  "text": "for ( j = i + 1 ; j < a ; j ++ ) if ( ar [ i ] >= ar [ j ] ) { t = ar [ i ] ; ar [ i ] = ar [ j ] ; ar [ j ] = t ; }",
                  "children": [
                    {
                      "type": "for",
                      "start_byte": 391,
                      "end_byte": 394,
                      "text": "for",
                      "children": []
                    },
                    {
                      "type": "(",
                      "start_byte": 395,
                      "end_byte": 396,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "assignment_expression",
                      "start_byte": 397,
                      "end_byte": 406,
                      "text": "j = i + 1",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 397,
                          "end_byte": 398,
                          "text": "j",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 399,
                          "end_byte": 400,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 401,
                          "end_byte": 406,
                          "text": "i + 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 401,
                              "end_byte": 402,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "+",
                              "start_byte": 403,
                              "end_byte": 404,
                              "text": "+",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 405,
                              "end_byte": 406,
                              "text": "1",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 407,
                      "end_byte": 408,
                      "text": ";",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 409,
                      "end_byte": 414,
                      "text": "j < a",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 409,
                          "end_byte": 410,
                          "text": "j",
                          "children": []
                        },
                        {
                          "type": "<",
                          "start_byte": 411,
                          "end_byte": 412,
                          "text": "<",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 413,
                          "end_byte": 414,
                          "text": "a",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 415,
                      "end_byte": 416,
                      "text": ";",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 417,
                      "end_byte": 421,
                      "text": "j ++",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 417,
                          "end_byte": 418,
                          "text": "j",
                          "children": []
                        },
                        {
                          "type": "++",
                          "start_byte": 419,
                          "end_byte": 421,
                          "text": "++",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 422,
                      "end_byte": 423,
                      "text": ")",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 424,
                      "end_byte": 507,
                      "text": "if ( ar [ i ] >= ar [ j ] ) { t = ar [ i ] ; ar [ i ] = ar [ j ] ; ar [ j ] = t ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 424,
                          "end_byte": 426,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 427,
                          "end_byte": 451,
                          "text": "( ar [ i ] >= ar [ j ] )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 427,
                              "end_byte": 428,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 429,
                              "end_byte": 449,
                              "text": "ar [ i ] >= ar [ j ]",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 429,
                                  "end_byte": 437,
                                  "text": "ar [ i ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 429,
                                      "end_byte": 431,
                                      "text": "ar",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 432,
                                      "end_byte": 437,
                                      "text": "[ i ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 432,
                                          "end_byte": 433,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 434,
                                          "end_byte": 435,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 436,
                                          "end_byte": 437,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ">=",
                                  "start_byte": 438,
                                  "end_byte": 440,
                                  "text": ">=",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 441,
                                  "end_byte": 449,
                                  "text": "ar [ j ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 441,
                                      "end_byte": 443,
                                      "text": "ar",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 444,
                                      "end_byte": 449,
                                      "text": "[ j ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 444,
                                          "end_byte": 445,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 446,
                                          "end_byte": 447,
                                          "text": "j",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 448,
                                          "end_byte": 449,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 450,
                              "end_byte": 451,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 452,
                          "end_byte": 507,
                          "text": "{ t = ar [ i ] ; ar [ i ] = ar [ j ] ; ar [ j ] = t ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 452,
                              "end_byte": 453,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 454,
                              "end_byte": 468,
                              "text": "t = ar [ i ] ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 454,
                                  "end_byte": 466,
                                  "text": "t = ar [ i ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 454,
                                      "end_byte": 455,
                                      "text": "t",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 456,
                                      "end_byte": 457,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 458,
                                      "end_byte": 466,
                                      "text": "ar [ i ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 458,
                                          "end_byte": 460,
                                          "text": "ar",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 461,
                                          "end_byte": 466,
                                          "text": "[ i ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 461,
                                              "end_byte": 462,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 463,
                                              "end_byte": 464,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 465,
                                              "end_byte": 466,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 467,
                                  "end_byte": 468,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 469,
                              "end_byte": 490,
                              "text": "ar [ i ] = ar [ j ] ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 469,
                                  "end_byte": 488,
                                  "text": "ar [ i ] = ar [ j ]",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 469,
                                      "end_byte": 477,
                                      "text": "ar [ i ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 469,
                                          "end_byte": 471,
                                          "text": "ar",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 472,
                                          "end_byte": 477,
                                          "text": "[ i ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 472,
                                              "end_byte": 473,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 474,
                                              "end_byte": 475,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 476,
                                              "end_byte": 477,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 478,
                                      "end_byte": 479,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 480,
                                      "end_byte": 488,
                                      "text": "ar [ j ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 480,
                                          "end_byte": 482,
                                          "text": "ar",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 483,
                                          "end_byte": 488,
                                          "text": "[ j ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 483,
                                              "end_byte": 484,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 485,
                                              "end_byte": 486,
                                              "text": "j",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 487,
                                              "end_byte": 488,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 489,
                                  "end_byte": 490,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 491,
                              "end_byte": 505,
                              "text": "ar [ j ] = t ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 491,
                                  "end_byte": 503,
                                  "text": "ar [ j ] = t",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 491,
                                      "end_byte": 499,
                                      "text": "ar [ j ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 491,
                                          "end_byte": 493,
                                          "text": "ar",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 494,
                                          "end_byte": 499,
                                          "text": "[ j ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 494,
                                              "end_byte": 495,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 496,
                                              "end_byte": 497,
                                              "text": "j",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 498,
                                              "end_byte": 499,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 500,
                                      "end_byte": 501,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 502,
                                      "end_byte": 503,
                                      "text": "t",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 504,
                                  "end_byte": 505,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 506,
                              "end_byte": 507,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 508,
              "end_byte": 594,
              "text": "for ( i = 0 ; i < a ; i ++ ) { c = isSbAry ( ar [ i ] , ar [ i + 1 ] ) ; b = b + c ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 508,
                  "end_byte": 511,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 512,
                  "end_byte": 513,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 514,
                  "end_byte": 519,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 514,
                      "end_byte": 515,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 516,
                      "end_byte": 517,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 518,
                      "end_byte": 519,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 520,
                  "end_byte": 521,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 522,
                  "end_byte": 527,
                  "text": "i < a",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 522,
                      "end_byte": 523,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 524,
                      "end_byte": 525,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 526,
                      "end_byte": 527,
                      "text": "a",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 528,
                  "end_byte": 529,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 530,
                  "end_byte": 534,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 530,
                      "end_byte": 531,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 532,
                      "end_byte": 534,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 535,
                  "end_byte": 536,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 537,
                  "end_byte": 594,
                  "text": "{ c = isSbAry ( ar [ i ] , ar [ i + 1 ] ) ; b = b + c ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 537,
                      "end_byte": 538,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 539,
                      "end_byte": 580,
                      "text": "c = isSbAry ( ar [ i ] , ar [ i + 1 ] ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 539,
                          "end_byte": 578,
                          "text": "c = isSbAry ( ar [ i ] , ar [ i + 1 ] )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 539,
                              "end_byte": 540,
                              "text": "c",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 541,
                              "end_byte": 542,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 543,
                              "end_byte": 578,
                              "text": "isSbAry ( ar [ i ] , ar [ i + 1 ] )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 543,
                                  "end_byte": 550,
                                  "text": "isSbAry",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 551,
                                  "end_byte": 578,
                                  "text": "( ar [ i ] , ar [ i + 1 ] )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 551,
                                      "end_byte": 552,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 553,
                                      "end_byte": 561,
                                      "text": "ar [ i ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 553,
                                          "end_byte": 555,
                                          "text": "ar",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 556,
                                          "end_byte": 561,
                                          "text": "[ i ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 556,
                                              "end_byte": 557,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 558,
                                              "end_byte": 559,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 560,
                                              "end_byte": 561,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 562,
                                      "end_byte": 563,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 564,
                                      "end_byte": 576,
                                      "text": "ar [ i + 1 ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 564,
                                          "end_byte": 566,
                                          "text": "ar",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 567,
                                          "end_byte": 576,
                                          "text": "[ i + 1 ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 567,
                                              "end_byte": 568,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 569,
                                              "end_byte": 574,
                                              "text": "i + 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 569,
                                                  "end_byte": 570,
                                                  "text": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 571,
                                                  "end_byte": 572,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 573,
                                                  "end_byte": 574,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 575,
                                              "end_byte": 576,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 577,
                                      "end_byte": 578,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 579,
                          "end_byte": 580,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 581,
                      "end_byte": 592,
                      "text": "b = b + c ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 581,
                          "end_byte": 590,
                          "text": "b = b + c",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 581,
                              "end_byte": 582,
                              "text": "b",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 583,
                              "end_byte": 584,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 585,
                              "end_byte": 590,
                              "text": "b + c",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 585,
                                  "end_byte": 586,
                                  "text": "b",
                                  "children": []
                                },
                                {
                                  "type": "+",
                                  "start_byte": 587,
                                  "end_byte": 588,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 589,
                                  "end_byte": 590,
                                  "text": "c",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 591,
                          "end_byte": 592,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 593,
                      "end_byte": 594,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 595,
              "end_byte": 605,
              "text": "return b ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 595,
                  "end_byte": 601,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 602,
                  "end_byte": 603,
                  "text": "b",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 604,
                  "end_byte": 605,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 606,
              "end_byte": 607,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 608,
      "end_byte": 720,
      "text": "int isSbAry ( int f , int s ) { if ( f == s ) return 1 ; else if ( ( f + 1 ) == s ) return 1 ; else return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 608,
          "end_byte": 611,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 612,
          "end_byte": 637,
          "text": "isSbAry ( int f , int s )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 612,
              "end_byte": 619,
              "text": "isSbAry",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 620,
              "end_byte": 637,
              "text": "( int f , int s )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 620,
                  "end_byte": 621,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 622,
                  "end_byte": 627,
                  "text": "int f",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 622,
                      "end_byte": 625,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 626,
                      "end_byte": 627,
                      "text": "f",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 628,
                  "end_byte": 629,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 630,
                  "end_byte": 635,
                  "text": "int s",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 630,
                      "end_byte": 633,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 634,
                      "end_byte": 635,
                      "text": "s",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 636,
                  "end_byte": 637,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 638,
          "end_byte": 720,
          "text": "{ if ( f == s ) return 1 ; else if ( ( f + 1 ) == s ) return 1 ; else return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 638,
              "end_byte": 639,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 640,
              "end_byte": 718,
              "text": "if ( f == s ) return 1 ; else if ( ( f + 1 ) == s ) return 1 ; else return 0 ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 640,
                  "end_byte": 642,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 643,
                  "end_byte": 653,
                  "text": "( f == s )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 643,
                      "end_byte": 644,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 645,
                      "end_byte": 651,
                      "text": "f == s",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 645,
                          "end_byte": 646,
                          "text": "f",
                          "children": []
                        },
                        {
                          "type": "==",
                          "start_byte": 647,
                          "end_byte": 649,
                          "text": "==",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 650,
                          "end_byte": 651,
                          "text": "s",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 652,
                      "end_byte": 653,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 654,
                  "end_byte": 664,
                  "text": "return 1 ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 654,
                      "end_byte": 660,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 661,
                      "end_byte": 662,
                      "text": "1",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 663,
                      "end_byte": 664,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 665,
                  "end_byte": 718,
                  "text": "else if ( ( f + 1 ) == s ) return 1 ; else return 0 ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 665,
                      "end_byte": 669,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 670,
                      "end_byte": 718,
                      "text": "if ( ( f + 1 ) == s ) return 1 ; else return 0 ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 670,
                          "end_byte": 672,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 673,
                          "end_byte": 691,
                          "text": "( ( f + 1 ) == s )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 673,
                              "end_byte": 674,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 675,
                              "end_byte": 689,
                              "text": "( f + 1 ) == s",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 675,
                                  "end_byte": 684,
                                  "text": "( f + 1 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 675,
                                      "end_byte": 676,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 677,
                                      "end_byte": 682,
                                      "text": "f + 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 677,
                                          "end_byte": 678,
                                          "text": "f",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 679,
                                          "end_byte": 680,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 681,
                                          "end_byte": 682,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 683,
                                      "end_byte": 684,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "==",
                                  "start_byte": 685,
                                  "end_byte": 687,
                                  "text": "==",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 688,
                                  "end_byte": 689,
                                  "text": "s",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 690,
                              "end_byte": 691,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "return_statement",
                          "start_byte": 692,
                          "end_byte": 702,
                          "text": "return 1 ;",
                          "children": [
                            {
                              "type": "return",
                              "start_byte": 692,
                              "end_byte": 698,
                              "text": "return",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 699,
                              "end_byte": 700,
                              "text": "1",
                              "children": []
                            },
                            {
                              "type": ";",
                              "start_byte": 701,
                              "end_byte": 702,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 703,
                          "end_byte": 718,
                          "text": "else return 0 ;",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 703,
                              "end_byte": 707,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "return_statement",
                              "start_byte": 708,
                              "end_byte": 718,
                              "text": "return 0 ;",
                              "children": [
                                {
                                  "type": "return",
                                  "start_byte": 708,
                                  "end_byte": 714,
                                  "text": "return",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 715,
                                  "end_byte": 716,
                                  "text": "0",
                                  "children": []
                                },
                                {
                                  "type": ";",
                                  "start_byte": 717,
                                  "end_byte": 718,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 719,
              "end_byte": 720,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}