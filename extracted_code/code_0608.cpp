int max ( int p , int i , int a [ 100 ] [ 100 ] ) { int j , max1 = a [ i ] [ p ] ; if ( a [ i ] [ p ] < a [ i ] [ p - 1 ] ) max1 = a [ i ] [ p - 1 ] ; return max1 ; } int pos ( int p , int i , int a [ 100 ] [ 100 ] ) { int j , max1 = p ; if ( a [ i ] [ p ] < a [ i ] [ p - 1 ] ) max1 = p - 1 ; return max1 ; } int main ( ) { long int t ; scanf ( "%ld" , & t ) ; while ( t -- ) { int n , i , j ; scanf ( "%d" , & n ) ; int a [ 100 ] [ 100 ] ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) scanf ( "%d" , & a [ i ] [ j ] ) ; } int q = 0 , p = 0 , x = 0 ; for ( i = 0 ; i < n ; i ++ ) { if ( a [ n - 1 ] [ i ] > x ) { x = a [ n - 1 ] [ i ] ; p = i ; } } int sum = 0 ; for ( i = n - 2 ; i >= 0 ; i -- ) { q = max ( p , i , a ) ; p = pos ( p , i , a ) ; sum += q ; } printf ( "%d\n" , sum + x ) ; } }