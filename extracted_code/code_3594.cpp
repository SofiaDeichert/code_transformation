int * * jagged ( int n ) { int * * a , i ; a = ( int * * ) malloc ( sizeof ( int * ) * n ) ; for ( i = 0 ; i < n ; i ++ ) * ( a + i ) = ( int * ) malloc ( sizeof ( int ) * ( i + 1 ) ) ; return a ; } int main ( ) { int j , k , t , m , n , * * a , * * b , i ; scanf ( "%d" , & m ) ; for ( i = 1 ; i <= m ; i ++ ) { scanf ( "%d" , & n ) ; a = jagged ( n ) ; b = jagged ( n ) ; for ( j = 0 ; j < n ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) scanf ( "%d" , & a [ j ] [ k ] ) ; } b [ 0 ] [ 0 ] = a [ 0 ] [ 0 ] ; for ( k = 0 ; k < n - 1 ; k ++ ) { for ( j = 0 ; j <= k ; j ++ ) { t = a [ k + 1 ] [ j ] + b [ k ] [ j ] ; if ( t > b [ k + 1 ] [ j ] ) b [ k + 1 ] [ j ] = t ; t = a [ k + 1 ] [ j + 1 ] + b [ k ] [ j ] ; if ( t > b [ k + 1 ] [ j + 1 ] ) b [ k + 1 ] [ j + 1 ] = t ; } } t = 0 ; for ( j = 0 ; j < n ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { if ( b [ j ] [ k ] > t ) t = b [ j ] [ k ] ; } } printf ( "%d\n" , t ) ; } return 0 ; }