int fastread ( ) { int input ; char c = 0 ; while ( c < 33 ) c = getchar_unlocked ( ) ; input = 0 ; while ( c > 33 ) { input = input * 10 + c - '0' ; c = getchar_unlocked ( ) ; } return input ; } int main ( ) { int i , j , t , n , max , a [ 100 ] [ 100 ] , s [ 100 ] [ 100 ] ; t = fastread ( ) ; while ( t -- ) { n = fastread ( ) ; a [ 0 ] [ 0 ] = fastread ( ) ; s [ 0 ] [ 0 ] = a [ 0 ] [ 0 ] ; max = s [ 0 ] [ 0 ] ; for ( i = 1 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { a [ i ] [ j ] = fastread ( ) ; if ( j == 0 ) { s [ i ] [ j ] = s [ i - 1 ] [ j ] + a [ i ] [ j ] ; } else { if ( i == j ) { s [ i ] [ j ] = s [ i - 1 ] [ j - 1 ] + a [ i ] [ j ] ; } else { if ( s [ i - 1 ] [ j ] > s [ i - 1 ] [ j - 1 ] ) { s [ i ] [ j ] = s [ i - 1 ] [ j ] + a [ i ] [ j ] ; } else { s [ i ] [ j ] = a [ i ] [ j ] + s [ i - 1 ] [ j - 1 ] ; } } } if ( s [ i ] [ j ] > max ) max = s [ i ] [ j ] ; } } printf ( "%d\n" , max ) ; } }