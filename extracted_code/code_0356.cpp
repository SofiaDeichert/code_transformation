int cal_max_sum ( ) ; int s [ limit ] [ limit ] ; int t [ limit ] [ limit ] ; int line ; int main ( ) { int n , out [ limit ] , i , j , k ; scanf ( "%d" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( "%d" , & line ) ; for ( j = 0 ; j < line ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) scanf ( "%d" , & s [ j ] [ k ] ) ; s [ j ] [ k ] = 0 ; } out [ i ] = cal_max_sum ( ) ; } for ( i = 0 ; i < n ; i ++ ) printf ( "%d\n" , out [ i ] ) ; return ; } int cal_max_sum ( ) { int i , j ; for ( i = 0 ; i <= line ; i ++ ) t [ line - 1 ] [ i ] = s [ line - 1 ] [ i ] ; for ( i = line - 2 ; i >= 0 ; i -- ) { for ( j = 0 ; j <= i ; j ++ ) { if ( t [ i + 1 ] [ j ] > t [ i + 1 ] [ j + 1 ] ) t [ i ] [ j ] = s [ i ] [ j ] + t [ i + 1 ] [ j ] ; else t [ i ] [ j ] = s [ i ] [ j ] + t [ i + 1 ] [ j + 1 ] ; } } return ( t [ 0 ] [ 0 ] ) ; }