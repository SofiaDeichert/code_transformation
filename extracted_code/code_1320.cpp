int maxInt ( int a , int b ) { if ( a > b ) return a ; return b ; } int main ( ) { int _case ; scanf ( "%d" , & _case ) ; int row , max ; int d [ 2 ] [ 100 ] ; int i , j , k ; int pre , cur ; while ( _case -- ) { scanf ( "%d" , & row ) ; if ( row ) { scanf ( "%d" , & d [ 0 ] [ 0 ] ) ; max = d [ 0 ] [ 0 ] ; } else max = 0 ; for ( i = 1 ; i < row ; i ++ ) { pre = ( i - 1 ) & 1 ; cur = i & 1 ; scanf ( "%d" , & d [ cur ] [ 0 ] ) ; d [ cur ] [ 0 ] += d [ pre ] [ 0 ] ; max = d [ cur ] [ 0 ] ; for ( j = 1 ; j < i ; j ++ ) { k = maxInt ( d [ pre ] [ j - 1 ] , d [ pre ] [ j ] ) ; scanf ( "%d" , & d [ cur ] [ j ] ) ; d [ cur ] [ j ] += k ; if ( d [ cur ] [ j ] > max ) max = d [ cur ] [ j ] ; } scanf ( "%d" , & d [ cur ] [ i ] ) ; d [ cur ] [ i ] += d [ pre ] [ i - 1 ] ; if ( d [ cur ] [ i ] > max ) max = d [ cur ] [ i ] ; } printf ( "%d\n" , max ) ; } return 0 ; }