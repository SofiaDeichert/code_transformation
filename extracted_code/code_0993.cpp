int input [ 100 ] [ 100 ] ; int ans [ 100 ] [ 100 ] ; int max ( int a , int b ) { if ( a > b ) return a ; else return b ; } void triangle ( int N ) { int ans [ 100 ] [ 100 ] ; ans [ 0 ] [ 0 ] = input [ 0 ] [ 0 ] ; for ( int i = 1 ; i < N ; i ++ ) { ans [ i ] [ 0 ] = input [ i ] [ 0 ] ; ans [ i ] [ 0 ] += ans [ i - 1 ] [ 0 ] ; ans [ i ] [ i ] = input [ i ] [ i ] ; ans [ i ] [ i ] += ans [ i - 1 ] [ i - 1 ] ; } for ( int k = 1 ; k < N ; k ++ ) { for ( int j = 1 ; j < k ; j ++ ) { ans [ k ] [ j ] = input [ k ] [ j ] ; ans [ k ] [ j ] += max ( ans [ k - 1 ] [ j ] , ans [ k - 1 ] [ j - 1 ] ) ; } } int temp = 0 ; for ( int i = 0 ; i < N ; i ++ ) { if ( ans [ N - 1 ] [ i ] >= temp ) temp = ans [ N - 1 ] [ i ] ; } printf ( "%d\n" , temp ) ; } int main ( ) { int t ; scanf ( "%d" , & t ) ; while ( t -- ) { int N ; scanf ( "%d" , & N ) ; for ( int i = 0 ; i < N ; i ++ ) for ( int j = 0 ; j <= i ; j ++ ) scanf ( "%d" , & input [ i ] [ j ] ) ; triangle ( N ) ; } return 0 ; }