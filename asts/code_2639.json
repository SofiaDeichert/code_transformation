{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 482,
  "text": "int hcf ( int i , int j ) { int m , k ; if ( i < j ) { for ( k = i ; k >= 1 ; k -- ) { if ( j % k == 0 && i % k == 0 ) { m = k ; break ; } } } else { for ( k = j ; k >= 1 ; k -- ) { if ( i % k == 0 && j % k == 0 ) { m = k ; break ; } } } return m ; } int main ( ) { int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { int i , j ; scanf ( \"%d%d\" , & i , & j ) ; long long int gcd , lcm ; gcd = hcf ( i , j ) ; lcm = ( i * j ) / gcd ; printf ( \"%lld %lld\\n\" , gcd , lcm ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 250,
      "text": "int hcf ( int i , int j ) { int m , k ; if ( i < j ) { for ( k = i ; k >= 1 ; k -- ) { if ( j % k == 0 && i % k == 0 ) { m = k ; break ; } } } else { for ( k = j ; k >= 1 ; k -- ) { if ( i % k == 0 && j % k == 0 ) { m = k ; break ; } } } return m ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 25,
          "text": "hcf ( int i , int j )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 7,
              "text": "hcf",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 8,
              "end_byte": 25,
              "text": "( int i , int j )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 8,
                  "end_byte": 9,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 10,
                  "end_byte": 15,
                  "text": "int i",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 10,
                      "end_byte": 13,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 14,
                      "end_byte": 15,
                      "text": "i",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 16,
                  "end_byte": 17,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 18,
                  "end_byte": 23,
                  "text": "int j",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 18,
                      "end_byte": 21,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 22,
                      "end_byte": 23,
                      "text": "j",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 24,
                  "end_byte": 25,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 26,
          "end_byte": 250,
          "text": "{ int m , k ; if ( i < j ) { for ( k = i ; k >= 1 ; k -- ) { if ( j % k == 0 && i % k == 0 ) { m = k ; break ; } } } else { for ( k = j ; k >= 1 ; k -- ) { if ( i % k == 0 && j % k == 0 ) { m = k ; break ; } } } return m ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 26,
              "end_byte": 27,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 28,
              "end_byte": 39,
              "text": "int m , k ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 28,
                  "end_byte": 31,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 32,
                  "end_byte": 33,
                  "text": "m",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 34,
                  "end_byte": 35,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 36,
                  "end_byte": 37,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 38,
                  "end_byte": 39,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 40,
              "end_byte": 237,
              "text": "if ( i < j ) { for ( k = i ; k >= 1 ; k -- ) { if ( j % k == 0 && i % k == 0 ) { m = k ; break ; } } } else { for ( k = j ; k >= 1 ; k -- ) { if ( i % k == 0 && j % k == 0 ) { m = k ; break ; } } }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 40,
                  "end_byte": 42,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 43,
                  "end_byte": 52,
                  "text": "( i < j )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 43,
                      "end_byte": 44,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 45,
                      "end_byte": 50,
                      "text": "i < j",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 45,
                          "end_byte": 46,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": "<",
                          "start_byte": 47,
                          "end_byte": 48,
                          "text": "<",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 49,
                          "end_byte": 50,
                          "text": "j",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 51,
                      "end_byte": 52,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 53,
                  "end_byte": 142,
                  "text": "{ for ( k = i ; k >= 1 ; k -- ) { if ( j % k == 0 && i % k == 0 ) { m = k ; break ; } } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 53,
                      "end_byte": 54,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 55,
                      "end_byte": 140,
                      "text": "for ( k = i ; k >= 1 ; k -- ) { if ( j % k == 0 && i % k == 0 ) { m = k ; break ; } }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 55,
                          "end_byte": 58,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 59,
                          "end_byte": 60,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 61,
                          "end_byte": 66,
                          "text": "k = i",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 61,
                              "end_byte": 62,
                              "text": "k",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 63,
                              "end_byte": 64,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 65,
                              "end_byte": 66,
                              "text": "i",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 67,
                          "end_byte": 68,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 69,
                          "end_byte": 75,
                          "text": "k >= 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 69,
                              "end_byte": 70,
                              "text": "k",
                              "children": []
                            },
                            {
                              "type": ">=",
                              "start_byte": 71,
                              "end_byte": 73,
                              "text": ">=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 74,
                              "end_byte": 75,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 76,
                          "end_byte": 77,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 78,
                          "end_byte": 82,
                          "text": "k --",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 78,
                              "end_byte": 79,
                              "text": "k",
                              "children": []
                            },
                            {
                              "type": "--",
                              "start_byte": 80,
                              "end_byte": 82,
                              "text": "--",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 83,
                          "end_byte": 84,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 85,
                          "end_byte": 140,
                          "text": "{ if ( j % k == 0 && i % k == 0 ) { m = k ; break ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 85,
                              "end_byte": 86,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 87,
                              "end_byte": 138,
                              "text": "if ( j % k == 0 && i % k == 0 ) { m = k ; break ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 87,
                                  "end_byte": 89,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 90,
                                  "end_byte": 118,
                                  "text": "( j % k == 0 && i % k == 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 90,
                                      "end_byte": 91,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 92,
                                      "end_byte": 116,
                                      "text": "j % k == 0 && i % k == 0",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 92,
                                          "end_byte": 102,
                                          "text": "j % k == 0",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 92,
                                              "end_byte": 97,
                                              "text": "j % k",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 92,
                                                  "end_byte": 93,
                                                  "text": "j",
                                                  "children": []
                                                },
                                                {
                                                  "type": "%",
                                                  "start_byte": 94,
                                                  "end_byte": 95,
                                                  "text": "%",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 96,
                                                  "end_byte": 97,
                                                  "text": "k",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "==",
                                              "start_byte": 98,
                                              "end_byte": 100,
                                              "text": "==",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 101,
                                              "end_byte": 102,
                                              "text": "0",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "&&",
                                          "start_byte": 103,
                                          "end_byte": 105,
                                          "text": "&&",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 106,
                                          "end_byte": 116,
                                          "text": "i % k == 0",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 106,
                                              "end_byte": 111,
                                              "text": "i % k",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 106,
                                                  "end_byte": 107,
                                                  "text": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "%",
                                                  "start_byte": 108,
                                                  "end_byte": 109,
                                                  "text": "%",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 110,
                                                  "end_byte": 111,
                                                  "text": "k",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "==",
                                              "start_byte": 112,
                                              "end_byte": 114,
                                              "text": "==",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 115,
                                              "end_byte": 116,
                                              "text": "0",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 117,
                                      "end_byte": 118,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 119,
                                  "end_byte": 138,
                                  "text": "{ m = k ; break ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 119,
                                      "end_byte": 120,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 121,
                                      "end_byte": 128,
                                      "text": "m = k ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 121,
                                          "end_byte": 126,
                                          "text": "m = k",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 121,
                                              "end_byte": 122,
                                              "text": "m",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 123,
                                              "end_byte": 124,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 125,
                                              "end_byte": 126,
                                              "text": "k",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 127,
                                          "end_byte": 128,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "break_statement",
                                      "start_byte": 129,
                                      "end_byte": 136,
                                      "text": "break ;",
                                      "children": [
                                        {
                                          "type": "break",
                                          "start_byte": 129,
                                          "end_byte": 134,
                                          "text": "break",
                                          "children": []
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 135,
                                          "end_byte": 136,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 137,
                                      "end_byte": 138,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 139,
                              "end_byte": 140,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 141,
                      "end_byte": 142,
                      "text": "}",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 143,
                  "end_byte": 237,
                  "text": "else { for ( k = j ; k >= 1 ; k -- ) { if ( i % k == 0 && j % k == 0 ) { m = k ; break ; } } }",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 143,
                      "end_byte": 147,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "compound_statement",
                      "start_byte": 148,
                      "end_byte": 237,
                      "text": "{ for ( k = j ; k >= 1 ; k -- ) { if ( i % k == 0 && j % k == 0 ) { m = k ; break ; } } }",
                      "children": [
                        {
                          "type": "{",
                          "start_byte": 148,
                          "end_byte": 149,
                          "text": "{",
                          "children": []
                        },
                        {
                          "type": "for_statement",
                          "start_byte": 150,
                          "end_byte": 235,
                          "text": "for ( k = j ; k >= 1 ; k -- ) { if ( i % k == 0 && j % k == 0 ) { m = k ; break ; } }",
                          "children": [
                            {
                              "type": "for",
                              "start_byte": 150,
                              "end_byte": 153,
                              "text": "for",
                              "children": []
                            },
                            {
                              "type": "(",
                              "start_byte": 154,
                              "end_byte": 155,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "assignment_expression",
                              "start_byte": 156,
                              "end_byte": 161,
                              "text": "k = j",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 156,
                                  "end_byte": 157,
                                  "text": "k",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 158,
                                  "end_byte": 159,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 160,
                                  "end_byte": 161,
                                  "text": "j",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 162,
                              "end_byte": 163,
                              "text": ";",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 164,
                              "end_byte": 170,
                              "text": "k >= 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 164,
                                  "end_byte": 165,
                                  "text": "k",
                                  "children": []
                                },
                                {
                                  "type": ">=",
                                  "start_byte": 166,
                                  "end_byte": 168,
                                  "text": ">=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 169,
                                  "end_byte": 170,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 171,
                              "end_byte": 172,
                              "text": ";",
                              "children": []
                            },
                            {
                              "type": "update_expression",
                              "start_byte": 173,
                              "end_byte": 177,
                              "text": "k --",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 173,
                                  "end_byte": 174,
                                  "text": "k",
                                  "children": []
                                },
                                {
                                  "type": "--",
                                  "start_byte": 175,
                                  "end_byte": 177,
                                  "text": "--",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 178,
                              "end_byte": 179,
                              "text": ")",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 180,
                              "end_byte": 235,
                              "text": "{ if ( i % k == 0 && j % k == 0 ) { m = k ; break ; } }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 180,
                                  "end_byte": 181,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "if_statement",
                                  "start_byte": 182,
                                  "end_byte": 233,
                                  "text": "if ( i % k == 0 && j % k == 0 ) { m = k ; break ; }",
                                  "children": [
                                    {
                                      "type": "if",
                                      "start_byte": 182,
                                      "end_byte": 184,
                                      "text": "if",
                                      "children": []
                                    },
                                    {
                                      "type": "condition_clause",
                                      "start_byte": 185,
                                      "end_byte": 213,
                                      "text": "( i % k == 0 && j % k == 0 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 185,
                                          "end_byte": 186,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 187,
                                          "end_byte": 211,
                                          "text": "i % k == 0 && j % k == 0",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 187,
                                              "end_byte": 197,
                                              "text": "i % k == 0",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 187,
                                                  "end_byte": 192,
                                                  "text": "i % k",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 187,
                                                      "end_byte": 188,
                                                      "text": "i",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "%",
                                                      "start_byte": 189,
                                                      "end_byte": 190,
                                                      "text": "%",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 191,
                                                      "end_byte": 192,
                                                      "text": "k",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "==",
                                                  "start_byte": 193,
                                                  "end_byte": 195,
                                                  "text": "==",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 196,
                                                  "end_byte": 197,
                                                  "text": "0",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "&&",
                                              "start_byte": 198,
                                              "end_byte": 200,
                                              "text": "&&",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 201,
                                              "end_byte": 211,
                                              "text": "j % k == 0",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 201,
                                                  "end_byte": 206,
                                                  "text": "j % k",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 201,
                                                      "end_byte": 202,
                                                      "text": "j",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "%",
                                                      "start_byte": 203,
                                                      "end_byte": 204,
                                                      "text": "%",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 205,
                                                      "end_byte": 206,
                                                      "text": "k",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "==",
                                                  "start_byte": 207,
                                                  "end_byte": 209,
                                                  "text": "==",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 210,
                                                  "end_byte": 211,
                                                  "text": "0",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 212,
                                          "end_byte": 213,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "compound_statement",
                                      "start_byte": 214,
                                      "end_byte": 233,
                                      "text": "{ m = k ; break ; }",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start_byte": 214,
                                          "end_byte": 215,
                                          "text": "{",
                                          "children": []
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 216,
                                          "end_byte": 223,
                                          "text": "m = k ;",
                                          "children": [
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 216,
                                              "end_byte": 221,
                                              "text": "m = k",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 216,
                                                  "end_byte": 217,
                                                  "text": "m",
                                                  "children": []
                                                },
                                                {
                                                  "type": "=",
                                                  "start_byte": 218,
                                                  "end_byte": 219,
                                                  "text": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 220,
                                                  "end_byte": 221,
                                                  "text": "k",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 222,
                                              "end_byte": 223,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "break_statement",
                                          "start_byte": 224,
                                          "end_byte": 231,
                                          "text": "break ;",
                                          "children": [
                                            {
                                              "type": "break",
                                              "start_byte": 224,
                                              "end_byte": 229,
                                              "text": "break",
                                              "children": []
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 230,
                                              "end_byte": 231,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start_byte": 232,
                                          "end_byte": 233,
                                          "text": "}",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 234,
                                  "end_byte": 235,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start_byte": 236,
                          "end_byte": 237,
                          "text": "}",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 238,
              "end_byte": 248,
              "text": "return m ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 238,
                  "end_byte": 244,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 245,
                  "end_byte": 246,
                  "text": "m",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 247,
                  "end_byte": 248,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 249,
              "end_byte": 250,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 251,
      "end_byte": 482,
      "text": "int main ( ) { int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { int i , j ; scanf ( \"%d%d\" , & i , & j ) ; long long int gcd , lcm ; gcd = hcf ( i , j ) ; lcm = ( i * j ) / gcd ; printf ( \"%lld %lld\\n\" , gcd , lcm ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 251,
          "end_byte": 254,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 255,
          "end_byte": 263,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 255,
              "end_byte": 259,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 260,
              "end_byte": 263,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 260,
                  "end_byte": 261,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 262,
                  "end_byte": 263,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 264,
          "end_byte": 482,
          "text": "{ int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { int i , j ; scanf ( \"%d%d\" , & i , & j ) ; long long int gcd , lcm ; gcd = hcf ( i , j ) ; lcm = ( i * j ) / gcd ; printf ( \"%lld %lld\\n\" , gcd , lcm ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 264,
              "end_byte": 265,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 266,
              "end_byte": 273,
              "text": "int t ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 266,
                  "end_byte": 269,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 270,
                  "end_byte": 271,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 272,
                  "end_byte": 273,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 274,
              "end_byte": 296,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 274,
                  "end_byte": 294,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 274,
                      "end_byte": 279,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 280,
                      "end_byte": 294,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 280,
                          "end_byte": 281,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 282,
                          "end_byte": 286,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 282,
                              "end_byte": 283,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 283,
                              "end_byte": 285,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 285,
                              "end_byte": 286,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 287,
                          "end_byte": 288,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 289,
                          "end_byte": 292,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 289,
                              "end_byte": 290,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 291,
                              "end_byte": 292,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 293,
                          "end_byte": 294,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 295,
                  "end_byte": 296,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 297,
              "end_byte": 469,
              "text": "while ( t -- ) { int i , j ; scanf ( \"%d%d\" , & i , & j ) ; long long int gcd , lcm ; gcd = hcf ( i , j ) ; lcm = ( i * j ) / gcd ; printf ( \"%lld %lld\\n\" , gcd , lcm ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 297,
                  "end_byte": 302,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 303,
                  "end_byte": 311,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 303,
                      "end_byte": 304,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 305,
                      "end_byte": 309,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 305,
                          "end_byte": 306,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 307,
                          "end_byte": 309,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 310,
                      "end_byte": 311,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 312,
                  "end_byte": 469,
                  "text": "{ int i , j ; scanf ( \"%d%d\" , & i , & j ) ; long long int gcd , lcm ; gcd = hcf ( i , j ) ; lcm = ( i * j ) / gcd ; printf ( \"%lld %lld\\n\" , gcd , lcm ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 312,
                      "end_byte": 313,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "declaration",
                      "start_byte": 314,
                      "end_byte": 325,
                      "text": "int i , j ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 314,
                          "end_byte": 317,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 318,
                          "end_byte": 319,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 320,
                          "end_byte": 321,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 322,
                          "end_byte": 323,
                          "text": "j",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 324,
                          "end_byte": 325,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 326,
                      "end_byte": 356,
                      "text": "scanf ( \"%d%d\" , & i , & j ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 326,
                          "end_byte": 354,
                          "text": "scanf ( \"%d%d\" , & i , & j )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 326,
                              "end_byte": 331,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 332,
                              "end_byte": 354,
                              "text": "( \"%d%d\" , & i , & j )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 332,
                                  "end_byte": 333,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 334,
                                  "end_byte": 340,
                                  "text": "\"%d%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 334,
                                      "end_byte": 335,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 335,
                                      "end_byte": 339,
                                      "text": "%d%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 339,
                                      "end_byte": 340,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 341,
                                  "end_byte": 342,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 343,
                                  "end_byte": 346,
                                  "text": "& i",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 343,
                                      "end_byte": 344,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 345,
                                      "end_byte": 346,
                                      "text": "i",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 347,
                                  "end_byte": 348,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 349,
                                  "end_byte": 352,
                                  "text": "& j",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 349,
                                      "end_byte": 350,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 351,
                                      "end_byte": 352,
                                      "text": "j",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 353,
                                  "end_byte": 354,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 355,
                          "end_byte": 356,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 357,
                      "end_byte": 382,
                      "text": "long long int gcd , lcm ;",
                      "children": [
                        {
                          "type": "sized_type_specifier",
                          "start_byte": 357,
                          "end_byte": 370,
                          "text": "long long int",
                          "children": [
                            {
                              "type": "long",
                              "start_byte": 357,
                              "end_byte": 361,
                              "text": "long",
                              "children": []
                            },
                            {
                              "type": "long",
                              "start_byte": 362,
                              "end_byte": 366,
                              "text": "long",
                              "children": []
                            },
                            {
                              "type": "primitive_type",
                              "start_byte": 367,
                              "end_byte": 370,
                              "text": "int",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "identifier",
                          "start_byte": 371,
                          "end_byte": 374,
                          "text": "gcd",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 375,
                          "end_byte": 376,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 377,
                          "end_byte": 380,
                          "text": "lcm",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 381,
                          "end_byte": 382,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 383,
                      "end_byte": 404,
                      "text": "gcd = hcf ( i , j ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 383,
                          "end_byte": 402,
                          "text": "gcd = hcf ( i , j )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 383,
                              "end_byte": 386,
                              "text": "gcd",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 387,
                              "end_byte": 388,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 389,
                              "end_byte": 402,
                              "text": "hcf ( i , j )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 389,
                                  "end_byte": 392,
                                  "text": "hcf",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 393,
                                  "end_byte": 402,
                                  "text": "( i , j )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 393,
                                      "end_byte": 394,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 395,
                                      "end_byte": 396,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 397,
                                      "end_byte": 398,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 399,
                                      "end_byte": 400,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 401,
                                      "end_byte": 402,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 403,
                          "end_byte": 404,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 405,
                      "end_byte": 428,
                      "text": "lcm = ( i * j ) / gcd ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 405,
                          "end_byte": 426,
                          "text": "lcm = ( i * j ) / gcd",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 405,
                              "end_byte": 408,
                              "text": "lcm",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 409,
                              "end_byte": 410,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 411,
                              "end_byte": 426,
                              "text": "( i * j ) / gcd",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 411,
                                  "end_byte": 420,
                                  "text": "( i * j )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 411,
                                      "end_byte": 412,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 413,
                                      "end_byte": 418,
                                      "text": "i * j",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 413,
                                          "end_byte": 414,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 415,
                                          "end_byte": 416,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 417,
                                          "end_byte": 418,
                                          "text": "j",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 419,
                                      "end_byte": 420,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 421,
                                  "end_byte": 422,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 423,
                                  "end_byte": 426,
                                  "text": "gcd",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 427,
                          "end_byte": 428,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 429,
                      "end_byte": 467,
                      "text": "printf ( \"%lld %lld\\n\" , gcd , lcm ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 429,
                          "end_byte": 465,
                          "text": "printf ( \"%lld %lld\\n\" , gcd , lcm )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 429,
                              "end_byte": 435,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 436,
                              "end_byte": 465,
                              "text": "( \"%lld %lld\\n\" , gcd , lcm )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 436,
                                  "end_byte": 437,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 438,
                                  "end_byte": 451,
                                  "text": "\"%lld %lld\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 438,
                                      "end_byte": 439,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 439,
                                      "end_byte": 448,
                                      "text": "%lld %lld",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 448,
                                      "end_byte": 450,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 450,
                                      "end_byte": 451,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 452,
                                  "end_byte": 453,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 454,
                                  "end_byte": 457,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 458,
                                  "end_byte": 459,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 460,
                                  "end_byte": 463,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 464,
                                  "end_byte": 465,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 466,
                          "end_byte": 467,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 468,
                      "end_byte": 469,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 470,
              "end_byte": 480,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 470,
                  "end_byte": 476,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 477,
                  "end_byte": 478,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 479,
                  "end_byte": 480,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 481,
              "end_byte": 482,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}