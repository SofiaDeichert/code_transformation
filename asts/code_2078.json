{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 424,
  "text": "int Greatest ( int , int ) ; int main ( void ) { int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { int a , b , gcd = 1 , lcm ; scanf ( \"%d%d\" , & a , & b ) ; gcd = Greatest ( a , b ) ; lcm = a * b / gcd ; printf ( \"%d %d\\n\" , gcd , lcm ) ; } return 0 ; } int Greatest ( int a , int b ) { if ( a == 0 && b == 0 ) return 0 ; if ( a == b ) return a ; if ( a > b ) return Greatest ( a - b , b ) ; return Greatest ( a , b - a ) ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 28,
      "text": "int Greatest ( int , int ) ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 26,
          "text": "Greatest ( int , int )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 12,
              "text": "Greatest",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 13,
              "end_byte": 26,
              "text": "( int , int )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 13,
                  "end_byte": 14,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 15,
                      "end_byte": 18,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 21,
                  "end_byte": 24,
                  "text": "int",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 21,
                      "end_byte": 24,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 27,
          "end_byte": 28,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 29,
      "end_byte": 252,
      "text": "int main ( void ) { int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { int a , b , gcd = 1 , lcm ; scanf ( \"%d%d\" , & a , & b ) ; gcd = Greatest ( a , b ) ; lcm = a * b / gcd ; printf ( \"%d %d\\n\" , gcd , lcm ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 29,
          "end_byte": 32,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 33,
          "end_byte": 46,
          "text": "main ( void )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 33,
              "end_byte": 37,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 38,
              "end_byte": 46,
              "text": "( void )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 38,
                  "end_byte": 39,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 40,
                  "end_byte": 44,
                  "text": "void",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 40,
                      "end_byte": 44,
                      "text": "void",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 45,
                  "end_byte": 46,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 47,
          "end_byte": 252,
          "text": "{ int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { int a , b , gcd = 1 , lcm ; scanf ( \"%d%d\" , & a , & b ) ; gcd = Greatest ( a , b ) ; lcm = a * b / gcd ; printf ( \"%d %d\\n\" , gcd , lcm ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 47,
              "end_byte": 48,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 49,
              "end_byte": 56,
              "text": "int t ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 49,
                  "end_byte": 52,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 53,
                  "end_byte": 54,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 55,
                  "end_byte": 56,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 57,
              "end_byte": 79,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 57,
                  "end_byte": 77,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 57,
                      "end_byte": 62,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 63,
                      "end_byte": 77,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 63,
                          "end_byte": 64,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 65,
                          "end_byte": 69,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 65,
                              "end_byte": 66,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 66,
                              "end_byte": 68,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 68,
                              "end_byte": 69,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 70,
                          "end_byte": 71,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 72,
                          "end_byte": 75,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 72,
                              "end_byte": 73,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 74,
                              "end_byte": 75,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 76,
                          "end_byte": 77,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 78,
                  "end_byte": 79,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 80,
              "end_byte": 239,
              "text": "while ( t -- ) { int a , b , gcd = 1 , lcm ; scanf ( \"%d%d\" , & a , & b ) ; gcd = Greatest ( a , b ) ; lcm = a * b / gcd ; printf ( \"%d %d\\n\" , gcd , lcm ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 80,
                  "end_byte": 85,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 86,
                  "end_byte": 94,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 86,
                      "end_byte": 87,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 88,
                      "end_byte": 92,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 88,
                          "end_byte": 89,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 90,
                          "end_byte": 92,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 93,
                      "end_byte": 94,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 95,
                  "end_byte": 239,
                  "text": "{ int a , b , gcd = 1 , lcm ; scanf ( \"%d%d\" , & a , & b ) ; gcd = Greatest ( a , b ) ; lcm = a * b / gcd ; printf ( \"%d %d\\n\" , gcd , lcm ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 95,
                      "end_byte": 96,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "declaration",
                      "start_byte": 97,
                      "end_byte": 124,
                      "text": "int a , b , gcd = 1 , lcm ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 97,
                          "end_byte": 100,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 101,
                          "end_byte": 102,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 103,
                          "end_byte": 104,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 105,
                          "end_byte": 106,
                          "text": "b",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 107,
                          "end_byte": 108,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "init_declarator",
                          "start_byte": 109,
                          "end_byte": 116,
                          "text": "gcd = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 109,
                              "end_byte": 112,
                              "text": "gcd",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 113,
                              "end_byte": 114,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 115,
                              "end_byte": 116,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 117,
                          "end_byte": 118,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 119,
                          "end_byte": 122,
                          "text": "lcm",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 123,
                          "end_byte": 124,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 125,
                      "end_byte": 155,
                      "text": "scanf ( \"%d%d\" , & a , & b ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 125,
                          "end_byte": 153,
                          "text": "scanf ( \"%d%d\" , & a , & b )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 125,
                              "end_byte": 130,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 131,
                              "end_byte": 153,
                              "text": "( \"%d%d\" , & a , & b )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 131,
                                  "end_byte": 132,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 133,
                                  "end_byte": 139,
                                  "text": "\"%d%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 133,
                                      "end_byte": 134,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 134,
                                      "end_byte": 138,
                                      "text": "%d%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 138,
                                      "end_byte": 139,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 140,
                                  "end_byte": 141,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 142,
                                  "end_byte": 145,
                                  "text": "& a",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 142,
                                      "end_byte": 143,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 144,
                                      "end_byte": 145,
                                      "text": "a",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 146,
                                  "end_byte": 147,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 148,
                                  "end_byte": 151,
                                  "text": "& b",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 148,
                                      "end_byte": 149,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 150,
                                      "end_byte": 151,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 152,
                                  "end_byte": 153,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 154,
                          "end_byte": 155,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 156,
                      "end_byte": 182,
                      "text": "gcd = Greatest ( a , b ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 156,
                          "end_byte": 180,
                          "text": "gcd = Greatest ( a , b )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 156,
                              "end_byte": 159,
                              "text": "gcd",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 160,
                              "end_byte": 161,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 162,
                              "end_byte": 180,
                              "text": "Greatest ( a , b )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 162,
                                  "end_byte": 170,
                                  "text": "Greatest",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 171,
                                  "end_byte": 180,
                                  "text": "( a , b )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 171,
                                      "end_byte": 172,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 173,
                                      "end_byte": 174,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 175,
                                      "end_byte": 176,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 177,
                                      "end_byte": 178,
                                      "text": "b",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 179,
                                      "end_byte": 180,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 181,
                          "end_byte": 182,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 183,
                      "end_byte": 202,
                      "text": "lcm = a * b / gcd ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 183,
                          "end_byte": 200,
                          "text": "lcm = a * b / gcd",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 183,
                              "end_byte": 186,
                              "text": "lcm",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 187,
                              "end_byte": 188,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 189,
                              "end_byte": 200,
                              "text": "a * b / gcd",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 189,
                                  "end_byte": 194,
                                  "text": "a * b",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 189,
                                      "end_byte": 190,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 191,
                                      "end_byte": 192,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 193,
                                      "end_byte": 194,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 195,
                                  "end_byte": 196,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 197,
                                  "end_byte": 200,
                                  "text": "gcd",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 201,
                          "end_byte": 202,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 203,
                      "end_byte": 237,
                      "text": "printf ( \"%d %d\\n\" , gcd , lcm ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 203,
                          "end_byte": 235,
                          "text": "printf ( \"%d %d\\n\" , gcd , lcm )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 203,
                              "end_byte": 209,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 210,
                              "end_byte": 235,
                              "text": "( \"%d %d\\n\" , gcd , lcm )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 210,
                                  "end_byte": 211,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 212,
                                  "end_byte": 221,
                                  "text": "\"%d %d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 212,
                                      "end_byte": 213,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 213,
                                      "end_byte": 218,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 218,
                                      "end_byte": 220,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 220,
                                      "end_byte": 221,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 222,
                                  "end_byte": 223,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 224,
                                  "end_byte": 227,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 228,
                                  "end_byte": 229,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 230,
                                  "end_byte": 233,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 234,
                                  "end_byte": 235,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 236,
                          "end_byte": 237,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 238,
                      "end_byte": 239,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 240,
              "end_byte": 250,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 240,
                  "end_byte": 246,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 247,
                  "end_byte": 248,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 249,
                  "end_byte": 250,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 251,
              "end_byte": 252,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 253,
      "end_byte": 424,
      "text": "int Greatest ( int a , int b ) { if ( a == 0 && b == 0 ) return 0 ; if ( a == b ) return a ; if ( a > b ) return Greatest ( a - b , b ) ; return Greatest ( a , b - a ) ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 253,
          "end_byte": 256,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 257,
          "end_byte": 283,
          "text": "Greatest ( int a , int b )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 257,
              "end_byte": 265,
              "text": "Greatest",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 266,
              "end_byte": 283,
              "text": "( int a , int b )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 266,
                  "end_byte": 267,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 268,
                  "end_byte": 273,
                  "text": "int a",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 268,
                      "end_byte": 271,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 272,
                      "end_byte": 273,
                      "text": "a",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 274,
                  "end_byte": 275,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 276,
                  "end_byte": 281,
                  "text": "int b",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 276,
                      "end_byte": 279,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 280,
                      "end_byte": 281,
                      "text": "b",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 282,
                  "end_byte": 283,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 284,
          "end_byte": 424,
          "text": "{ if ( a == 0 && b == 0 ) return 0 ; if ( a == b ) return a ; if ( a > b ) return Greatest ( a - b , b ) ; return Greatest ( a , b - a ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 284,
              "end_byte": 285,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 286,
              "end_byte": 320,
              "text": "if ( a == 0 && b == 0 ) return 0 ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 286,
                  "end_byte": 288,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 289,
                  "end_byte": 309,
                  "text": "( a == 0 && b == 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 289,
                      "end_byte": 290,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 291,
                      "end_byte": 307,
                      "text": "a == 0 && b == 0",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 291,
                          "end_byte": 297,
                          "text": "a == 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 291,
                              "end_byte": 292,
                              "text": "a",
                              "children": []
                            },
                            {
                              "type": "==",
                              "start_byte": 293,
                              "end_byte": 295,
                              "text": "==",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 296,
                              "end_byte": 297,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "&&",
                          "start_byte": 298,
                          "end_byte": 300,
                          "text": "&&",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 301,
                          "end_byte": 307,
                          "text": "b == 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 301,
                              "end_byte": 302,
                              "text": "b",
                              "children": []
                            },
                            {
                              "type": "==",
                              "start_byte": 303,
                              "end_byte": 305,
                              "text": "==",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 306,
                              "end_byte": 307,
                              "text": "0",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 308,
                      "end_byte": 309,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 310,
                  "end_byte": 320,
                  "text": "return 0 ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 310,
                      "end_byte": 316,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 317,
                      "end_byte": 318,
                      "text": "0",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 319,
                      "end_byte": 320,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 321,
              "end_byte": 345,
              "text": "if ( a == b ) return a ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 321,
                  "end_byte": 323,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 324,
                  "end_byte": 334,
                  "text": "( a == b )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 324,
                      "end_byte": 325,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 326,
                      "end_byte": 332,
                      "text": "a == b",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 326,
                          "end_byte": 327,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": "==",
                          "start_byte": 328,
                          "end_byte": 330,
                          "text": "==",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 331,
                          "end_byte": 332,
                          "text": "b",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 333,
                      "end_byte": 334,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 335,
                  "end_byte": 345,
                  "text": "return a ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 335,
                      "end_byte": 341,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 342,
                      "end_byte": 343,
                      "text": "a",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 344,
                      "end_byte": 345,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 346,
              "end_byte": 390,
              "text": "if ( a > b ) return Greatest ( a - b , b ) ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 346,
                  "end_byte": 348,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 349,
                  "end_byte": 358,
                  "text": "( a > b )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 349,
                      "end_byte": 350,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 351,
                      "end_byte": 356,
                      "text": "a > b",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 351,
                          "end_byte": 352,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 353,
                          "end_byte": 354,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 355,
                          "end_byte": 356,
                          "text": "b",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 357,
                      "end_byte": 358,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 359,
                  "end_byte": 390,
                  "text": "return Greatest ( a - b , b ) ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 359,
                      "end_byte": 365,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 366,
                      "end_byte": 388,
                      "text": "Greatest ( a - b , b )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 366,
                          "end_byte": 374,
                          "text": "Greatest",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 375,
                          "end_byte": 388,
                          "text": "( a - b , b )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 375,
                              "end_byte": 376,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 377,
                              "end_byte": 382,
                              "text": "a - b",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 377,
                                  "end_byte": 378,
                                  "text": "a",
                                  "children": []
                                },
                                {
                                  "type": "-",
                                  "start_byte": 379,
                                  "end_byte": 380,
                                  "text": "-",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 381,
                                  "end_byte": 382,
                                  "text": "b",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 383,
                              "end_byte": 384,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 385,
                              "end_byte": 386,
                              "text": "b",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 387,
                              "end_byte": 388,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 389,
                      "end_byte": 390,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 391,
              "end_byte": 422,
              "text": "return Greatest ( a , b - a ) ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 391,
                  "end_byte": 397,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "call_expression",
                  "start_byte": 398,
                  "end_byte": 420,
                  "text": "Greatest ( a , b - a )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 398,
                      "end_byte": 406,
                      "text": "Greatest",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 407,
                      "end_byte": 420,
                      "text": "( a , b - a )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 407,
                          "end_byte": 408,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 409,
                          "end_byte": 410,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 411,
                          "end_byte": 412,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 413,
                          "end_byte": 418,
                          "text": "b - a",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 413,
                              "end_byte": 414,
                              "text": "b",
                              "children": []
                            },
                            {
                              "type": "-",
                              "start_byte": 415,
                              "end_byte": 416,
                              "text": "-",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 417,
                              "end_byte": 418,
                              "text": "a",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 419,
                          "end_byte": 420,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 421,
                  "end_byte": 422,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 423,
              "end_byte": 424,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}