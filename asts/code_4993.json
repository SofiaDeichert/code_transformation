{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 1516,
  "text": "struct node { int triangle [ 100 ] [ 100 ] ; int max ; struct node * next ; } ; typedef struct node * NODE ; NODE getnode ( void ) { return ( malloc ( sizeof ( struct node ) ) ) ; } int next ( int mask [ ] , int n ) { int i ; for ( i = 0 ; ( i < n ) && mask [ i ] ; ++ i ) mask [ i ] = 0 ; if ( i < n ) { mask [ i ] = 1 ; return 1 ; } return 0 ; } int main ( void ) { int rows ; int i , j , k , count ; int r , c ; int bin [ 100 ] ; int sum = 0 ; int testcases ; NODE temp , head , cur ; scanf ( \"%d\" , & testcases ) ; for ( count = 0 ; count < testcases ; count ++ ) { temp = getnode ( ) ; scanf ( \"%d\" , & rows ) ; if ( rows <= 0 || rows > 100 ) exit ( 1 ) ; for ( i = 1 ; i <= rows ; i ++ ) for ( j = 0 ; j < i ; j ++ ) { scanf ( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] ) ; if ( temp -> triangle [ i - 1 ] [ j ] <= 0 || temp -> triangle [ i - 1 ] [ j ] > 99 ) exit ( 1 ) ; } if ( count == 0 ) { head = temp ; cur = head ; } else { cur -> next = temp ; cur = cur -> next ; } } cur = head ; for ( count = 0 ; count < testcases ; count ++ ) { cur -> max = 0 ; for ( j = 0 ; j < rows ; j ++ ) { bin [ j ] = 0 ; cur -> max += cur -> triangle [ j ] [ 0 ] ; } while ( next ( bin , rows - 1 ) ) { k = 0 ; r = 0 ; c = 0 ; sum = 0 ; for ( j = 0 ; j < rows ; j ++ ) { sum += cur -> triangle [ r ++ ] [ c ] ; c = c + bin [ k ++ ] ; } if ( sum > cur -> max ) cur -> max = sum ; } cur = cur -> next ; } printf ( \"\\n\" ) ; cur = head ; while ( cur != NULL ) { printf ( \"%d\\n\" , cur -> max ) ; cur = cur -> next ; } return 0 ; }",
  "children": [
    {
      "type": "struct_specifier",
      "start_byte": 0,
      "end_byte": 77,
      "text": "struct node { int triangle [ 100 ] [ 100 ] ; int max ; struct node * next ; }",
      "children": [
        {
          "type": "struct",
          "start_byte": 0,
          "end_byte": 6,
          "text": "struct",
          "children": []
        },
        {
          "type": "type_identifier",
          "start_byte": 7,
          "end_byte": 11,
          "text": "node",
          "children": []
        },
        {
          "type": "field_declaration_list",
          "start_byte": 12,
          "end_byte": 77,
          "text": "{ int triangle [ 100 ] [ 100 ] ; int max ; struct node * next ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 12,
              "end_byte": 13,
              "text": "{",
              "children": []
            },
            {
              "type": "field_declaration",
              "start_byte": 14,
              "end_byte": 44,
              "text": "int triangle [ 100 ] [ 100 ] ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 14,
                  "end_byte": 17,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 18,
                  "end_byte": 42,
                  "text": "triangle [ 100 ] [ 100 ]",
                  "children": [
                    {
                      "type": "array_declarator",
                      "start_byte": 18,
                      "end_byte": 34,
                      "text": "triangle [ 100 ]",
                      "children": [
                        {
                          "type": "field_identifier",
                          "start_byte": 18,
                          "end_byte": 26,
                          "text": "triangle",
                          "children": []
                        },
                        {
                          "type": "[",
                          "start_byte": 27,
                          "end_byte": 28,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 29,
                          "end_byte": 32,
                          "text": "100",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 33,
                          "end_byte": 34,
                          "text": "]",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "[",
                      "start_byte": 35,
                      "end_byte": 36,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 37,
                      "end_byte": 40,
                      "text": "100",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 41,
                      "end_byte": 42,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 43,
                  "end_byte": 44,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "field_declaration",
              "start_byte": 45,
              "end_byte": 54,
              "text": "int max ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 45,
                  "end_byte": 48,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "field_identifier",
                  "start_byte": 49,
                  "end_byte": 52,
                  "text": "max",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 53,
                  "end_byte": 54,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "field_declaration",
              "start_byte": 55,
              "end_byte": 75,
              "text": "struct node * next ;",
              "children": [
                {
                  "type": "struct_specifier",
                  "start_byte": 55,
                  "end_byte": 66,
                  "text": "struct node",
                  "children": [
                    {
                      "type": "struct",
                      "start_byte": 55,
                      "end_byte": 61,
                      "text": "struct",
                      "children": []
                    },
                    {
                      "type": "type_identifier",
                      "start_byte": 62,
                      "end_byte": 66,
                      "text": "node",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "pointer_declarator",
                  "start_byte": 67,
                  "end_byte": 73,
                  "text": "* next",
                  "children": [
                    {
                      "type": "*",
                      "start_byte": 67,
                      "end_byte": 68,
                      "text": "*",
                      "children": []
                    },
                    {
                      "type": "field_identifier",
                      "start_byte": 69,
                      "end_byte": 73,
                      "text": "next",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 74,
                  "end_byte": 75,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 76,
              "end_byte": 77,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": ";",
      "start_byte": 78,
      "end_byte": 79,
      "text": ";",
      "children": []
    },
    {
      "type": "type_definition",
      "start_byte": 80,
      "end_byte": 108,
      "text": "typedef struct node * NODE ;",
      "children": [
        {
          "type": "typedef",
          "start_byte": 80,
          "end_byte": 87,
          "text": "typedef",
          "children": []
        },
        {
          "type": "struct_specifier",
          "start_byte": 88,
          "end_byte": 99,
          "text": "struct node",
          "children": [
            {
              "type": "struct",
              "start_byte": 88,
              "end_byte": 94,
              "text": "struct",
              "children": []
            },
            {
              "type": "type_identifier",
              "start_byte": 95,
              "end_byte": 99,
              "text": "node",
              "children": []
            }
          ]
        },
        {
          "type": "pointer_declarator",
          "start_byte": 100,
          "end_byte": 106,
          "text": "* NODE",
          "children": [
            {
              "type": "*",
              "start_byte": 100,
              "end_byte": 101,
              "text": "*",
              "children": []
            },
            {
              "type": "type_identifier",
              "start_byte": 102,
              "end_byte": 106,
              "text": "NODE",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 107,
          "end_byte": 108,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 109,
      "end_byte": 181,
      "text": "NODE getnode ( void ) { return ( malloc ( sizeof ( struct node ) ) ) ; }",
      "children": [
        {
          "type": "type_identifier",
          "start_byte": 109,
          "end_byte": 113,
          "text": "NODE",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 114,
          "end_byte": 130,
          "text": "getnode ( void )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 114,
              "end_byte": 121,
              "text": "getnode",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 122,
              "end_byte": 130,
              "text": "( void )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 122,
                  "end_byte": 123,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 124,
                  "end_byte": 128,
                  "text": "void",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 124,
                      "end_byte": 128,
                      "text": "void",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 129,
                  "end_byte": 130,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 131,
          "end_byte": 181,
          "text": "{ return ( malloc ( sizeof ( struct node ) ) ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 131,
              "end_byte": 132,
              "text": "{",
              "children": []
            },
            {
              "type": "return_statement",
              "start_byte": 133,
              "end_byte": 179,
              "text": "return ( malloc ( sizeof ( struct node ) ) ) ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 133,
                  "end_byte": 139,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "parenthesized_expression",
                  "start_byte": 140,
                  "end_byte": 177,
                  "text": "( malloc ( sizeof ( struct node ) ) )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 140,
                      "end_byte": 141,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 142,
                      "end_byte": 175,
                      "text": "malloc ( sizeof ( struct node ) )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 142,
                          "end_byte": 148,
                          "text": "malloc",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 149,
                          "end_byte": 175,
                          "text": "( sizeof ( struct node ) )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 149,
                              "end_byte": 150,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "sizeof_expression",
                              "start_byte": 151,
                              "end_byte": 173,
                              "text": "sizeof ( struct node )",
                              "children": [
                                {
                                  "type": "sizeof",
                                  "start_byte": 151,
                                  "end_byte": 157,
                                  "text": "sizeof",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 158,
                                  "end_byte": 159,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "type_descriptor",
                                  "start_byte": 160,
                                  "end_byte": 171,
                                  "text": "struct node",
                                  "children": [
                                    {
                                      "type": "struct_specifier",
                                      "start_byte": 160,
                                      "end_byte": 171,
                                      "text": "struct node",
                                      "children": [
                                        {
                                          "type": "struct",
                                          "start_byte": 160,
                                          "end_byte": 166,
                                          "text": "struct",
                                          "children": []
                                        },
                                        {
                                          "type": "type_identifier",
                                          "start_byte": 167,
                                          "end_byte": 171,
                                          "text": "node",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 172,
                                  "end_byte": 173,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 174,
                              "end_byte": 175,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 176,
                      "end_byte": 177,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 178,
                  "end_byte": 179,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 180,
              "end_byte": 181,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 182,
      "end_byte": 347,
      "text": "int next ( int mask [ ] , int n ) { int i ; for ( i = 0 ; ( i < n ) && mask [ i ] ; ++ i ) mask [ i ] = 0 ; if ( i < n ) { mask [ i ] = 1 ; return 1 ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 182,
          "end_byte": 185,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 186,
          "end_byte": 215,
          "text": "next ( int mask [ ] , int n )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 186,
              "end_byte": 190,
              "text": "next",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 191,
              "end_byte": 215,
              "text": "( int mask [ ] , int n )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 191,
                  "end_byte": 192,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 193,
                  "end_byte": 205,
                  "text": "int mask [ ]",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 193,
                      "end_byte": 196,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "array_declarator",
                      "start_byte": 197,
                      "end_byte": 205,
                      "text": "mask [ ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 197,
                          "end_byte": 201,
                          "text": "mask",
                          "children": []
                        },
                        {
                          "type": "[",
                          "start_byte": 202,
                          "end_byte": 203,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 204,
                          "end_byte": 205,
                          "text": "]",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 206,
                  "end_byte": 207,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 208,
                  "end_byte": 213,
                  "text": "int n",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 208,
                      "end_byte": 211,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 212,
                      "end_byte": 213,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 214,
                  "end_byte": 215,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 216,
          "end_byte": 347,
          "text": "{ int i ; for ( i = 0 ; ( i < n ) && mask [ i ] ; ++ i ) mask [ i ] = 0 ; if ( i < n ) { mask [ i ] = 1 ; return 1 ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 216,
              "end_byte": 217,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 218,
              "end_byte": 225,
              "text": "int i ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 218,
                  "end_byte": 221,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 222,
                  "end_byte": 223,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 224,
                  "end_byte": 225,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 226,
              "end_byte": 289,
              "text": "for ( i = 0 ; ( i < n ) && mask [ i ] ; ++ i ) mask [ i ] = 0 ;",
              "children": [
                {
                  "type": "for",
                  "start_byte": 226,
                  "end_byte": 229,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 230,
                  "end_byte": 231,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 232,
                  "end_byte": 237,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 232,
                      "end_byte": 233,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 234,
                      "end_byte": 235,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 236,
                      "end_byte": 237,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 238,
                  "end_byte": 239,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 240,
                  "end_byte": 263,
                  "text": "( i < n ) && mask [ i ]",
                  "children": [
                    {
                      "type": "parenthesized_expression",
                      "start_byte": 240,
                      "end_byte": 249,
                      "text": "( i < n )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 240,
                          "end_byte": 241,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 242,
                          "end_byte": 247,
                          "text": "i < n",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 242,
                              "end_byte": 243,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 244,
                              "end_byte": 245,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 246,
                              "end_byte": 247,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 248,
                          "end_byte": 249,
                          "text": ")",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "&&",
                      "start_byte": 250,
                      "end_byte": 252,
                      "text": "&&",
                      "children": []
                    },
                    {
                      "type": "subscript_expression",
                      "start_byte": 253,
                      "end_byte": 263,
                      "text": "mask [ i ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 253,
                          "end_byte": 257,
                          "text": "mask",
                          "children": []
                        },
                        {
                          "type": "subscript_argument_list",
                          "start_byte": 258,
                          "end_byte": 263,
                          "text": "[ i ]",
                          "children": [
                            {
                              "type": "[",
                              "start_byte": 258,
                              "end_byte": 259,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 260,
                              "end_byte": 261,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 262,
                              "end_byte": 263,
                              "text": "]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 264,
                  "end_byte": 265,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 266,
                  "end_byte": 270,
                  "text": "++ i",
                  "children": [
                    {
                      "type": "++",
                      "start_byte": 266,
                      "end_byte": 268,
                      "text": "++",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 269,
                      "end_byte": 270,
                      "text": "i",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 271,
                  "end_byte": 272,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "expression_statement",
                  "start_byte": 273,
                  "end_byte": 289,
                  "text": "mask [ i ] = 0 ;",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start_byte": 273,
                      "end_byte": 287,
                      "text": "mask [ i ] = 0",
                      "children": [
                        {
                          "type": "subscript_expression",
                          "start_byte": 273,
                          "end_byte": 283,
                          "text": "mask [ i ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 273,
                              "end_byte": 277,
                              "text": "mask",
                              "children": []
                            },
                            {
                              "type": "subscript_argument_list",
                              "start_byte": 278,
                              "end_byte": 283,
                              "text": "[ i ]",
                              "children": [
                                {
                                  "type": "[",
                                  "start_byte": 278,
                                  "end_byte": 279,
                                  "text": "[",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 280,
                                  "end_byte": 281,
                                  "text": "i",
                                  "children": []
                                },
                                {
                                  "type": "]",
                                  "start_byte": 282,
                                  "end_byte": 283,
                                  "text": "]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "=",
                          "start_byte": 284,
                          "end_byte": 285,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 286,
                          "end_byte": 287,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 288,
                      "end_byte": 289,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 290,
              "end_byte": 334,
              "text": "if ( i < n ) { mask [ i ] = 1 ; return 1 ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 290,
                  "end_byte": 292,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 293,
                  "end_byte": 302,
                  "text": "( i < n )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 293,
                      "end_byte": 294,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 295,
                      "end_byte": 300,
                      "text": "i < n",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 295,
                          "end_byte": 296,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": "<",
                          "start_byte": 297,
                          "end_byte": 298,
                          "text": "<",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 299,
                          "end_byte": 300,
                          "text": "n",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 301,
                      "end_byte": 302,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 303,
                  "end_byte": 334,
                  "text": "{ mask [ i ] = 1 ; return 1 ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 303,
                      "end_byte": 304,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 305,
                      "end_byte": 321,
                      "text": "mask [ i ] = 1 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 305,
                          "end_byte": 319,
                          "text": "mask [ i ] = 1",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 305,
                              "end_byte": 315,
                              "text": "mask [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 305,
                                  "end_byte": 309,
                                  "text": "mask",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 310,
                                  "end_byte": 315,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 310,
                                      "end_byte": 311,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 312,
                                      "end_byte": 313,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 314,
                                      "end_byte": 315,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 316,
                              "end_byte": 317,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 318,
                              "end_byte": 319,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 320,
                          "end_byte": 321,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 322,
                      "end_byte": 332,
                      "text": "return 1 ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 322,
                          "end_byte": 328,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 329,
                          "end_byte": 330,
                          "text": "1",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 331,
                          "end_byte": 332,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 333,
                      "end_byte": 334,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 335,
              "end_byte": 345,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 335,
                  "end_byte": 341,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 342,
                  "end_byte": 343,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 344,
                  "end_byte": 345,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 346,
              "end_byte": 347,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 348,
      "end_byte": 1516,
      "text": "int main ( void ) { int rows ; int i , j , k , count ; int r , c ; int bin [ 100 ] ; int sum = 0 ; int testcases ; NODE temp , head , cur ; scanf ( \"%d\" , & testcases ) ; for ( count = 0 ; count < testcases ; count ++ ) { temp = getnode ( ) ; scanf ( \"%d\" , & rows ) ; if ( rows <= 0 || rows > 100 ) exit ( 1 ) ; for ( i = 1 ; i <= rows ; i ++ ) for ( j = 0 ; j < i ; j ++ ) { scanf ( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] ) ; if ( temp -> triangle [ i - 1 ] [ j ] <= 0 || temp -> triangle [ i - 1 ] [ j ] > 99 ) exit ( 1 ) ; } if ( count == 0 ) { head = temp ; cur = head ; } else { cur -> next = temp ; cur = cur -> next ; } } cur = head ; for ( count = 0 ; count < testcases ; count ++ ) { cur -> max = 0 ; for ( j = 0 ; j < rows ; j ++ ) { bin [ j ] = 0 ; cur -> max += cur -> triangle [ j ] [ 0 ] ; } while ( next ( bin , rows - 1 ) ) { k = 0 ; r = 0 ; c = 0 ; sum = 0 ; for ( j = 0 ; j < rows ; j ++ ) { sum += cur -> triangle [ r ++ ] [ c ] ; c = c + bin [ k ++ ] ; } if ( sum > cur -> max ) cur -> max = sum ; } cur = cur -> next ; } printf ( \"\\n\" ) ; cur = head ; while ( cur != NULL ) { printf ( \"%d\\n\" , cur -> max ) ; cur = cur -> next ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 348,
          "end_byte": 351,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 352,
          "end_byte": 365,
          "text": "main ( void )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 352,
              "end_byte": 356,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 357,
              "end_byte": 365,
              "text": "( void )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 357,
                  "end_byte": 358,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 359,
                  "end_byte": 363,
                  "text": "void",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 359,
                      "end_byte": 363,
                      "text": "void",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 364,
                  "end_byte": 365,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 366,
          "end_byte": 1516,
          "text": "{ int rows ; int i , j , k , count ; int r , c ; int bin [ 100 ] ; int sum = 0 ; int testcases ; NODE temp , head , cur ; scanf ( \"%d\" , & testcases ) ; for ( count = 0 ; count < testcases ; count ++ ) { temp = getnode ( ) ; scanf ( \"%d\" , & rows ) ; if ( rows <= 0 || rows > 100 ) exit ( 1 ) ; for ( i = 1 ; i <= rows ; i ++ ) for ( j = 0 ; j < i ; j ++ ) { scanf ( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] ) ; if ( temp -> triangle [ i - 1 ] [ j ] <= 0 || temp -> triangle [ i - 1 ] [ j ] > 99 ) exit ( 1 ) ; } if ( count == 0 ) { head = temp ; cur = head ; } else { cur -> next = temp ; cur = cur -> next ; } } cur = head ; for ( count = 0 ; count < testcases ; count ++ ) { cur -> max = 0 ; for ( j = 0 ; j < rows ; j ++ ) { bin [ j ] = 0 ; cur -> max += cur -> triangle [ j ] [ 0 ] ; } while ( next ( bin , rows - 1 ) ) { k = 0 ; r = 0 ; c = 0 ; sum = 0 ; for ( j = 0 ; j < rows ; j ++ ) { sum += cur -> triangle [ r ++ ] [ c ] ; c = c + bin [ k ++ ] ; } if ( sum > cur -> max ) cur -> max = sum ; } cur = cur -> next ; } printf ( \"\\n\" ) ; cur = head ; while ( cur != NULL ) { printf ( \"%d\\n\" , cur -> max ) ; cur = cur -> next ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 366,
              "end_byte": 367,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 368,
              "end_byte": 378,
              "text": "int rows ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 368,
                  "end_byte": 371,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 372,
                  "end_byte": 376,
                  "text": "rows",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 377,
                  "end_byte": 378,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 379,
              "end_byte": 402,
              "text": "int i , j , k , count ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 379,
                  "end_byte": 382,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 383,
                  "end_byte": 384,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 385,
                  "end_byte": 386,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 387,
                  "end_byte": 388,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 389,
                  "end_byte": 390,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 391,
                  "end_byte": 392,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 393,
                  "end_byte": 394,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 395,
                  "end_byte": 400,
                  "text": "count",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 401,
                  "end_byte": 402,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 403,
              "end_byte": 414,
              "text": "int r , c ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 403,
                  "end_byte": 406,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 407,
                  "end_byte": 408,
                  "text": "r",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 409,
                  "end_byte": 410,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 411,
                  "end_byte": 412,
                  "text": "c",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 413,
                  "end_byte": 414,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 415,
              "end_byte": 432,
              "text": "int bin [ 100 ] ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 415,
                  "end_byte": 418,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 419,
                  "end_byte": 430,
                  "text": "bin [ 100 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 419,
                      "end_byte": 422,
                      "text": "bin",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 423,
                      "end_byte": 424,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 425,
                      "end_byte": 428,
                      "text": "100",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 429,
                      "end_byte": 430,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 431,
                  "end_byte": 432,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 433,
              "end_byte": 446,
              "text": "int sum = 0 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 433,
                  "end_byte": 436,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 437,
                  "end_byte": 444,
                  "text": "sum = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 437,
                      "end_byte": 440,
                      "text": "sum",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 441,
                      "end_byte": 442,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 443,
                      "end_byte": 444,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 445,
                  "end_byte": 446,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 447,
              "end_byte": 462,
              "text": "int testcases ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 447,
                  "end_byte": 450,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 451,
                  "end_byte": 460,
                  "text": "testcases",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 461,
                  "end_byte": 462,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 463,
              "end_byte": 487,
              "text": "NODE temp , head , cur ;",
              "children": [
                {
                  "type": "type_identifier",
                  "start_byte": 463,
                  "end_byte": 467,
                  "text": "NODE",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 468,
                  "end_byte": 472,
                  "text": "temp",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 473,
                  "end_byte": 474,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 475,
                  "end_byte": 479,
                  "text": "head",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 480,
                  "end_byte": 481,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 482,
                  "end_byte": 485,
                  "text": "cur",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 486,
                  "end_byte": 487,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 488,
              "end_byte": 518,
              "text": "scanf ( \"%d\" , & testcases ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 488,
                  "end_byte": 516,
                  "text": "scanf ( \"%d\" , & testcases )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 488,
                      "end_byte": 493,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 494,
                      "end_byte": 516,
                      "text": "( \"%d\" , & testcases )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 494,
                          "end_byte": 495,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 496,
                          "end_byte": 500,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 496,
                              "end_byte": 497,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 497,
                              "end_byte": 499,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 499,
                              "end_byte": 500,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 501,
                          "end_byte": 502,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 503,
                          "end_byte": 514,
                          "text": "& testcases",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 503,
                              "end_byte": 504,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 505,
                              "end_byte": 514,
                              "text": "testcases",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 515,
                          "end_byte": 516,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 517,
                  "end_byte": 518,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 519,
              "end_byte": 980,
              "text": "for ( count = 0 ; count < testcases ; count ++ ) { temp = getnode ( ) ; scanf ( \"%d\" , & rows ) ; if ( rows <= 0 || rows > 100 ) exit ( 1 ) ; for ( i = 1 ; i <= rows ; i ++ ) for ( j = 0 ; j < i ; j ++ ) { scanf ( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] ) ; if ( temp -> triangle [ i - 1 ] [ j ] <= 0 || temp -> triangle [ i - 1 ] [ j ] > 99 ) exit ( 1 ) ; } if ( count == 0 ) { head = temp ; cur = head ; } else { cur -> next = temp ; cur = cur -> next ; } }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 519,
                  "end_byte": 522,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 523,
                  "end_byte": 524,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 525,
                  "end_byte": 534,
                  "text": "count = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 525,
                      "end_byte": 530,
                      "text": "count",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 531,
                      "end_byte": 532,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 533,
                      "end_byte": 534,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 535,
                  "end_byte": 536,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 537,
                  "end_byte": 554,
                  "text": "count < testcases",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 537,
                      "end_byte": 542,
                      "text": "count",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 543,
                      "end_byte": 544,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 545,
                      "end_byte": 554,
                      "text": "testcases",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 555,
                  "end_byte": 556,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 557,
                  "end_byte": 565,
                  "text": "count ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 557,
                      "end_byte": 562,
                      "text": "count",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 563,
                      "end_byte": 565,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 566,
                  "end_byte": 567,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 568,
                  "end_byte": 980,
                  "text": "{ temp = getnode ( ) ; scanf ( \"%d\" , & rows ) ; if ( rows <= 0 || rows > 100 ) exit ( 1 ) ; for ( i = 1 ; i <= rows ; i ++ ) for ( j = 0 ; j < i ; j ++ ) { scanf ( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] ) ; if ( temp -> triangle [ i - 1 ] [ j ] <= 0 || temp -> triangle [ i - 1 ] [ j ] > 99 ) exit ( 1 ) ; } if ( count == 0 ) { head = temp ; cur = head ; } else { cur -> next = temp ; cur = cur -> next ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 568,
                      "end_byte": 569,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 570,
                      "end_byte": 590,
                      "text": "temp = getnode ( ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 570,
                          "end_byte": 588,
                          "text": "temp = getnode ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 570,
                              "end_byte": 574,
                              "text": "temp",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 575,
                              "end_byte": 576,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 577,
                              "end_byte": 588,
                              "text": "getnode ( )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 577,
                                  "end_byte": 584,
                                  "text": "getnode",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 585,
                                  "end_byte": 588,
                                  "text": "( )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 585,
                                      "end_byte": 586,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 587,
                                      "end_byte": 588,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 589,
                          "end_byte": 590,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 591,
                      "end_byte": 616,
                      "text": "scanf ( \"%d\" , & rows ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 591,
                          "end_byte": 614,
                          "text": "scanf ( \"%d\" , & rows )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 591,
                              "end_byte": 596,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 597,
                              "end_byte": 614,
                              "text": "( \"%d\" , & rows )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 597,
                                  "end_byte": 598,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 599,
                                  "end_byte": 603,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 599,
                                      "end_byte": 600,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 600,
                                      "end_byte": 602,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 602,
                                      "end_byte": 603,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 604,
                                  "end_byte": 605,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 606,
                                  "end_byte": 612,
                                  "text": "& rows",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 606,
                                      "end_byte": 607,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 608,
                                      "end_byte": 612,
                                      "text": "rows",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 613,
                                  "end_byte": 614,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 615,
                          "end_byte": 616,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 617,
                      "end_byte": 660,
                      "text": "if ( rows <= 0 || rows > 100 ) exit ( 1 ) ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 617,
                          "end_byte": 619,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 620,
                          "end_byte": 647,
                          "text": "( rows <= 0 || rows > 100 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 620,
                              "end_byte": 621,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 622,
                              "end_byte": 645,
                              "text": "rows <= 0 || rows > 100",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 622,
                                  "end_byte": 631,
                                  "text": "rows <= 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 622,
                                      "end_byte": 626,
                                      "text": "rows",
                                      "children": []
                                    },
                                    {
                                      "type": "<=",
                                      "start_byte": 627,
                                      "end_byte": 629,
                                      "text": "<=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 630,
                                      "end_byte": 631,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "||",
                                  "start_byte": 632,
                                  "end_byte": 634,
                                  "text": "||",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 635,
                                  "end_byte": 645,
                                  "text": "rows > 100",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 635,
                                      "end_byte": 639,
                                      "text": "rows",
                                      "children": []
                                    },
                                    {
                                      "type": ">",
                                      "start_byte": 640,
                                      "end_byte": 641,
                                      "text": ">",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 642,
                                      "end_byte": 645,
                                      "text": "100",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 646,
                              "end_byte": 647,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 648,
                          "end_byte": 660,
                          "text": "exit ( 1 ) ;",
                          "children": [
                            {
                              "type": "call_expression",
                              "start_byte": 648,
                              "end_byte": 658,
                              "text": "exit ( 1 )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 648,
                                  "end_byte": 652,
                                  "text": "exit",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 653,
                                  "end_byte": 658,
                                  "text": "( 1 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 653,
                                      "end_byte": 654,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 655,
                                      "end_byte": 656,
                                      "text": "1",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 657,
                                      "end_byte": 658,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 659,
                              "end_byte": 660,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 661,
                      "end_byte": 879,
                      "text": "for ( i = 1 ; i <= rows ; i ++ ) for ( j = 0 ; j < i ; j ++ ) { scanf ( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] ) ; if ( temp -> triangle [ i - 1 ] [ j ] <= 0 || temp -> triangle [ i - 1 ] [ j ] > 99 ) exit ( 1 ) ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 661,
                          "end_byte": 664,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 665,
                          "end_byte": 666,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 667,
                          "end_byte": 672,
                          "text": "i = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 667,
                              "end_byte": 668,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 669,
                              "end_byte": 670,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 671,
                              "end_byte": 672,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 673,
                          "end_byte": 674,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 675,
                          "end_byte": 684,
                          "text": "i <= rows",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 675,
                              "end_byte": 676,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 677,
                              "end_byte": 679,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 680,
                              "end_byte": 684,
                              "text": "rows",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 685,
                          "end_byte": 686,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 687,
                          "end_byte": 691,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 687,
                              "end_byte": 688,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 689,
                              "end_byte": 691,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 692,
                          "end_byte": 693,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "for_statement",
                          "start_byte": 694,
                          "end_byte": 879,
                          "text": "for ( j = 0 ; j < i ; j ++ ) { scanf ( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] ) ; if ( temp -> triangle [ i - 1 ] [ j ] <= 0 || temp -> triangle [ i - 1 ] [ j ] > 99 ) exit ( 1 ) ; }",
                          "children": [
                            {
                              "type": "for",
                              "start_byte": 694,
                              "end_byte": 697,
                              "text": "for",
                              "children": []
                            },
                            {
                              "type": "(",
                              "start_byte": 698,
                              "end_byte": 699,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "assignment_expression",
                              "start_byte": 700,
                              "end_byte": 705,
                              "text": "j = 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 700,
                                  "end_byte": 701,
                                  "text": "j",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 702,
                                  "end_byte": 703,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 704,
                                  "end_byte": 705,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 706,
                              "end_byte": 707,
                              "text": ";",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 708,
                              "end_byte": 713,
                              "text": "j < i",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 708,
                                  "end_byte": 709,
                                  "text": "j",
                                  "children": []
                                },
                                {
                                  "type": "<",
                                  "start_byte": 710,
                                  "end_byte": 711,
                                  "text": "<",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 712,
                                  "end_byte": 713,
                                  "text": "i",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 714,
                              "end_byte": 715,
                              "text": ";",
                              "children": []
                            },
                            {
                              "type": "update_expression",
                              "start_byte": 716,
                              "end_byte": 720,
                              "text": "j ++",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 716,
                                  "end_byte": 717,
                                  "text": "j",
                                  "children": []
                                },
                                {
                                  "type": "++",
                                  "start_byte": 718,
                                  "end_byte": 720,
                                  "text": "++",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 721,
                              "end_byte": 722,
                              "text": ")",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 723,
                              "end_byte": 879,
                              "text": "{ scanf ( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] ) ; if ( temp -> triangle [ i - 1 ] [ j ] <= 0 || temp -> triangle [ i - 1 ] [ j ] > 99 ) exit ( 1 ) ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 723,
                                  "end_byte": 724,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 725,
                                  "end_byte": 778,
                                  "text": "scanf ( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] ) ;",
                                  "children": [
                                    {
                                      "type": "call_expression",
                                      "start_byte": 725,
                                      "end_byte": 776,
                                      "text": "scanf ( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 725,
                                          "end_byte": 730,
                                          "text": "scanf",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 731,
                                          "end_byte": 776,
                                          "text": "( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 731,
                                              "end_byte": 732,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "string_literal",
                                              "start_byte": 733,
                                              "end_byte": 737,
                                              "text": "\"%d\"",
                                              "children": [
                                                {
                                                  "type": "\"",
                                                  "start_byte": 733,
                                                  "end_byte": 734,
                                                  "text": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_content",
                                                  "start_byte": 734,
                                                  "end_byte": 736,
                                                  "text": "%d",
                                                  "children": []
                                                },
                                                {
                                                  "type": "\"",
                                                  "start_byte": 736,
                                                  "end_byte": 737,
                                                  "text": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 738,
                                              "end_byte": 739,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "pointer_expression",
                                              "start_byte": 740,
                                              "end_byte": 774,
                                              "text": "& temp -> triangle [ i - 1 ] [ j ]",
                                              "children": [
                                                {
                                                  "type": "&",
                                                  "start_byte": 740,
                                                  "end_byte": 741,
                                                  "text": "&",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 742,
                                                  "end_byte": 774,
                                                  "text": "temp -> triangle [ i - 1 ] [ j ]",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 742,
                                                      "end_byte": 768,
                                                      "text": "temp -> triangle [ i - 1 ]",
                                                      "children": [
                                                        {
                                                          "type": "field_expression",
                                                          "start_byte": 742,
                                                          "end_byte": 758,
                                                          "text": "temp -> triangle",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 742,
                                                              "end_byte": 746,
                                                              "text": "temp",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "->",
                                                              "start_byte": 747,
                                                              "end_byte": 749,
                                                              "text": "->",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "field_identifier",
                                                              "start_byte": 750,
                                                              "end_byte": 758,
                                                              "text": "triangle",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 759,
                                                          "end_byte": 768,
                                                          "text": "[ i - 1 ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 759,
                                                              "end_byte": 760,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 761,
                                                              "end_byte": 766,
                                                              "text": "i - 1",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 761,
                                                                  "end_byte": 762,
                                                                  "text": "i",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "-",
                                                                  "start_byte": 763,
                                                                  "end_byte": 764,
                                                                  "text": "-",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "number_literal",
                                                                  "start_byte": 765,
                                                                  "end_byte": 766,
                                                                  "text": "1",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 767,
                                                              "end_byte": 768,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 769,
                                                      "end_byte": 774,
                                                      "text": "[ j ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 769,
                                                          "end_byte": 770,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 771,
                                                          "end_byte": 772,
                                                          "text": "j",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 773,
                                                          "end_byte": 774,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 775,
                                              "end_byte": 776,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 777,
                                      "end_byte": 778,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "if_statement",
                                  "start_byte": 779,
                                  "end_byte": 877,
                                  "text": "if ( temp -> triangle [ i - 1 ] [ j ] <= 0 || temp -> triangle [ i - 1 ] [ j ] > 99 ) exit ( 1 ) ;",
                                  "children": [
                                    {
                                      "type": "if",
                                      "start_byte": 779,
                                      "end_byte": 781,
                                      "text": "if",
                                      "children": []
                                    },
                                    {
                                      "type": "condition_clause",
                                      "start_byte": 782,
                                      "end_byte": 864,
                                      "text": "( temp -> triangle [ i - 1 ] [ j ] <= 0 || temp -> triangle [ i - 1 ] [ j ] > 99 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 782,
                                          "end_byte": 783,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 784,
                                          "end_byte": 862,
                                          "text": "temp -> triangle [ i - 1 ] [ j ] <= 0 || temp -> triangle [ i - 1 ] [ j ] > 99",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 784,
                                              "end_byte": 821,
                                              "text": "temp -> triangle [ i - 1 ] [ j ] <= 0",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 784,
                                                  "end_byte": 816,
                                                  "text": "temp -> triangle [ i - 1 ] [ j ]",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 784,
                                                      "end_byte": 810,
                                                      "text": "temp -> triangle [ i - 1 ]",
                                                      "children": [
                                                        {
                                                          "type": "field_expression",
                                                          "start_byte": 784,
                                                          "end_byte": 800,
                                                          "text": "temp -> triangle",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 784,
                                                              "end_byte": 788,
                                                              "text": "temp",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "->",
                                                              "start_byte": 789,
                                                              "end_byte": 791,
                                                              "text": "->",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "field_identifier",
                                                              "start_byte": 792,
                                                              "end_byte": 800,
                                                              "text": "triangle",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 801,
                                                          "end_byte": 810,
                                                          "text": "[ i - 1 ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 801,
                                                              "end_byte": 802,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 803,
                                                              "end_byte": 808,
                                                              "text": "i - 1",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 803,
                                                                  "end_byte": 804,
                                                                  "text": "i",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "-",
                                                                  "start_byte": 805,
                                                                  "end_byte": 806,
                                                                  "text": "-",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "number_literal",
                                                                  "start_byte": 807,
                                                                  "end_byte": 808,
                                                                  "text": "1",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 809,
                                                              "end_byte": 810,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 811,
                                                      "end_byte": 816,
                                                      "text": "[ j ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 811,
                                                          "end_byte": 812,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 813,
                                                          "end_byte": 814,
                                                          "text": "j",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 815,
                                                          "end_byte": 816,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "<=",
                                                  "start_byte": 817,
                                                  "end_byte": 819,
                                                  "text": "<=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 820,
                                                  "end_byte": 821,
                                                  "text": "0",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "||",
                                              "start_byte": 822,
                                              "end_byte": 824,
                                              "text": "||",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 825,
                                              "end_byte": 862,
                                              "text": "temp -> triangle [ i - 1 ] [ j ] > 99",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 825,
                                                  "end_byte": 857,
                                                  "text": "temp -> triangle [ i - 1 ] [ j ]",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 825,
                                                      "end_byte": 851,
                                                      "text": "temp -> triangle [ i - 1 ]",
                                                      "children": [
                                                        {
                                                          "type": "field_expression",
                                                          "start_byte": 825,
                                                          "end_byte": 841,
                                                          "text": "temp -> triangle",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 825,
                                                              "end_byte": 829,
                                                              "text": "temp",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "->",
                                                              "start_byte": 830,
                                                              "end_byte": 832,
                                                              "text": "->",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "field_identifier",
                                                              "start_byte": 833,
                                                              "end_byte": 841,
                                                              "text": "triangle",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 842,
                                                          "end_byte": 851,
                                                          "text": "[ i - 1 ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 842,
                                                              "end_byte": 843,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 844,
                                                              "end_byte": 849,
                                                              "text": "i - 1",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 844,
                                                                  "end_byte": 845,
                                                                  "text": "i",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "-",
                                                                  "start_byte": 846,
                                                                  "end_byte": 847,
                                                                  "text": "-",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "number_literal",
                                                                  "start_byte": 848,
                                                                  "end_byte": 849,
                                                                  "text": "1",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 850,
                                                              "end_byte": 851,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 852,
                                                      "end_byte": 857,
                                                      "text": "[ j ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 852,
                                                          "end_byte": 853,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 854,
                                                          "end_byte": 855,
                                                          "text": "j",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 856,
                                                          "end_byte": 857,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ">",
                                                  "start_byte": 858,
                                                  "end_byte": 859,
                                                  "text": ">",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 860,
                                                  "end_byte": 862,
                                                  "text": "99",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 863,
                                          "end_byte": 864,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 865,
                                      "end_byte": 877,
                                      "text": "exit ( 1 ) ;",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start_byte": 865,
                                          "end_byte": 875,
                                          "text": "exit ( 1 )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 865,
                                              "end_byte": 869,
                                              "text": "exit",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 870,
                                              "end_byte": 875,
                                              "text": "( 1 )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 870,
                                                  "end_byte": 871,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 872,
                                                  "end_byte": 873,
                                                  "text": "1",
                                                  "children": []
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 874,
                                                  "end_byte": 875,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 876,
                                          "end_byte": 877,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 878,
                                  "end_byte": 879,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 880,
                      "end_byte": 978,
                      "text": "if ( count == 0 ) { head = temp ; cur = head ; } else { cur -> next = temp ; cur = cur -> next ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 880,
                          "end_byte": 882,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 883,
                          "end_byte": 897,
                          "text": "( count == 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 883,
                              "end_byte": 884,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 885,
                              "end_byte": 895,
                              "text": "count == 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 885,
                                  "end_byte": 890,
                                  "text": "count",
                                  "children": []
                                },
                                {
                                  "type": "==",
                                  "start_byte": 891,
                                  "end_byte": 893,
                                  "text": "==",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 894,
                                  "end_byte": 895,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 896,
                              "end_byte": 897,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 898,
                          "end_byte": 928,
                          "text": "{ head = temp ; cur = head ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 898,
                              "end_byte": 899,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 900,
                              "end_byte": 913,
                              "text": "head = temp ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 900,
                                  "end_byte": 911,
                                  "text": "head = temp",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 900,
                                      "end_byte": 904,
                                      "text": "head",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 905,
                                      "end_byte": 906,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 907,
                                      "end_byte": 911,
                                      "text": "temp",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 912,
                                  "end_byte": 913,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 914,
                              "end_byte": 926,
                              "text": "cur = head ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 914,
                                  "end_byte": 924,
                                  "text": "cur = head",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 914,
                                      "end_byte": 917,
                                      "text": "cur",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 918,
                                      "end_byte": 919,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 920,
                                      "end_byte": 924,
                                      "text": "head",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 925,
                                  "end_byte": 926,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 927,
                              "end_byte": 928,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 929,
                          "end_byte": 978,
                          "text": "else { cur -> next = temp ; cur = cur -> next ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 929,
                              "end_byte": 933,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 934,
                              "end_byte": 978,
                              "text": "{ cur -> next = temp ; cur = cur -> next ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 934,
                                  "end_byte": 935,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 936,
                                  "end_byte": 956,
                                  "text": "cur -> next = temp ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 936,
                                      "end_byte": 954,
                                      "text": "cur -> next = temp",
                                      "children": [
                                        {
                                          "type": "field_expression",
                                          "start_byte": 936,
                                          "end_byte": 947,
                                          "text": "cur -> next",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 936,
                                              "end_byte": 939,
                                              "text": "cur",
                                              "children": []
                                            },
                                            {
                                              "type": "->",
                                              "start_byte": 940,
                                              "end_byte": 942,
                                              "text": "->",
                                              "children": []
                                            },
                                            {
                                              "type": "field_identifier",
                                              "start_byte": 943,
                                              "end_byte": 947,
                                              "text": "next",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 948,
                                          "end_byte": 949,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 950,
                                          "end_byte": 954,
                                          "text": "temp",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 955,
                                      "end_byte": 956,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 957,
                                  "end_byte": 976,
                                  "text": "cur = cur -> next ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 957,
                                      "end_byte": 974,
                                      "text": "cur = cur -> next",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 957,
                                          "end_byte": 960,
                                          "text": "cur",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 961,
                                          "end_byte": 962,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "field_expression",
                                          "start_byte": 963,
                                          "end_byte": 974,
                                          "text": "cur -> next",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 963,
                                              "end_byte": 966,
                                              "text": "cur",
                                              "children": []
                                            },
                                            {
                                              "type": "->",
                                              "start_byte": 967,
                                              "end_byte": 969,
                                              "text": "->",
                                              "children": []
                                            },
                                            {
                                              "type": "field_identifier",
                                              "start_byte": 970,
                                              "end_byte": 974,
                                              "text": "next",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 975,
                                      "end_byte": 976,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 977,
                                  "end_byte": 978,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 979,
                      "end_byte": 980,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 981,
              "end_byte": 993,
              "text": "cur = head ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 981,
                  "end_byte": 991,
                  "text": "cur = head",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 981,
                      "end_byte": 984,
                      "text": "cur",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 985,
                      "end_byte": 986,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 987,
                      "end_byte": 991,
                      "text": "head",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 992,
                  "end_byte": 993,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 994,
              "end_byte": 1393,
              "text": "for ( count = 0 ; count < testcases ; count ++ ) { cur -> max = 0 ; for ( j = 0 ; j < rows ; j ++ ) { bin [ j ] = 0 ; cur -> max += cur -> triangle [ j ] [ 0 ] ; } while ( next ( bin , rows - 1 ) ) { k = 0 ; r = 0 ; c = 0 ; sum = 0 ; for ( j = 0 ; j < rows ; j ++ ) { sum += cur -> triangle [ r ++ ] [ c ] ; c = c + bin [ k ++ ] ; } if ( sum > cur -> max ) cur -> max = sum ; } cur = cur -> next ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 994,
                  "end_byte": 997,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 998,
                  "end_byte": 999,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 1000,
                  "end_byte": 1009,
                  "text": "count = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1000,
                      "end_byte": 1005,
                      "text": "count",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 1006,
                      "end_byte": 1007,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 1008,
                      "end_byte": 1009,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1010,
                  "end_byte": 1011,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 1012,
                  "end_byte": 1029,
                  "text": "count < testcases",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1012,
                      "end_byte": 1017,
                      "text": "count",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 1018,
                      "end_byte": 1019,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 1020,
                      "end_byte": 1029,
                      "text": "testcases",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1030,
                  "end_byte": 1031,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 1032,
                  "end_byte": 1040,
                  "text": "count ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1032,
                      "end_byte": 1037,
                      "text": "count",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 1038,
                      "end_byte": 1040,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 1041,
                  "end_byte": 1042,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 1043,
                  "end_byte": 1393,
                  "text": "{ cur -> max = 0 ; for ( j = 0 ; j < rows ; j ++ ) { bin [ j ] = 0 ; cur -> max += cur -> triangle [ j ] [ 0 ] ; } while ( next ( bin , rows - 1 ) ) { k = 0 ; r = 0 ; c = 0 ; sum = 0 ; for ( j = 0 ; j < rows ; j ++ ) { sum += cur -> triangle [ r ++ ] [ c ] ; c = c + bin [ k ++ ] ; } if ( sum > cur -> max ) cur -> max = sum ; } cur = cur -> next ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 1043,
                      "end_byte": 1044,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1045,
                      "end_byte": 1061,
                      "text": "cur -> max = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 1045,
                          "end_byte": 1059,
                          "text": "cur -> max = 0",
                          "children": [
                            {
                              "type": "field_expression",
                              "start_byte": 1045,
                              "end_byte": 1055,
                              "text": "cur -> max",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 1045,
                                  "end_byte": 1048,
                                  "text": "cur",
                                  "children": []
                                },
                                {
                                  "type": "->",
                                  "start_byte": 1049,
                                  "end_byte": 1051,
                                  "text": "->",
                                  "children": []
                                },
                                {
                                  "type": "field_identifier",
                                  "start_byte": 1052,
                                  "end_byte": 1055,
                                  "text": "max",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 1056,
                              "end_byte": 1057,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 1058,
                              "end_byte": 1059,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1060,
                          "end_byte": 1061,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 1062,
                      "end_byte": 1157,
                      "text": "for ( j = 0 ; j < rows ; j ++ ) { bin [ j ] = 0 ; cur -> max += cur -> triangle [ j ] [ 0 ] ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 1062,
                          "end_byte": 1065,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 1066,
                          "end_byte": 1067,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 1068,
                          "end_byte": 1073,
                          "text": "j = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1068,
                              "end_byte": 1069,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 1070,
                              "end_byte": 1071,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 1072,
                              "end_byte": 1073,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1074,
                          "end_byte": 1075,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 1076,
                          "end_byte": 1084,
                          "text": "j < rows",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1076,
                              "end_byte": 1077,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 1078,
                              "end_byte": 1079,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 1080,
                              "end_byte": 1084,
                              "text": "rows",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1085,
                          "end_byte": 1086,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 1087,
                          "end_byte": 1091,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1087,
                              "end_byte": 1088,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 1089,
                              "end_byte": 1091,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 1092,
                          "end_byte": 1093,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 1094,
                          "end_byte": 1157,
                          "text": "{ bin [ j ] = 0 ; cur -> max += cur -> triangle [ j ] [ 0 ] ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 1094,
                              "end_byte": 1095,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1096,
                              "end_byte": 1111,
                              "text": "bin [ j ] = 0 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1096,
                                  "end_byte": 1109,
                                  "text": "bin [ j ] = 0",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 1096,
                                      "end_byte": 1105,
                                      "text": "bin [ j ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1096,
                                          "end_byte": 1099,
                                          "text": "bin",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 1100,
                                          "end_byte": 1105,
                                          "text": "[ j ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 1100,
                                              "end_byte": 1101,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 1102,
                                              "end_byte": 1103,
                                              "text": "j",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 1104,
                                              "end_byte": 1105,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1106,
                                      "end_byte": 1107,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 1108,
                                      "end_byte": 1109,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1110,
                                  "end_byte": 1111,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1112,
                              "end_byte": 1155,
                              "text": "cur -> max += cur -> triangle [ j ] [ 0 ] ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1112,
                                  "end_byte": 1153,
                                  "text": "cur -> max += cur -> triangle [ j ] [ 0 ]",
                                  "children": [
                                    {
                                      "type": "field_expression",
                                      "start_byte": 1112,
                                      "end_byte": 1122,
                                      "text": "cur -> max",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1112,
                                          "end_byte": 1115,
                                          "text": "cur",
                                          "children": []
                                        },
                                        {
                                          "type": "->",
                                          "start_byte": 1116,
                                          "end_byte": 1118,
                                          "text": "->",
                                          "children": []
                                        },
                                        {
                                          "type": "field_identifier",
                                          "start_byte": 1119,
                                          "end_byte": 1122,
                                          "text": "max",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+=",
                                      "start_byte": 1123,
                                      "end_byte": 1125,
                                      "text": "+=",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 1126,
                                      "end_byte": 1153,
                                      "text": "cur -> triangle [ j ] [ 0 ]",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 1126,
                                          "end_byte": 1147,
                                          "text": "cur -> triangle [ j ]",
                                          "children": [
                                            {
                                              "type": "field_expression",
                                              "start_byte": 1126,
                                              "end_byte": 1141,
                                              "text": "cur -> triangle",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1126,
                                                  "end_byte": 1129,
                                                  "text": "cur",
                                                  "children": []
                                                },
                                                {
                                                  "type": "->",
                                                  "start_byte": 1130,
                                                  "end_byte": 1132,
                                                  "text": "->",
                                                  "children": []
                                                },
                                                {
                                                  "type": "field_identifier",
                                                  "start_byte": 1133,
                                                  "end_byte": 1141,
                                                  "text": "triangle",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 1142,
                                              "end_byte": 1147,
                                              "text": "[ j ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 1142,
                                                  "end_byte": 1143,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1144,
                                                  "end_byte": 1145,
                                                  "text": "j",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 1146,
                                                  "end_byte": 1147,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 1148,
                                          "end_byte": 1153,
                                          "text": "[ 0 ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 1148,
                                              "end_byte": 1149,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 1150,
                                              "end_byte": 1151,
                                              "text": "0",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 1152,
                                              "end_byte": 1153,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1154,
                                  "end_byte": 1155,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 1156,
                              "end_byte": 1157,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 1158,
                      "end_byte": 1371,
                      "text": "while ( next ( bin , rows - 1 ) ) { k = 0 ; r = 0 ; c = 0 ; sum = 0 ; for ( j = 0 ; j < rows ; j ++ ) { sum += cur -> triangle [ r ++ ] [ c ] ; c = c + bin [ k ++ ] ; } if ( sum > cur -> max ) cur -> max = sum ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 1158,
                          "end_byte": 1163,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 1164,
                          "end_byte": 1191,
                          "text": "( next ( bin , rows - 1 ) )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 1164,
                              "end_byte": 1165,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 1166,
                              "end_byte": 1189,
                              "text": "next ( bin , rows - 1 )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 1166,
                                  "end_byte": 1170,
                                  "text": "next",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 1171,
                                  "end_byte": 1189,
                                  "text": "( bin , rows - 1 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 1171,
                                      "end_byte": 1172,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 1173,
                                      "end_byte": 1176,
                                      "text": "bin",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 1177,
                                      "end_byte": 1178,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 1179,
                                      "end_byte": 1187,
                                      "text": "rows - 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1179,
                                          "end_byte": 1183,
                                          "text": "rows",
                                          "children": []
                                        },
                                        {
                                          "type": "-",
                                          "start_byte": 1184,
                                          "end_byte": 1185,
                                          "text": "-",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 1186,
                                          "end_byte": 1187,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 1188,
                                      "end_byte": 1189,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 1190,
                              "end_byte": 1191,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 1192,
                          "end_byte": 1371,
                          "text": "{ k = 0 ; r = 0 ; c = 0 ; sum = 0 ; for ( j = 0 ; j < rows ; j ++ ) { sum += cur -> triangle [ r ++ ] [ c ] ; c = c + bin [ k ++ ] ; } if ( sum > cur -> max ) cur -> max = sum ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 1192,
                              "end_byte": 1193,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1194,
                              "end_byte": 1201,
                              "text": "k = 0 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1194,
                                  "end_byte": 1199,
                                  "text": "k = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1194,
                                      "end_byte": 1195,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1196,
                                      "end_byte": 1197,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 1198,
                                      "end_byte": 1199,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1200,
                                  "end_byte": 1201,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1202,
                              "end_byte": 1209,
                              "text": "r = 0 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1202,
                                  "end_byte": 1207,
                                  "text": "r = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1202,
                                      "end_byte": 1203,
                                      "text": "r",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1204,
                                      "end_byte": 1205,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 1206,
                                      "end_byte": 1207,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1208,
                                  "end_byte": 1209,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1210,
                              "end_byte": 1217,
                              "text": "c = 0 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1210,
                                  "end_byte": 1215,
                                  "text": "c = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1210,
                                      "end_byte": 1211,
                                      "text": "c",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1212,
                                      "end_byte": 1213,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 1214,
                                      "end_byte": 1215,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1216,
                                  "end_byte": 1217,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1218,
                              "end_byte": 1227,
                              "text": "sum = 0 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1218,
                                  "end_byte": 1225,
                                  "text": "sum = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1218,
                                      "end_byte": 1221,
                                      "text": "sum",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1222,
                                      "end_byte": 1223,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 1224,
                                      "end_byte": 1225,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1226,
                                  "end_byte": 1227,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 1228,
                              "end_byte": 1326,
                              "text": "for ( j = 0 ; j < rows ; j ++ ) { sum += cur -> triangle [ r ++ ] [ c ] ; c = c + bin [ k ++ ] ; }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 1228,
                                  "end_byte": 1231,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 1232,
                                  "end_byte": 1233,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1234,
                                  "end_byte": 1239,
                                  "text": "j = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1234,
                                      "end_byte": 1235,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1236,
                                      "end_byte": 1237,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 1238,
                                      "end_byte": 1239,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1240,
                                  "end_byte": 1241,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 1242,
                                  "end_byte": 1250,
                                  "text": "j < rows",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1242,
                                      "end_byte": 1243,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "<",
                                      "start_byte": 1244,
                                      "end_byte": 1245,
                                      "text": "<",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 1246,
                                      "end_byte": 1250,
                                      "text": "rows",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1251,
                                  "end_byte": 1252,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 1253,
                                  "end_byte": 1257,
                                  "text": "j ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1253,
                                      "end_byte": 1254,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 1255,
                                      "end_byte": 1257,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1258,
                                  "end_byte": 1259,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 1260,
                                  "end_byte": 1326,
                                  "text": "{ sum += cur -> triangle [ r ++ ] [ c ] ; c = c + bin [ k ++ ] ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 1260,
                                      "end_byte": 1261,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 1262,
                                      "end_byte": 1301,
                                      "text": "sum += cur -> triangle [ r ++ ] [ c ] ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 1262,
                                          "end_byte": 1299,
                                          "text": "sum += cur -> triangle [ r ++ ] [ c ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1262,
                                              "end_byte": 1265,
                                              "text": "sum",
                                              "children": []
                                            },
                                            {
                                              "type": "+=",
                                              "start_byte": 1266,
                                              "end_byte": 1268,
                                              "text": "+=",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 1269,
                                              "end_byte": 1299,
                                              "text": "cur -> triangle [ r ++ ] [ c ]",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 1269,
                                                  "end_byte": 1293,
                                                  "text": "cur -> triangle [ r ++ ]",
                                                  "children": [
                                                    {
                                                      "type": "field_expression",
                                                      "start_byte": 1269,
                                                      "end_byte": 1284,
                                                      "text": "cur -> triangle",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 1269,
                                                          "end_byte": 1272,
                                                          "text": "cur",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "->",
                                                          "start_byte": 1273,
                                                          "end_byte": 1275,
                                                          "text": "->",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "field_identifier",
                                                          "start_byte": 1276,
                                                          "end_byte": 1284,
                                                          "text": "triangle",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 1285,
                                                      "end_byte": 1293,
                                                      "text": "[ r ++ ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 1285,
                                                          "end_byte": 1286,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "update_expression",
                                                          "start_byte": 1287,
                                                          "end_byte": 1291,
                                                          "text": "r ++",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 1287,
                                                              "end_byte": 1288,
                                                              "text": "r",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "++",
                                                              "start_byte": 1289,
                                                              "end_byte": 1291,
                                                              "text": "++",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 1292,
                                                          "end_byte": 1293,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 1294,
                                                  "end_byte": 1299,
                                                  "text": "[ c ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 1294,
                                                      "end_byte": 1295,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 1296,
                                                      "end_byte": 1297,
                                                      "text": "c",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 1298,
                                                      "end_byte": 1299,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 1300,
                                          "end_byte": 1301,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 1302,
                                      "end_byte": 1324,
                                      "text": "c = c + bin [ k ++ ] ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 1302,
                                          "end_byte": 1322,
                                          "text": "c = c + bin [ k ++ ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1302,
                                              "end_byte": 1303,
                                              "text": "c",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 1304,
                                              "end_byte": 1305,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 1306,
                                              "end_byte": 1322,
                                              "text": "c + bin [ k ++ ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1306,
                                                  "end_byte": 1307,
                                                  "text": "c",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 1308,
                                                  "end_byte": 1309,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 1310,
                                                  "end_byte": 1322,
                                                  "text": "bin [ k ++ ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 1310,
                                                      "end_byte": 1313,
                                                      "text": "bin",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 1314,
                                                      "end_byte": 1322,
                                                      "text": "[ k ++ ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 1314,
                                                          "end_byte": 1315,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "update_expression",
                                                          "start_byte": 1316,
                                                          "end_byte": 1320,
                                                          "text": "k ++",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 1316,
                                                              "end_byte": 1317,
                                                              "text": "k",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "++",
                                                              "start_byte": 1318,
                                                              "end_byte": 1320,
                                                              "text": "++",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 1321,
                                                          "end_byte": 1322,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 1323,
                                          "end_byte": 1324,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 1325,
                                      "end_byte": 1326,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 1327,
                              "end_byte": 1369,
                              "text": "if ( sum > cur -> max ) cur -> max = sum ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 1327,
                                  "end_byte": 1329,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 1330,
                                  "end_byte": 1350,
                                  "text": "( sum > cur -> max )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 1330,
                                      "end_byte": 1331,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 1332,
                                      "end_byte": 1348,
                                      "text": "sum > cur -> max",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1332,
                                          "end_byte": 1335,
                                          "text": "sum",
                                          "children": []
                                        },
                                        {
                                          "type": ">",
                                          "start_byte": 1336,
                                          "end_byte": 1337,
                                          "text": ">",
                                          "children": []
                                        },
                                        {
                                          "type": "field_expression",
                                          "start_byte": 1338,
                                          "end_byte": 1348,
                                          "text": "cur -> max",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1338,
                                              "end_byte": 1341,
                                              "text": "cur",
                                              "children": []
                                            },
                                            {
                                              "type": "->",
                                              "start_byte": 1342,
                                              "end_byte": 1344,
                                              "text": "->",
                                              "children": []
                                            },
                                            {
                                              "type": "field_identifier",
                                              "start_byte": 1345,
                                              "end_byte": 1348,
                                              "text": "max",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 1349,
                                      "end_byte": 1350,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 1351,
                                  "end_byte": 1369,
                                  "text": "cur -> max = sum ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 1351,
                                      "end_byte": 1367,
                                      "text": "cur -> max = sum",
                                      "children": [
                                        {
                                          "type": "field_expression",
                                          "start_byte": 1351,
                                          "end_byte": 1361,
                                          "text": "cur -> max",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1351,
                                              "end_byte": 1354,
                                              "text": "cur",
                                              "children": []
                                            },
                                            {
                                              "type": "->",
                                              "start_byte": 1355,
                                              "end_byte": 1357,
                                              "text": "->",
                                              "children": []
                                            },
                                            {
                                              "type": "field_identifier",
                                              "start_byte": 1358,
                                              "end_byte": 1361,
                                              "text": "max",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 1362,
                                          "end_byte": 1363,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 1364,
                                          "end_byte": 1367,
                                          "text": "sum",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 1368,
                                      "end_byte": 1369,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 1370,
                              "end_byte": 1371,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1372,
                      "end_byte": 1391,
                      "text": "cur = cur -> next ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 1372,
                          "end_byte": 1389,
                          "text": "cur = cur -> next",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1372,
                              "end_byte": 1375,
                              "text": "cur",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 1376,
                              "end_byte": 1377,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "field_expression",
                              "start_byte": 1378,
                              "end_byte": 1389,
                              "text": "cur -> next",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 1378,
                                  "end_byte": 1381,
                                  "text": "cur",
                                  "children": []
                                },
                                {
                                  "type": "->",
                                  "start_byte": 1382,
                                  "end_byte": 1384,
                                  "text": "->",
                                  "children": []
                                },
                                {
                                  "type": "field_identifier",
                                  "start_byte": 1385,
                                  "end_byte": 1389,
                                  "text": "next",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1390,
                          "end_byte": 1391,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 1392,
                      "end_byte": 1393,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 1394,
              "end_byte": 1411,
              "text": "printf ( \"\\n\" ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 1394,
                  "end_byte": 1409,
                  "text": "printf ( \"\\n\" )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1394,
                      "end_byte": 1400,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 1401,
                      "end_byte": 1409,
                      "text": "( \"\\n\" )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 1401,
                          "end_byte": 1402,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 1403,
                          "end_byte": 1407,
                          "text": "\"\\n\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 1403,
                              "end_byte": 1404,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 1404,
                              "end_byte": 1406,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 1406,
                              "end_byte": 1407,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 1408,
                          "end_byte": 1409,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1410,
                  "end_byte": 1411,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 1412,
              "end_byte": 1424,
              "text": "cur = head ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 1412,
                  "end_byte": 1422,
                  "text": "cur = head",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1412,
                      "end_byte": 1415,
                      "text": "cur",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 1416,
                      "end_byte": 1417,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 1418,
                      "end_byte": 1422,
                      "text": "head",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1423,
                  "end_byte": 1424,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 1425,
              "end_byte": 1503,
              "text": "while ( cur != NULL ) { printf ( \"%d\\n\" , cur -> max ) ; cur = cur -> next ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 1425,
                  "end_byte": 1430,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 1431,
                  "end_byte": 1446,
                  "text": "( cur != NULL )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 1431,
                      "end_byte": 1432,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 1433,
                      "end_byte": 1444,
                      "text": "cur != NULL",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 1433,
                          "end_byte": 1436,
                          "text": "cur",
                          "children": []
                        },
                        {
                          "type": "!=",
                          "start_byte": 1437,
                          "end_byte": 1439,
                          "text": "!=",
                          "children": []
                        },
                        {
                          "type": "null",
                          "start_byte": 1440,
                          "end_byte": 1444,
                          "text": "NULL",
                          "children": [
                            {
                              "type": "NULL",
                              "start_byte": 1440,
                              "end_byte": 1444,
                              "text": "NULL",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 1445,
                      "end_byte": 1446,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 1447,
                  "end_byte": 1503,
                  "text": "{ printf ( \"%d\\n\" , cur -> max ) ; cur = cur -> next ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 1447,
                      "end_byte": 1448,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1449,
                      "end_byte": 1481,
                      "text": "printf ( \"%d\\n\" , cur -> max ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 1449,
                          "end_byte": 1479,
                          "text": "printf ( \"%d\\n\" , cur -> max )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1449,
                              "end_byte": 1455,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 1456,
                              "end_byte": 1479,
                              "text": "( \"%d\\n\" , cur -> max )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 1456,
                                  "end_byte": 1457,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 1458,
                                  "end_byte": 1464,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 1458,
                                      "end_byte": 1459,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 1459,
                                      "end_byte": 1461,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 1461,
                                      "end_byte": 1463,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 1463,
                                      "end_byte": 1464,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 1465,
                                  "end_byte": 1466,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "field_expression",
                                  "start_byte": 1467,
                                  "end_byte": 1477,
                                  "text": "cur -> max",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1467,
                                      "end_byte": 1470,
                                      "text": "cur",
                                      "children": []
                                    },
                                    {
                                      "type": "->",
                                      "start_byte": 1471,
                                      "end_byte": 1473,
                                      "text": "->",
                                      "children": []
                                    },
                                    {
                                      "type": "field_identifier",
                                      "start_byte": 1474,
                                      "end_byte": 1477,
                                      "text": "max",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1478,
                                  "end_byte": 1479,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1480,
                          "end_byte": 1481,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1482,
                      "end_byte": 1501,
                      "text": "cur = cur -> next ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 1482,
                          "end_byte": 1499,
                          "text": "cur = cur -> next",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1482,
                              "end_byte": 1485,
                              "text": "cur",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 1486,
                              "end_byte": 1487,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "field_expression",
                              "start_byte": 1488,
                              "end_byte": 1499,
                              "text": "cur -> next",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 1488,
                                  "end_byte": 1491,
                                  "text": "cur",
                                  "children": []
                                },
                                {
                                  "type": "->",
                                  "start_byte": 1492,
                                  "end_byte": 1494,
                                  "text": "->",
                                  "children": []
                                },
                                {
                                  "type": "field_identifier",
                                  "start_byte": 1495,
                                  "end_byte": 1499,
                                  "text": "next",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1500,
                          "end_byte": 1501,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 1502,
                      "end_byte": 1503,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 1504,
              "end_byte": 1514,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 1504,
                  "end_byte": 1510,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 1511,
                  "end_byte": 1512,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 1513,
                  "end_byte": 1514,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 1515,
              "end_byte": 1516,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}