{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 381,
  "text": "int sc ( ) { int t = 0 ; char ch ; ch = gc ( ) ; while ( ch < 48 || ch > 57 ) ch = gc ( ) ; while ( ch >= 48 && ch <= 57 ) { t = ( t << 3 ) + ( t << 2 ) + ch - 48 ; ch = gc ( ) ; } return t ; } int main ( ) { int test_case , n ; test_case = sc ( ) ; while ( test_case -- ) { n = sc ( ) ; if ( ( n & 1 ) == 0 ) printf ( \"%d\\n\" , n ) ; else printf ( \"%d\\n\" , n - 1 ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 193,
      "text": "int sc ( ) { int t = 0 ; char ch ; ch = gc ( ) ; while ( ch < 48 || ch > 57 ) ch = gc ( ) ; while ( ch >= 48 && ch <= 57 ) { t = ( t << 3 ) + ( t << 2 ) + ch - 48 ; ch = gc ( ) ; } return t ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 10,
          "text": "sc ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 6,
              "text": "sc",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 7,
              "end_byte": 10,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 7,
                  "end_byte": 8,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 11,
          "end_byte": 193,
          "text": "{ int t = 0 ; char ch ; ch = gc ( ) ; while ( ch < 48 || ch > 57 ) ch = gc ( ) ; while ( ch >= 48 && ch <= 57 ) { t = ( t << 3 ) + ( t << 2 ) + ch - 48 ; ch = gc ( ) ; } return t ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 11,
              "end_byte": 12,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 13,
              "end_byte": 24,
              "text": "int t = 0 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 13,
                  "end_byte": 16,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 17,
                  "end_byte": 22,
                  "text": "t = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 17,
                      "end_byte": 18,
                      "text": "t",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 19,
                      "end_byte": 20,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 21,
                      "end_byte": 22,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 23,
                  "end_byte": 24,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 25,
              "end_byte": 34,
              "text": "char ch ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 25,
                  "end_byte": 29,
                  "text": "char",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 30,
                  "end_byte": 32,
                  "text": "ch",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 33,
                  "end_byte": 34,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 35,
              "end_byte": 48,
              "text": "ch = gc ( ) ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 35,
                  "end_byte": 46,
                  "text": "ch = gc ( )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 35,
                      "end_byte": 37,
                      "text": "ch",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 38,
                      "end_byte": 39,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 40,
                      "end_byte": 46,
                      "text": "gc ( )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 40,
                          "end_byte": 42,
                          "text": "gc",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 43,
                          "end_byte": 46,
                          "text": "( )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 43,
                              "end_byte": 44,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 45,
                              "end_byte": 46,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 47,
                  "end_byte": 48,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 49,
              "end_byte": 91,
              "text": "while ( ch < 48 || ch > 57 ) ch = gc ( ) ;",
              "children": [
                {
                  "type": "while",
                  "start_byte": 49,
                  "end_byte": 54,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 55,
                  "end_byte": 77,
                  "text": "( ch < 48 || ch > 57 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 55,
                      "end_byte": 56,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 57,
                      "end_byte": 75,
                      "text": "ch < 48 || ch > 57",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 57,
                          "end_byte": 64,
                          "text": "ch < 48",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 57,
                              "end_byte": 59,
                              "text": "ch",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 60,
                              "end_byte": 61,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 62,
                              "end_byte": 64,
                              "text": "48",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "||",
                          "start_byte": 65,
                          "end_byte": 67,
                          "text": "||",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 68,
                          "end_byte": 75,
                          "text": "ch > 57",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 68,
                              "end_byte": 70,
                              "text": "ch",
                              "children": []
                            },
                            {
                              "type": ">",
                              "start_byte": 71,
                              "end_byte": 72,
                              "text": ">",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 73,
                              "end_byte": 75,
                              "text": "57",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 76,
                      "end_byte": 77,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "expression_statement",
                  "start_byte": 78,
                  "end_byte": 91,
                  "text": "ch = gc ( ) ;",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start_byte": 78,
                      "end_byte": 89,
                      "text": "ch = gc ( )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 78,
                          "end_byte": 80,
                          "text": "ch",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 81,
                          "end_byte": 82,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "call_expression",
                          "start_byte": 83,
                          "end_byte": 89,
                          "text": "gc ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 83,
                              "end_byte": 85,
                              "text": "gc",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 86,
                              "end_byte": 89,
                              "text": "( )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 86,
                                  "end_byte": 87,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 88,
                                  "end_byte": 89,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 90,
                      "end_byte": 91,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 92,
              "end_byte": 180,
              "text": "while ( ch >= 48 && ch <= 57 ) { t = ( t << 3 ) + ( t << 2 ) + ch - 48 ; ch = gc ( ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 92,
                  "end_byte": 97,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 98,
                  "end_byte": 122,
                  "text": "( ch >= 48 && ch <= 57 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 98,
                      "end_byte": 99,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 100,
                      "end_byte": 120,
                      "text": "ch >= 48 && ch <= 57",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 100,
                          "end_byte": 108,
                          "text": "ch >= 48",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 100,
                              "end_byte": 102,
                              "text": "ch",
                              "children": []
                            },
                            {
                              "type": ">=",
                              "start_byte": 103,
                              "end_byte": 105,
                              "text": ">=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 106,
                              "end_byte": 108,
                              "text": "48",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "&&",
                          "start_byte": 109,
                          "end_byte": 111,
                          "text": "&&",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 112,
                          "end_byte": 120,
                          "text": "ch <= 57",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 112,
                              "end_byte": 114,
                              "text": "ch",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 115,
                              "end_byte": 117,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 118,
                              "end_byte": 120,
                              "text": "57",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 121,
                      "end_byte": 122,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 123,
                  "end_byte": 180,
                  "text": "{ t = ( t << 3 ) + ( t << 2 ) + ch - 48 ; ch = gc ( ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 123,
                      "end_byte": 124,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 125,
                      "end_byte": 164,
                      "text": "t = ( t << 3 ) + ( t << 2 ) + ch - 48 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 125,
                          "end_byte": 162,
                          "text": "t = ( t << 3 ) + ( t << 2 ) + ch - 48",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 125,
                              "end_byte": 126,
                              "text": "t",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 127,
                              "end_byte": 128,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 129,
                              "end_byte": 162,
                              "text": "( t << 3 ) + ( t << 2 ) + ch - 48",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 129,
                                  "end_byte": 157,
                                  "text": "( t << 3 ) + ( t << 2 ) + ch",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 129,
                                      "end_byte": 152,
                                      "text": "( t << 3 ) + ( t << 2 )",
                                      "children": [
                                        {
                                          "type": "parenthesized_expression",
                                          "start_byte": 129,
                                          "end_byte": 139,
                                          "text": "( t << 3 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 129,
                                              "end_byte": 130,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 131,
                                              "end_byte": 137,
                                              "text": "t << 3",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 131,
                                                  "end_byte": 132,
                                                  "text": "t",
                                                  "children": []
                                                },
                                                {
                                                  "type": "<<",
                                                  "start_byte": 133,
                                                  "end_byte": 135,
                                                  "text": "<<",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 136,
                                                  "end_byte": 137,
                                                  "text": "3",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 138,
                                              "end_byte": 139,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 140,
                                          "end_byte": 141,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "parenthesized_expression",
                                          "start_byte": 142,
                                          "end_byte": 152,
                                          "text": "( t << 2 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 142,
                                              "end_byte": 143,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 144,
                                              "end_byte": 150,
                                              "text": "t << 2",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 144,
                                                  "end_byte": 145,
                                                  "text": "t",
                                                  "children": []
                                                },
                                                {
                                                  "type": "<<",
                                                  "start_byte": 146,
                                                  "end_byte": 148,
                                                  "text": "<<",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 149,
                                                  "end_byte": 150,
                                                  "text": "2",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 151,
                                              "end_byte": 152,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 153,
                                      "end_byte": 154,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 155,
                                      "end_byte": 157,
                                      "text": "ch",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "-",
                                  "start_byte": 158,
                                  "end_byte": 159,
                                  "text": "-",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 160,
                                  "end_byte": 162,
                                  "text": "48",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 163,
                          "end_byte": 164,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 165,
                      "end_byte": 178,
                      "text": "ch = gc ( ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 165,
                          "end_byte": 176,
                          "text": "ch = gc ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 165,
                              "end_byte": 167,
                              "text": "ch",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 168,
                              "end_byte": 169,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 170,
                              "end_byte": 176,
                              "text": "gc ( )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 170,
                                  "end_byte": 172,
                                  "text": "gc",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 173,
                                  "end_byte": 176,
                                  "text": "( )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 173,
                                      "end_byte": 174,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 175,
                                      "end_byte": 176,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 177,
                          "end_byte": 178,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 179,
                      "end_byte": 180,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 181,
              "end_byte": 191,
              "text": "return t ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 181,
                  "end_byte": 187,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 188,
                  "end_byte": 189,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 190,
                  "end_byte": 191,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 192,
              "end_byte": 193,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 194,
      "end_byte": 381,
      "text": "int main ( ) { int test_case , n ; test_case = sc ( ) ; while ( test_case -- ) { n = sc ( ) ; if ( ( n & 1 ) == 0 ) printf ( \"%d\\n\" , n ) ; else printf ( \"%d\\n\" , n - 1 ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 194,
          "end_byte": 197,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 198,
          "end_byte": 206,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 198,
              "end_byte": 202,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 203,
              "end_byte": 206,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 203,
                  "end_byte": 204,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 205,
                  "end_byte": 206,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 207,
          "end_byte": 381,
          "text": "{ int test_case , n ; test_case = sc ( ) ; while ( test_case -- ) { n = sc ( ) ; if ( ( n & 1 ) == 0 ) printf ( \"%d\\n\" , n ) ; else printf ( \"%d\\n\" , n - 1 ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 207,
              "end_byte": 208,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 209,
              "end_byte": 228,
              "text": "int test_case , n ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 209,
                  "end_byte": 212,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 213,
                  "end_byte": 222,
                  "text": "test_case",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 223,
                  "end_byte": 224,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 225,
                  "end_byte": 226,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 227,
                  "end_byte": 228,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 229,
              "end_byte": 249,
              "text": "test_case = sc ( ) ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 229,
                  "end_byte": 247,
                  "text": "test_case = sc ( )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 229,
                      "end_byte": 238,
                      "text": "test_case",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 239,
                      "end_byte": 240,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 241,
                      "end_byte": 247,
                      "text": "sc ( )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 241,
                          "end_byte": 243,
                          "text": "sc",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 244,
                          "end_byte": 247,
                          "text": "( )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 244,
                              "end_byte": 245,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 246,
                              "end_byte": 247,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 248,
                  "end_byte": 249,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 250,
              "end_byte": 368,
              "text": "while ( test_case -- ) { n = sc ( ) ; if ( ( n & 1 ) == 0 ) printf ( \"%d\\n\" , n ) ; else printf ( \"%d\\n\" , n - 1 ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 250,
                  "end_byte": 255,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 256,
                  "end_byte": 272,
                  "text": "( test_case -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 256,
                      "end_byte": 257,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 258,
                      "end_byte": 270,
                      "text": "test_case --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 258,
                          "end_byte": 267,
                          "text": "test_case",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 268,
                          "end_byte": 270,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 271,
                      "end_byte": 272,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 273,
                  "end_byte": 368,
                  "text": "{ n = sc ( ) ; if ( ( n & 1 ) == 0 ) printf ( \"%d\\n\" , n ) ; else printf ( \"%d\\n\" , n - 1 ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 273,
                      "end_byte": 274,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 275,
                      "end_byte": 287,
                      "text": "n = sc ( ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 275,
                          "end_byte": 285,
                          "text": "n = sc ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 275,
                              "end_byte": 276,
                              "text": "n",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 277,
                              "end_byte": 278,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 279,
                              "end_byte": 285,
                              "text": "sc ( )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 279,
                                  "end_byte": 281,
                                  "text": "sc",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 282,
                                  "end_byte": 285,
                                  "text": "( )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 282,
                                      "end_byte": 283,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 284,
                                      "end_byte": 285,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 286,
                          "end_byte": 287,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 288,
                      "end_byte": 366,
                      "text": "if ( ( n & 1 ) == 0 ) printf ( \"%d\\n\" , n ) ; else printf ( \"%d\\n\" , n - 1 ) ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 288,
                          "end_byte": 290,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 291,
                          "end_byte": 309,
                          "text": "( ( n & 1 ) == 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 291,
                              "end_byte": 292,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 293,
                              "end_byte": 307,
                              "text": "( n & 1 ) == 0",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 293,
                                  "end_byte": 302,
                                  "text": "( n & 1 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 293,
                                      "end_byte": 294,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 295,
                                      "end_byte": 300,
                                      "text": "n & 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 295,
                                          "end_byte": 296,
                                          "text": "n",
                                          "children": []
                                        },
                                        {
                                          "type": "&",
                                          "start_byte": 297,
                                          "end_byte": 298,
                                          "text": "&",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 299,
                                          "end_byte": 300,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 301,
                                      "end_byte": 302,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "==",
                                  "start_byte": 303,
                                  "end_byte": 305,
                                  "text": "==",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 306,
                                  "end_byte": 307,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 308,
                              "end_byte": 309,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 310,
                          "end_byte": 333,
                          "text": "printf ( \"%d\\n\" , n ) ;",
                          "children": [
                            {
                              "type": "call_expression",
                              "start_byte": 310,
                              "end_byte": 331,
                              "text": "printf ( \"%d\\n\" , n )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 310,
                                  "end_byte": 316,
                                  "text": "printf",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 317,
                                  "end_byte": 331,
                                  "text": "( \"%d\\n\" , n )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 317,
                                      "end_byte": 318,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "string_literal",
                                      "start_byte": 319,
                                      "end_byte": 325,
                                      "text": "\"%d\\n\"",
                                      "children": [
                                        {
                                          "type": "\"",
                                          "start_byte": 319,
                                          "end_byte": 320,
                                          "text": "\"",
                                          "children": []
                                        },
                                        {
                                          "type": "string_content",
                                          "start_byte": 320,
                                          "end_byte": 322,
                                          "text": "%d",
                                          "children": []
                                        },
                                        {
                                          "type": "escape_sequence",
                                          "start_byte": 322,
                                          "end_byte": 324,
                                          "text": "\\n",
                                          "children": []
                                        },
                                        {
                                          "type": "\"",
                                          "start_byte": 324,
                                          "end_byte": 325,
                                          "text": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 326,
                                      "end_byte": 327,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 328,
                                      "end_byte": 329,
                                      "text": "n",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 330,
                                      "end_byte": 331,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 332,
                              "end_byte": 333,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 334,
                          "end_byte": 366,
                          "text": "else printf ( \"%d\\n\" , n - 1 ) ;",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 334,
                              "end_byte": 338,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 339,
                              "end_byte": 366,
                              "text": "printf ( \"%d\\n\" , n - 1 ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 339,
                                  "end_byte": 364,
                                  "text": "printf ( \"%d\\n\" , n - 1 )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 339,
                                      "end_byte": 345,
                                      "text": "printf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 346,
                                      "end_byte": 364,
                                      "text": "( \"%d\\n\" , n - 1 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 346,
                                          "end_byte": 347,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 348,
                                          "end_byte": 354,
                                          "text": "\"%d\\n\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 348,
                                              "end_byte": 349,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 349,
                                              "end_byte": 351,
                                              "text": "%d",
                                              "children": []
                                            },
                                            {
                                              "type": "escape_sequence",
                                              "start_byte": 351,
                                              "end_byte": 353,
                                              "text": "\\n",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 353,
                                              "end_byte": 354,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 355,
                                          "end_byte": 356,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 357,
                                          "end_byte": 362,
                                          "text": "n - 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 357,
                                              "end_byte": 358,
                                              "text": "n",
                                              "children": []
                                            },
                                            {
                                              "type": "-",
                                              "start_byte": 359,
                                              "end_byte": 360,
                                              "text": "-",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 361,
                                              "end_byte": 362,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 363,
                                          "end_byte": 364,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 365,
                                  "end_byte": 366,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 367,
                      "end_byte": 368,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 369,
              "end_byte": 379,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 369,
                  "end_byte": 375,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 376,
                  "end_byte": 377,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 378,
                  "end_byte": 379,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 380,
              "end_byte": 381,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}