{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 462,
  "text": "void main ( ) { int test , num1 , num2 , minmultiple , lcm , gcd , i = 0 ; scanf ( \"%d\" , & test ) ; while ( test -- ) { scanf ( \"%d %d\" , & num1 , & num2 ) ; minmultiple = ( num1 > num2 ) ? num1 : num2 ; while ( 1 ) { if ( minmultiple % num1 == 0 && minmultiple % num2 == 0 ) { lcm = minmultiple ; break ; } ++ minmultiple ; } for ( i = 1 ; i <= num1 && i <= num2 ; ++ i ) { if ( num1 % i == 0 && num2 % i == 0 ) gcd = i ; } printf ( \"%d %d\" , gcd , lcm ) ; } }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 462,
      "text": "void main ( ) { int test , num1 , num2 , minmultiple , lcm , gcd , i = 0 ; scanf ( \"%d\" , & test ) ; while ( test -- ) { scanf ( \"%d %d\" , & num1 , & num2 ) ; minmultiple = ( num1 > num2 ) ? num1 : num2 ; while ( 1 ) { if ( minmultiple % num1 == 0 && minmultiple % num2 == 0 ) { lcm = minmultiple ; break ; } ++ minmultiple ; } for ( i = 1 ; i <= num1 && i <= num2 ; ++ i ) { if ( num1 % i == 0 && num2 % i == 0 ) gcd = i ; } printf ( \"%d %d\" , gcd , lcm ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 4,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 5,
          "end_byte": 13,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 5,
              "end_byte": 9,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 10,
              "end_byte": 13,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 10,
                  "end_byte": 11,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 12,
                  "end_byte": 13,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 14,
          "end_byte": 462,
          "text": "{ int test , num1 , num2 , minmultiple , lcm , gcd , i = 0 ; scanf ( \"%d\" , & test ) ; while ( test -- ) { scanf ( \"%d %d\" , & num1 , & num2 ) ; minmultiple = ( num1 > num2 ) ? num1 : num2 ; while ( 1 ) { if ( minmultiple % num1 == 0 && minmultiple % num2 == 0 ) { lcm = minmultiple ; break ; } ++ minmultiple ; } for ( i = 1 ; i <= num1 && i <= num2 ; ++ i ) { if ( num1 % i == 0 && num2 % i == 0 ) gcd = i ; } printf ( \"%d %d\" , gcd , lcm ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 14,
              "end_byte": 15,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 16,
              "end_byte": 74,
              "text": "int test , num1 , num2 , minmultiple , lcm , gcd , i = 0 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 16,
                  "end_byte": 19,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 20,
                  "end_byte": 24,
                  "text": "test",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 27,
                  "end_byte": 31,
                  "text": "num1",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 32,
                  "end_byte": 33,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 34,
                  "end_byte": 38,
                  "text": "num2",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 39,
                  "end_byte": 40,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 41,
                  "end_byte": 52,
                  "text": "minmultiple",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 53,
                  "end_byte": 54,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 55,
                  "end_byte": 58,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 59,
                  "end_byte": 60,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 61,
                  "end_byte": 64,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 65,
                  "end_byte": 66,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 67,
                  "end_byte": 72,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 67,
                      "end_byte": 68,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 69,
                      "end_byte": 70,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 71,
                      "end_byte": 72,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 73,
                  "end_byte": 74,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 75,
              "end_byte": 100,
              "text": "scanf ( \"%d\" , & test ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 75,
                  "end_byte": 98,
                  "text": "scanf ( \"%d\" , & test )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 75,
                      "end_byte": 80,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 81,
                      "end_byte": 98,
                      "text": "( \"%d\" , & test )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 81,
                          "end_byte": 82,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 83,
                          "end_byte": 87,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 83,
                              "end_byte": 84,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 84,
                              "end_byte": 86,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 86,
                              "end_byte": 87,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 88,
                          "end_byte": 89,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 90,
                          "end_byte": 96,
                          "text": "& test",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 90,
                              "end_byte": 91,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 92,
                              "end_byte": 96,
                              "text": "test",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 97,
                          "end_byte": 98,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 99,
                  "end_byte": 100,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 101,
              "end_byte": 460,
              "text": "while ( test -- ) { scanf ( \"%d %d\" , & num1 , & num2 ) ; minmultiple = ( num1 > num2 ) ? num1 : num2 ; while ( 1 ) { if ( minmultiple % num1 == 0 && minmultiple % num2 == 0 ) { lcm = minmultiple ; break ; } ++ minmultiple ; } for ( i = 1 ; i <= num1 && i <= num2 ; ++ i ) { if ( num1 % i == 0 && num2 % i == 0 ) gcd = i ; } printf ( \"%d %d\" , gcd , lcm ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 101,
                  "end_byte": 106,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 107,
                  "end_byte": 118,
                  "text": "( test -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 107,
                      "end_byte": 108,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 109,
                      "end_byte": 116,
                      "text": "test --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 109,
                          "end_byte": 113,
                          "text": "test",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 114,
                          "end_byte": 116,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 117,
                      "end_byte": 118,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 119,
                  "end_byte": 460,
                  "text": "{ scanf ( \"%d %d\" , & num1 , & num2 ) ; minmultiple = ( num1 > num2 ) ? num1 : num2 ; while ( 1 ) { if ( minmultiple % num1 == 0 && minmultiple % num2 == 0 ) { lcm = minmultiple ; break ; } ++ minmultiple ; } for ( i = 1 ; i <= num1 && i <= num2 ; ++ i ) { if ( num1 % i == 0 && num2 % i == 0 ) gcd = i ; } printf ( \"%d %d\" , gcd , lcm ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 119,
                      "end_byte": 120,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 121,
                      "end_byte": 158,
                      "text": "scanf ( \"%d %d\" , & num1 , & num2 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 121,
                          "end_byte": 156,
                          "text": "scanf ( \"%d %d\" , & num1 , & num2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 121,
                              "end_byte": 126,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 127,
                              "end_byte": 156,
                              "text": "( \"%d %d\" , & num1 , & num2 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 127,
                                  "end_byte": 128,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 129,
                                  "end_byte": 136,
                                  "text": "\"%d %d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 129,
                                      "end_byte": 130,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 130,
                                      "end_byte": 135,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 135,
                                      "end_byte": 136,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 137,
                                  "end_byte": 138,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 139,
                                  "end_byte": 145,
                                  "text": "& num1",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 139,
                                      "end_byte": 140,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 141,
                                      "end_byte": 145,
                                      "text": "num1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 146,
                                  "end_byte": 147,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 148,
                                  "end_byte": 154,
                                  "text": "& num2",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 148,
                                      "end_byte": 149,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 150,
                                      "end_byte": 154,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 155,
                                  "end_byte": 156,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 157,
                          "end_byte": 158,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 159,
                      "end_byte": 204,
                      "text": "minmultiple = ( num1 > num2 ) ? num1 : num2 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 159,
                          "end_byte": 202,
                          "text": "minmultiple = ( num1 > num2 ) ? num1 : num2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 159,
                              "end_byte": 170,
                              "text": "minmultiple",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 171,
                              "end_byte": 172,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "conditional_expression",
                              "start_byte": 173,
                              "end_byte": 202,
                              "text": "( num1 > num2 ) ? num1 : num2",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 173,
                                  "end_byte": 188,
                                  "text": "( num1 > num2 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 173,
                                      "end_byte": 174,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 175,
                                      "end_byte": 186,
                                      "text": "num1 > num2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 175,
                                          "end_byte": 179,
                                          "text": "num1",
                                          "children": []
                                        },
                                        {
                                          "type": ">",
                                          "start_byte": 180,
                                          "end_byte": 181,
                                          "text": ">",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 182,
                                          "end_byte": 186,
                                          "text": "num2",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 187,
                                      "end_byte": 188,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "?",
                                  "start_byte": 189,
                                  "end_byte": 190,
                                  "text": "?",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 191,
                                  "end_byte": 195,
                                  "text": "num1",
                                  "children": []
                                },
                                {
                                  "type": ":",
                                  "start_byte": 196,
                                  "end_byte": 197,
                                  "text": ":",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 198,
                                  "end_byte": 202,
                                  "text": "num2",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 203,
                          "end_byte": 204,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 205,
                      "end_byte": 327,
                      "text": "while ( 1 ) { if ( minmultiple % num1 == 0 && minmultiple % num2 == 0 ) { lcm = minmultiple ; break ; } ++ minmultiple ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 205,
                          "end_byte": 210,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 211,
                          "end_byte": 216,
                          "text": "( 1 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 211,
                              "end_byte": 212,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 213,
                              "end_byte": 214,
                              "text": "1",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 215,
                              "end_byte": 216,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 217,
                          "end_byte": 327,
                          "text": "{ if ( minmultiple % num1 == 0 && minmultiple % num2 == 0 ) { lcm = minmultiple ; break ; } ++ minmultiple ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 217,
                              "end_byte": 218,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 219,
                              "end_byte": 308,
                              "text": "if ( minmultiple % num1 == 0 && minmultiple % num2 == 0 ) { lcm = minmultiple ; break ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 219,
                                  "end_byte": 221,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 222,
                                  "end_byte": 276,
                                  "text": "( minmultiple % num1 == 0 && minmultiple % num2 == 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 222,
                                      "end_byte": 223,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 224,
                                      "end_byte": 274,
                                      "text": "minmultiple % num1 == 0 && minmultiple % num2 == 0",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 224,
                                          "end_byte": 247,
                                          "text": "minmultiple % num1 == 0",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 224,
                                              "end_byte": 242,
                                              "text": "minmultiple % num1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 224,
                                                  "end_byte": 235,
                                                  "text": "minmultiple",
                                                  "children": []
                                                },
                                                {
                                                  "type": "%",
                                                  "start_byte": 236,
                                                  "end_byte": 237,
                                                  "text": "%",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 238,
                                                  "end_byte": 242,
                                                  "text": "num1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "==",
                                              "start_byte": 243,
                                              "end_byte": 245,
                                              "text": "==",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 246,
                                              "end_byte": 247,
                                              "text": "0",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "&&",
                                          "start_byte": 248,
                                          "end_byte": 250,
                                          "text": "&&",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 251,
                                          "end_byte": 274,
                                          "text": "minmultiple % num2 == 0",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 251,
                                              "end_byte": 269,
                                              "text": "minmultiple % num2",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 251,
                                                  "end_byte": 262,
                                                  "text": "minmultiple",
                                                  "children": []
                                                },
                                                {
                                                  "type": "%",
                                                  "start_byte": 263,
                                                  "end_byte": 264,
                                                  "text": "%",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 265,
                                                  "end_byte": 269,
                                                  "text": "num2",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "==",
                                              "start_byte": 270,
                                              "end_byte": 272,
                                              "text": "==",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 273,
                                              "end_byte": 274,
                                              "text": "0",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 275,
                                      "end_byte": 276,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 277,
                                  "end_byte": 308,
                                  "text": "{ lcm = minmultiple ; break ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 277,
                                      "end_byte": 278,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 279,
                                      "end_byte": 298,
                                      "text": "lcm = minmultiple ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 279,
                                          "end_byte": 296,
                                          "text": "lcm = minmultiple",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 279,
                                              "end_byte": 282,
                                              "text": "lcm",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 283,
                                              "end_byte": 284,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 285,
                                              "end_byte": 296,
                                              "text": "minmultiple",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 297,
                                          "end_byte": 298,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "break_statement",
                                      "start_byte": 299,
                                      "end_byte": 306,
                                      "text": "break ;",
                                      "children": [
                                        {
                                          "type": "break",
                                          "start_byte": 299,
                                          "end_byte": 304,
                                          "text": "break",
                                          "children": []
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 305,
                                          "end_byte": 306,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 307,
                                      "end_byte": 308,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 309,
                              "end_byte": 325,
                              "text": "++ minmultiple ;",
                              "children": [
                                {
                                  "type": "update_expression",
                                  "start_byte": 309,
                                  "end_byte": 323,
                                  "text": "++ minmultiple",
                                  "children": [
                                    {
                                      "type": "++",
                                      "start_byte": 309,
                                      "end_byte": 311,
                                      "text": "++",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 312,
                                      "end_byte": 323,
                                      "text": "minmultiple",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 324,
                                  "end_byte": 325,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 326,
                              "end_byte": 327,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 328,
                      "end_byte": 425,
                      "text": "for ( i = 1 ; i <= num1 && i <= num2 ; ++ i ) { if ( num1 % i == 0 && num2 % i == 0 ) gcd = i ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 328,
                          "end_byte": 331,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 332,
                          "end_byte": 333,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 334,
                          "end_byte": 339,
                          "text": "i = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 334,
                              "end_byte": 335,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 336,
                              "end_byte": 337,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 338,
                              "end_byte": 339,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 340,
                          "end_byte": 341,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 342,
                          "end_byte": 364,
                          "text": "i <= num1 && i <= num2",
                          "children": [
                            {
                              "type": "binary_expression",
                              "start_byte": 342,
                              "end_byte": 351,
                              "text": "i <= num1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 342,
                                  "end_byte": 343,
                                  "text": "i",
                                  "children": []
                                },
                                {
                                  "type": "<=",
                                  "start_byte": 344,
                                  "end_byte": 346,
                                  "text": "<=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 347,
                                  "end_byte": 351,
                                  "text": "num1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "&&",
                              "start_byte": 352,
                              "end_byte": 354,
                              "text": "&&",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 355,
                              "end_byte": 364,
                              "text": "i <= num2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 355,
                                  "end_byte": 356,
                                  "text": "i",
                                  "children": []
                                },
                                {
                                  "type": "<=",
                                  "start_byte": 357,
                                  "end_byte": 359,
                                  "text": "<=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 360,
                                  "end_byte": 364,
                                  "text": "num2",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 365,
                          "end_byte": 366,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 367,
                          "end_byte": 371,
                          "text": "++ i",
                          "children": [
                            {
                              "type": "++",
                              "start_byte": 367,
                              "end_byte": 369,
                              "text": "++",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 370,
                              "end_byte": 371,
                              "text": "i",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 372,
                          "end_byte": 373,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 374,
                          "end_byte": 425,
                          "text": "{ if ( num1 % i == 0 && num2 % i == 0 ) gcd = i ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 374,
                              "end_byte": 375,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 376,
                              "end_byte": 423,
                              "text": "if ( num1 % i == 0 && num2 % i == 0 ) gcd = i ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 376,
                                  "end_byte": 378,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 379,
                                  "end_byte": 413,
                                  "text": "( num1 % i == 0 && num2 % i == 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 379,
                                      "end_byte": 380,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 381,
                                      "end_byte": 411,
                                      "text": "num1 % i == 0 && num2 % i == 0",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 381,
                                          "end_byte": 394,
                                          "text": "num1 % i == 0",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 381,
                                              "end_byte": 389,
                                              "text": "num1 % i",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 381,
                                                  "end_byte": 385,
                                                  "text": "num1",
                                                  "children": []
                                                },
                                                {
                                                  "type": "%",
                                                  "start_byte": 386,
                                                  "end_byte": 387,
                                                  "text": "%",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 388,
                                                  "end_byte": 389,
                                                  "text": "i",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "==",
                                              "start_byte": 390,
                                              "end_byte": 392,
                                              "text": "==",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 393,
                                              "end_byte": 394,
                                              "text": "0",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "&&",
                                          "start_byte": 395,
                                          "end_byte": 397,
                                          "text": "&&",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 398,
                                          "end_byte": 411,
                                          "text": "num2 % i == 0",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 398,
                                              "end_byte": 406,
                                              "text": "num2 % i",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 398,
                                                  "end_byte": 402,
                                                  "text": "num2",
                                                  "children": []
                                                },
                                                {
                                                  "type": "%",
                                                  "start_byte": 403,
                                                  "end_byte": 404,
                                                  "text": "%",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 405,
                                                  "end_byte": 406,
                                                  "text": "i",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "==",
                                              "start_byte": 407,
                                              "end_byte": 409,
                                              "text": "==",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 410,
                                              "end_byte": 411,
                                              "text": "0",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 412,
                                      "end_byte": 413,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 414,
                                  "end_byte": 423,
                                  "text": "gcd = i ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 414,
                                      "end_byte": 421,
                                      "text": "gcd = i",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 414,
                                          "end_byte": 417,
                                          "text": "gcd",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 418,
                                          "end_byte": 419,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 420,
                                          "end_byte": 421,
                                          "text": "i",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 422,
                                      "end_byte": 423,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 424,
                              "end_byte": 425,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 426,
                      "end_byte": 458,
                      "text": "printf ( \"%d %d\" , gcd , lcm ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 426,
                          "end_byte": 456,
                          "text": "printf ( \"%d %d\" , gcd , lcm )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 426,
                              "end_byte": 432,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 433,
                              "end_byte": 456,
                              "text": "( \"%d %d\" , gcd , lcm )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 433,
                                  "end_byte": 434,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 435,
                                  "end_byte": 442,
                                  "text": "\"%d %d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 435,
                                      "end_byte": 436,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 436,
                                      "end_byte": 441,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 441,
                                      "end_byte": 442,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 443,
                                  "end_byte": 444,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 445,
                                  "end_byte": 448,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 449,
                                  "end_byte": 450,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 451,
                                  "end_byte": 454,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 455,
                                  "end_byte": 456,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 457,
                          "end_byte": 458,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 459,
                      "end_byte": 460,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 461,
              "end_byte": 462,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}