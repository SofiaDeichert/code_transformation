{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 425,
  "text": "int GetGCDLCM ( int , int ) ; int main ( ) { int x , y , GCD , LCM ; printf ( \"Enter Two Numbers:\\n\" ) ; scanf ( \"%d\\t %d\" , & x , & y ) ; GCD = GetGCDLCM ( x , y ) ; LCM = ( ( x * y ) / GCD ) ; printf ( \"GCD & LCM of two numbers is %d\\t %d\" , GCD , LCM ) ; return 0 ; } int GetGCDLCM ( int n1 , int n2 ) { int i , gcd ; for ( i = 1 ; i <= n1 && i <= n2 ; ++ i ) { if ( n1 % i == 0 && n2 % i == 0 ) gcd = i ; } return gcd ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 29,
      "text": "int GetGCDLCM ( int , int ) ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 27,
          "text": "GetGCDLCM ( int , int )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 13,
              "text": "GetGCDLCM",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 14,
              "end_byte": 27,
              "text": "( int , int )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 14,
                  "end_byte": 15,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 16,
                  "end_byte": 19,
                  "text": "int",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 16,
                      "end_byte": 19,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 20,
                  "end_byte": 21,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 22,
                  "end_byte": 25,
                  "text": "int",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 22,
                      "end_byte": 25,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 26,
                  "end_byte": 27,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 28,
          "end_byte": 29,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 30,
      "end_byte": 270,
      "text": "int main ( ) { int x , y , GCD , LCM ; printf ( \"Enter Two Numbers:\\n\" ) ; scanf ( \"%d\\t %d\" , & x , & y ) ; GCD = GetGCDLCM ( x , y ) ; LCM = ( ( x * y ) / GCD ) ; printf ( \"GCD & LCM of two numbers is %d\\t %d\" , GCD , LCM ) ; return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 30,
          "end_byte": 33,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 34,
          "end_byte": 42,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 34,
              "end_byte": 38,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 39,
              "end_byte": 42,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 39,
                  "end_byte": 40,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 41,
                  "end_byte": 42,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 43,
          "end_byte": 270,
          "text": "{ int x , y , GCD , LCM ; printf ( \"Enter Two Numbers:\\n\" ) ; scanf ( \"%d\\t %d\" , & x , & y ) ; GCD = GetGCDLCM ( x , y ) ; LCM = ( ( x * y ) / GCD ) ; printf ( \"GCD & LCM of two numbers is %d\\t %d\" , GCD , LCM ) ; return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 43,
              "end_byte": 44,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 45,
              "end_byte": 68,
              "text": "int x , y , GCD , LCM ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 45,
                  "end_byte": 48,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 49,
                  "end_byte": 50,
                  "text": "x",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 51,
                  "end_byte": 52,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 53,
                  "end_byte": 54,
                  "text": "y",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 55,
                  "end_byte": 56,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 57,
                  "end_byte": 60,
                  "text": "GCD",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 61,
                  "end_byte": 62,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 63,
                  "end_byte": 66,
                  "text": "LCM",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 67,
                  "end_byte": 68,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 69,
              "end_byte": 104,
              "text": "printf ( \"Enter Two Numbers:\\n\" ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 69,
                  "end_byte": 102,
                  "text": "printf ( \"Enter Two Numbers:\\n\" )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 69,
                      "end_byte": 75,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 76,
                      "end_byte": 102,
                      "text": "( \"Enter Two Numbers:\\n\" )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 76,
                          "end_byte": 77,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 78,
                          "end_byte": 100,
                          "text": "\"Enter Two Numbers:\\n\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 78,
                              "end_byte": 79,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 79,
                              "end_byte": 97,
                              "text": "Enter Two Numbers:",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 97,
                              "end_byte": 99,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 99,
                              "end_byte": 100,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 101,
                          "end_byte": 102,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 103,
                  "end_byte": 104,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 105,
              "end_byte": 138,
              "text": "scanf ( \"%d\\t %d\" , & x , & y ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 105,
                  "end_byte": 136,
                  "text": "scanf ( \"%d\\t %d\" , & x , & y )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 105,
                      "end_byte": 110,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 111,
                      "end_byte": 136,
                      "text": "( \"%d\\t %d\" , & x , & y )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 111,
                          "end_byte": 112,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 113,
                          "end_byte": 122,
                          "text": "\"%d\\t %d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 113,
                              "end_byte": 114,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 114,
                              "end_byte": 116,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 116,
                              "end_byte": 118,
                              "text": "\\t",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 118,
                              "end_byte": 121,
                              "text": " %d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 121,
                              "end_byte": 122,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 123,
                          "end_byte": 124,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 125,
                          "end_byte": 128,
                          "text": "& x",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 125,
                              "end_byte": 126,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 127,
                              "end_byte": 128,
                              "text": "x",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 129,
                          "end_byte": 130,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 131,
                          "end_byte": 134,
                          "text": "& y",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 131,
                              "end_byte": 132,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 133,
                              "end_byte": 134,
                              "text": "y",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 135,
                          "end_byte": 136,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 137,
                  "end_byte": 138,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 139,
              "end_byte": 166,
              "text": "GCD = GetGCDLCM ( x , y ) ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 139,
                  "end_byte": 164,
                  "text": "GCD = GetGCDLCM ( x , y )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 139,
                      "end_byte": 142,
                      "text": "GCD",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 143,
                      "end_byte": 144,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 145,
                      "end_byte": 164,
                      "text": "GetGCDLCM ( x , y )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 145,
                          "end_byte": 154,
                          "text": "GetGCDLCM",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 155,
                          "end_byte": 164,
                          "text": "( x , y )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 155,
                              "end_byte": 156,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 157,
                              "end_byte": 158,
                              "text": "x",
                              "children": []
                            },
                            {
                              "type": ",",
                              "start_byte": 159,
                              "end_byte": 160,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 161,
                              "end_byte": 162,
                              "text": "y",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 163,
                              "end_byte": 164,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 165,
                  "end_byte": 166,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 167,
              "end_byte": 194,
              "text": "LCM = ( ( x * y ) / GCD ) ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 167,
                  "end_byte": 192,
                  "text": "LCM = ( ( x * y ) / GCD )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 167,
                      "end_byte": 170,
                      "text": "LCM",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 171,
                      "end_byte": 172,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "parenthesized_expression",
                      "start_byte": 173,
                      "end_byte": 192,
                      "text": "( ( x * y ) / GCD )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 173,
                          "end_byte": 174,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 175,
                          "end_byte": 190,
                          "text": "( x * y ) / GCD",
                          "children": [
                            {
                              "type": "parenthesized_expression",
                              "start_byte": 175,
                              "end_byte": 184,
                              "text": "( x * y )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 175,
                                  "end_byte": 176,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 177,
                                  "end_byte": 182,
                                  "text": "x * y",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 177,
                                      "end_byte": 178,
                                      "text": "x",
                                      "children": []
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 179,
                                      "end_byte": 180,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 181,
                                      "end_byte": 182,
                                      "text": "y",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 183,
                                  "end_byte": 184,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "/",
                              "start_byte": 185,
                              "end_byte": 186,
                              "text": "/",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 187,
                              "end_byte": 190,
                              "text": "GCD",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 191,
                          "end_byte": 192,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 193,
                  "end_byte": 194,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 195,
              "end_byte": 257,
              "text": "printf ( \"GCD & LCM of two numbers is %d\\t %d\" , GCD , LCM ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 195,
                  "end_byte": 255,
                  "text": "printf ( \"GCD & LCM of two numbers is %d\\t %d\" , GCD , LCM )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 195,
                      "end_byte": 201,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 202,
                      "end_byte": 255,
                      "text": "( \"GCD & LCM of two numbers is %d\\t %d\" , GCD , LCM )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 202,
                          "end_byte": 203,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 204,
                          "end_byte": 241,
                          "text": "\"GCD & LCM of two numbers is %d\\t %d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 204,
                              "end_byte": 205,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 205,
                              "end_byte": 235,
                              "text": "GCD & LCM of two numbers is %d",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 235,
                              "end_byte": 237,
                              "text": "\\t",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 237,
                              "end_byte": 240,
                              "text": " %d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 240,
                              "end_byte": 241,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 242,
                          "end_byte": 243,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 244,
                          "end_byte": 247,
                          "text": "GCD",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 248,
                          "end_byte": 249,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 250,
                          "end_byte": 253,
                          "text": "LCM",
                          "children": []
                        },
                        {
                          "type": ")",
                          "start_byte": 254,
                          "end_byte": 255,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 256,
                  "end_byte": 257,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 258,
              "end_byte": 268,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 258,
                  "end_byte": 264,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 265,
                  "end_byte": 266,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 267,
                  "end_byte": 268,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 269,
              "end_byte": 270,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 271,
      "end_byte": 425,
      "text": "int GetGCDLCM ( int n1 , int n2 ) { int i , gcd ; for ( i = 1 ; i <= n1 && i <= n2 ; ++ i ) { if ( n1 % i == 0 && n2 % i == 0 ) gcd = i ; } return gcd ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 271,
          "end_byte": 274,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 275,
          "end_byte": 304,
          "text": "GetGCDLCM ( int n1 , int n2 )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 275,
              "end_byte": 284,
              "text": "GetGCDLCM",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 285,
              "end_byte": 304,
              "text": "( int n1 , int n2 )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 285,
                  "end_byte": 286,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 287,
                  "end_byte": 293,
                  "text": "int n1",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 287,
                      "end_byte": 290,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 291,
                      "end_byte": 293,
                      "text": "n1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 294,
                  "end_byte": 295,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 296,
                  "end_byte": 302,
                  "text": "int n2",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 296,
                      "end_byte": 299,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 300,
                      "end_byte": 302,
                      "text": "n2",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 303,
                  "end_byte": 304,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 305,
          "end_byte": 425,
          "text": "{ int i , gcd ; for ( i = 1 ; i <= n1 && i <= n2 ; ++ i ) { if ( n1 % i == 0 && n2 % i == 0 ) gcd = i ; } return gcd ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 305,
              "end_byte": 306,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 307,
              "end_byte": 320,
              "text": "int i , gcd ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 307,
                  "end_byte": 310,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 311,
                  "end_byte": 312,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 313,
                  "end_byte": 314,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 315,
                  "end_byte": 318,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 319,
                  "end_byte": 320,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 321,
              "end_byte": 410,
              "text": "for ( i = 1 ; i <= n1 && i <= n2 ; ++ i ) { if ( n1 % i == 0 && n2 % i == 0 ) gcd = i ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 321,
                  "end_byte": 324,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 325,
                  "end_byte": 326,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 327,
                  "end_byte": 332,
                  "text": "i = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 327,
                      "end_byte": 328,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 329,
                      "end_byte": 330,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 331,
                      "end_byte": 332,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 333,
                  "end_byte": 334,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 335,
                  "end_byte": 353,
                  "text": "i <= n1 && i <= n2",
                  "children": [
                    {
                      "type": "binary_expression",
                      "start_byte": 335,
                      "end_byte": 342,
                      "text": "i <= n1",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 335,
                          "end_byte": 336,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": "<=",
                          "start_byte": 337,
                          "end_byte": 339,
                          "text": "<=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 340,
                          "end_byte": 342,
                          "text": "n1",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "&&",
                      "start_byte": 343,
                      "end_byte": 345,
                      "text": "&&",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 346,
                      "end_byte": 353,
                      "text": "i <= n2",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 346,
                          "end_byte": 347,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": "<=",
                          "start_byte": 348,
                          "end_byte": 350,
                          "text": "<=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 351,
                          "end_byte": 353,
                          "text": "n2",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 354,
                  "end_byte": 355,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 356,
                  "end_byte": 360,
                  "text": "++ i",
                  "children": [
                    {
                      "type": "++",
                      "start_byte": 356,
                      "end_byte": 358,
                      "text": "++",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 359,
                      "end_byte": 360,
                      "text": "i",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 361,
                  "end_byte": 362,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 363,
                  "end_byte": 410,
                  "text": "{ if ( n1 % i == 0 && n2 % i == 0 ) gcd = i ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 363,
                      "end_byte": 364,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 365,
                      "end_byte": 408,
                      "text": "if ( n1 % i == 0 && n2 % i == 0 ) gcd = i ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 365,
                          "end_byte": 367,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 368,
                          "end_byte": 398,
                          "text": "( n1 % i == 0 && n2 % i == 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 368,
                              "end_byte": 369,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 370,
                              "end_byte": 396,
                              "text": "n1 % i == 0 && n2 % i == 0",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 370,
                                  "end_byte": 381,
                                  "text": "n1 % i == 0",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 370,
                                      "end_byte": 376,
                                      "text": "n1 % i",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 370,
                                          "end_byte": 372,
                                          "text": "n1",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 373,
                                          "end_byte": 374,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 375,
                                          "end_byte": 376,
                                          "text": "i",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "==",
                                      "start_byte": 377,
                                      "end_byte": 379,
                                      "text": "==",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 380,
                                      "end_byte": 381,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "&&",
                                  "start_byte": 382,
                                  "end_byte": 384,
                                  "text": "&&",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 385,
                                  "end_byte": 396,
                                  "text": "n2 % i == 0",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 385,
                                      "end_byte": 391,
                                      "text": "n2 % i",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 385,
                                          "end_byte": 387,
                                          "text": "n2",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 388,
                                          "end_byte": 389,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 390,
                                          "end_byte": 391,
                                          "text": "i",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "==",
                                      "start_byte": 392,
                                      "end_byte": 394,
                                      "text": "==",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 395,
                                      "end_byte": 396,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 397,
                              "end_byte": 398,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 399,
                          "end_byte": 408,
                          "text": "gcd = i ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 399,
                              "end_byte": 406,
                              "text": "gcd = i",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 399,
                                  "end_byte": 402,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 403,
                                  "end_byte": 404,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 405,
                                  "end_byte": 406,
                                  "text": "i",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 407,
                              "end_byte": 408,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 409,
                      "end_byte": 410,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 411,
              "end_byte": 423,
              "text": "return gcd ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 411,
                  "end_byte": 417,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 418,
                  "end_byte": 421,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 422,
                  "end_byte": 423,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 424,
              "end_byte": 425,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}