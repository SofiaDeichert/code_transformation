{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 800,
  "text": "long int max ( long int , long int ) ; int main ( ) { long int val [ 100 ] , calc [ 100 ] = { 0 } , i , j , k , sum , n , size ; scanf ( \"%ld\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%ld\" , & size ) ; for ( j = 0 ; j < 100 ; j ++ ) calc [ j ] = 0 ; for ( j = 0 ; j < size ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%ld\" , & val [ k ] ) ; } for ( k = j ; k >= 0 ; k -- ) { if ( k == 0 ) calc [ k ] = val [ k ] + calc [ k ] ; else if ( k == j ) calc [ k ] = val [ k ] + calc [ k - 1 ] ; else calc [ k ] = val [ k ] + max ( calc [ k ] , calc [ k - 1 ] ) ; } } sum = calc [ 0 ] ; for ( k = 0 ; k < size ; k ++ ) { if ( calc [ k ] > sum ) sum = calc [ k ] ; } printf ( \"%ld\\n\" , sum ) ; } return 0 ; } long int max ( long int a , long int b ) { if ( a > b ) return a ; else return b ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 38,
      "text": "long int max ( long int , long int ) ;",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 0,
          "end_byte": 8,
          "text": "long int",
          "children": [
            {
              "type": "long",
              "start_byte": 0,
              "end_byte": 4,
              "text": "long",
              "children": []
            },
            {
              "type": "primitive_type",
              "start_byte": 5,
              "end_byte": 8,
              "text": "int",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 9,
          "end_byte": 36,
          "text": "max ( long int , long int )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 9,
              "end_byte": 12,
              "text": "max",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 13,
              "end_byte": 36,
              "text": "( long int , long int )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 13,
                  "end_byte": 14,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 15,
                  "end_byte": 23,
                  "text": "long int",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 15,
                      "end_byte": 23,
                      "text": "long int",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 15,
                          "end_byte": 19,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "primitive_type",
                          "start_byte": 20,
                          "end_byte": 23,
                          "text": "int",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 24,
                  "end_byte": 25,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 26,
                  "end_byte": 34,
                  "text": "long int",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 26,
                      "end_byte": 34,
                      "text": "long int",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 26,
                          "end_byte": 30,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "primitive_type",
                          "start_byte": 31,
                          "end_byte": 34,
                          "text": "int",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 35,
                  "end_byte": 36,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 37,
          "end_byte": 38,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 39,
      "end_byte": 715,
      "text": "int main ( ) { long int val [ 100 ] , calc [ 100 ] = { 0 } , i , j , k , sum , n , size ; scanf ( \"%ld\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%ld\" , & size ) ; for ( j = 0 ; j < 100 ; j ++ ) calc [ j ] = 0 ; for ( j = 0 ; j < size ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%ld\" , & val [ k ] ) ; } for ( k = j ; k >= 0 ; k -- ) { if ( k == 0 ) calc [ k ] = val [ k ] + calc [ k ] ; else if ( k == j ) calc [ k ] = val [ k ] + calc [ k - 1 ] ; else calc [ k ] = val [ k ] + max ( calc [ k ] , calc [ k - 1 ] ) ; } } sum = calc [ 0 ] ; for ( k = 0 ; k < size ; k ++ ) { if ( calc [ k ] > sum ) sum = calc [ k ] ; } printf ( \"%ld\\n\" , sum ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 39,
          "end_byte": 42,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 43,
          "end_byte": 51,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 43,
              "end_byte": 47,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 48,
              "end_byte": 51,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 48,
                  "end_byte": 49,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 50,
                  "end_byte": 51,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 52,
          "end_byte": 715,
          "text": "{ long int val [ 100 ] , calc [ 100 ] = { 0 } , i , j , k , sum , n , size ; scanf ( \"%ld\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%ld\" , & size ) ; for ( j = 0 ; j < 100 ; j ++ ) calc [ j ] = 0 ; for ( j = 0 ; j < size ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%ld\" , & val [ k ] ) ; } for ( k = j ; k >= 0 ; k -- ) { if ( k == 0 ) calc [ k ] = val [ k ] + calc [ k ] ; else if ( k == j ) calc [ k ] = val [ k ] + calc [ k - 1 ] ; else calc [ k ] = val [ k ] + max ( calc [ k ] , calc [ k - 1 ] ) ; } } sum = calc [ 0 ] ; for ( k = 0 ; k < size ; k ++ ) { if ( calc [ k ] > sum ) sum = calc [ k ] ; } printf ( \"%ld\\n\" , sum ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 52,
              "end_byte": 53,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 54,
              "end_byte": 128,
              "text": "long int val [ 100 ] , calc [ 100 ] = { 0 } , i , j , k , sum , n , size ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 54,
                  "end_byte": 62,
                  "text": "long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 54,
                      "end_byte": 58,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 59,
                      "end_byte": 62,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "array_declarator",
                  "start_byte": 63,
                  "end_byte": 74,
                  "text": "val [ 100 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 63,
                      "end_byte": 66,
                      "text": "val",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 67,
                      "end_byte": 68,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 69,
                      "end_byte": 72,
                      "text": "100",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 73,
                      "end_byte": 74,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 75,
                  "end_byte": 76,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 77,
                  "end_byte": 97,
                  "text": "calc [ 100 ] = { 0 }",
                  "children": [
                    {
                      "type": "array_declarator",
                      "start_byte": 77,
                      "end_byte": 89,
                      "text": "calc [ 100 ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 77,
                          "end_byte": 81,
                          "text": "calc",
                          "children": []
                        },
                        {
                          "type": "[",
                          "start_byte": 82,
                          "end_byte": 83,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 84,
                          "end_byte": 87,
                          "text": "100",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 88,
                          "end_byte": 89,
                          "text": "]",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start_byte": 90,
                      "end_byte": 91,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "initializer_list",
                      "start_byte": 92,
                      "end_byte": 97,
                      "text": "{ 0 }",
                      "children": [
                        {
                          "type": "{",
                          "start_byte": 92,
                          "end_byte": 93,
                          "text": "{",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 94,
                          "end_byte": 95,
                          "text": "0",
                          "children": []
                        },
                        {
                          "type": "}",
                          "start_byte": 96,
                          "end_byte": 97,
                          "text": "}",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 98,
                  "end_byte": 99,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 100,
                  "end_byte": 101,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 102,
                  "end_byte": 103,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 104,
                  "end_byte": 105,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 106,
                  "end_byte": 107,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 108,
                  "end_byte": 109,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 110,
                  "end_byte": 111,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 112,
                  "end_byte": 115,
                  "text": "sum",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 116,
                  "end_byte": 117,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 118,
                  "end_byte": 119,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 120,
                  "end_byte": 121,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 122,
                  "end_byte": 126,
                  "text": "size",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 127,
                  "end_byte": 128,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 129,
              "end_byte": 152,
              "text": "scanf ( \"%ld\" , & n ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 129,
                  "end_byte": 150,
                  "text": "scanf ( \"%ld\" , & n )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 129,
                      "end_byte": 134,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 135,
                      "end_byte": 150,
                      "text": "( \"%ld\" , & n )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 135,
                          "end_byte": 136,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 137,
                          "end_byte": 142,
                          "text": "\"%ld\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 137,
                              "end_byte": 138,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 138,
                              "end_byte": 141,
                              "text": "%ld",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 141,
                              "end_byte": 142,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 143,
                          "end_byte": 144,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 145,
                          "end_byte": 148,
                          "text": "& n",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 145,
                              "end_byte": 146,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 147,
                              "end_byte": 148,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 149,
                          "end_byte": 150,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 151,
                  "end_byte": 152,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 153,
              "end_byte": 702,
              "text": "for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%ld\" , & size ) ; for ( j = 0 ; j < 100 ; j ++ ) calc [ j ] = 0 ; for ( j = 0 ; j < size ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%ld\" , & val [ k ] ) ; } for ( k = j ; k >= 0 ; k -- ) { if ( k == 0 ) calc [ k ] = val [ k ] + calc [ k ] ; else if ( k == j ) calc [ k ] = val [ k ] + calc [ k - 1 ] ; else calc [ k ] = val [ k ] + max ( calc [ k ] , calc [ k - 1 ] ) ; } } sum = calc [ 0 ] ; for ( k = 0 ; k < size ; k ++ ) { if ( calc [ k ] > sum ) sum = calc [ k ] ; } printf ( \"%ld\\n\" , sum ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 153,
                  "end_byte": 156,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 157,
                  "end_byte": 158,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 159,
                  "end_byte": 164,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 159,
                      "end_byte": 160,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 161,
                      "end_byte": 162,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 163,
                      "end_byte": 164,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 165,
                  "end_byte": 166,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 167,
                  "end_byte": 172,
                  "text": "i < n",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 167,
                      "end_byte": 168,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 169,
                      "end_byte": 170,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 171,
                      "end_byte": 172,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 173,
                  "end_byte": 174,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 175,
                  "end_byte": 179,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 175,
                      "end_byte": 176,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 177,
                      "end_byte": 179,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 180,
                  "end_byte": 181,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 182,
                  "end_byte": 702,
                  "text": "{ scanf ( \"%ld\" , & size ) ; for ( j = 0 ; j < 100 ; j ++ ) calc [ j ] = 0 ; for ( j = 0 ; j < size ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%ld\" , & val [ k ] ) ; } for ( k = j ; k >= 0 ; k -- ) { if ( k == 0 ) calc [ k ] = val [ k ] + calc [ k ] ; else if ( k == j ) calc [ k ] = val [ k ] + calc [ k - 1 ] ; else calc [ k ] = val [ k ] + max ( calc [ k ] , calc [ k - 1 ] ) ; } } sum = calc [ 0 ] ; for ( k = 0 ; k < size ; k ++ ) { if ( calc [ k ] > sum ) sum = calc [ k ] ; } printf ( \"%ld\\n\" , sum ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 182,
                      "end_byte": 183,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 184,
                      "end_byte": 210,
                      "text": "scanf ( \"%ld\" , & size ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 184,
                          "end_byte": 208,
                          "text": "scanf ( \"%ld\" , & size )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 184,
                              "end_byte": 189,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 190,
                              "end_byte": 208,
                              "text": "( \"%ld\" , & size )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 190,
                                  "end_byte": 191,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 192,
                                  "end_byte": 197,
                                  "text": "\"%ld\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 192,
                                      "end_byte": 193,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 193,
                                      "end_byte": 196,
                                      "text": "%ld",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 196,
                                      "end_byte": 197,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 198,
                                  "end_byte": 199,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 200,
                                  "end_byte": 206,
                                  "text": "& size",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 200,
                                      "end_byte": 201,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 202,
                                      "end_byte": 206,
                                      "text": "size",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 207,
                                  "end_byte": 208,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 209,
                          "end_byte": 210,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 211,
                      "end_byte": 258,
                      "text": "for ( j = 0 ; j < 100 ; j ++ ) calc [ j ] = 0 ;",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 211,
                          "end_byte": 214,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 215,
                          "end_byte": 216,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 217,
                          "end_byte": 222,
                          "text": "j = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 217,
                              "end_byte": 218,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 219,
                              "end_byte": 220,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 221,
                              "end_byte": 222,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 223,
                          "end_byte": 224,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 225,
                          "end_byte": 232,
                          "text": "j < 100",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 225,
                              "end_byte": 226,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 227,
                              "end_byte": 228,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 229,
                              "end_byte": 232,
                              "text": "100",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 233,
                          "end_byte": 234,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 235,
                          "end_byte": 239,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 235,
                              "end_byte": 236,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 237,
                              "end_byte": 239,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 240,
                          "end_byte": 241,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 242,
                          "end_byte": 258,
                          "text": "calc [ j ] = 0 ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 242,
                              "end_byte": 256,
                              "text": "calc [ j ] = 0",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 242,
                                  "end_byte": 252,
                                  "text": "calc [ j ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 242,
                                      "end_byte": 246,
                                      "text": "calc",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 247,
                                      "end_byte": 252,
                                      "text": "[ j ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 247,
                                          "end_byte": 248,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 249,
                                          "end_byte": 250,
                                          "text": "j",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 251,
                                          "end_byte": 252,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "=",
                                  "start_byte": 253,
                                  "end_byte": 254,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 255,
                                  "end_byte": 256,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 257,
                              "end_byte": 258,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 259,
                      "end_byte": 575,
                      "text": "for ( j = 0 ; j < size ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%ld\" , & val [ k ] ) ; } for ( k = j ; k >= 0 ; k -- ) { if ( k == 0 ) calc [ k ] = val [ k ] + calc [ k ] ; else if ( k == j ) calc [ k ] = val [ k ] + calc [ k - 1 ] ; else calc [ k ] = val [ k ] + max ( calc [ k ] , calc [ k - 1 ] ) ; } }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 259,
                          "end_byte": 262,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 263,
                          "end_byte": 264,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 265,
                          "end_byte": 270,
                          "text": "j = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 265,
                              "end_byte": 266,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 267,
                              "end_byte": 268,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 269,
                              "end_byte": 270,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 271,
                          "end_byte": 272,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 273,
                          "end_byte": 281,
                          "text": "j < size",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 273,
                              "end_byte": 274,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 275,
                              "end_byte": 276,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 277,
                              "end_byte": 281,
                              "text": "size",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 282,
                          "end_byte": 283,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 284,
                          "end_byte": 288,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 284,
                              "end_byte": 285,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 286,
                              "end_byte": 288,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 289,
                          "end_byte": 290,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 291,
                          "end_byte": 575,
                          "text": "{ for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%ld\" , & val [ k ] ) ; } for ( k = j ; k >= 0 ; k -- ) { if ( k == 0 ) calc [ k ] = val [ k ] + calc [ k ] ; else if ( k == j ) calc [ k ] = val [ k ] + calc [ k - 1 ] ; else calc [ k ] = val [ k ] + max ( calc [ k ] , calc [ k - 1 ] ) ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 291,
                              "end_byte": 292,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 293,
                              "end_byte": 358,
                              "text": "for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%ld\" , & val [ k ] ) ; }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 293,
                                  "end_byte": 296,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 297,
                                  "end_byte": 298,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 299,
                                  "end_byte": 304,
                                  "text": "k = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 299,
                                      "end_byte": 300,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 301,
                                      "end_byte": 302,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 303,
                                      "end_byte": 304,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 305,
                                  "end_byte": 306,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 307,
                                  "end_byte": 313,
                                  "text": "k <= j",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 307,
                                      "end_byte": 308,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "<=",
                                      "start_byte": 309,
                                      "end_byte": 311,
                                      "text": "<=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 312,
                                      "end_byte": 313,
                                      "text": "j",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 314,
                                  "end_byte": 315,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 316,
                                  "end_byte": 320,
                                  "text": "k ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 316,
                                      "end_byte": 317,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 318,
                                      "end_byte": 320,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 321,
                                  "end_byte": 322,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 323,
                                  "end_byte": 358,
                                  "text": "{ scanf ( \"%ld\" , & val [ k ] ) ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 323,
                                      "end_byte": 324,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 325,
                                      "end_byte": 356,
                                      "text": "scanf ( \"%ld\" , & val [ k ] ) ;",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start_byte": 325,
                                          "end_byte": 354,
                                          "text": "scanf ( \"%ld\" , & val [ k ] )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 325,
                                              "end_byte": 330,
                                              "text": "scanf",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 331,
                                              "end_byte": 354,
                                              "text": "( \"%ld\" , & val [ k ] )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 331,
                                                  "end_byte": 332,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_literal",
                                                  "start_byte": 333,
                                                  "end_byte": 338,
                                                  "text": "\"%ld\"",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 333,
                                                      "end_byte": 334,
                                                      "text": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start_byte": 334,
                                                      "end_byte": 337,
                                                      "text": "%ld",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 337,
                                                      "end_byte": 338,
                                                      "text": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 339,
                                                  "end_byte": 340,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "pointer_expression",
                                                  "start_byte": 341,
                                                  "end_byte": 352,
                                                  "text": "& val [ k ]",
                                                  "children": [
                                                    {
                                                      "type": "&",
                                                      "start_byte": 341,
                                                      "end_byte": 342,
                                                      "text": "&",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 343,
                                                      "end_byte": 352,
                                                      "text": "val [ k ]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 343,
                                                          "end_byte": 346,
                                                          "text": "val",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 347,
                                                          "end_byte": 352,
                                                          "text": "[ k ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 347,
                                                              "end_byte": 348,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 349,
                                                              "end_byte": 350,
                                                              "text": "k",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 351,
                                                              "end_byte": 352,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 353,
                                                  "end_byte": 354,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 355,
                                          "end_byte": 356,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 357,
                                      "end_byte": 358,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 359,
                              "end_byte": 573,
                              "text": "for ( k = j ; k >= 0 ; k -- ) { if ( k == 0 ) calc [ k ] = val [ k ] + calc [ k ] ; else if ( k == j ) calc [ k ] = val [ k ] + calc [ k - 1 ] ; else calc [ k ] = val [ k ] + max ( calc [ k ] , calc [ k - 1 ] ) ; }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 359,
                                  "end_byte": 362,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 363,
                                  "end_byte": 364,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 365,
                                  "end_byte": 370,
                                  "text": "k = j",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 365,
                                      "end_byte": 366,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 367,
                                      "end_byte": 368,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 369,
                                      "end_byte": 370,
                                      "text": "j",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 371,
                                  "end_byte": 372,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 373,
                                  "end_byte": 379,
                                  "text": "k >= 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 373,
                                      "end_byte": 374,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": ">=",
                                      "start_byte": 375,
                                      "end_byte": 377,
                                      "text": ">=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 378,
                                      "end_byte": 379,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 380,
                                  "end_byte": 381,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 382,
                                  "end_byte": 386,
                                  "text": "k --",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 382,
                                      "end_byte": 383,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "--",
                                      "start_byte": 384,
                                      "end_byte": 386,
                                      "text": "--",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 387,
                                  "end_byte": 388,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 389,
                                  "end_byte": 573,
                                  "text": "{ if ( k == 0 ) calc [ k ] = val [ k ] + calc [ k ] ; else if ( k == j ) calc [ k ] = val [ k ] + calc [ k - 1 ] ; else calc [ k ] = val [ k ] + max ( calc [ k ] , calc [ k - 1 ] ) ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 389,
                                      "end_byte": 390,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 391,
                                      "end_byte": 571,
                                      "text": "if ( k == 0 ) calc [ k ] = val [ k ] + calc [ k ] ; else if ( k == j ) calc [ k ] = val [ k ] + calc [ k - 1 ] ; else calc [ k ] = val [ k ] + max ( calc [ k ] , calc [ k - 1 ] ) ;",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 391,
                                          "end_byte": 393,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 394,
                                          "end_byte": 404,
                                          "text": "( k == 0 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 394,
                                              "end_byte": 395,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 396,
                                              "end_byte": 402,
                                              "text": "k == 0",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 396,
                                                  "end_byte": 397,
                                                  "text": "k",
                                                  "children": []
                                                },
                                                {
                                                  "type": "==",
                                                  "start_byte": 398,
                                                  "end_byte": 400,
                                                  "text": "==",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 401,
                                                  "end_byte": 402,
                                                  "text": "0",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 403,
                                              "end_byte": 404,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 405,
                                          "end_byte": 442,
                                          "text": "calc [ k ] = val [ k ] + calc [ k ] ;",
                                          "children": [
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 405,
                                              "end_byte": 440,
                                              "text": "calc [ k ] = val [ k ] + calc [ k ]",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 405,
                                                  "end_byte": 415,
                                                  "text": "calc [ k ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 405,
                                                      "end_byte": 409,
                                                      "text": "calc",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 410,
                                                      "end_byte": 415,
                                                      "text": "[ k ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 410,
                                                          "end_byte": 411,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 412,
                                                          "end_byte": 413,
                                                          "text": "k",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 414,
                                                          "end_byte": 415,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "=",
                                                  "start_byte": 416,
                                                  "end_byte": 417,
                                                  "text": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 418,
                                                  "end_byte": 440,
                                                  "text": "val [ k ] + calc [ k ]",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 418,
                                                      "end_byte": 427,
                                                      "text": "val [ k ]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 418,
                                                          "end_byte": 421,
                                                          "text": "val",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 422,
                                                          "end_byte": 427,
                                                          "text": "[ k ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 422,
                                                              "end_byte": 423,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 424,
                                                              "end_byte": 425,
                                                              "text": "k",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 426,
                                                              "end_byte": 427,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "+",
                                                      "start_byte": 428,
                                                      "end_byte": 429,
                                                      "text": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 430,
                                                      "end_byte": 440,
                                                      "text": "calc [ k ]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 430,
                                                          "end_byte": 434,
                                                          "text": "calc",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 435,
                                                          "end_byte": 440,
                                                          "text": "[ k ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 435,
                                                              "end_byte": 436,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 437,
                                                              "end_byte": 438,
                                                              "text": "k",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 439,
                                                              "end_byte": 440,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 441,
                                              "end_byte": 442,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "else_clause",
                                          "start_byte": 443,
                                          "end_byte": 571,
                                          "text": "else if ( k == j ) calc [ k ] = val [ k ] + calc [ k - 1 ] ; else calc [ k ] = val [ k ] + max ( calc [ k ] , calc [ k - 1 ] ) ;",
                                          "children": [
                                            {
                                              "type": "else",
                                              "start_byte": 443,
                                              "end_byte": 447,
                                              "text": "else",
                                              "children": []
                                            },
                                            {
                                              "type": "if_statement",
                                              "start_byte": 448,
                                              "end_byte": 571,
                                              "text": "if ( k == j ) calc [ k ] = val [ k ] + calc [ k - 1 ] ; else calc [ k ] = val [ k ] + max ( calc [ k ] , calc [ k - 1 ] ) ;",
                                              "children": [
                                                {
                                                  "type": "if",
                                                  "start_byte": 448,
                                                  "end_byte": 450,
                                                  "text": "if",
                                                  "children": []
                                                },
                                                {
                                                  "type": "condition_clause",
                                                  "start_byte": 451,
                                                  "end_byte": 461,
                                                  "text": "( k == j )",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start_byte": 451,
                                                      "end_byte": 452,
                                                      "text": "(",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 453,
                                                      "end_byte": 459,
                                                      "text": "k == j",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 453,
                                                          "end_byte": 454,
                                                          "text": "k",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "==",
                                                          "start_byte": 455,
                                                          "end_byte": 457,
                                                          "text": "==",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 458,
                                                          "end_byte": 459,
                                                          "text": "j",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start_byte": 460,
                                                      "end_byte": 461,
                                                      "text": ")",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "expression_statement",
                                                  "start_byte": 462,
                                                  "end_byte": 503,
                                                  "text": "calc [ k ] = val [ k ] + calc [ k - 1 ] ;",
                                                  "children": [
                                                    {
                                                      "type": "assignment_expression",
                                                      "start_byte": 462,
                                                      "end_byte": 501,
                                                      "text": "calc [ k ] = val [ k ] + calc [ k - 1 ]",
                                                      "children": [
                                                        {
                                                          "type": "subscript_expression",
                                                          "start_byte": 462,
                                                          "end_byte": 472,
                                                          "text": "calc [ k ]",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 462,
                                                              "end_byte": 466,
                                                              "text": "calc",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "subscript_argument_list",
                                                              "start_byte": 467,
                                                              "end_byte": 472,
                                                              "text": "[ k ]",
                                                              "children": [
                                                                {
                                                                  "type": "[",
                                                                  "start_byte": 467,
                                                                  "end_byte": 468,
                                                                  "text": "[",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 469,
                                                                  "end_byte": 470,
                                                                  "text": "k",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "]",
                                                                  "start_byte": 471,
                                                                  "end_byte": 472,
                                                                  "text": "]",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "=",
                                                          "start_byte": 473,
                                                          "end_byte": 474,
                                                          "text": "=",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 475,
                                                          "end_byte": 501,
                                                          "text": "val [ k ] + calc [ k - 1 ]",
                                                          "children": [
                                                            {
                                                              "type": "subscript_expression",
                                                              "start_byte": 475,
                                                              "end_byte": 484,
                                                              "text": "val [ k ]",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 475,
                                                                  "end_byte": 478,
                                                                  "text": "val",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "subscript_argument_list",
                                                                  "start_byte": 479,
                                                                  "end_byte": 484,
                                                                  "text": "[ k ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "[",
                                                                      "start_byte": 479,
                                                                      "end_byte": 480,
                                                                      "text": "[",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 481,
                                                                      "end_byte": 482,
                                                                      "text": "k",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "]",
                                                                      "start_byte": 483,
                                                                      "end_byte": 484,
                                                                      "text": "]",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "+",
                                                              "start_byte": 485,
                                                              "end_byte": 486,
                                                              "text": "+",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "subscript_expression",
                                                              "start_byte": 487,
                                                              "end_byte": 501,
                                                              "text": "calc [ k - 1 ]",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 487,
                                                                  "end_byte": 491,
                                                                  "text": "calc",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "subscript_argument_list",
                                                                  "start_byte": 492,
                                                                  "end_byte": 501,
                                                                  "text": "[ k - 1 ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "[",
                                                                      "start_byte": 492,
                                                                      "end_byte": 493,
                                                                      "text": "[",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "binary_expression",
                                                                      "start_byte": 494,
                                                                      "end_byte": 499,
                                                                      "text": "k - 1",
                                                                      "children": [
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 494,
                                                                          "end_byte": 495,
                                                                          "text": "k",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "-",
                                                                          "start_byte": 496,
                                                                          "end_byte": 497,
                                                                          "text": "-",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "number_literal",
                                                                          "start_byte": 498,
                                                                          "end_byte": 499,
                                                                          "text": "1",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "]",
                                                                      "start_byte": 500,
                                                                      "end_byte": 501,
                                                                      "text": "]",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ";",
                                                      "start_byte": 502,
                                                      "end_byte": 503,
                                                      "text": ";",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "else_clause",
                                                  "start_byte": 504,
                                                  "end_byte": 571,
                                                  "text": "else calc [ k ] = val [ k ] + max ( calc [ k ] , calc [ k - 1 ] ) ;",
                                                  "children": [
                                                    {
                                                      "type": "else",
                                                      "start_byte": 504,
                                                      "end_byte": 508,
                                                      "text": "else",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "expression_statement",
                                                      "start_byte": 509,
                                                      "end_byte": 571,
                                                      "text": "calc [ k ] = val [ k ] + max ( calc [ k ] , calc [ k - 1 ] ) ;",
                                                      "children": [
                                                        {
                                                          "type": "assignment_expression",
                                                          "start_byte": 509,
                                                          "end_byte": 569,
                                                          "text": "calc [ k ] = val [ k ] + max ( calc [ k ] , calc [ k - 1 ] )",
                                                          "children": [
                                                            {
                                                              "type": "subscript_expression",
                                                              "start_byte": 509,
                                                              "end_byte": 519,
                                                              "text": "calc [ k ]",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 509,
                                                                  "end_byte": 513,
                                                                  "text": "calc",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "subscript_argument_list",
                                                                  "start_byte": 514,
                                                                  "end_byte": 519,
                                                                  "text": "[ k ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "[",
                                                                      "start_byte": 514,
                                                                      "end_byte": 515,
                                                                      "text": "[",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 516,
                                                                      "end_byte": 517,
                                                                      "text": "k",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "]",
                                                                      "start_byte": 518,
                                                                      "end_byte": 519,
                                                                      "text": "]",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "=",
                                                              "start_byte": 520,
                                                              "end_byte": 521,
                                                              "text": "=",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 522,
                                                              "end_byte": 569,
                                                              "text": "val [ k ] + max ( calc [ k ] , calc [ k - 1 ] )",
                                                              "children": [
                                                                {
                                                                  "type": "subscript_expression",
                                                                  "start_byte": 522,
                                                                  "end_byte": 531,
                                                                  "text": "val [ k ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 522,
                                                                      "end_byte": 525,
                                                                      "text": "val",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "subscript_argument_list",
                                                                      "start_byte": 526,
                                                                      "end_byte": 531,
                                                                      "text": "[ k ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "[",
                                                                          "start_byte": 526,
                                                                          "end_byte": 527,
                                                                          "text": "[",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 528,
                                                                          "end_byte": 529,
                                                                          "text": "k",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "]",
                                                                          "start_byte": 530,
                                                                          "end_byte": 531,
                                                                          "text": "]",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "+",
                                                                  "start_byte": 532,
                                                                  "end_byte": 533,
                                                                  "text": "+",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "call_expression",
                                                                  "start_byte": 534,
                                                                  "end_byte": 569,
                                                                  "text": "max ( calc [ k ] , calc [ k - 1 ] )",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 534,
                                                                      "end_byte": 537,
                                                                      "text": "max",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "argument_list",
                                                                      "start_byte": 538,
                                                                      "end_byte": 569,
                                                                      "text": "( calc [ k ] , calc [ k - 1 ] )",
                                                                      "children": [
                                                                        {
                                                                          "type": "(",
                                                                          "start_byte": 538,
                                                                          "end_byte": 539,
                                                                          "text": "(",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "subscript_expression",
                                                                          "start_byte": 540,
                                                                          "end_byte": 550,
                                                                          "text": "calc [ k ]",
                                                                          "children": [
                                                                            {
                                                                              "type": "identifier",
                                                                              "start_byte": 540,
                                                                              "end_byte": 544,
                                                                              "text": "calc",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "subscript_argument_list",
                                                                              "start_byte": 545,
                                                                              "end_byte": 550,
                                                                              "text": "[ k ]",
                                                                              "children": [
                                                                                {
                                                                                  "type": "[",
                                                                                  "start_byte": 545,
                                                                                  "end_byte": 546,
                                                                                  "text": "[",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "identifier",
                                                                                  "start_byte": 547,
                                                                                  "end_byte": 548,
                                                                                  "text": "k",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "]",
                                                                                  "start_byte": 549,
                                                                                  "end_byte": 550,
                                                                                  "text": "]",
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": ",",
                                                                          "start_byte": 551,
                                                                          "end_byte": 552,
                                                                          "text": ",",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "subscript_expression",
                                                                          "start_byte": 553,
                                                                          "end_byte": 567,
                                                                          "text": "calc [ k - 1 ]",
                                                                          "children": [
                                                                            {
                                                                              "type": "identifier",
                                                                              "start_byte": 553,
                                                                              "end_byte": 557,
                                                                              "text": "calc",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "subscript_argument_list",
                                                                              "start_byte": 558,
                                                                              "end_byte": 567,
                                                                              "text": "[ k - 1 ]",
                                                                              "children": [
                                                                                {
                                                                                  "type": "[",
                                                                                  "start_byte": 558,
                                                                                  "end_byte": 559,
                                                                                  "text": "[",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "binary_expression",
                                                                                  "start_byte": 560,
                                                                                  "end_byte": 565,
                                                                                  "text": "k - 1",
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "identifier",
                                                                                      "start_byte": 560,
                                                                                      "end_byte": 561,
                                                                                      "text": "k",
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "-",
                                                                                      "start_byte": 562,
                                                                                      "end_byte": 563,
                                                                                      "text": "-",
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "number_literal",
                                                                                      "start_byte": 564,
                                                                                      "end_byte": 565,
                                                                                      "text": "1",
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "]",
                                                                                  "start_byte": 566,
                                                                                  "end_byte": 567,
                                                                                  "text": "]",
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": ")",
                                                                          "start_byte": 568,
                                                                          "end_byte": 569,
                                                                          "text": ")",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ";",
                                                          "start_byte": 570,
                                                          "end_byte": 571,
                                                          "text": ";",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 572,
                                      "end_byte": 573,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 574,
                              "end_byte": 575,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 576,
                      "end_byte": 594,
                      "text": "sum = calc [ 0 ] ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 576,
                          "end_byte": 592,
                          "text": "sum = calc [ 0 ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 576,
                              "end_byte": 579,
                              "text": "sum",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 580,
                              "end_byte": 581,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 582,
                              "end_byte": 592,
                              "text": "calc [ 0 ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 582,
                                  "end_byte": 586,
                                  "text": "calc",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 587,
                                  "end_byte": 592,
                                  "text": "[ 0 ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 587,
                                      "end_byte": 588,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 589,
                                      "end_byte": 590,
                                      "text": "0",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 591,
                                      "end_byte": 592,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 593,
                          "end_byte": 594,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 595,
                      "end_byte": 673,
                      "text": "for ( k = 0 ; k < size ; k ++ ) { if ( calc [ k ] > sum ) sum = calc [ k ] ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 595,
                          "end_byte": 598,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 599,
                          "end_byte": 600,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 601,
                          "end_byte": 606,
                          "text": "k = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 601,
                              "end_byte": 602,
                              "text": "k",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 603,
                              "end_byte": 604,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 605,
                              "end_byte": 606,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 607,
                          "end_byte": 608,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 609,
                          "end_byte": 617,
                          "text": "k < size",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 609,
                              "end_byte": 610,
                              "text": "k",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 611,
                              "end_byte": 612,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 613,
                              "end_byte": 617,
                              "text": "size",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 618,
                          "end_byte": 619,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 620,
                          "end_byte": 624,
                          "text": "k ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 620,
                              "end_byte": 621,
                              "text": "k",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 622,
                              "end_byte": 624,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 625,
                          "end_byte": 626,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 627,
                          "end_byte": 673,
                          "text": "{ if ( calc [ k ] > sum ) sum = calc [ k ] ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 627,
                              "end_byte": 628,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 629,
                              "end_byte": 671,
                              "text": "if ( calc [ k ] > sum ) sum = calc [ k ] ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 629,
                                  "end_byte": 631,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 632,
                                  "end_byte": 652,
                                  "text": "( calc [ k ] > sum )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 632,
                                      "end_byte": 633,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 634,
                                      "end_byte": 650,
                                      "text": "calc [ k ] > sum",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 634,
                                          "end_byte": 644,
                                          "text": "calc [ k ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 634,
                                              "end_byte": 638,
                                              "text": "calc",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 639,
                                              "end_byte": 644,
                                              "text": "[ k ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 639,
                                                  "end_byte": 640,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 641,
                                                  "end_byte": 642,
                                                  "text": "k",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 643,
                                                  "end_byte": 644,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ">",
                                          "start_byte": 645,
                                          "end_byte": 646,
                                          "text": ">",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 647,
                                          "end_byte": 650,
                                          "text": "sum",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 651,
                                      "end_byte": 652,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 653,
                                  "end_byte": 671,
                                  "text": "sum = calc [ k ] ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 653,
                                      "end_byte": 669,
                                      "text": "sum = calc [ k ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 653,
                                          "end_byte": 656,
                                          "text": "sum",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 657,
                                          "end_byte": 658,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 659,
                                          "end_byte": 669,
                                          "text": "calc [ k ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 659,
                                              "end_byte": 663,
                                              "text": "calc",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 664,
                                              "end_byte": 669,
                                              "text": "[ k ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 664,
                                                  "end_byte": 665,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 666,
                                                  "end_byte": 667,
                                                  "text": "k",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 668,
                                                  "end_byte": 669,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 670,
                                      "end_byte": 671,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 672,
                              "end_byte": 673,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 674,
                      "end_byte": 700,
                      "text": "printf ( \"%ld\\n\" , sum ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 674,
                          "end_byte": 698,
                          "text": "printf ( \"%ld\\n\" , sum )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 674,
                              "end_byte": 680,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 681,
                              "end_byte": 698,
                              "text": "( \"%ld\\n\" , sum )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 681,
                                  "end_byte": 682,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 683,
                                  "end_byte": 690,
                                  "text": "\"%ld\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 683,
                                      "end_byte": 684,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 684,
                                      "end_byte": 687,
                                      "text": "%ld",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 687,
                                      "end_byte": 689,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 689,
                                      "end_byte": 690,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 691,
                                  "end_byte": 692,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 693,
                                  "end_byte": 696,
                                  "text": "sum",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 697,
                                  "end_byte": 698,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 699,
                          "end_byte": 700,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 701,
                      "end_byte": 702,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 703,
              "end_byte": 713,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 703,
                  "end_byte": 709,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 710,
                  "end_byte": 711,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 712,
                  "end_byte": 713,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 714,
              "end_byte": 715,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 716,
      "end_byte": 800,
      "text": "long int max ( long int a , long int b ) { if ( a > b ) return a ; else return b ; }",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 716,
          "end_byte": 724,
          "text": "long int",
          "children": [
            {
              "type": "long",
              "start_byte": 716,
              "end_byte": 720,
              "text": "long",
              "children": []
            },
            {
              "type": "primitive_type",
              "start_byte": 721,
              "end_byte": 724,
              "text": "int",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 725,
          "end_byte": 756,
          "text": "max ( long int a , long int b )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 725,
              "end_byte": 728,
              "text": "max",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 729,
              "end_byte": 756,
              "text": "( long int a , long int b )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 729,
                  "end_byte": 730,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 731,
                  "end_byte": 741,
                  "text": "long int a",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 731,
                      "end_byte": 739,
                      "text": "long int",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 731,
                          "end_byte": 735,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "primitive_type",
                          "start_byte": 736,
                          "end_byte": 739,
                          "text": "int",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 740,
                      "end_byte": 741,
                      "text": "a",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 742,
                  "end_byte": 743,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 744,
                  "end_byte": 754,
                  "text": "long int b",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 744,
                      "end_byte": 752,
                      "text": "long int",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 744,
                          "end_byte": 748,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "primitive_type",
                          "start_byte": 749,
                          "end_byte": 752,
                          "text": "int",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 753,
                      "end_byte": 754,
                      "text": "b",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 755,
                  "end_byte": 756,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 757,
          "end_byte": 800,
          "text": "{ if ( a > b ) return a ; else return b ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 757,
              "end_byte": 758,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 759,
              "end_byte": 798,
              "text": "if ( a > b ) return a ; else return b ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 759,
                  "end_byte": 761,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 762,
                  "end_byte": 771,
                  "text": "( a > b )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 762,
                      "end_byte": 763,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 764,
                      "end_byte": 769,
                      "text": "a > b",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 764,
                          "end_byte": 765,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 766,
                          "end_byte": 767,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 768,
                          "end_byte": 769,
                          "text": "b",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 770,
                      "end_byte": 771,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 772,
                  "end_byte": 782,
                  "text": "return a ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 772,
                      "end_byte": 778,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 779,
                      "end_byte": 780,
                      "text": "a",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 781,
                      "end_byte": 782,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 783,
                  "end_byte": 798,
                  "text": "else return b ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 783,
                      "end_byte": 787,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 788,
                      "end_byte": 798,
                      "text": "return b ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 788,
                          "end_byte": 794,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 795,
                          "end_byte": 796,
                          "text": "b",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 797,
                          "end_byte": 798,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 799,
              "end_byte": 800,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}