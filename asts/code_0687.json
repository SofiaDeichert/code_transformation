{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 417,
  "text": "int gcd ( int m , int n ) { int temp ; while ( n ) { temp = n ; n = m % n ; m = temp ; } return m ; } int main ( ) { int i , a , t , x , y ; printf ( \"\\n Enter the no. of test cases:\\n\" ) ; scanf ( \"%d\" , & t ) ; for ( i = 1 ; i <= t ; i ++ ) { printf ( \"\\n Enter the two nos.\\n\" ) ; scanf ( \"%d%d\" , & x , & y ) ; a = gcd ( x , y ) ; printf ( \"HCF: %d\" , a ) ; printf ( \"\\nLCM: %d\" , ( x * y ) / a ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 101,
      "text": "int gcd ( int m , int n ) { int temp ; while ( n ) { temp = n ; n = m % n ; m = temp ; } return m ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 25,
          "text": "gcd ( int m , int n )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 7,
              "text": "gcd",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 8,
              "end_byte": 25,
              "text": "( int m , int n )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 8,
                  "end_byte": 9,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 10,
                  "end_byte": 15,
                  "text": "int m",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 10,
                      "end_byte": 13,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 14,
                      "end_byte": 15,
                      "text": "m",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 16,
                  "end_byte": 17,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 18,
                  "end_byte": 23,
                  "text": "int n",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 18,
                      "end_byte": 21,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 22,
                      "end_byte": 23,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 24,
                  "end_byte": 25,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 26,
          "end_byte": 101,
          "text": "{ int temp ; while ( n ) { temp = n ; n = m % n ; m = temp ; } return m ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 26,
              "end_byte": 27,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 28,
              "end_byte": 38,
              "text": "int temp ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 28,
                  "end_byte": 31,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 32,
                  "end_byte": 36,
                  "text": "temp",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 37,
                  "end_byte": 38,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 39,
              "end_byte": 88,
              "text": "while ( n ) { temp = n ; n = m % n ; m = temp ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 39,
                  "end_byte": 44,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 45,
                  "end_byte": 50,
                  "text": "( n )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 45,
                      "end_byte": 46,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 47,
                      "end_byte": 48,
                      "text": "n",
                      "children": []
                    },
                    {
                      "type": ")",
                      "start_byte": 49,
                      "end_byte": 50,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 51,
                  "end_byte": 88,
                  "text": "{ temp = n ; n = m % n ; m = temp ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 51,
                      "end_byte": 52,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 53,
                      "end_byte": 63,
                      "text": "temp = n ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 53,
                          "end_byte": 61,
                          "text": "temp = n",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 53,
                              "end_byte": 57,
                              "text": "temp",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 58,
                              "end_byte": 59,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 60,
                              "end_byte": 61,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 62,
                          "end_byte": 63,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 64,
                      "end_byte": 75,
                      "text": "n = m % n ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 64,
                          "end_byte": 73,
                          "text": "n = m % n",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 64,
                              "end_byte": 65,
                              "text": "n",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 66,
                              "end_byte": 67,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 68,
                              "end_byte": 73,
                              "text": "m % n",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 68,
                                  "end_byte": 69,
                                  "text": "m",
                                  "children": []
                                },
                                {
                                  "type": "%",
                                  "start_byte": 70,
                                  "end_byte": 71,
                                  "text": "%",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 72,
                                  "end_byte": 73,
                                  "text": "n",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 74,
                          "end_byte": 75,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 76,
                      "end_byte": 86,
                      "text": "m = temp ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 76,
                          "end_byte": 84,
                          "text": "m = temp",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 76,
                              "end_byte": 77,
                              "text": "m",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 78,
                              "end_byte": 79,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 80,
                              "end_byte": 84,
                              "text": "temp",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 85,
                          "end_byte": 86,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 87,
                      "end_byte": 88,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 89,
              "end_byte": 99,
              "text": "return m ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 89,
                  "end_byte": 95,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 96,
                  "end_byte": 97,
                  "text": "m",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 98,
                  "end_byte": 99,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 100,
              "end_byte": 101,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 102,
      "end_byte": 417,
      "text": "int main ( ) { int i , a , t , x , y ; printf ( \"\\n Enter the no. of test cases:\\n\" ) ; scanf ( \"%d\" , & t ) ; for ( i = 1 ; i <= t ; i ++ ) { printf ( \"\\n Enter the two nos.\\n\" ) ; scanf ( \"%d%d\" , & x , & y ) ; a = gcd ( x , y ) ; printf ( \"HCF: %d\" , a ) ; printf ( \"\\nLCM: %d\" , ( x * y ) / a ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 102,
          "end_byte": 105,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 106,
          "end_byte": 114,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 106,
              "end_byte": 110,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 111,
              "end_byte": 114,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 111,
                  "end_byte": 112,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 113,
                  "end_byte": 114,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 115,
          "end_byte": 417,
          "text": "{ int i , a , t , x , y ; printf ( \"\\n Enter the no. of test cases:\\n\" ) ; scanf ( \"%d\" , & t ) ; for ( i = 1 ; i <= t ; i ++ ) { printf ( \"\\n Enter the two nos.\\n\" ) ; scanf ( \"%d%d\" , & x , & y ) ; a = gcd ( x , y ) ; printf ( \"HCF: %d\" , a ) ; printf ( \"\\nLCM: %d\" , ( x * y ) / a ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 115,
              "end_byte": 116,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 117,
              "end_byte": 140,
              "text": "int i , a , t , x , y ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 117,
                  "end_byte": 120,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 121,
                  "end_byte": 122,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 123,
                  "end_byte": 124,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 125,
                  "end_byte": 126,
                  "text": "a",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 127,
                  "end_byte": 128,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 129,
                  "end_byte": 130,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 131,
                  "end_byte": 132,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 133,
                  "end_byte": 134,
                  "text": "x",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 135,
                  "end_byte": 136,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 137,
                  "end_byte": 138,
                  "text": "y",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 139,
                  "end_byte": 140,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 141,
              "end_byte": 189,
              "text": "printf ( \"\\n Enter the no. of test cases:\\n\" ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 141,
                  "end_byte": 187,
                  "text": "printf ( \"\\n Enter the no. of test cases:\\n\" )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 141,
                      "end_byte": 147,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 148,
                      "end_byte": 187,
                      "text": "( \"\\n Enter the no. of test cases:\\n\" )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 148,
                          "end_byte": 149,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 150,
                          "end_byte": 185,
                          "text": "\"\\n Enter the no. of test cases:\\n\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 150,
                              "end_byte": 151,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 151,
                              "end_byte": 153,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 153,
                              "end_byte": 182,
                              "text": " Enter the no. of test cases:",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 182,
                              "end_byte": 184,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 184,
                              "end_byte": 185,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 186,
                          "end_byte": 187,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 188,
                  "end_byte": 189,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 190,
              "end_byte": 212,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 190,
                  "end_byte": 210,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 190,
                      "end_byte": 195,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 196,
                      "end_byte": 210,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 196,
                          "end_byte": 197,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 198,
                          "end_byte": 202,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 198,
                              "end_byte": 199,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 199,
                              "end_byte": 201,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 201,
                              "end_byte": 202,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 203,
                          "end_byte": 204,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 205,
                          "end_byte": 208,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 205,
                              "end_byte": 206,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 207,
                              "end_byte": 208,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 209,
                          "end_byte": 210,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 211,
                  "end_byte": 212,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 213,
              "end_byte": 404,
              "text": "for ( i = 1 ; i <= t ; i ++ ) { printf ( \"\\n Enter the two nos.\\n\" ) ; scanf ( \"%d%d\" , & x , & y ) ; a = gcd ( x , y ) ; printf ( \"HCF: %d\" , a ) ; printf ( \"\\nLCM: %d\" , ( x * y ) / a ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 213,
                  "end_byte": 216,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 217,
                  "end_byte": 218,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 219,
                  "end_byte": 224,
                  "text": "i = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 219,
                      "end_byte": 220,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 221,
                      "end_byte": 222,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 223,
                      "end_byte": 224,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 225,
                  "end_byte": 226,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 227,
                  "end_byte": 233,
                  "text": "i <= t",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 227,
                      "end_byte": 228,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<=",
                      "start_byte": 229,
                      "end_byte": 231,
                      "text": "<=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 232,
                      "end_byte": 233,
                      "text": "t",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 234,
                  "end_byte": 235,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 236,
                  "end_byte": 240,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 236,
                      "end_byte": 237,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 238,
                      "end_byte": 240,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 241,
                  "end_byte": 242,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 243,
                  "end_byte": 404,
                  "text": "{ printf ( \"\\n Enter the two nos.\\n\" ) ; scanf ( \"%d%d\" , & x , & y ) ; a = gcd ( x , y ) ; printf ( \"HCF: %d\" , a ) ; printf ( \"\\nLCM: %d\" , ( x * y ) / a ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 243,
                      "end_byte": 244,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 245,
                      "end_byte": 283,
                      "text": "printf ( \"\\n Enter the two nos.\\n\" ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 245,
                          "end_byte": 281,
                          "text": "printf ( \"\\n Enter the two nos.\\n\" )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 245,
                              "end_byte": 251,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 252,
                              "end_byte": 281,
                              "text": "( \"\\n Enter the two nos.\\n\" )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 252,
                                  "end_byte": 253,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 254,
                                  "end_byte": 279,
                                  "text": "\"\\n Enter the two nos.\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 254,
                                      "end_byte": 255,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 255,
                                      "end_byte": 257,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 257,
                                      "end_byte": 276,
                                      "text": " Enter the two nos.",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 276,
                                      "end_byte": 278,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 278,
                                      "end_byte": 279,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 280,
                                  "end_byte": 281,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 282,
                          "end_byte": 283,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 284,
                      "end_byte": 314,
                      "text": "scanf ( \"%d%d\" , & x , & y ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 284,
                          "end_byte": 312,
                          "text": "scanf ( \"%d%d\" , & x , & y )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 284,
                              "end_byte": 289,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 290,
                              "end_byte": 312,
                              "text": "( \"%d%d\" , & x , & y )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 290,
                                  "end_byte": 291,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 292,
                                  "end_byte": 298,
                                  "text": "\"%d%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 292,
                                      "end_byte": 293,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 293,
                                      "end_byte": 297,
                                      "text": "%d%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 297,
                                      "end_byte": 298,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 299,
                                  "end_byte": 300,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 301,
                                  "end_byte": 304,
                                  "text": "& x",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 301,
                                      "end_byte": 302,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 303,
                                      "end_byte": 304,
                                      "text": "x",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 305,
                                  "end_byte": 306,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 307,
                                  "end_byte": 310,
                                  "text": "& y",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 307,
                                      "end_byte": 308,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 309,
                                      "end_byte": 310,
                                      "text": "y",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 311,
                                  "end_byte": 312,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 313,
                          "end_byte": 314,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 315,
                      "end_byte": 334,
                      "text": "a = gcd ( x , y ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 315,
                          "end_byte": 332,
                          "text": "a = gcd ( x , y )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 315,
                              "end_byte": 316,
                              "text": "a",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 317,
                              "end_byte": 318,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 319,
                              "end_byte": 332,
                              "text": "gcd ( x , y )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 319,
                                  "end_byte": 322,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 323,
                                  "end_byte": 332,
                                  "text": "( x , y )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 323,
                                      "end_byte": 324,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 325,
                                      "end_byte": 326,
                                      "text": "x",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 327,
                                      "end_byte": 328,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 329,
                                      "end_byte": 330,
                                      "text": "y",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 331,
                                      "end_byte": 332,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 333,
                          "end_byte": 334,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 335,
                      "end_byte": 361,
                      "text": "printf ( \"HCF: %d\" , a ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 335,
                          "end_byte": 359,
                          "text": "printf ( \"HCF: %d\" , a )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 335,
                              "end_byte": 341,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 342,
                              "end_byte": 359,
                              "text": "( \"HCF: %d\" , a )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 342,
                                  "end_byte": 343,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 344,
                                  "end_byte": 353,
                                  "text": "\"HCF: %d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 344,
                                      "end_byte": 345,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 345,
                                      "end_byte": 352,
                                      "text": "HCF: %d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 352,
                                      "end_byte": 353,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 354,
                                  "end_byte": 355,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 356,
                                  "end_byte": 357,
                                  "text": "a",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 358,
                                  "end_byte": 359,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 360,
                          "end_byte": 361,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 362,
                      "end_byte": 402,
                      "text": "printf ( \"\\nLCM: %d\" , ( x * y ) / a ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 362,
                          "end_byte": 400,
                          "text": "printf ( \"\\nLCM: %d\" , ( x * y ) / a )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 362,
                              "end_byte": 368,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 369,
                              "end_byte": 400,
                              "text": "( \"\\nLCM: %d\" , ( x * y ) / a )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 369,
                                  "end_byte": 370,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 371,
                                  "end_byte": 382,
                                  "text": "\"\\nLCM: %d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 371,
                                      "end_byte": 372,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 372,
                                      "end_byte": 374,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 374,
                                      "end_byte": 381,
                                      "text": "LCM: %d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 381,
                                      "end_byte": 382,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 383,
                                  "end_byte": 384,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 385,
                                  "end_byte": 398,
                                  "text": "( x * y ) / a",
                                  "children": [
                                    {
                                      "type": "parenthesized_expression",
                                      "start_byte": 385,
                                      "end_byte": 394,
                                      "text": "( x * y )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 385,
                                          "end_byte": 386,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 387,
                                          "end_byte": 392,
                                          "text": "x * y",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 387,
                                              "end_byte": 388,
                                              "text": "x",
                                              "children": []
                                            },
                                            {
                                              "type": "*",
                                              "start_byte": 389,
                                              "end_byte": 390,
                                              "text": "*",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 391,
                                              "end_byte": 392,
                                              "text": "y",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 393,
                                          "end_byte": 394,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "/",
                                      "start_byte": 395,
                                      "end_byte": 396,
                                      "text": "/",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 397,
                                      "end_byte": 398,
                                      "text": "a",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 399,
                                  "end_byte": 400,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 401,
                          "end_byte": 402,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 403,
                      "end_byte": 404,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 405,
              "end_byte": 415,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 405,
                  "end_byte": 411,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 412,
                  "end_byte": 413,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 414,
                  "end_byte": 415,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 416,
              "end_byte": 417,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}