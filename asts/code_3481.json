{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 438,
  "text": "int gcd ( int m , int n ) { if ( n == 0 ) return m ; else return gcd ( n , m % n ) ; } int lcm ( int m , int n ) { int max ; if ( m > n ) max = m ; else max = n ; while ( 1 ) { if ( max % m == 0 && max % n == 0 ) { return max ; break ; } ++ max ; } } int main ( ) { long t , a , b , g , l ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%ld%ld\" , & a , & b ) ; g = gcd ( a , b ) ; l = lcm ( a , b ) ; printf ( \"%d %d\\n\" , g , l ) ; } }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 86,
      "text": "int gcd ( int m , int n ) { if ( n == 0 ) return m ; else return gcd ( n , m % n ) ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 25,
          "text": "gcd ( int m , int n )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 7,
              "text": "gcd",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 8,
              "end_byte": 25,
              "text": "( int m , int n )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 8,
                  "end_byte": 9,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 10,
                  "end_byte": 15,
                  "text": "int m",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 10,
                      "end_byte": 13,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 14,
                      "end_byte": 15,
                      "text": "m",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 16,
                  "end_byte": 17,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 18,
                  "end_byte": 23,
                  "text": "int n",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 18,
                      "end_byte": 21,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 22,
                      "end_byte": 23,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 24,
                  "end_byte": 25,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 26,
          "end_byte": 86,
          "text": "{ if ( n == 0 ) return m ; else return gcd ( n , m % n ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 26,
              "end_byte": 27,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 28,
              "end_byte": 84,
              "text": "if ( n == 0 ) return m ; else return gcd ( n , m % n ) ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 28,
                  "end_byte": 30,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 31,
                  "end_byte": 41,
                  "text": "( n == 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 31,
                      "end_byte": 32,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 33,
                      "end_byte": 39,
                      "text": "n == 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 33,
                          "end_byte": 34,
                          "text": "n",
                          "children": []
                        },
                        {
                          "type": "==",
                          "start_byte": 35,
                          "end_byte": 37,
                          "text": "==",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 38,
                          "end_byte": 39,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 40,
                      "end_byte": 41,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 42,
                  "end_byte": 52,
                  "text": "return m ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 42,
                      "end_byte": 48,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 49,
                      "end_byte": 50,
                      "text": "m",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 51,
                      "end_byte": 52,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 53,
                  "end_byte": 84,
                  "text": "else return gcd ( n , m % n ) ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 53,
                      "end_byte": 57,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 58,
                      "end_byte": 84,
                      "text": "return gcd ( n , m % n ) ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 58,
                          "end_byte": 64,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "call_expression",
                          "start_byte": 65,
                          "end_byte": 82,
                          "text": "gcd ( n , m % n )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 65,
                              "end_byte": 68,
                              "text": "gcd",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 69,
                              "end_byte": 82,
                              "text": "( n , m % n )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 69,
                                  "end_byte": 70,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 71,
                                  "end_byte": 72,
                                  "text": "n",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 73,
                                  "end_byte": 74,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 75,
                                  "end_byte": 80,
                                  "text": "m % n",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 75,
                                      "end_byte": 76,
                                      "text": "m",
                                      "children": []
                                    },
                                    {
                                      "type": "%",
                                      "start_byte": 77,
                                      "end_byte": 78,
                                      "text": "%",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 79,
                                      "end_byte": 80,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 81,
                                  "end_byte": 82,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 83,
                          "end_byte": 84,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 85,
              "end_byte": 86,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 87,
      "end_byte": 250,
      "text": "int lcm ( int m , int n ) { int max ; if ( m > n ) max = m ; else max = n ; while ( 1 ) { if ( max % m == 0 && max % n == 0 ) { return max ; break ; } ++ max ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 87,
          "end_byte": 90,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 91,
          "end_byte": 112,
          "text": "lcm ( int m , int n )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 91,
              "end_byte": 94,
              "text": "lcm",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 95,
              "end_byte": 112,
              "text": "( int m , int n )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 95,
                  "end_byte": 96,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 97,
                  "end_byte": 102,
                  "text": "int m",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 97,
                      "end_byte": 100,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 101,
                      "end_byte": 102,
                      "text": "m",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 103,
                  "end_byte": 104,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 105,
                  "end_byte": 110,
                  "text": "int n",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 105,
                      "end_byte": 108,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 109,
                      "end_byte": 110,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 111,
                  "end_byte": 112,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 113,
          "end_byte": 250,
          "text": "{ int max ; if ( m > n ) max = m ; else max = n ; while ( 1 ) { if ( max % m == 0 && max % n == 0 ) { return max ; break ; } ++ max ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 113,
              "end_byte": 114,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 115,
              "end_byte": 124,
              "text": "int max ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 115,
                  "end_byte": 118,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 119,
                  "end_byte": 122,
                  "text": "max",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 123,
                  "end_byte": 124,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 125,
              "end_byte": 162,
              "text": "if ( m > n ) max = m ; else max = n ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 125,
                  "end_byte": 127,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 128,
                  "end_byte": 137,
                  "text": "( m > n )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 128,
                      "end_byte": 129,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 130,
                      "end_byte": 135,
                      "text": "m > n",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 130,
                          "end_byte": 131,
                          "text": "m",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 132,
                          "end_byte": 133,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 134,
                          "end_byte": 135,
                          "text": "n",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 136,
                      "end_byte": 137,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "expression_statement",
                  "start_byte": 138,
                  "end_byte": 147,
                  "text": "max = m ;",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start_byte": 138,
                      "end_byte": 145,
                      "text": "max = m",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 138,
                          "end_byte": 141,
                          "text": "max",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 142,
                          "end_byte": 143,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 144,
                          "end_byte": 145,
                          "text": "m",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 146,
                      "end_byte": 147,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 148,
                  "end_byte": 162,
                  "text": "else max = n ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 148,
                      "end_byte": 152,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 153,
                      "end_byte": 162,
                      "text": "max = n ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 153,
                          "end_byte": 160,
                          "text": "max = n",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 153,
                              "end_byte": 156,
                              "text": "max",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 157,
                              "end_byte": 158,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 159,
                              "end_byte": 160,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 161,
                          "end_byte": 162,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 163,
              "end_byte": 248,
              "text": "while ( 1 ) { if ( max % m == 0 && max % n == 0 ) { return max ; break ; } ++ max ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 163,
                  "end_byte": 168,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 169,
                  "end_byte": 174,
                  "text": "( 1 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 169,
                      "end_byte": 170,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 171,
                      "end_byte": 172,
                      "text": "1",
                      "children": []
                    },
                    {
                      "type": ")",
                      "start_byte": 173,
                      "end_byte": 174,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 175,
                  "end_byte": 248,
                  "text": "{ if ( max % m == 0 && max % n == 0 ) { return max ; break ; } ++ max ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 175,
                      "end_byte": 176,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 177,
                      "end_byte": 237,
                      "text": "if ( max % m == 0 && max % n == 0 ) { return max ; break ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 177,
                          "end_byte": 179,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 180,
                          "end_byte": 212,
                          "text": "( max % m == 0 && max % n == 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 180,
                              "end_byte": 181,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 182,
                              "end_byte": 210,
                              "text": "max % m == 0 && max % n == 0",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 182,
                                  "end_byte": 194,
                                  "text": "max % m == 0",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 182,
                                      "end_byte": 189,
                                      "text": "max % m",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 182,
                                          "end_byte": 185,
                                          "text": "max",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 186,
                                          "end_byte": 187,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 188,
                                          "end_byte": 189,
                                          "text": "m",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "==",
                                      "start_byte": 190,
                                      "end_byte": 192,
                                      "text": "==",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 193,
                                      "end_byte": 194,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "&&",
                                  "start_byte": 195,
                                  "end_byte": 197,
                                  "text": "&&",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 198,
                                  "end_byte": 210,
                                  "text": "max % n == 0",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 198,
                                      "end_byte": 205,
                                      "text": "max % n",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 198,
                                          "end_byte": 201,
                                          "text": "max",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 202,
                                          "end_byte": 203,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 204,
                                          "end_byte": 205,
                                          "text": "n",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "==",
                                      "start_byte": 206,
                                      "end_byte": 208,
                                      "text": "==",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 209,
                                      "end_byte": 210,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 211,
                              "end_byte": 212,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 213,
                          "end_byte": 237,
                          "text": "{ return max ; break ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 213,
                              "end_byte": 214,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "return_statement",
                              "start_byte": 215,
                              "end_byte": 227,
                              "text": "return max ;",
                              "children": [
                                {
                                  "type": "return",
                                  "start_byte": 215,
                                  "end_byte": 221,
                                  "text": "return",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 222,
                                  "end_byte": 225,
                                  "text": "max",
                                  "children": []
                                },
                                {
                                  "type": ";",
                                  "start_byte": 226,
                                  "end_byte": 227,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "break_statement",
                              "start_byte": 228,
                              "end_byte": 235,
                              "text": "break ;",
                              "children": [
                                {
                                  "type": "break",
                                  "start_byte": 228,
                                  "end_byte": 233,
                                  "text": "break",
                                  "children": []
                                },
                                {
                                  "type": ";",
                                  "start_byte": 234,
                                  "end_byte": 235,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 236,
                              "end_byte": 237,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 238,
                      "end_byte": 246,
                      "text": "++ max ;",
                      "children": [
                        {
                          "type": "update_expression",
                          "start_byte": 238,
                          "end_byte": 244,
                          "text": "++ max",
                          "children": [
                            {
                              "type": "++",
                              "start_byte": 238,
                              "end_byte": 240,
                              "text": "++",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 241,
                              "end_byte": 244,
                              "text": "max",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 245,
                          "end_byte": 246,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 247,
                      "end_byte": 248,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 249,
              "end_byte": 250,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 251,
      "end_byte": 438,
      "text": "int main ( ) { long t , a , b , g , l ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%ld%ld\" , & a , & b ) ; g = gcd ( a , b ) ; l = lcm ( a , b ) ; printf ( \"%d %d\\n\" , g , l ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 251,
          "end_byte": 254,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 255,
          "end_byte": 263,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 255,
              "end_byte": 259,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 260,
              "end_byte": 263,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 260,
                  "end_byte": 261,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 262,
                  "end_byte": 263,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 264,
          "end_byte": 438,
          "text": "{ long t , a , b , g , l ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%ld%ld\" , & a , & b ) ; g = gcd ( a , b ) ; l = lcm ( a , b ) ; printf ( \"%d %d\\n\" , g , l ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 264,
              "end_byte": 265,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 266,
              "end_byte": 290,
              "text": "long t , a , b , g , l ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 266,
                  "end_byte": 270,
                  "text": "long",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 266,
                      "end_byte": 270,
                      "text": "long",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 271,
                  "end_byte": 272,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 273,
                  "end_byte": 274,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 275,
                  "end_byte": 276,
                  "text": "a",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 277,
                  "end_byte": 278,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 279,
                  "end_byte": 280,
                  "text": "b",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 281,
                  "end_byte": 282,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 283,
                  "end_byte": 284,
                  "text": "g",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 285,
                  "end_byte": 286,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 287,
                  "end_byte": 288,
                  "text": "l",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 289,
                  "end_byte": 290,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 291,
              "end_byte": 313,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 291,
                  "end_byte": 311,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 291,
                      "end_byte": 296,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 297,
                      "end_byte": 311,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 297,
                          "end_byte": 298,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 299,
                          "end_byte": 303,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 299,
                              "end_byte": 300,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 300,
                              "end_byte": 302,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 302,
                              "end_byte": 303,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 304,
                          "end_byte": 305,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 306,
                          "end_byte": 309,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 306,
                              "end_byte": 307,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 308,
                              "end_byte": 309,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 310,
                          "end_byte": 311,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 312,
                  "end_byte": 313,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 314,
              "end_byte": 436,
              "text": "while ( t -- ) { scanf ( \"%ld%ld\" , & a , & b ) ; g = gcd ( a , b ) ; l = lcm ( a , b ) ; printf ( \"%d %d\\n\" , g , l ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 314,
                  "end_byte": 319,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 320,
                  "end_byte": 328,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 320,
                      "end_byte": 321,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 322,
                      "end_byte": 326,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 322,
                          "end_byte": 323,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 324,
                          "end_byte": 326,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 327,
                      "end_byte": 328,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 329,
                  "end_byte": 436,
                  "text": "{ scanf ( \"%ld%ld\" , & a , & b ) ; g = gcd ( a , b ) ; l = lcm ( a , b ) ; printf ( \"%d %d\\n\" , g , l ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 329,
                      "end_byte": 330,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 331,
                      "end_byte": 363,
                      "text": "scanf ( \"%ld%ld\" , & a , & b ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 331,
                          "end_byte": 361,
                          "text": "scanf ( \"%ld%ld\" , & a , & b )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 331,
                              "end_byte": 336,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 337,
                              "end_byte": 361,
                              "text": "( \"%ld%ld\" , & a , & b )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 337,
                                  "end_byte": 338,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 339,
                                  "end_byte": 347,
                                  "text": "\"%ld%ld\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 339,
                                      "end_byte": 340,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 340,
                                      "end_byte": 346,
                                      "text": "%ld%ld",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 346,
                                      "end_byte": 347,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 348,
                                  "end_byte": 349,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 350,
                                  "end_byte": 353,
                                  "text": "& a",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 350,
                                      "end_byte": 351,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 352,
                                      "end_byte": 353,
                                      "text": "a",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 354,
                                  "end_byte": 355,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 356,
                                  "end_byte": 359,
                                  "text": "& b",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 356,
                                      "end_byte": 357,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 358,
                                      "end_byte": 359,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 360,
                                  "end_byte": 361,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 362,
                          "end_byte": 363,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 364,
                      "end_byte": 383,
                      "text": "g = gcd ( a , b ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 364,
                          "end_byte": 381,
                          "text": "g = gcd ( a , b )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 364,
                              "end_byte": 365,
                              "text": "g",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 366,
                              "end_byte": 367,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 368,
                              "end_byte": 381,
                              "text": "gcd ( a , b )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 368,
                                  "end_byte": 371,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 372,
                                  "end_byte": 381,
                                  "text": "( a , b )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 372,
                                      "end_byte": 373,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 374,
                                      "end_byte": 375,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 376,
                                      "end_byte": 377,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 378,
                                      "end_byte": 379,
                                      "text": "b",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 380,
                                      "end_byte": 381,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 382,
                          "end_byte": 383,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 384,
                      "end_byte": 403,
                      "text": "l = lcm ( a , b ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 384,
                          "end_byte": 401,
                          "text": "l = lcm ( a , b )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 384,
                              "end_byte": 385,
                              "text": "l",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 386,
                              "end_byte": 387,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 388,
                              "end_byte": 401,
                              "text": "lcm ( a , b )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 388,
                                  "end_byte": 391,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 392,
                                  "end_byte": 401,
                                  "text": "( a , b )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 392,
                                      "end_byte": 393,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 394,
                                      "end_byte": 395,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 396,
                                      "end_byte": 397,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 398,
                                      "end_byte": 399,
                                      "text": "b",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 400,
                                      "end_byte": 401,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 402,
                          "end_byte": 403,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 404,
                      "end_byte": 434,
                      "text": "printf ( \"%d %d\\n\" , g , l ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 404,
                          "end_byte": 432,
                          "text": "printf ( \"%d %d\\n\" , g , l )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 404,
                              "end_byte": 410,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 411,
                              "end_byte": 432,
                              "text": "( \"%d %d\\n\" , g , l )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 411,
                                  "end_byte": 412,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 413,
                                  "end_byte": 422,
                                  "text": "\"%d %d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 413,
                                      "end_byte": 414,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 414,
                                      "end_byte": 419,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 419,
                                      "end_byte": 421,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 421,
                                      "end_byte": 422,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 423,
                                  "end_byte": 424,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 425,
                                  "end_byte": 426,
                                  "text": "g",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 427,
                                  "end_byte": 428,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 429,
                                  "end_byte": 430,
                                  "text": "l",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 431,
                                  "end_byte": 432,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 433,
                          "end_byte": 434,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 435,
                      "end_byte": 436,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 437,
              "end_byte": 438,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}