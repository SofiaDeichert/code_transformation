{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 276,
  "text": "main ( ) { int t , n1 , n2 , temp , GCD , LCM ; scanf ( \" %d\" , & t ) ; while ( t -- ) { scanf ( \"%d %d\" , & n1 , & n2 ) ; LCM = n1 * n2 ; if ( n1 != 0 && n2 != 0 ) { temp = n1 % n2 ; n1 = n2 ; n2 = temp ; } } GCD = n1 ; LCM = LCM / GCD ; printf ( \"%d %d \\n\" , GCD , LCM ) ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 276,
      "text": "main ( ) { int t , n1 , n2 , temp , GCD , LCM ; scanf ( \" %d\" , & t ) ; while ( t -- ) { scanf ( \"%d %d\" , & n1 , & n2 ) ; LCM = n1 * n2 ; if ( n1 != 0 && n2 != 0 ) { temp = n1 % n2 ; n1 = n2 ; n2 = temp ; } } GCD = n1 ; LCM = LCM / GCD ; printf ( \"%d %d \\n\" , GCD , LCM ) ; }",
      "children": [
        {
          "type": "function_declarator",
          "start_byte": 0,
          "end_byte": 8,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 0,
              "end_byte": 4,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 5,
              "end_byte": 8,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 5,
                  "end_byte": 6,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 7,
                  "end_byte": 8,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 9,
          "end_byte": 276,
          "text": "{ int t , n1 , n2 , temp , GCD , LCM ; scanf ( \" %d\" , & t ) ; while ( t -- ) { scanf ( \"%d %d\" , & n1 , & n2 ) ; LCM = n1 * n2 ; if ( n1 != 0 && n2 != 0 ) { temp = n1 % n2 ; n1 = n2 ; n2 = temp ; } } GCD = n1 ; LCM = LCM / GCD ; printf ( \"%d %d \\n\" , GCD , LCM ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 9,
              "end_byte": 10,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 11,
              "end_byte": 47,
              "text": "int t , n1 , n2 , temp , GCD , LCM ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 11,
                  "end_byte": 14,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 15,
                  "end_byte": 16,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 17,
                  "end_byte": 18,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 21,
                  "text": "n1",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 22,
                  "end_byte": 23,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 24,
                  "end_byte": 26,
                  "text": "n2",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 27,
                  "end_byte": 28,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 29,
                  "end_byte": 33,
                  "text": "temp",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 34,
                  "end_byte": 35,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 36,
                  "end_byte": 39,
                  "text": "GCD",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 40,
                  "end_byte": 41,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 42,
                  "end_byte": 45,
                  "text": "LCM",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 46,
                  "end_byte": 47,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 48,
              "end_byte": 71,
              "text": "scanf ( \" %d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 48,
                  "end_byte": 69,
                  "text": "scanf ( \" %d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 48,
                      "end_byte": 53,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 54,
                      "end_byte": 69,
                      "text": "( \" %d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 54,
                          "end_byte": 55,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 56,
                          "end_byte": 61,
                          "text": "\" %d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 56,
                              "end_byte": 57,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 57,
                              "end_byte": 60,
                              "text": " %d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 60,
                              "end_byte": 61,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 62,
                          "end_byte": 63,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 64,
                          "end_byte": 67,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 64,
                              "end_byte": 65,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 66,
                              "end_byte": 67,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 68,
                          "end_byte": 69,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 70,
                  "end_byte": 71,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 72,
              "end_byte": 209,
              "text": "while ( t -- ) { scanf ( \"%d %d\" , & n1 , & n2 ) ; LCM = n1 * n2 ; if ( n1 != 0 && n2 != 0 ) { temp = n1 % n2 ; n1 = n2 ; n2 = temp ; } }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 72,
                  "end_byte": 77,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 78,
                  "end_byte": 86,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 78,
                      "end_byte": 79,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 80,
                      "end_byte": 84,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 80,
                          "end_byte": 81,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 82,
                          "end_byte": 84,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 85,
                      "end_byte": 86,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 87,
                  "end_byte": 209,
                  "text": "{ scanf ( \"%d %d\" , & n1 , & n2 ) ; LCM = n1 * n2 ; if ( n1 != 0 && n2 != 0 ) { temp = n1 % n2 ; n1 = n2 ; n2 = temp ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 87,
                      "end_byte": 88,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 89,
                      "end_byte": 122,
                      "text": "scanf ( \"%d %d\" , & n1 , & n2 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 89,
                          "end_byte": 120,
                          "text": "scanf ( \"%d %d\" , & n1 , & n2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 89,
                              "end_byte": 94,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 95,
                              "end_byte": 120,
                              "text": "( \"%d %d\" , & n1 , & n2 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 95,
                                  "end_byte": 96,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 97,
                                  "end_byte": 104,
                                  "text": "\"%d %d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 97,
                                      "end_byte": 98,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 98,
                                      "end_byte": 103,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 103,
                                      "end_byte": 104,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 105,
                                  "end_byte": 106,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 107,
                                  "end_byte": 111,
                                  "text": "& n1",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 107,
                                      "end_byte": 108,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 109,
                                      "end_byte": 111,
                                      "text": "n1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 112,
                                  "end_byte": 113,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 114,
                                  "end_byte": 118,
                                  "text": "& n2",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 114,
                                      "end_byte": 115,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 116,
                                      "end_byte": 118,
                                      "text": "n2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 119,
                                  "end_byte": 120,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 121,
                          "end_byte": 122,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 123,
                      "end_byte": 138,
                      "text": "LCM = n1 * n2 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 123,
                          "end_byte": 136,
                          "text": "LCM = n1 * n2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 123,
                              "end_byte": 126,
                              "text": "LCM",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 127,
                              "end_byte": 128,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 129,
                              "end_byte": 136,
                              "text": "n1 * n2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 129,
                                  "end_byte": 131,
                                  "text": "n1",
                                  "children": []
                                },
                                {
                                  "type": "*",
                                  "start_byte": 132,
                                  "end_byte": 133,
                                  "text": "*",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 134,
                                  "end_byte": 136,
                                  "text": "n2",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 137,
                          "end_byte": 138,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 139,
                      "end_byte": 207,
                      "text": "if ( n1 != 0 && n2 != 0 ) { temp = n1 % n2 ; n1 = n2 ; n2 = temp ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 139,
                          "end_byte": 141,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 142,
                          "end_byte": 164,
                          "text": "( n1 != 0 && n2 != 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 142,
                              "end_byte": 143,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 144,
                              "end_byte": 162,
                              "text": "n1 != 0 && n2 != 0",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 144,
                                  "end_byte": 151,
                                  "text": "n1 != 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 144,
                                      "end_byte": 146,
                                      "text": "n1",
                                      "children": []
                                    },
                                    {
                                      "type": "!=",
                                      "start_byte": 147,
                                      "end_byte": 149,
                                      "text": "!=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 150,
                                      "end_byte": 151,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "&&",
                                  "start_byte": 152,
                                  "end_byte": 154,
                                  "text": "&&",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 155,
                                  "end_byte": 162,
                                  "text": "n2 != 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 155,
                                      "end_byte": 157,
                                      "text": "n2",
                                      "children": []
                                    },
                                    {
                                      "type": "!=",
                                      "start_byte": 158,
                                      "end_byte": 160,
                                      "text": "!=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 161,
                                      "end_byte": 162,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 163,
                              "end_byte": 164,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 165,
                          "end_byte": 207,
                          "text": "{ temp = n1 % n2 ; n1 = n2 ; n2 = temp ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 165,
                              "end_byte": 166,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 167,
                              "end_byte": 183,
                              "text": "temp = n1 % n2 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 167,
                                  "end_byte": 181,
                                  "text": "temp = n1 % n2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 167,
                                      "end_byte": 171,
                                      "text": "temp",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 172,
                                      "end_byte": 173,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 174,
                                      "end_byte": 181,
                                      "text": "n1 % n2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 174,
                                          "end_byte": 176,
                                          "text": "n1",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 177,
                                          "end_byte": 178,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 179,
                                          "end_byte": 181,
                                          "text": "n2",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 182,
                                  "end_byte": 183,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 184,
                              "end_byte": 193,
                              "text": "n1 = n2 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 184,
                                  "end_byte": 191,
                                  "text": "n1 = n2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 184,
                                      "end_byte": 186,
                                      "text": "n1",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 187,
                                      "end_byte": 188,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 189,
                                      "end_byte": 191,
                                      "text": "n2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 192,
                                  "end_byte": 193,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 194,
                              "end_byte": 205,
                              "text": "n2 = temp ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 194,
                                  "end_byte": 203,
                                  "text": "n2 = temp",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 194,
                                      "end_byte": 196,
                                      "text": "n2",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 197,
                                      "end_byte": 198,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 199,
                                      "end_byte": 203,
                                      "text": "temp",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 204,
                                  "end_byte": 205,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 206,
                              "end_byte": 207,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 208,
                      "end_byte": 209,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 210,
              "end_byte": 220,
              "text": "GCD = n1 ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 210,
                  "end_byte": 218,
                  "text": "GCD = n1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 210,
                      "end_byte": 213,
                      "text": "GCD",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 214,
                      "end_byte": 215,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 216,
                      "end_byte": 218,
                      "text": "n1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 219,
                  "end_byte": 220,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 221,
              "end_byte": 238,
              "text": "LCM = LCM / GCD ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 221,
                  "end_byte": 236,
                  "text": "LCM = LCM / GCD",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 221,
                      "end_byte": 224,
                      "text": "LCM",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 225,
                      "end_byte": 226,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 227,
                      "end_byte": 236,
                      "text": "LCM / GCD",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 227,
                          "end_byte": 230,
                          "text": "LCM",
                          "children": []
                        },
                        {
                          "type": "/",
                          "start_byte": 231,
                          "end_byte": 232,
                          "text": "/",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 233,
                          "end_byte": 236,
                          "text": "GCD",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 237,
                  "end_byte": 238,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 239,
              "end_byte": 274,
              "text": "printf ( \"%d %d \\n\" , GCD , LCM ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 239,
                  "end_byte": 272,
                  "text": "printf ( \"%d %d \\n\" , GCD , LCM )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 239,
                      "end_byte": 245,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 246,
                      "end_byte": 272,
                      "text": "( \"%d %d \\n\" , GCD , LCM )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 246,
                          "end_byte": 247,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 248,
                          "end_byte": 258,
                          "text": "\"%d %d \\n\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 248,
                              "end_byte": 249,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 249,
                              "end_byte": 255,
                              "text": "%d %d ",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 255,
                              "end_byte": 257,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 257,
                              "end_byte": 258,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 259,
                          "end_byte": 260,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 261,
                          "end_byte": 264,
                          "text": "GCD",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 265,
                          "end_byte": 266,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 267,
                          "end_byte": 270,
                          "text": "LCM",
                          "children": []
                        },
                        {
                          "type": ")",
                          "start_byte": 271,
                          "end_byte": 272,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 273,
                  "end_byte": 274,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 275,
              "end_byte": 276,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}