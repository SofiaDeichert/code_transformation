{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 520,
  "text": "void main ( ) { int a , b , c , gcd , lcm , remainder , numerator , denominator , i ; scanf ( \"%d\" , & a ) ; for ( i = 1 ; i <= a ; i ++ ) { scanf ( \"%d %d\" , & b , & c ) ; if ( b > c ) { numerator = b ; denominator = c ; } else { numerator = c ; denominator = b ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = ( b * c ) / gcd ; printf ( \"%d \" , gcd ) ; printf ( \"%d\" , lcm ) ; } }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 520,
      "text": "void main ( ) { int a , b , c , gcd , lcm , remainder , numerator , denominator , i ; scanf ( \"%d\" , & a ) ; for ( i = 1 ; i <= a ; i ++ ) { scanf ( \"%d %d\" , & b , & c ) ; if ( b > c ) { numerator = b ; denominator = c ; } else { numerator = c ; denominator = b ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = ( b * c ) / gcd ; printf ( \"%d \" , gcd ) ; printf ( \"%d\" , lcm ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 4,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 5,
          "end_byte": 13,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 5,
              "end_byte": 9,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 10,
              "end_byte": 13,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 10,
                  "end_byte": 11,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 12,
                  "end_byte": 13,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 14,
          "end_byte": 520,
          "text": "{ int a , b , c , gcd , lcm , remainder , numerator , denominator , i ; scanf ( \"%d\" , & a ) ; for ( i = 1 ; i <= a ; i ++ ) { scanf ( \"%d %d\" , & b , & c ) ; if ( b > c ) { numerator = b ; denominator = c ; } else { numerator = c ; denominator = b ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = ( b * c ) / gcd ; printf ( \"%d \" , gcd ) ; printf ( \"%d\" , lcm ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 14,
              "end_byte": 15,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 16,
              "end_byte": 85,
              "text": "int a , b , c , gcd , lcm , remainder , numerator , denominator , i ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 16,
                  "end_byte": 19,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 20,
                  "end_byte": 21,
                  "text": "a",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 22,
                  "end_byte": 23,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 24,
                  "end_byte": 25,
                  "text": "b",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 26,
                  "end_byte": 27,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 28,
                  "end_byte": 29,
                  "text": "c",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 30,
                  "end_byte": 31,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 32,
                  "end_byte": 35,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 36,
                  "end_byte": 37,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 38,
                  "end_byte": 41,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 42,
                  "end_byte": 43,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 44,
                  "end_byte": 53,
                  "text": "remainder",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 54,
                  "end_byte": 55,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 56,
                  "end_byte": 65,
                  "text": "numerator",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 66,
                  "end_byte": 67,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 68,
                  "end_byte": 79,
                  "text": "denominator",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 80,
                  "end_byte": 81,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 82,
                  "end_byte": 83,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 84,
                  "end_byte": 85,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 86,
              "end_byte": 108,
              "text": "scanf ( \"%d\" , & a ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 86,
                  "end_byte": 106,
                  "text": "scanf ( \"%d\" , & a )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 86,
                      "end_byte": 91,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 92,
                      "end_byte": 106,
                      "text": "( \"%d\" , & a )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 92,
                          "end_byte": 93,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 94,
                          "end_byte": 98,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 94,
                              "end_byte": 95,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 95,
                              "end_byte": 97,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 97,
                              "end_byte": 98,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 99,
                          "end_byte": 100,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 101,
                          "end_byte": 104,
                          "text": "& a",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 101,
                              "end_byte": 102,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 103,
                              "end_byte": 104,
                              "text": "a",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 105,
                          "end_byte": 106,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 107,
                  "end_byte": 108,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 109,
              "end_byte": 518,
              "text": "for ( i = 1 ; i <= a ; i ++ ) { scanf ( \"%d %d\" , & b , & c ) ; if ( b > c ) { numerator = b ; denominator = c ; } else { numerator = c ; denominator = b ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = ( b * c ) / gcd ; printf ( \"%d \" , gcd ) ; printf ( \"%d\" , lcm ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 109,
                  "end_byte": 112,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 113,
                  "end_byte": 114,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 115,
                  "end_byte": 120,
                  "text": "i = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 115,
                      "end_byte": 116,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 117,
                      "end_byte": 118,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 119,
                      "end_byte": 120,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 121,
                  "end_byte": 122,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 123,
                  "end_byte": 129,
                  "text": "i <= a",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 123,
                      "end_byte": 124,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<=",
                      "start_byte": 125,
                      "end_byte": 127,
                      "text": "<=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 128,
                      "end_byte": 129,
                      "text": "a",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 130,
                  "end_byte": 131,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 132,
                  "end_byte": 136,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 132,
                      "end_byte": 133,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 134,
                      "end_byte": 136,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 137,
                  "end_byte": 138,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 139,
                  "end_byte": 518,
                  "text": "{ scanf ( \"%d %d\" , & b , & c ) ; if ( b > c ) { numerator = b ; denominator = c ; } else { numerator = c ; denominator = b ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = ( b * c ) / gcd ; printf ( \"%d \" , gcd ) ; printf ( \"%d\" , lcm ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 139,
                      "end_byte": 140,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 141,
                      "end_byte": 172,
                      "text": "scanf ( \"%d %d\" , & b , & c ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 141,
                          "end_byte": 170,
                          "text": "scanf ( \"%d %d\" , & b , & c )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 141,
                              "end_byte": 146,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 147,
                              "end_byte": 170,
                              "text": "( \"%d %d\" , & b , & c )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 147,
                                  "end_byte": 148,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 149,
                                  "end_byte": 156,
                                  "text": "\"%d %d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 149,
                                      "end_byte": 150,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 150,
                                      "end_byte": 155,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 155,
                                      "end_byte": 156,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 157,
                                  "end_byte": 158,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 159,
                                  "end_byte": 162,
                                  "text": "& b",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 159,
                                      "end_byte": 160,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 161,
                                      "end_byte": 162,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 163,
                                  "end_byte": 164,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 165,
                                  "end_byte": 168,
                                  "text": "& c",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 165,
                                      "end_byte": 166,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 167,
                                      "end_byte": 168,
                                      "text": "c",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 169,
                                  "end_byte": 170,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 171,
                          "end_byte": 172,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 173,
                      "end_byte": 266,
                      "text": "if ( b > c ) { numerator = b ; denominator = c ; } else { numerator = c ; denominator = b ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 173,
                          "end_byte": 175,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 176,
                          "end_byte": 185,
                          "text": "( b > c )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 176,
                              "end_byte": 177,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 178,
                              "end_byte": 183,
                              "text": "b > c",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 178,
                                  "end_byte": 179,
                                  "text": "b",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 180,
                                  "end_byte": 181,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 182,
                                  "end_byte": 183,
                                  "text": "c",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 184,
                              "end_byte": 185,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 186,
                          "end_byte": 223,
                          "text": "{ numerator = b ; denominator = c ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 186,
                              "end_byte": 187,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 188,
                              "end_byte": 203,
                              "text": "numerator = b ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 188,
                                  "end_byte": 201,
                                  "text": "numerator = b",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 188,
                                      "end_byte": 197,
                                      "text": "numerator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 198,
                                      "end_byte": 199,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 200,
                                      "end_byte": 201,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 202,
                                  "end_byte": 203,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 204,
                              "end_byte": 221,
                              "text": "denominator = c ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 204,
                                  "end_byte": 219,
                                  "text": "denominator = c",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 204,
                                      "end_byte": 215,
                                      "text": "denominator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 216,
                                      "end_byte": 217,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 218,
                                      "end_byte": 219,
                                      "text": "c",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 220,
                                  "end_byte": 221,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 222,
                              "end_byte": 223,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 224,
                          "end_byte": 266,
                          "text": "else { numerator = c ; denominator = b ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 224,
                              "end_byte": 228,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 229,
                              "end_byte": 266,
                              "text": "{ numerator = c ; denominator = b ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 229,
                                  "end_byte": 230,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 231,
                                  "end_byte": 246,
                                  "text": "numerator = c ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 231,
                                      "end_byte": 244,
                                      "text": "numerator = c",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 231,
                                          "end_byte": 240,
                                          "text": "numerator",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 241,
                                          "end_byte": 242,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 243,
                                          "end_byte": 244,
                                          "text": "c",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 245,
                                      "end_byte": 246,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 247,
                                  "end_byte": 264,
                                  "text": "denominator = b ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 247,
                                      "end_byte": 262,
                                      "text": "denominator = b",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 247,
                                          "end_byte": 258,
                                          "text": "denominator",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 259,
                                          "end_byte": 260,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 261,
                                          "end_byte": 262,
                                          "text": "b",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 263,
                                      "end_byte": 264,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 265,
                                  "end_byte": 266,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 267,
                      "end_byte": 304,
                      "text": "remainder = numerator % denominator ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 267,
                          "end_byte": 302,
                          "text": "remainder = numerator % denominator",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 267,
                              "end_byte": 276,
                              "text": "remainder",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 277,
                              "end_byte": 278,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 279,
                              "end_byte": 302,
                              "text": "numerator % denominator",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 279,
                                  "end_byte": 288,
                                  "text": "numerator",
                                  "children": []
                                },
                                {
                                  "type": "%",
                                  "start_byte": 289,
                                  "end_byte": 290,
                                  "text": "%",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 291,
                                  "end_byte": 302,
                                  "text": "denominator",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 303,
                          "end_byte": 304,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 305,
                      "end_byte": 423,
                      "text": "while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 305,
                          "end_byte": 310,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 311,
                          "end_byte": 329,
                          "text": "( remainder != 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 311,
                              "end_byte": 312,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 313,
                              "end_byte": 327,
                              "text": "remainder != 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 313,
                                  "end_byte": 322,
                                  "text": "remainder",
                                  "children": []
                                },
                                {
                                  "type": "!=",
                                  "start_byte": 323,
                                  "end_byte": 325,
                                  "text": "!=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 326,
                                  "end_byte": 327,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 328,
                              "end_byte": 329,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 330,
                          "end_byte": 423,
                          "text": "{ numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 330,
                              "end_byte": 331,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 332,
                              "end_byte": 357,
                              "text": "numerator = denominator ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 332,
                                  "end_byte": 355,
                                  "text": "numerator = denominator",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 332,
                                      "end_byte": 341,
                                      "text": "numerator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 342,
                                      "end_byte": 343,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 344,
                                      "end_byte": 355,
                                      "text": "denominator",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 356,
                                  "end_byte": 357,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 358,
                              "end_byte": 383,
                              "text": "denominator = remainder ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 358,
                                  "end_byte": 381,
                                  "text": "denominator = remainder",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 358,
                                      "end_byte": 369,
                                      "text": "denominator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 370,
                                      "end_byte": 371,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 372,
                                      "end_byte": 381,
                                      "text": "remainder",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 382,
                                  "end_byte": 383,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 384,
                              "end_byte": 421,
                              "text": "remainder = numerator % denominator ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 384,
                                  "end_byte": 419,
                                  "text": "remainder = numerator % denominator",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 384,
                                      "end_byte": 393,
                                      "text": "remainder",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 394,
                                      "end_byte": 395,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 396,
                                      "end_byte": 419,
                                      "text": "numerator % denominator",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 396,
                                          "end_byte": 405,
                                          "text": "numerator",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 406,
                                          "end_byte": 407,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 408,
                                          "end_byte": 419,
                                          "text": "denominator",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 420,
                                  "end_byte": 421,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 422,
                              "end_byte": 423,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 424,
                      "end_byte": 443,
                      "text": "gcd = denominator ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 424,
                          "end_byte": 441,
                          "text": "gcd = denominator",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 424,
                              "end_byte": 427,
                              "text": "gcd",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 428,
                              "end_byte": 429,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 430,
                              "end_byte": 441,
                              "text": "denominator",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 442,
                          "end_byte": 443,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 444,
                      "end_byte": 467,
                      "text": "lcm = ( b * c ) / gcd ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 444,
                          "end_byte": 465,
                          "text": "lcm = ( b * c ) / gcd",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 444,
                              "end_byte": 447,
                              "text": "lcm",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 448,
                              "end_byte": 449,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 450,
                              "end_byte": 465,
                              "text": "( b * c ) / gcd",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 450,
                                  "end_byte": 459,
                                  "text": "( b * c )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 450,
                                      "end_byte": 451,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 452,
                                      "end_byte": 457,
                                      "text": "b * c",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 452,
                                          "end_byte": 453,
                                          "text": "b",
                                          "children": []
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 454,
                                          "end_byte": 455,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 456,
                                          "end_byte": 457,
                                          "text": "c",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 458,
                                      "end_byte": 459,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 460,
                                  "end_byte": 461,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 462,
                                  "end_byte": 465,
                                  "text": "gcd",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 466,
                          "end_byte": 467,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 468,
                      "end_byte": 492,
                      "text": "printf ( \"%d \" , gcd ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 468,
                          "end_byte": 490,
                          "text": "printf ( \"%d \" , gcd )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 468,
                              "end_byte": 474,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 475,
                              "end_byte": 490,
                              "text": "( \"%d \" , gcd )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 475,
                                  "end_byte": 476,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 477,
                                  "end_byte": 482,
                                  "text": "\"%d \"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 477,
                                      "end_byte": 478,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 478,
                                      "end_byte": 481,
                                      "text": "%d ",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 481,
                                      "end_byte": 482,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 483,
                                  "end_byte": 484,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 485,
                                  "end_byte": 488,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 489,
                                  "end_byte": 490,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 491,
                          "end_byte": 492,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 493,
                      "end_byte": 516,
                      "text": "printf ( \"%d\" , lcm ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 493,
                          "end_byte": 514,
                          "text": "printf ( \"%d\" , lcm )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 493,
                              "end_byte": 499,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 500,
                              "end_byte": 514,
                              "text": "( \"%d\" , lcm )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 500,
                                  "end_byte": 501,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 502,
                                  "end_byte": 506,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 502,
                                      "end_byte": 503,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 503,
                                      "end_byte": 505,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 505,
                                      "end_byte": 506,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 507,
                                  "end_byte": 508,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 509,
                                  "end_byte": 512,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 513,
                                  "end_byte": 514,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 515,
                          "end_byte": 516,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 517,
                      "end_byte": 518,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 519,
              "end_byte": 520,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}