int traverse ( int ary [ ] [ 100 ] , int row , int col , int totalrow , int presum ) ; int main ( ) { int noOfCases , noOfRows , i , j , k , array [ 100 ] [ 100 ] ; scanf ( "%d" , & noOfCases ) ; for ( i = 0 ; i < noOfCases ; i ++ ) { scanf ( "%d" , & noOfRows ) ; for ( j = 0 ; j < noOfRows ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) scanf ( "%d" , & array [ j ] [ k ] ) ; } printf ( "%d\n" , traverse ( array , 0 , 0 , noOfRows - 1 , 0 ) ) ; } return 0 ; } int traverse ( int ary [ ] [ 100 ] , int row , int col , int totalrow , int presum ) { int sum1 = 0 , sum2 = 0 ; if ( row >= totalrow ) return ( presum + ary [ row ] [ col ] ) ; sum1 = traverse ( ary , row + 1 , col , totalrow , presum + ary [ row ] [ col ] ) ; sum2 = traverse ( ary , row + 1 , col + 1 , totalrow , presum + ary [ row ] [ col ] ) ; if ( sum1 >= sum2 ) return sum1 ; return sum2 ; }