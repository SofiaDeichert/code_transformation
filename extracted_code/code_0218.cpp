int i , j ; int maximum ( int a , int b ) { if ( a > b ) return a ; else return b ; } int main ( ) { int t , a [ MAX ] [ MAX ] , n ; scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & n ) ; for ( i = 1 ; i <= n ; i ++ ) { for ( j = 1 ; j <= i ; j ++ ) { scanf ( "%d" , & a [ i ] [ j ] ) ; } } int dp [ MAX ] [ MAX ] = { 0 } ; dp [ 1 ] [ 1 ] = a [ 1 ] [ 1 ] ; for ( i = 2 ; i <= n ; i ++ ) { for ( j = 1 ; j <= i ; j ++ ) { dp [ i ] [ j ] = maximum ( dp [ i - 1 ] [ j ] , dp [ i - 1 ] [ j - 1 ] ) + a [ i ] [ j ] ; } } int sum = dp [ n ] [ 1 ] ; for ( i = 2 ; i <= n ; i ++ ) { if ( sum < dp [ n ] [ i ] ) sum = dp [ n ] [ i ] ; } printf ( "%d\n" , sum ) ; } return 0 ; }