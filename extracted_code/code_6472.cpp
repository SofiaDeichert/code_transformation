long long deletion ( long long [ ] , long long , long long ) ; int main ( void ) { long long t , n , a [ 50000 ] , i , j , cost = { 0 } , k , min ; si ( t ) ; for ( i = 0 ; i < t ; i ++ ) { si ( n ) ; for ( j = 0 ; j < n ; j ++ ) si ( a [ j ] ) ; cost = 0 ; min = 0 ; while ( n != 1 ) { min = 0 ; for ( j = 1 ; j < n ; j ++ ) if ( a [ j ] < a [ min ] ) min = j ; cost += a [ min ] ; if ( min != n - 1 || min != 0 ) if ( a [ min - 1 ] >= a [ min + 1 ] ) n = deletion ( a , n , ( min - 1 ) ) ; else n = deletion ( a , n , ( min + 1 ) ) ; else if ( min == 0 ) n = deletion ( a , n , 1 ) ; else n = deletion ( a , n , ( n - 2 ) ) ; } printf ( "%lld\n" , cost ) ; } return 0 ; } long long deletion ( long long a [ ] , long long n , long long pos ) { int i ; for ( i = pos ; i < n - 1 ; i ++ ) { a [ i ] = a [ i + 1 ] ; } n -- ; return n ; }