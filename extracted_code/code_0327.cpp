int max ( int a , int b ) { if ( a > b ) return a ; else return b ; } int a [ 100 ] [ 100 ] , b [ 100 ] [ 100 ] ; int compute ( int i , int j , int r ) { if ( r == 0 ) return 0 ; if ( b [ i + 1 ] [ j ] == 0 ) b [ i + 1 ] [ j ] = compute ( i + 1 , j , r - 1 ) ; if ( b [ i + 1 ] [ j + 1 ] == 0 ) b [ i + 1 ] [ j + 1 ] = compute ( i + 1 , j + 1 , r - 1 ) ; return max ( a [ i ] [ j ] + b [ i + 1 ] [ j ] , a [ i ] [ j ] + b [ i + 1 ] [ j + 1 ] ) ; } int main ( ) { int n , r , i , j ; scanf ( "%d" , & n ) ; while ( n != 0 ) { scanf ( "%d" , & r ) ; for ( i = 0 ; i < r ; i ++ ) for ( j = 0 ; j <= i ; j ++ ) { b [ i ] [ j ] = 0 ; b [ i + 1 ] [ j + 1 ] = 0 ; scanf ( "%d" , & a [ i ] [ j ] ) ; } printf ( "%d\n" , compute ( 0 , 0 , r ) ) ; n -- ; } }