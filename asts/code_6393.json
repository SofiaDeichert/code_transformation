{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 337,
  "text": "int gcd ( int a , int b ) { int i , j ; for ( i = a ; i > 0 ; i -- ) if ( a % i == 0 && b % i == 0 ) { j = i ; break ; } return j ; } int main ( ) { int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { int num1 , num2 , i , k ; scanf ( \"%d %d\" , & num1 , & num2 ) ; i = gcd ( num1 , num2 ) ; printf ( \"%d %d\" , i , ( num1 * num2 ) / i ) ; } }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 133,
      "text": "int gcd ( int a , int b ) { int i , j ; for ( i = a ; i > 0 ; i -- ) if ( a % i == 0 && b % i == 0 ) { j = i ; break ; } return j ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 25,
          "text": "gcd ( int a , int b )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 7,
              "text": "gcd",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 8,
              "end_byte": 25,
              "text": "( int a , int b )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 8,
                  "end_byte": 9,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 10,
                  "end_byte": 15,
                  "text": "int a",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 10,
                      "end_byte": 13,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 14,
                      "end_byte": 15,
                      "text": "a",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 16,
                  "end_byte": 17,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 18,
                  "end_byte": 23,
                  "text": "int b",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 18,
                      "end_byte": 21,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 22,
                      "end_byte": 23,
                      "text": "b",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 24,
                  "end_byte": 25,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 26,
          "end_byte": 133,
          "text": "{ int i , j ; for ( i = a ; i > 0 ; i -- ) if ( a % i == 0 && b % i == 0 ) { j = i ; break ; } return j ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 26,
              "end_byte": 27,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 28,
              "end_byte": 39,
              "text": "int i , j ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 28,
                  "end_byte": 31,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 32,
                  "end_byte": 33,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 34,
                  "end_byte": 35,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 36,
                  "end_byte": 37,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 38,
                  "end_byte": 39,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 40,
              "end_byte": 120,
              "text": "for ( i = a ; i > 0 ; i -- ) if ( a % i == 0 && b % i == 0 ) { j = i ; break ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 40,
                  "end_byte": 43,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 44,
                  "end_byte": 45,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 46,
                  "end_byte": 51,
                  "text": "i = a",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 46,
                      "end_byte": 47,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 48,
                      "end_byte": 49,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 50,
                      "end_byte": 51,
                      "text": "a",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 52,
                  "end_byte": 53,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 54,
                  "end_byte": 59,
                  "text": "i > 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 54,
                      "end_byte": 55,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": ">",
                      "start_byte": 56,
                      "end_byte": 57,
                      "text": ">",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 58,
                      "end_byte": 59,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 60,
                  "end_byte": 61,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 62,
                  "end_byte": 66,
                  "text": "i --",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 62,
                      "end_byte": 63,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "--",
                      "start_byte": 64,
                      "end_byte": 66,
                      "text": "--",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 67,
                  "end_byte": 68,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "if_statement",
                  "start_byte": 69,
                  "end_byte": 120,
                  "text": "if ( a % i == 0 && b % i == 0 ) { j = i ; break ; }",
                  "children": [
                    {
                      "type": "if",
                      "start_byte": 69,
                      "end_byte": 71,
                      "text": "if",
                      "children": []
                    },
                    {
                      "type": "condition_clause",
                      "start_byte": 72,
                      "end_byte": 100,
                      "text": "( a % i == 0 && b % i == 0 )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 72,
                          "end_byte": 73,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 74,
                          "end_byte": 98,
                          "text": "a % i == 0 && b % i == 0",
                          "children": [
                            {
                              "type": "binary_expression",
                              "start_byte": 74,
                              "end_byte": 84,
                              "text": "a % i == 0",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 74,
                                  "end_byte": 79,
                                  "text": "a % i",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 74,
                                      "end_byte": 75,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": "%",
                                      "start_byte": 76,
                                      "end_byte": 77,
                                      "text": "%",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 78,
                                      "end_byte": 79,
                                      "text": "i",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "==",
                                  "start_byte": 80,
                                  "end_byte": 82,
                                  "text": "==",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 83,
                                  "end_byte": 84,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "&&",
                              "start_byte": 85,
                              "end_byte": 87,
                              "text": "&&",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 88,
                              "end_byte": 98,
                              "text": "b % i == 0",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 88,
                                  "end_byte": 93,
                                  "text": "b % i",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 88,
                                      "end_byte": 89,
                                      "text": "b",
                                      "children": []
                                    },
                                    {
                                      "type": "%",
                                      "start_byte": 90,
                                      "end_byte": 91,
                                      "text": "%",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 92,
                                      "end_byte": 93,
                                      "text": "i",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "==",
                                  "start_byte": 94,
                                  "end_byte": 96,
                                  "text": "==",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 97,
                                  "end_byte": 98,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 99,
                          "end_byte": 100,
                          "text": ")",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "compound_statement",
                      "start_byte": 101,
                      "end_byte": 120,
                      "text": "{ j = i ; break ; }",
                      "children": [
                        {
                          "type": "{",
                          "start_byte": 101,
                          "end_byte": 102,
                          "text": "{",
                          "children": []
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 103,
                          "end_byte": 110,
                          "text": "j = i ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 103,
                              "end_byte": 108,
                              "text": "j = i",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 103,
                                  "end_byte": 104,
                                  "text": "j",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 105,
                                  "end_byte": 106,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 107,
                                  "end_byte": 108,
                                  "text": "i",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 109,
                              "end_byte": 110,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "break_statement",
                          "start_byte": 111,
                          "end_byte": 118,
                          "text": "break ;",
                          "children": [
                            {
                              "type": "break",
                              "start_byte": 111,
                              "end_byte": 116,
                              "text": "break",
                              "children": []
                            },
                            {
                              "type": ";",
                              "start_byte": 117,
                              "end_byte": 118,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start_byte": 119,
                          "end_byte": 120,
                          "text": "}",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 121,
              "end_byte": 131,
              "text": "return j ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 121,
                  "end_byte": 127,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 128,
                  "end_byte": 129,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 130,
                  "end_byte": 131,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 132,
              "end_byte": 133,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 134,
      "end_byte": 337,
      "text": "int main ( ) { int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { int num1 , num2 , i , k ; scanf ( \"%d %d\" , & num1 , & num2 ) ; i = gcd ( num1 , num2 ) ; printf ( \"%d %d\" , i , ( num1 * num2 ) / i ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 134,
          "end_byte": 137,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 138,
          "end_byte": 146,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 138,
              "end_byte": 142,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 143,
              "end_byte": 146,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 143,
                  "end_byte": 144,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 145,
                  "end_byte": 146,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 147,
          "end_byte": 337,
          "text": "{ int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { int num1 , num2 , i , k ; scanf ( \"%d %d\" , & num1 , & num2 ) ; i = gcd ( num1 , num2 ) ; printf ( \"%d %d\" , i , ( num1 * num2 ) / i ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 147,
              "end_byte": 148,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 149,
              "end_byte": 156,
              "text": "int t ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 149,
                  "end_byte": 152,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 153,
                  "end_byte": 154,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 155,
                  "end_byte": 156,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 157,
              "end_byte": 179,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 157,
                  "end_byte": 177,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 157,
                      "end_byte": 162,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 163,
                      "end_byte": 177,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 163,
                          "end_byte": 164,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 165,
                          "end_byte": 169,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 165,
                              "end_byte": 166,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 166,
                              "end_byte": 168,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 168,
                              "end_byte": 169,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 170,
                          "end_byte": 171,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 172,
                          "end_byte": 175,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 172,
                              "end_byte": 173,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 174,
                              "end_byte": 175,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 176,
                          "end_byte": 177,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 178,
                  "end_byte": 179,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 180,
              "end_byte": 335,
              "text": "while ( t -- ) { int num1 , num2 , i , k ; scanf ( \"%d %d\" , & num1 , & num2 ) ; i = gcd ( num1 , num2 ) ; printf ( \"%d %d\" , i , ( num1 * num2 ) / i ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 180,
                  "end_byte": 185,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 186,
                  "end_byte": 194,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 186,
                      "end_byte": 187,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 188,
                      "end_byte": 192,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 188,
                          "end_byte": 189,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 190,
                          "end_byte": 192,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 193,
                      "end_byte": 194,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 195,
                  "end_byte": 335,
                  "text": "{ int num1 , num2 , i , k ; scanf ( \"%d %d\" , & num1 , & num2 ) ; i = gcd ( num1 , num2 ) ; printf ( \"%d %d\" , i , ( num1 * num2 ) / i ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 195,
                      "end_byte": 196,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "declaration",
                      "start_byte": 197,
                      "end_byte": 222,
                      "text": "int num1 , num2 , i , k ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 197,
                          "end_byte": 200,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 201,
                          "end_byte": 205,
                          "text": "num1",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 206,
                          "end_byte": 207,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 208,
                          "end_byte": 212,
                          "text": "num2",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 213,
                          "end_byte": 214,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 215,
                          "end_byte": 216,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 217,
                          "end_byte": 218,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 219,
                          "end_byte": 220,
                          "text": "k",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 221,
                          "end_byte": 222,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 223,
                      "end_byte": 260,
                      "text": "scanf ( \"%d %d\" , & num1 , & num2 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 223,
                          "end_byte": 258,
                          "text": "scanf ( \"%d %d\" , & num1 , & num2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 223,
                              "end_byte": 228,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 229,
                              "end_byte": 258,
                              "text": "( \"%d %d\" , & num1 , & num2 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 229,
                                  "end_byte": 230,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 231,
                                  "end_byte": 238,
                                  "text": "\"%d %d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 231,
                                      "end_byte": 232,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 232,
                                      "end_byte": 237,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 237,
                                      "end_byte": 238,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 239,
                                  "end_byte": 240,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 241,
                                  "end_byte": 247,
                                  "text": "& num1",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 241,
                                      "end_byte": 242,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 243,
                                      "end_byte": 247,
                                      "text": "num1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 248,
                                  "end_byte": 249,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 250,
                                  "end_byte": 256,
                                  "text": "& num2",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 250,
                                      "end_byte": 251,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 252,
                                      "end_byte": 256,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 257,
                                  "end_byte": 258,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 259,
                          "end_byte": 260,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 261,
                      "end_byte": 286,
                      "text": "i = gcd ( num1 , num2 ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 261,
                          "end_byte": 284,
                          "text": "i = gcd ( num1 , num2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 261,
                              "end_byte": 262,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 263,
                              "end_byte": 264,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 265,
                              "end_byte": 284,
                              "text": "gcd ( num1 , num2 )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 265,
                                  "end_byte": 268,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 269,
                                  "end_byte": 284,
                                  "text": "( num1 , num2 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 269,
                                      "end_byte": 270,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 271,
                                      "end_byte": 275,
                                      "text": "num1",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 276,
                                      "end_byte": 277,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 278,
                                      "end_byte": 282,
                                      "text": "num2",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 283,
                                      "end_byte": 284,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 285,
                          "end_byte": 286,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 287,
                      "end_byte": 333,
                      "text": "printf ( \"%d %d\" , i , ( num1 * num2 ) / i ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 287,
                          "end_byte": 331,
                          "text": "printf ( \"%d %d\" , i , ( num1 * num2 ) / i )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 287,
                              "end_byte": 293,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 294,
                              "end_byte": 331,
                              "text": "( \"%d %d\" , i , ( num1 * num2 ) / i )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 294,
                                  "end_byte": 295,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 296,
                                  "end_byte": 303,
                                  "text": "\"%d %d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 296,
                                      "end_byte": 297,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 297,
                                      "end_byte": 302,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 302,
                                      "end_byte": 303,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 304,
                                  "end_byte": 305,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 306,
                                  "end_byte": 307,
                                  "text": "i",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 308,
                                  "end_byte": 309,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 310,
                                  "end_byte": 329,
                                  "text": "( num1 * num2 ) / i",
                                  "children": [
                                    {
                                      "type": "parenthesized_expression",
                                      "start_byte": 310,
                                      "end_byte": 325,
                                      "text": "( num1 * num2 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 310,
                                          "end_byte": 311,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 312,
                                          "end_byte": 323,
                                          "text": "num1 * num2",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 312,
                                              "end_byte": 316,
                                              "text": "num1",
                                              "children": []
                                            },
                                            {
                                              "type": "*",
                                              "start_byte": 317,
                                              "end_byte": 318,
                                              "text": "*",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 319,
                                              "end_byte": 323,
                                              "text": "num2",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 324,
                                          "end_byte": 325,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "/",
                                      "start_byte": 326,
                                      "end_byte": 327,
                                      "text": "/",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 328,
                                      "end_byte": 329,
                                      "text": "i",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 330,
                                  "end_byte": 331,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 332,
                          "end_byte": 333,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 334,
                      "end_byte": 335,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 336,
              "end_byte": 337,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}