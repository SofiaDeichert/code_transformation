int main ( ) { int t , n , i , j , k ; int a [ MAXVAL ] [ MAXVAL ] , mv [ MAXVAL ] [ MAXVAL ] ; scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & a [ i ] [ j ] ) ; mv [ i ] [ j ] = 0 ; } } for ( i = 0 ; i < n ; i ++ ) { for ( j = i + 1 ; j > i ; j -- ) { a [ i ] [ j ] = - 1 ; mv [ i ] [ j ] = 0 ; } } for ( i = n - 1 ; i >= 0 ; i -- ) { for ( j = i ; j >= 0 ; j -- ) { if ( ( a [ i + 1 ] [ j ] == - 1 ) || ( a [ i + 1 ] [ j ] == - 1 && a [ i ] [ j + 1 ] == - 1 ) ) { mv [ i ] [ j ] = a [ i ] [ j ] ; } else { mv [ i ] [ j ] = max ( mv [ i + 1 ] [ j ] , mv [ i + 1 ] [ j + 1 ] ) + a [ i ] [ j ] ; } } } printf ( "%d\n" , mv [ 0 ] [ 0 ] ) ; } return 0 ; }