{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 1130,
  "text": "int gcdfun ( int , int ) ; int lcmfun ( int , int ) ; int main ( ) { int T , i ; int A [ 1000000 ] , B [ 1000000 ] ; int gcd [ 1000 ] , lcm [ 1000 ] ; printf ( \"enter total number of testcases\\n\" ) ; scanf ( \"%d\" , & T ) ; if ( ( T >= 1 ) && ( T <= 1000 ) ) { printf ( \"enter %d sets of elements\\n\" , T ) ; for ( i = 0 ; i < T ; i ++ ) { scanf ( \"%d \\t %d \\n\" , & A [ i ] , & B [ i ] ) ; } for ( i = 0 ; i < T ; i ++ ) { gcd [ i ] = gcdfun ( A [ i ] , B [ i ] ) ; lcm [ i ] = lcmfun ( A [ i ] , B [ i ] ) ; printf ( \"%d \\t %d \\n\" , gcd [ i ] , lcm [ i ] ) ; } } else printf ( \"please enter the number of testcases between 1 to 1000 only\" ) ; return 0 ; } int gcdfun ( int num1 , int num2 ) { int i , m ; int gcd ; if ( num1 > num2 ) m = num2 ; else m = num1 ; for ( i = m ; i >= 1 ; i -- ) { if ( ( num1 % i == 0 ) && ( num2 % i == 0 ) ) { gcd = i ; break ; } } return gcd ; } int lcmfun ( int num1 , int num2 ) { int i , m , gcd , lcm ; if ( num1 > num2 ) m = num2 ; else m = num1 ; for ( i = m ; i >= 1 ; i -- ) { if ( ( num1 % i == 0 ) && ( num2 % i == 0 ) ) { gcd = i ; break ; } } lcm = ( num1 * num2 ) / gcd ; return lcm ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 26,
      "text": "int gcdfun ( int , int ) ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 24,
          "text": "gcdfun ( int , int )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 10,
              "text": "gcdfun",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 11,
              "end_byte": 24,
              "text": "( int , int )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 13,
                  "end_byte": 16,
                  "text": "int",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 13,
                      "end_byte": 16,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 17,
                  "end_byte": 18,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 19,
                  "end_byte": 22,
                  "text": "int",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 19,
                      "end_byte": 22,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 23,
                  "end_byte": 24,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 25,
          "end_byte": 26,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 27,
      "end_byte": 53,
      "text": "int lcmfun ( int , int ) ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 27,
          "end_byte": 30,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 31,
          "end_byte": 51,
          "text": "lcmfun ( int , int )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 31,
              "end_byte": 37,
              "text": "lcmfun",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 38,
              "end_byte": 51,
              "text": "( int , int )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 38,
                  "end_byte": 39,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 40,
                  "end_byte": 43,
                  "text": "int",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 40,
                      "end_byte": 43,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 44,
                  "end_byte": 45,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 46,
                  "end_byte": 49,
                  "text": "int",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 46,
                      "end_byte": 49,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 50,
                  "end_byte": 51,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 52,
          "end_byte": 53,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 54,
      "end_byte": 654,
      "text": "int main ( ) { int T , i ; int A [ 1000000 ] , B [ 1000000 ] ; int gcd [ 1000 ] , lcm [ 1000 ] ; printf ( \"enter total number of testcases\\n\" ) ; scanf ( \"%d\" , & T ) ; if ( ( T >= 1 ) && ( T <= 1000 ) ) { printf ( \"enter %d sets of elements\\n\" , T ) ; for ( i = 0 ; i < T ; i ++ ) { scanf ( \"%d \\t %d \\n\" , & A [ i ] , & B [ i ] ) ; } for ( i = 0 ; i < T ; i ++ ) { gcd [ i ] = gcdfun ( A [ i ] , B [ i ] ) ; lcm [ i ] = lcmfun ( A [ i ] , B [ i ] ) ; printf ( \"%d \\t %d \\n\" , gcd [ i ] , lcm [ i ] ) ; } } else printf ( \"please enter the number of testcases between 1 to 1000 only\" ) ; return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 54,
          "end_byte": 57,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 58,
          "end_byte": 66,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 58,
              "end_byte": 62,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 63,
              "end_byte": 66,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 63,
                  "end_byte": 64,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 65,
                  "end_byte": 66,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 67,
          "end_byte": 654,
          "text": "{ int T , i ; int A [ 1000000 ] , B [ 1000000 ] ; int gcd [ 1000 ] , lcm [ 1000 ] ; printf ( \"enter total number of testcases\\n\" ) ; scanf ( \"%d\" , & T ) ; if ( ( T >= 1 ) && ( T <= 1000 ) ) { printf ( \"enter %d sets of elements\\n\" , T ) ; for ( i = 0 ; i < T ; i ++ ) { scanf ( \"%d \\t %d \\n\" , & A [ i ] , & B [ i ] ) ; } for ( i = 0 ; i < T ; i ++ ) { gcd [ i ] = gcdfun ( A [ i ] , B [ i ] ) ; lcm [ i ] = lcmfun ( A [ i ] , B [ i ] ) ; printf ( \"%d \\t %d \\n\" , gcd [ i ] , lcm [ i ] ) ; } } else printf ( \"please enter the number of testcases between 1 to 1000 only\" ) ; return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 67,
              "end_byte": 68,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 69,
              "end_byte": 80,
              "text": "int T , i ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 69,
                  "end_byte": 72,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 73,
                  "end_byte": 74,
                  "text": "T",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 75,
                  "end_byte": 76,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 77,
                  "end_byte": 78,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 79,
                  "end_byte": 80,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 81,
              "end_byte": 116,
              "text": "int A [ 1000000 ] , B [ 1000000 ] ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 81,
                  "end_byte": 84,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 85,
                  "end_byte": 98,
                  "text": "A [ 1000000 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 85,
                      "end_byte": 86,
                      "text": "A",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 87,
                      "end_byte": 88,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 89,
                      "end_byte": 96,
                      "text": "1000000",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 97,
                      "end_byte": 98,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 99,
                  "end_byte": 100,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 101,
                  "end_byte": 114,
                  "text": "B [ 1000000 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 101,
                      "end_byte": 102,
                      "text": "B",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 103,
                      "end_byte": 104,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 105,
                      "end_byte": 112,
                      "text": "1000000",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 113,
                      "end_byte": 114,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 115,
                  "end_byte": 116,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 117,
              "end_byte": 150,
              "text": "int gcd [ 1000 ] , lcm [ 1000 ] ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 117,
                  "end_byte": 120,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 121,
                  "end_byte": 133,
                  "text": "gcd [ 1000 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 121,
                      "end_byte": 124,
                      "text": "gcd",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 125,
                      "end_byte": 126,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 127,
                      "end_byte": 131,
                      "text": "1000",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 132,
                      "end_byte": 133,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 134,
                  "end_byte": 135,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 136,
                  "end_byte": 148,
                  "text": "lcm [ 1000 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 136,
                      "end_byte": 139,
                      "text": "lcm",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 140,
                      "end_byte": 141,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 142,
                      "end_byte": 146,
                      "text": "1000",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 147,
                      "end_byte": 148,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 149,
                  "end_byte": 150,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 151,
              "end_byte": 199,
              "text": "printf ( \"enter total number of testcases\\n\" ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 151,
                  "end_byte": 197,
                  "text": "printf ( \"enter total number of testcases\\n\" )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 151,
                      "end_byte": 157,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 158,
                      "end_byte": 197,
                      "text": "( \"enter total number of testcases\\n\" )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 158,
                          "end_byte": 159,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 160,
                          "end_byte": 195,
                          "text": "\"enter total number of testcases\\n\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 160,
                              "end_byte": 161,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 161,
                              "end_byte": 192,
                              "text": "enter total number of testcases",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 192,
                              "end_byte": 194,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 194,
                              "end_byte": 195,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 196,
                          "end_byte": 197,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 198,
                  "end_byte": 199,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 200,
              "end_byte": 222,
              "text": "scanf ( \"%d\" , & T ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 200,
                  "end_byte": 220,
                  "text": "scanf ( \"%d\" , & T )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 200,
                      "end_byte": 205,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 206,
                      "end_byte": 220,
                      "text": "( \"%d\" , & T )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 206,
                          "end_byte": 207,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 208,
                          "end_byte": 212,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 208,
                              "end_byte": 209,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 209,
                              "end_byte": 211,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 211,
                              "end_byte": 212,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 213,
                          "end_byte": 214,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 215,
                          "end_byte": 218,
                          "text": "& T",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 215,
                              "end_byte": 216,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 217,
                              "end_byte": 218,
                              "text": "T",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 219,
                          "end_byte": 220,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 221,
                  "end_byte": 222,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 223,
              "end_byte": 641,
              "text": "if ( ( T >= 1 ) && ( T <= 1000 ) ) { printf ( \"enter %d sets of elements\\n\" , T ) ; for ( i = 0 ; i < T ; i ++ ) { scanf ( \"%d \\t %d \\n\" , & A [ i ] , & B [ i ] ) ; } for ( i = 0 ; i < T ; i ++ ) { gcd [ i ] = gcdfun ( A [ i ] , B [ i ] ) ; lcm [ i ] = lcmfun ( A [ i ] , B [ i ] ) ; printf ( \"%d \\t %d \\n\" , gcd [ i ] , lcm [ i ] ) ; } } else printf ( \"please enter the number of testcases between 1 to 1000 only\" ) ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 223,
                  "end_byte": 225,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 226,
                  "end_byte": 257,
                  "text": "( ( T >= 1 ) && ( T <= 1000 ) )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 226,
                      "end_byte": 227,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 228,
                      "end_byte": 255,
                      "text": "( T >= 1 ) && ( T <= 1000 )",
                      "children": [
                        {
                          "type": "parenthesized_expression",
                          "start_byte": 228,
                          "end_byte": 238,
                          "text": "( T >= 1 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 228,
                              "end_byte": 229,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 230,
                              "end_byte": 236,
                              "text": "T >= 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 230,
                                  "end_byte": 231,
                                  "text": "T",
                                  "children": []
                                },
                                {
                                  "type": ">=",
                                  "start_byte": 232,
                                  "end_byte": 234,
                                  "text": ">=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 235,
                                  "end_byte": 236,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 237,
                              "end_byte": 238,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "&&",
                          "start_byte": 239,
                          "end_byte": 241,
                          "text": "&&",
                          "children": []
                        },
                        {
                          "type": "parenthesized_expression",
                          "start_byte": 242,
                          "end_byte": 255,
                          "text": "( T <= 1000 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 242,
                              "end_byte": 243,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 244,
                              "end_byte": 253,
                              "text": "T <= 1000",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 244,
                                  "end_byte": 245,
                                  "text": "T",
                                  "children": []
                                },
                                {
                                  "type": "<=",
                                  "start_byte": 246,
                                  "end_byte": 248,
                                  "text": "<=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 249,
                                  "end_byte": 253,
                                  "text": "1000",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 254,
                              "end_byte": 255,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 256,
                      "end_byte": 257,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 258,
                  "end_byte": 561,
                  "text": "{ printf ( \"enter %d sets of elements\\n\" , T ) ; for ( i = 0 ; i < T ; i ++ ) { scanf ( \"%d \\t %d \\n\" , & A [ i ] , & B [ i ] ) ; } for ( i = 0 ; i < T ; i ++ ) { gcd [ i ] = gcdfun ( A [ i ] , B [ i ] ) ; lcm [ i ] = lcmfun ( A [ i ] , B [ i ] ) ; printf ( \"%d \\t %d \\n\" , gcd [ i ] , lcm [ i ] ) ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 258,
                      "end_byte": 259,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 260,
                      "end_byte": 306,
                      "text": "printf ( \"enter %d sets of elements\\n\" , T ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 260,
                          "end_byte": 304,
                          "text": "printf ( \"enter %d sets of elements\\n\" , T )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 260,
                              "end_byte": 266,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 267,
                              "end_byte": 304,
                              "text": "( \"enter %d sets of elements\\n\" , T )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 267,
                                  "end_byte": 268,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 269,
                                  "end_byte": 298,
                                  "text": "\"enter %d sets of elements\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 269,
                                      "end_byte": 270,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 270,
                                      "end_byte": 295,
                                      "text": "enter %d sets of elements",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 295,
                                      "end_byte": 297,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 297,
                                      "end_byte": 298,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 299,
                                  "end_byte": 300,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 301,
                                  "end_byte": 302,
                                  "text": "T",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 303,
                                  "end_byte": 304,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 305,
                          "end_byte": 306,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 307,
                      "end_byte": 389,
                      "text": "for ( i = 0 ; i < T ; i ++ ) { scanf ( \"%d \\t %d \\n\" , & A [ i ] , & B [ i ] ) ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 307,
                          "end_byte": 310,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 311,
                          "end_byte": 312,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 313,
                          "end_byte": 318,
                          "text": "i = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 313,
                              "end_byte": 314,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 315,
                              "end_byte": 316,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 317,
                              "end_byte": 318,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 319,
                          "end_byte": 320,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 321,
                          "end_byte": 326,
                          "text": "i < T",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 321,
                              "end_byte": 322,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 323,
                              "end_byte": 324,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 325,
                              "end_byte": 326,
                              "text": "T",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 327,
                          "end_byte": 328,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 329,
                          "end_byte": 333,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 329,
                              "end_byte": 330,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 331,
                              "end_byte": 333,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 334,
                          "end_byte": 335,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 336,
                          "end_byte": 389,
                          "text": "{ scanf ( \"%d \\t %d \\n\" , & A [ i ] , & B [ i ] ) ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 336,
                              "end_byte": 337,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 338,
                              "end_byte": 387,
                              "text": "scanf ( \"%d \\t %d \\n\" , & A [ i ] , & B [ i ] ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 338,
                                  "end_byte": 385,
                                  "text": "scanf ( \"%d \\t %d \\n\" , & A [ i ] , & B [ i ] )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 338,
                                      "end_byte": 343,
                                      "text": "scanf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 344,
                                      "end_byte": 385,
                                      "text": "( \"%d \\t %d \\n\" , & A [ i ] , & B [ i ] )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 344,
                                          "end_byte": 345,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 346,
                                          "end_byte": 359,
                                          "text": "\"%d \\t %d \\n\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 346,
                                              "end_byte": 347,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 347,
                                              "end_byte": 350,
                                              "text": "%d ",
                                              "children": []
                                            },
                                            {
                                              "type": "escape_sequence",
                                              "start_byte": 350,
                                              "end_byte": 352,
                                              "text": "\\t",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 352,
                                              "end_byte": 356,
                                              "text": " %d ",
                                              "children": []
                                            },
                                            {
                                              "type": "escape_sequence",
                                              "start_byte": 356,
                                              "end_byte": 358,
                                              "text": "\\n",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 358,
                                              "end_byte": 359,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 360,
                                          "end_byte": 361,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "pointer_expression",
                                          "start_byte": 362,
                                          "end_byte": 371,
                                          "text": "& A [ i ]",
                                          "children": [
                                            {
                                              "type": "&",
                                              "start_byte": 362,
                                              "end_byte": 363,
                                              "text": "&",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 364,
                                              "end_byte": 371,
                                              "text": "A [ i ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 364,
                                                  "end_byte": 365,
                                                  "text": "A",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 366,
                                                  "end_byte": 371,
                                                  "text": "[ i ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 366,
                                                      "end_byte": 367,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 368,
                                                      "end_byte": 369,
                                                      "text": "i",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 370,
                                                      "end_byte": 371,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 372,
                                          "end_byte": 373,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "pointer_expression",
                                          "start_byte": 374,
                                          "end_byte": 383,
                                          "text": "& B [ i ]",
                                          "children": [
                                            {
                                              "type": "&",
                                              "start_byte": 374,
                                              "end_byte": 375,
                                              "text": "&",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 376,
                                              "end_byte": 383,
                                              "text": "B [ i ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 376,
                                                  "end_byte": 377,
                                                  "text": "B",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 378,
                                                  "end_byte": 383,
                                                  "text": "[ i ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 378,
                                                      "end_byte": 379,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 380,
                                                      "end_byte": 381,
                                                      "text": "i",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 382,
                                                      "end_byte": 383,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 384,
                                          "end_byte": 385,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 386,
                                  "end_byte": 387,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 388,
                              "end_byte": 389,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 390,
                      "end_byte": 559,
                      "text": "for ( i = 0 ; i < T ; i ++ ) { gcd [ i ] = gcdfun ( A [ i ] , B [ i ] ) ; lcm [ i ] = lcmfun ( A [ i ] , B [ i ] ) ; printf ( \"%d \\t %d \\n\" , gcd [ i ] , lcm [ i ] ) ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 390,
                          "end_byte": 393,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 394,
                          "end_byte": 395,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 396,
                          "end_byte": 401,
                          "text": "i = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 396,
                              "end_byte": 397,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 398,
                              "end_byte": 399,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 400,
                              "end_byte": 401,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 402,
                          "end_byte": 403,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 404,
                          "end_byte": 409,
                          "text": "i < T",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 404,
                              "end_byte": 405,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 406,
                              "end_byte": 407,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 408,
                              "end_byte": 409,
                              "text": "T",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 410,
                          "end_byte": 411,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 412,
                          "end_byte": 416,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 412,
                              "end_byte": 413,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 414,
                              "end_byte": 416,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 417,
                          "end_byte": 418,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 419,
                          "end_byte": 559,
                          "text": "{ gcd [ i ] = gcdfun ( A [ i ] , B [ i ] ) ; lcm [ i ] = lcmfun ( A [ i ] , B [ i ] ) ; printf ( \"%d \\t %d \\n\" , gcd [ i ] , lcm [ i ] ) ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 419,
                              "end_byte": 420,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 421,
                              "end_byte": 463,
                              "text": "gcd [ i ] = gcdfun ( A [ i ] , B [ i ] ) ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 421,
                                  "end_byte": 461,
                                  "text": "gcd [ i ] = gcdfun ( A [ i ] , B [ i ] )",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 421,
                                      "end_byte": 430,
                                      "text": "gcd [ i ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 421,
                                          "end_byte": 424,
                                          "text": "gcd",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 425,
                                          "end_byte": 430,
                                          "text": "[ i ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 425,
                                              "end_byte": 426,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 427,
                                              "end_byte": 428,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 429,
                                              "end_byte": 430,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 431,
                                      "end_byte": 432,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 433,
                                      "end_byte": 461,
                                      "text": "gcdfun ( A [ i ] , B [ i ] )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 433,
                                          "end_byte": 439,
                                          "text": "gcdfun",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 440,
                                          "end_byte": 461,
                                          "text": "( A [ i ] , B [ i ] )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 440,
                                              "end_byte": 441,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 442,
                                              "end_byte": 449,
                                              "text": "A [ i ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 442,
                                                  "end_byte": 443,
                                                  "text": "A",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 444,
                                                  "end_byte": 449,
                                                  "text": "[ i ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 444,
                                                      "end_byte": 445,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 446,
                                                      "end_byte": 447,
                                                      "text": "i",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 448,
                                                      "end_byte": 449,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 450,
                                              "end_byte": 451,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 452,
                                              "end_byte": 459,
                                              "text": "B [ i ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 452,
                                                  "end_byte": 453,
                                                  "text": "B",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 454,
                                                  "end_byte": 459,
                                                  "text": "[ i ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 454,
                                                      "end_byte": 455,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 456,
                                                      "end_byte": 457,
                                                      "text": "i",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 458,
                                                      "end_byte": 459,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 460,
                                              "end_byte": 461,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 462,
                                  "end_byte": 463,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 464,
                              "end_byte": 506,
                              "text": "lcm [ i ] = lcmfun ( A [ i ] , B [ i ] ) ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 464,
                                  "end_byte": 504,
                                  "text": "lcm [ i ] = lcmfun ( A [ i ] , B [ i ] )",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 464,
                                      "end_byte": 473,
                                      "text": "lcm [ i ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 464,
                                          "end_byte": 467,
                                          "text": "lcm",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 468,
                                          "end_byte": 473,
                                          "text": "[ i ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 468,
                                              "end_byte": 469,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 470,
                                              "end_byte": 471,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 472,
                                              "end_byte": 473,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 474,
                                      "end_byte": 475,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 476,
                                      "end_byte": 504,
                                      "text": "lcmfun ( A [ i ] , B [ i ] )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 476,
                                          "end_byte": 482,
                                          "text": "lcmfun",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 483,
                                          "end_byte": 504,
                                          "text": "( A [ i ] , B [ i ] )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 483,
                                              "end_byte": 484,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 485,
                                              "end_byte": 492,
                                              "text": "A [ i ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 485,
                                                  "end_byte": 486,
                                                  "text": "A",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 487,
                                                  "end_byte": 492,
                                                  "text": "[ i ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 487,
                                                      "end_byte": 488,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 489,
                                                      "end_byte": 490,
                                                      "text": "i",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 491,
                                                      "end_byte": 492,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 493,
                                              "end_byte": 494,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 495,
                                              "end_byte": 502,
                                              "text": "B [ i ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 495,
                                                  "end_byte": 496,
                                                  "text": "B",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 497,
                                                  "end_byte": 502,
                                                  "text": "[ i ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 497,
                                                      "end_byte": 498,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 499,
                                                      "end_byte": 500,
                                                      "text": "i",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 501,
                                                      "end_byte": 502,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 503,
                                              "end_byte": 504,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 505,
                                  "end_byte": 506,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 507,
                              "end_byte": 557,
                              "text": "printf ( \"%d \\t %d \\n\" , gcd [ i ] , lcm [ i ] ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 507,
                                  "end_byte": 555,
                                  "text": "printf ( \"%d \\t %d \\n\" , gcd [ i ] , lcm [ i ] )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 507,
                                      "end_byte": 513,
                                      "text": "printf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 514,
                                      "end_byte": 555,
                                      "text": "( \"%d \\t %d \\n\" , gcd [ i ] , lcm [ i ] )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 514,
                                          "end_byte": 515,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 516,
                                          "end_byte": 529,
                                          "text": "\"%d \\t %d \\n\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 516,
                                              "end_byte": 517,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 517,
                                              "end_byte": 520,
                                              "text": "%d ",
                                              "children": []
                                            },
                                            {
                                              "type": "escape_sequence",
                                              "start_byte": 520,
                                              "end_byte": 522,
                                              "text": "\\t",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 522,
                                              "end_byte": 526,
                                              "text": " %d ",
                                              "children": []
                                            },
                                            {
                                              "type": "escape_sequence",
                                              "start_byte": 526,
                                              "end_byte": 528,
                                              "text": "\\n",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 528,
                                              "end_byte": 529,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 530,
                                          "end_byte": 531,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 532,
                                          "end_byte": 541,
                                          "text": "gcd [ i ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 532,
                                              "end_byte": 535,
                                              "text": "gcd",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 536,
                                              "end_byte": 541,
                                              "text": "[ i ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 536,
                                                  "end_byte": 537,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 538,
                                                  "end_byte": 539,
                                                  "text": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 540,
                                                  "end_byte": 541,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 542,
                                          "end_byte": 543,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 544,
                                          "end_byte": 553,
                                          "text": "lcm [ i ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 544,
                                              "end_byte": 547,
                                              "text": "lcm",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 548,
                                              "end_byte": 553,
                                              "text": "[ i ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 548,
                                                  "end_byte": 549,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 550,
                                                  "end_byte": 551,
                                                  "text": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 552,
                                                  "end_byte": 553,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 554,
                                          "end_byte": 555,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 556,
                                  "end_byte": 557,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 558,
                              "end_byte": 559,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 560,
                      "end_byte": 561,
                      "text": "}",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 562,
                  "end_byte": 641,
                  "text": "else printf ( \"please enter the number of testcases between 1 to 1000 only\" ) ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 562,
                      "end_byte": 566,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 567,
                      "end_byte": 641,
                      "text": "printf ( \"please enter the number of testcases between 1 to 1000 only\" ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 567,
                          "end_byte": 639,
                          "text": "printf ( \"please enter the number of testcases between 1 to 1000 only\" )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 567,
                              "end_byte": 573,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 574,
                              "end_byte": 639,
                              "text": "( \"please enter the number of testcases between 1 to 1000 only\" )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 574,
                                  "end_byte": 575,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 576,
                                  "end_byte": 637,
                                  "text": "\"please enter the number of testcases between 1 to 1000 only\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 576,
                                      "end_byte": 577,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 577,
                                      "end_byte": 636,
                                      "text": "please enter the number of testcases between 1 to 1000 only",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 636,
                                      "end_byte": 637,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 638,
                                  "end_byte": 639,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 640,
                          "end_byte": 641,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 642,
              "end_byte": 652,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 642,
                  "end_byte": 648,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 649,
                  "end_byte": 650,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 651,
                  "end_byte": 652,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 653,
              "end_byte": 654,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 655,
      "end_byte": 876,
      "text": "int gcdfun ( int num1 , int num2 ) { int i , m ; int gcd ; if ( num1 > num2 ) m = num2 ; else m = num1 ; for ( i = m ; i >= 1 ; i -- ) { if ( ( num1 % i == 0 ) && ( num2 % i == 0 ) ) { gcd = i ; break ; } } return gcd ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 655,
          "end_byte": 658,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 659,
          "end_byte": 689,
          "text": "gcdfun ( int num1 , int num2 )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 659,
              "end_byte": 665,
              "text": "gcdfun",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 666,
              "end_byte": 689,
              "text": "( int num1 , int num2 )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 666,
                  "end_byte": 667,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 668,
                  "end_byte": 676,
                  "text": "int num1",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 668,
                      "end_byte": 671,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 672,
                      "end_byte": 676,
                      "text": "num1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 677,
                  "end_byte": 678,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 679,
                  "end_byte": 687,
                  "text": "int num2",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 679,
                      "end_byte": 682,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 683,
                      "end_byte": 687,
                      "text": "num2",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 688,
                  "end_byte": 689,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 690,
          "end_byte": 876,
          "text": "{ int i , m ; int gcd ; if ( num1 > num2 ) m = num2 ; else m = num1 ; for ( i = m ; i >= 1 ; i -- ) { if ( ( num1 % i == 0 ) && ( num2 % i == 0 ) ) { gcd = i ; break ; } } return gcd ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 690,
              "end_byte": 691,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 692,
              "end_byte": 703,
              "text": "int i , m ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 692,
                  "end_byte": 695,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 696,
                  "end_byte": 697,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 698,
                  "end_byte": 699,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 700,
                  "end_byte": 701,
                  "text": "m",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 702,
                  "end_byte": 703,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 704,
              "end_byte": 713,
              "text": "int gcd ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 704,
                  "end_byte": 707,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 708,
                  "end_byte": 711,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 712,
                  "end_byte": 713,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 714,
              "end_byte": 759,
              "text": "if ( num1 > num2 ) m = num2 ; else m = num1 ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 714,
                  "end_byte": 716,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 717,
                  "end_byte": 732,
                  "text": "( num1 > num2 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 717,
                      "end_byte": 718,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 719,
                      "end_byte": 730,
                      "text": "num1 > num2",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 719,
                          "end_byte": 723,
                          "text": "num1",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 724,
                          "end_byte": 725,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 726,
                          "end_byte": 730,
                          "text": "num2",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 731,
                      "end_byte": 732,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "expression_statement",
                  "start_byte": 733,
                  "end_byte": 743,
                  "text": "m = num2 ;",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start_byte": 733,
                      "end_byte": 741,
                      "text": "m = num2",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 733,
                          "end_byte": 734,
                          "text": "m",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 735,
                          "end_byte": 736,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 737,
                          "end_byte": 741,
                          "text": "num2",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 742,
                      "end_byte": 743,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 744,
                  "end_byte": 759,
                  "text": "else m = num1 ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 744,
                      "end_byte": 748,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 749,
                      "end_byte": 759,
                      "text": "m = num1 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 749,
                          "end_byte": 757,
                          "text": "m = num1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 749,
                              "end_byte": 750,
                              "text": "m",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 751,
                              "end_byte": 752,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 753,
                              "end_byte": 757,
                              "text": "num1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 758,
                          "end_byte": 759,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 760,
              "end_byte": 861,
              "text": "for ( i = m ; i >= 1 ; i -- ) { if ( ( num1 % i == 0 ) && ( num2 % i == 0 ) ) { gcd = i ; break ; } }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 760,
                  "end_byte": 763,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 764,
                  "end_byte": 765,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 766,
                  "end_byte": 771,
                  "text": "i = m",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 766,
                      "end_byte": 767,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 768,
                      "end_byte": 769,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 770,
                      "end_byte": 771,
                      "text": "m",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 772,
                  "end_byte": 773,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 774,
                  "end_byte": 780,
                  "text": "i >= 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 774,
                      "end_byte": 775,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": ">=",
                      "start_byte": 776,
                      "end_byte": 778,
                      "text": ">=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 779,
                      "end_byte": 780,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 781,
                  "end_byte": 782,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 783,
                  "end_byte": 787,
                  "text": "i --",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 783,
                      "end_byte": 784,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "--",
                      "start_byte": 785,
                      "end_byte": 787,
                      "text": "--",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 788,
                  "end_byte": 789,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 790,
                  "end_byte": 861,
                  "text": "{ if ( ( num1 % i == 0 ) && ( num2 % i == 0 ) ) { gcd = i ; break ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 790,
                      "end_byte": 791,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 792,
                      "end_byte": 859,
                      "text": "if ( ( num1 % i == 0 ) && ( num2 % i == 0 ) ) { gcd = i ; break ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 792,
                          "end_byte": 794,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 795,
                          "end_byte": 837,
                          "text": "( ( num1 % i == 0 ) && ( num2 % i == 0 ) )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 795,
                              "end_byte": 796,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 797,
                              "end_byte": 835,
                              "text": "( num1 % i == 0 ) && ( num2 % i == 0 )",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 797,
                                  "end_byte": 814,
                                  "text": "( num1 % i == 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 797,
                                      "end_byte": 798,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 799,
                                      "end_byte": 812,
                                      "text": "num1 % i == 0",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 799,
                                          "end_byte": 807,
                                          "text": "num1 % i",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 799,
                                              "end_byte": 803,
                                              "text": "num1",
                                              "children": []
                                            },
                                            {
                                              "type": "%",
                                              "start_byte": 804,
                                              "end_byte": 805,
                                              "text": "%",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 806,
                                              "end_byte": 807,
                                              "text": "i",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "==",
                                          "start_byte": 808,
                                          "end_byte": 810,
                                          "text": "==",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 811,
                                          "end_byte": 812,
                                          "text": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 813,
                                      "end_byte": 814,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "&&",
                                  "start_byte": 815,
                                  "end_byte": 817,
                                  "text": "&&",
                                  "children": []
                                },
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 818,
                                  "end_byte": 835,
                                  "text": "( num2 % i == 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 818,
                                      "end_byte": 819,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 820,
                                      "end_byte": 833,
                                      "text": "num2 % i == 0",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 820,
                                          "end_byte": 828,
                                          "text": "num2 % i",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 820,
                                              "end_byte": 824,
                                              "text": "num2",
                                              "children": []
                                            },
                                            {
                                              "type": "%",
                                              "start_byte": 825,
                                              "end_byte": 826,
                                              "text": "%",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 827,
                                              "end_byte": 828,
                                              "text": "i",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "==",
                                          "start_byte": 829,
                                          "end_byte": 831,
                                          "text": "==",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 832,
                                          "end_byte": 833,
                                          "text": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 834,
                                      "end_byte": 835,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 836,
                              "end_byte": 837,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 838,
                          "end_byte": 859,
                          "text": "{ gcd = i ; break ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 838,
                              "end_byte": 839,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 840,
                              "end_byte": 849,
                              "text": "gcd = i ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 840,
                                  "end_byte": 847,
                                  "text": "gcd = i",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 840,
                                      "end_byte": 843,
                                      "text": "gcd",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 844,
                                      "end_byte": 845,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 846,
                                      "end_byte": 847,
                                      "text": "i",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 848,
                                  "end_byte": 849,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "break_statement",
                              "start_byte": 850,
                              "end_byte": 857,
                              "text": "break ;",
                              "children": [
                                {
                                  "type": "break",
                                  "start_byte": 850,
                                  "end_byte": 855,
                                  "text": "break",
                                  "children": []
                                },
                                {
                                  "type": ";",
                                  "start_byte": 856,
                                  "end_byte": 857,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 858,
                              "end_byte": 859,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 860,
                      "end_byte": 861,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 862,
              "end_byte": 874,
              "text": "return gcd ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 862,
                  "end_byte": 868,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 869,
                  "end_byte": 872,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 873,
                  "end_byte": 874,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 875,
              "end_byte": 876,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 877,
      "end_byte": 1130,
      "text": "int lcmfun ( int num1 , int num2 ) { int i , m , gcd , lcm ; if ( num1 > num2 ) m = num2 ; else m = num1 ; for ( i = m ; i >= 1 ; i -- ) { if ( ( num1 % i == 0 ) && ( num2 % i == 0 ) ) { gcd = i ; break ; } } lcm = ( num1 * num2 ) / gcd ; return lcm ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 877,
          "end_byte": 880,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 881,
          "end_byte": 911,
          "text": "lcmfun ( int num1 , int num2 )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 881,
              "end_byte": 887,
              "text": "lcmfun",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 888,
              "end_byte": 911,
              "text": "( int num1 , int num2 )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 888,
                  "end_byte": 889,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 890,
                  "end_byte": 898,
                  "text": "int num1",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 890,
                      "end_byte": 893,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 894,
                      "end_byte": 898,
                      "text": "num1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 899,
                  "end_byte": 900,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 901,
                  "end_byte": 909,
                  "text": "int num2",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 901,
                      "end_byte": 904,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 905,
                      "end_byte": 909,
                      "text": "num2",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 910,
                  "end_byte": 911,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 912,
          "end_byte": 1130,
          "text": "{ int i , m , gcd , lcm ; if ( num1 > num2 ) m = num2 ; else m = num1 ; for ( i = m ; i >= 1 ; i -- ) { if ( ( num1 % i == 0 ) && ( num2 % i == 0 ) ) { gcd = i ; break ; } } lcm = ( num1 * num2 ) / gcd ; return lcm ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 912,
              "end_byte": 913,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 914,
              "end_byte": 937,
              "text": "int i , m , gcd , lcm ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 914,
                  "end_byte": 917,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 918,
                  "end_byte": 919,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 920,
                  "end_byte": 921,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 922,
                  "end_byte": 923,
                  "text": "m",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 924,
                  "end_byte": 925,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 926,
                  "end_byte": 929,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 930,
                  "end_byte": 931,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 932,
                  "end_byte": 935,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 936,
                  "end_byte": 937,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 938,
              "end_byte": 983,
              "text": "if ( num1 > num2 ) m = num2 ; else m = num1 ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 938,
                  "end_byte": 940,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 941,
                  "end_byte": 956,
                  "text": "( num1 > num2 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 941,
                      "end_byte": 942,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 943,
                      "end_byte": 954,
                      "text": "num1 > num2",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 943,
                          "end_byte": 947,
                          "text": "num1",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 948,
                          "end_byte": 949,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 950,
                          "end_byte": 954,
                          "text": "num2",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 955,
                      "end_byte": 956,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "expression_statement",
                  "start_byte": 957,
                  "end_byte": 967,
                  "text": "m = num2 ;",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start_byte": 957,
                      "end_byte": 965,
                      "text": "m = num2",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 957,
                          "end_byte": 958,
                          "text": "m",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 959,
                          "end_byte": 960,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 961,
                          "end_byte": 965,
                          "text": "num2",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 966,
                      "end_byte": 967,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 968,
                  "end_byte": 983,
                  "text": "else m = num1 ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 968,
                      "end_byte": 972,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 973,
                      "end_byte": 983,
                      "text": "m = num1 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 973,
                          "end_byte": 981,
                          "text": "m = num1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 973,
                              "end_byte": 974,
                              "text": "m",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 975,
                              "end_byte": 976,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 977,
                              "end_byte": 981,
                              "text": "num1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 982,
                          "end_byte": 983,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 984,
              "end_byte": 1085,
              "text": "for ( i = m ; i >= 1 ; i -- ) { if ( ( num1 % i == 0 ) && ( num2 % i == 0 ) ) { gcd = i ; break ; } }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 984,
                  "end_byte": 987,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 988,
                  "end_byte": 989,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 990,
                  "end_byte": 995,
                  "text": "i = m",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 990,
                      "end_byte": 991,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 992,
                      "end_byte": 993,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 994,
                      "end_byte": 995,
                      "text": "m",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 996,
                  "end_byte": 997,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 998,
                  "end_byte": 1004,
                  "text": "i >= 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 998,
                      "end_byte": 999,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": ">=",
                      "start_byte": 1000,
                      "end_byte": 1002,
                      "text": ">=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 1003,
                      "end_byte": 1004,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1005,
                  "end_byte": 1006,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 1007,
                  "end_byte": 1011,
                  "text": "i --",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1007,
                      "end_byte": 1008,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "--",
                      "start_byte": 1009,
                      "end_byte": 1011,
                      "text": "--",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 1012,
                  "end_byte": 1013,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 1014,
                  "end_byte": 1085,
                  "text": "{ if ( ( num1 % i == 0 ) && ( num2 % i == 0 ) ) { gcd = i ; break ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 1014,
                      "end_byte": 1015,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 1016,
                      "end_byte": 1083,
                      "text": "if ( ( num1 % i == 0 ) && ( num2 % i == 0 ) ) { gcd = i ; break ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 1016,
                          "end_byte": 1018,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 1019,
                          "end_byte": 1061,
                          "text": "( ( num1 % i == 0 ) && ( num2 % i == 0 ) )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 1019,
                              "end_byte": 1020,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 1021,
                              "end_byte": 1059,
                              "text": "( num1 % i == 0 ) && ( num2 % i == 0 )",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 1021,
                                  "end_byte": 1038,
                                  "text": "( num1 % i == 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 1021,
                                      "end_byte": 1022,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 1023,
                                      "end_byte": 1036,
                                      "text": "num1 % i == 0",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 1023,
                                          "end_byte": 1031,
                                          "text": "num1 % i",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1023,
                                              "end_byte": 1027,
                                              "text": "num1",
                                              "children": []
                                            },
                                            {
                                              "type": "%",
                                              "start_byte": 1028,
                                              "end_byte": 1029,
                                              "text": "%",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 1030,
                                              "end_byte": 1031,
                                              "text": "i",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "==",
                                          "start_byte": 1032,
                                          "end_byte": 1034,
                                          "text": "==",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 1035,
                                          "end_byte": 1036,
                                          "text": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 1037,
                                      "end_byte": 1038,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "&&",
                                  "start_byte": 1039,
                                  "end_byte": 1041,
                                  "text": "&&",
                                  "children": []
                                },
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 1042,
                                  "end_byte": 1059,
                                  "text": "( num2 % i == 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 1042,
                                      "end_byte": 1043,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 1044,
                                      "end_byte": 1057,
                                      "text": "num2 % i == 0",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 1044,
                                          "end_byte": 1052,
                                          "text": "num2 % i",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1044,
                                              "end_byte": 1048,
                                              "text": "num2",
                                              "children": []
                                            },
                                            {
                                              "type": "%",
                                              "start_byte": 1049,
                                              "end_byte": 1050,
                                              "text": "%",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 1051,
                                              "end_byte": 1052,
                                              "text": "i",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "==",
                                          "start_byte": 1053,
                                          "end_byte": 1055,
                                          "text": "==",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 1056,
                                          "end_byte": 1057,
                                          "text": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 1058,
                                      "end_byte": 1059,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 1060,
                              "end_byte": 1061,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 1062,
                          "end_byte": 1083,
                          "text": "{ gcd = i ; break ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 1062,
                              "end_byte": 1063,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1064,
                              "end_byte": 1073,
                              "text": "gcd = i ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1064,
                                  "end_byte": 1071,
                                  "text": "gcd = i",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1064,
                                      "end_byte": 1067,
                                      "text": "gcd",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1068,
                                      "end_byte": 1069,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 1070,
                                      "end_byte": 1071,
                                      "text": "i",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1072,
                                  "end_byte": 1073,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "break_statement",
                              "start_byte": 1074,
                              "end_byte": 1081,
                              "text": "break ;",
                              "children": [
                                {
                                  "type": "break",
                                  "start_byte": 1074,
                                  "end_byte": 1079,
                                  "text": "break",
                                  "children": []
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1080,
                                  "end_byte": 1081,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 1082,
                              "end_byte": 1083,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 1084,
                      "end_byte": 1085,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 1086,
              "end_byte": 1115,
              "text": "lcm = ( num1 * num2 ) / gcd ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 1086,
                  "end_byte": 1113,
                  "text": "lcm = ( num1 * num2 ) / gcd",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1086,
                      "end_byte": 1089,
                      "text": "lcm",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 1090,
                      "end_byte": 1091,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 1092,
                      "end_byte": 1113,
                      "text": "( num1 * num2 ) / gcd",
                      "children": [
                        {
                          "type": "parenthesized_expression",
                          "start_byte": 1092,
                          "end_byte": 1107,
                          "text": "( num1 * num2 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 1092,
                              "end_byte": 1093,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 1094,
                              "end_byte": 1105,
                              "text": "num1 * num2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 1094,
                                  "end_byte": 1098,
                                  "text": "num1",
                                  "children": []
                                },
                                {
                                  "type": "*",
                                  "start_byte": 1099,
                                  "end_byte": 1100,
                                  "text": "*",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 1101,
                                  "end_byte": 1105,
                                  "text": "num2",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 1106,
                              "end_byte": 1107,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "/",
                          "start_byte": 1108,
                          "end_byte": 1109,
                          "text": "/",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 1110,
                          "end_byte": 1113,
                          "text": "gcd",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1114,
                  "end_byte": 1115,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 1116,
              "end_byte": 1128,
              "text": "return lcm ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 1116,
                  "end_byte": 1122,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 1123,
                  "end_byte": 1126,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 1127,
                  "end_byte": 1128,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 1129,
              "end_byte": 1130,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}