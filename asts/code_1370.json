{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 490,
  "text": "int main ( ) { int T , h , l ; scanf ( \"%d\" , & T ) ; while ( T -- ) { int p , q ; scanf ( \"%d%d\" , & p , & q ) ; h = hcf ( p , q ) ; l = lcm ( p , q ) ; printf ( \"%d\\t%d\" , h , l ) ; } return 0 ; } int hcf ( int a , int b ) { while ( a != b ) { if ( a > b ) { a = a - b ; } else { b = b - a ; } } return a ; } int lcm ( int i , int k ) { static int multiple = 0 ; multiple += k ; if ( ( multiple % i == 0 ) && ( multiple % k == 0 ) ) { return multiple ; } else { return lcm ( i , k ) ; } }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 198,
      "text": "int main ( ) { int T , h , l ; scanf ( \"%d\" , & T ) ; while ( T -- ) { int p , q ; scanf ( \"%d%d\" , & p , & q ) ; h = hcf ( p , q ) ; l = lcm ( p , q ) ; printf ( \"%d\\t%d\" , h , l ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 198,
          "text": "{ int T , h , l ; scanf ( \"%d\" , & T ) ; while ( T -- ) { int p , q ; scanf ( \"%d%d\" , & p , & q ) ; h = hcf ( p , q ) ; l = lcm ( p , q ) ; printf ( \"%d\\t%d\" , h , l ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 30,
              "text": "int T , h , l ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": "T",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 23,
                  "end_byte": 24,
                  "text": "h",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 27,
                  "end_byte": 28,
                  "text": "l",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 29,
                  "end_byte": 30,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 31,
              "end_byte": 53,
              "text": "scanf ( \"%d\" , & T ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 31,
                  "end_byte": 51,
                  "text": "scanf ( \"%d\" , & T )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 31,
                      "end_byte": 36,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 37,
                      "end_byte": 51,
                      "text": "( \"%d\" , & T )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 37,
                          "end_byte": 38,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 39,
                          "end_byte": 43,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 39,
                              "end_byte": 40,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 40,
                              "end_byte": 42,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 42,
                              "end_byte": 43,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 44,
                          "end_byte": 45,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 46,
                          "end_byte": 49,
                          "text": "& T",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 46,
                              "end_byte": 47,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 48,
                              "end_byte": 49,
                              "text": "T",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 50,
                          "end_byte": 51,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 52,
                  "end_byte": 53,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 54,
              "end_byte": 185,
              "text": "while ( T -- ) { int p , q ; scanf ( \"%d%d\" , & p , & q ) ; h = hcf ( p , q ) ; l = lcm ( p , q ) ; printf ( \"%d\\t%d\" , h , l ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 54,
                  "end_byte": 59,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 60,
                  "end_byte": 68,
                  "text": "( T -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 60,
                      "end_byte": 61,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 62,
                      "end_byte": 66,
                      "text": "T --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 62,
                          "end_byte": 63,
                          "text": "T",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 64,
                          "end_byte": 66,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 67,
                      "end_byte": 68,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 69,
                  "end_byte": 185,
                  "text": "{ int p , q ; scanf ( \"%d%d\" , & p , & q ) ; h = hcf ( p , q ) ; l = lcm ( p , q ) ; printf ( \"%d\\t%d\" , h , l ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 69,
                      "end_byte": 70,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "declaration",
                      "start_byte": 71,
                      "end_byte": 82,
                      "text": "int p , q ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 71,
                          "end_byte": 74,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 75,
                          "end_byte": 76,
                          "text": "p",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 77,
                          "end_byte": 78,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 79,
                          "end_byte": 80,
                          "text": "q",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 81,
                          "end_byte": 82,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 83,
                      "end_byte": 113,
                      "text": "scanf ( \"%d%d\" , & p , & q ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 83,
                          "end_byte": 111,
                          "text": "scanf ( \"%d%d\" , & p , & q )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 83,
                              "end_byte": 88,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 89,
                              "end_byte": 111,
                              "text": "( \"%d%d\" , & p , & q )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 89,
                                  "end_byte": 90,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 91,
                                  "end_byte": 97,
                                  "text": "\"%d%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 91,
                                      "end_byte": 92,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 92,
                                      "end_byte": 96,
                                      "text": "%d%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 96,
                                      "end_byte": 97,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 98,
                                  "end_byte": 99,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 100,
                                  "end_byte": 103,
                                  "text": "& p",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 100,
                                      "end_byte": 101,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 102,
                                      "end_byte": 103,
                                      "text": "p",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 104,
                                  "end_byte": 105,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 106,
                                  "end_byte": 109,
                                  "text": "& q",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 106,
                                      "end_byte": 107,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 108,
                                      "end_byte": 109,
                                      "text": "q",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 110,
                                  "end_byte": 111,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 112,
                          "end_byte": 113,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 114,
                      "end_byte": 133,
                      "text": "h = hcf ( p , q ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 114,
                          "end_byte": 131,
                          "text": "h = hcf ( p , q )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 114,
                              "end_byte": 115,
                              "text": "h",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 116,
                              "end_byte": 117,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 118,
                              "end_byte": 131,
                              "text": "hcf ( p , q )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 118,
                                  "end_byte": 121,
                                  "text": "hcf",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 122,
                                  "end_byte": 131,
                                  "text": "( p , q )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 122,
                                      "end_byte": 123,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 124,
                                      "end_byte": 125,
                                      "text": "p",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 126,
                                      "end_byte": 127,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 128,
                                      "end_byte": 129,
                                      "text": "q",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 130,
                                      "end_byte": 131,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 132,
                          "end_byte": 133,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 134,
                      "end_byte": 153,
                      "text": "l = lcm ( p , q ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 134,
                          "end_byte": 151,
                          "text": "l = lcm ( p , q )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 134,
                              "end_byte": 135,
                              "text": "l",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 136,
                              "end_byte": 137,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 138,
                              "end_byte": 151,
                              "text": "lcm ( p , q )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 138,
                                  "end_byte": 141,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 142,
                                  "end_byte": 151,
                                  "text": "( p , q )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 142,
                                      "end_byte": 143,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 144,
                                      "end_byte": 145,
                                      "text": "p",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 146,
                                      "end_byte": 147,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 148,
                                      "end_byte": 149,
                                      "text": "q",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 150,
                                      "end_byte": 151,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 152,
                          "end_byte": 153,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 154,
                      "end_byte": 183,
                      "text": "printf ( \"%d\\t%d\" , h , l ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 154,
                          "end_byte": 181,
                          "text": "printf ( \"%d\\t%d\" , h , l )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 154,
                              "end_byte": 160,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 161,
                              "end_byte": 181,
                              "text": "( \"%d\\t%d\" , h , l )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 161,
                                  "end_byte": 162,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 163,
                                  "end_byte": 171,
                                  "text": "\"%d\\t%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 163,
                                      "end_byte": 164,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 164,
                                      "end_byte": 166,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 166,
                                      "end_byte": 168,
                                      "text": "\\t",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 168,
                                      "end_byte": 170,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 170,
                                      "end_byte": 171,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 172,
                                  "end_byte": 173,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 174,
                                  "end_byte": 175,
                                  "text": "h",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 176,
                                  "end_byte": 177,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 178,
                                  "end_byte": 179,
                                  "text": "l",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 180,
                                  "end_byte": 181,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 182,
                          "end_byte": 183,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 184,
                      "end_byte": 185,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 186,
              "end_byte": 196,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 186,
                  "end_byte": 192,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 193,
                  "end_byte": 194,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 195,
                  "end_byte": 196,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 197,
              "end_byte": 198,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 199,
      "end_byte": 310,
      "text": "int hcf ( int a , int b ) { while ( a != b ) { if ( a > b ) { a = a - b ; } else { b = b - a ; } } return a ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 199,
          "end_byte": 202,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 203,
          "end_byte": 224,
          "text": "hcf ( int a , int b )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 203,
              "end_byte": 206,
              "text": "hcf",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 207,
              "end_byte": 224,
              "text": "( int a , int b )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 207,
                  "end_byte": 208,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 209,
                  "end_byte": 214,
                  "text": "int a",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 209,
                      "end_byte": 212,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 213,
                      "end_byte": 214,
                      "text": "a",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 215,
                  "end_byte": 216,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 217,
                  "end_byte": 222,
                  "text": "int b",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 217,
                      "end_byte": 220,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 221,
                      "end_byte": 222,
                      "text": "b",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 223,
                  "end_byte": 224,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 225,
          "end_byte": 310,
          "text": "{ while ( a != b ) { if ( a > b ) { a = a - b ; } else { b = b - a ; } } return a ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 225,
              "end_byte": 226,
              "text": "{",
              "children": []
            },
            {
              "type": "while_statement",
              "start_byte": 227,
              "end_byte": 297,
              "text": "while ( a != b ) { if ( a > b ) { a = a - b ; } else { b = b - a ; } }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 227,
                  "end_byte": 232,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 233,
                  "end_byte": 243,
                  "text": "( a != b )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 233,
                      "end_byte": 234,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 235,
                      "end_byte": 241,
                      "text": "a != b",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 235,
                          "end_byte": 236,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": "!=",
                          "start_byte": 237,
                          "end_byte": 239,
                          "text": "!=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 240,
                          "end_byte": 241,
                          "text": "b",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 242,
                      "end_byte": 243,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 244,
                  "end_byte": 297,
                  "text": "{ if ( a > b ) { a = a - b ; } else { b = b - a ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 244,
                      "end_byte": 245,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 246,
                      "end_byte": 295,
                      "text": "if ( a > b ) { a = a - b ; } else { b = b - a ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 246,
                          "end_byte": 248,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 249,
                          "end_byte": 258,
                          "text": "( a > b )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 249,
                              "end_byte": 250,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 251,
                              "end_byte": 256,
                              "text": "a > b",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 251,
                                  "end_byte": 252,
                                  "text": "a",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 253,
                                  "end_byte": 254,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 255,
                                  "end_byte": 256,
                                  "text": "b",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 257,
                              "end_byte": 258,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 259,
                          "end_byte": 274,
                          "text": "{ a = a - b ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 259,
                              "end_byte": 260,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 261,
                              "end_byte": 272,
                              "text": "a = a - b ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 261,
                                  "end_byte": 270,
                                  "text": "a = a - b",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 261,
                                      "end_byte": 262,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 263,
                                      "end_byte": 264,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 265,
                                      "end_byte": 270,
                                      "text": "a - b",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 265,
                                          "end_byte": 266,
                                          "text": "a",
                                          "children": []
                                        },
                                        {
                                          "type": "-",
                                          "start_byte": 267,
                                          "end_byte": 268,
                                          "text": "-",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 269,
                                          "end_byte": 270,
                                          "text": "b",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 271,
                                  "end_byte": 272,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 273,
                              "end_byte": 274,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 275,
                          "end_byte": 295,
                          "text": "else { b = b - a ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 275,
                              "end_byte": 279,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 280,
                              "end_byte": 295,
                              "text": "{ b = b - a ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 280,
                                  "end_byte": 281,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 282,
                                  "end_byte": 293,
                                  "text": "b = b - a ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 282,
                                      "end_byte": 291,
                                      "text": "b = b - a",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 282,
                                          "end_byte": 283,
                                          "text": "b",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 284,
                                          "end_byte": 285,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 286,
                                          "end_byte": 291,
                                          "text": "b - a",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 286,
                                              "end_byte": 287,
                                              "text": "b",
                                              "children": []
                                            },
                                            {
                                              "type": "-",
                                              "start_byte": 288,
                                              "end_byte": 289,
                                              "text": "-",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 290,
                                              "end_byte": 291,
                                              "text": "a",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 292,
                                      "end_byte": 293,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 294,
                                  "end_byte": 295,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 296,
                      "end_byte": 297,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 298,
              "end_byte": 308,
              "text": "return a ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 298,
                  "end_byte": 304,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 305,
                  "end_byte": 306,
                  "text": "a",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 307,
                  "end_byte": 308,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 309,
              "end_byte": 310,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 311,
      "end_byte": 490,
      "text": "int lcm ( int i , int k ) { static int multiple = 0 ; multiple += k ; if ( ( multiple % i == 0 ) && ( multiple % k == 0 ) ) { return multiple ; } else { return lcm ( i , k ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 311,
          "end_byte": 314,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 315,
          "end_byte": 336,
          "text": "lcm ( int i , int k )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 315,
              "end_byte": 318,
              "text": "lcm",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 319,
              "end_byte": 336,
              "text": "( int i , int k )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 319,
                  "end_byte": 320,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 321,
                  "end_byte": 326,
                  "text": "int i",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 321,
                      "end_byte": 324,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 325,
                      "end_byte": 326,
                      "text": "i",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 327,
                  "end_byte": 328,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 329,
                  "end_byte": 334,
                  "text": "int k",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 329,
                      "end_byte": 332,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 333,
                      "end_byte": 334,
                      "text": "k",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 335,
                  "end_byte": 336,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 337,
          "end_byte": 490,
          "text": "{ static int multiple = 0 ; multiple += k ; if ( ( multiple % i == 0 ) && ( multiple % k == 0 ) ) { return multiple ; } else { return lcm ( i , k ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 337,
              "end_byte": 338,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 339,
              "end_byte": 364,
              "text": "static int multiple = 0 ;",
              "children": [
                {
                  "type": "storage_class_specifier",
                  "start_byte": 339,
                  "end_byte": 345,
                  "text": "static",
                  "children": [
                    {
                      "type": "static",
                      "start_byte": 339,
                      "end_byte": 345,
                      "text": "static",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "primitive_type",
                  "start_byte": 346,
                  "end_byte": 349,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 350,
                  "end_byte": 362,
                  "text": "multiple = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 350,
                      "end_byte": 358,
                      "text": "multiple",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 359,
                      "end_byte": 360,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 361,
                      "end_byte": 362,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 363,
                  "end_byte": 364,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 365,
              "end_byte": 380,
              "text": "multiple += k ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 365,
                  "end_byte": 378,
                  "text": "multiple += k",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 365,
                      "end_byte": 373,
                      "text": "multiple",
                      "children": []
                    },
                    {
                      "type": "+=",
                      "start_byte": 374,
                      "end_byte": 376,
                      "text": "+=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 377,
                      "end_byte": 378,
                      "text": "k",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 379,
                  "end_byte": 380,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 381,
              "end_byte": 488,
              "text": "if ( ( multiple % i == 0 ) && ( multiple % k == 0 ) ) { return multiple ; } else { return lcm ( i , k ) ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 381,
                  "end_byte": 383,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 384,
                  "end_byte": 434,
                  "text": "( ( multiple % i == 0 ) && ( multiple % k == 0 ) )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 384,
                      "end_byte": 385,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 386,
                      "end_byte": 432,
                      "text": "( multiple % i == 0 ) && ( multiple % k == 0 )",
                      "children": [
                        {
                          "type": "parenthesized_expression",
                          "start_byte": 386,
                          "end_byte": 407,
                          "text": "( multiple % i == 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 386,
                              "end_byte": 387,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 388,
                              "end_byte": 405,
                              "text": "multiple % i == 0",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 388,
                                  "end_byte": 400,
                                  "text": "multiple % i",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 388,
                                      "end_byte": 396,
                                      "text": "multiple",
                                      "children": []
                                    },
                                    {
                                      "type": "%",
                                      "start_byte": 397,
                                      "end_byte": 398,
                                      "text": "%",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 399,
                                      "end_byte": 400,
                                      "text": "i",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "==",
                                  "start_byte": 401,
                                  "end_byte": 403,
                                  "text": "==",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 404,
                                  "end_byte": 405,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 406,
                              "end_byte": 407,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "&&",
                          "start_byte": 408,
                          "end_byte": 410,
                          "text": "&&",
                          "children": []
                        },
                        {
                          "type": "parenthesized_expression",
                          "start_byte": 411,
                          "end_byte": 432,
                          "text": "( multiple % k == 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 411,
                              "end_byte": 412,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 413,
                              "end_byte": 430,
                              "text": "multiple % k == 0",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 413,
                                  "end_byte": 425,
                                  "text": "multiple % k",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 413,
                                      "end_byte": 421,
                                      "text": "multiple",
                                      "children": []
                                    },
                                    {
                                      "type": "%",
                                      "start_byte": 422,
                                      "end_byte": 423,
                                      "text": "%",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 424,
                                      "end_byte": 425,
                                      "text": "k",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "==",
                                  "start_byte": 426,
                                  "end_byte": 428,
                                  "text": "==",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 429,
                                  "end_byte": 430,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 431,
                              "end_byte": 432,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 433,
                      "end_byte": 434,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 435,
                  "end_byte": 456,
                  "text": "{ return multiple ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 435,
                      "end_byte": 436,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 437,
                      "end_byte": 454,
                      "text": "return multiple ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 437,
                          "end_byte": 443,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 444,
                          "end_byte": 452,
                          "text": "multiple",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 453,
                          "end_byte": 454,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 455,
                      "end_byte": 456,
                      "text": "}",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 457,
                  "end_byte": 488,
                  "text": "else { return lcm ( i , k ) ; }",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 457,
                      "end_byte": 461,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "compound_statement",
                      "start_byte": 462,
                      "end_byte": 488,
                      "text": "{ return lcm ( i , k ) ; }",
                      "children": [
                        {
                          "type": "{",
                          "start_byte": 462,
                          "end_byte": 463,
                          "text": "{",
                          "children": []
                        },
                        {
                          "type": "return_statement",
                          "start_byte": 464,
                          "end_byte": 486,
                          "text": "return lcm ( i , k ) ;",
                          "children": [
                            {
                              "type": "return",
                              "start_byte": 464,
                              "end_byte": 470,
                              "text": "return",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 471,
                              "end_byte": 484,
                              "text": "lcm ( i , k )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 471,
                                  "end_byte": 474,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 475,
                                  "end_byte": 484,
                                  "text": "( i , k )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 475,
                                      "end_byte": 476,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 477,
                                      "end_byte": 478,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 479,
                                      "end_byte": 480,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 481,
                                      "end_byte": 482,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 483,
                                      "end_byte": 484,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 485,
                              "end_byte": 486,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start_byte": 487,
                          "end_byte": 488,
                          "text": "}",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 489,
              "end_byte": 490,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}