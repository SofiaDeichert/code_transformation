{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 451,
  "text": "int subinc ( ) { int n ; scanf ( \"%d\" , & n ) ; int arr [ n ] ; int i = 0 , j = 0 , count = n ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\" , & arr [ i ] ) ; } i = 0 ; for ( i = 0 ; i < n - 1 ; i ++ ) { j = 0 ; while ( arr [ i + j ] <= arr [ i + j + 1 ] && ( i + j + 1 ) < n ) { j ++ ; } count += j ; } return count ; } int main ( ) { int t ; scanf ( \"%d\" , & t ) ; int i ; for ( i = 1 ; i <= t ; i ++ ) { printf ( \"%d\" , subinc ( ) ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 319,
      "text": "int subinc ( ) { int n ; scanf ( \"%d\" , & n ) ; int arr [ n ] ; int i = 0 , j = 0 , count = n ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\" , & arr [ i ] ) ; } i = 0 ; for ( i = 0 ; i < n - 1 ; i ++ ) { j = 0 ; while ( arr [ i + j ] <= arr [ i + j + 1 ] && ( i + j + 1 ) < n ) { j ++ ; } count += j ; } return count ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 14,
          "text": "subinc ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 10,
              "text": "subinc",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 11,
              "end_byte": 14,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 13,
                  "end_byte": 14,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 15,
          "end_byte": 319,
          "text": "{ int n ; scanf ( \"%d\" , & n ) ; int arr [ n ] ; int i = 0 , j = 0 , count = n ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\" , & arr [ i ] ) ; } i = 0 ; for ( i = 0 ; i < n - 1 ; i ++ ) { j = 0 ; while ( arr [ i + j ] <= arr [ i + j + 1 ] && ( i + j + 1 ) < n ) { j ++ ; } count += j ; } return count ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 15,
              "end_byte": 16,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 17,
              "end_byte": 24,
              "text": "int n ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 17,
                  "end_byte": 20,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 23,
                  "end_byte": 24,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 25,
              "end_byte": 47,
              "text": "scanf ( \"%d\" , & n ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 25,
                  "end_byte": 45,
                  "text": "scanf ( \"%d\" , & n )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 25,
                      "end_byte": 30,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 31,
                      "end_byte": 45,
                      "text": "( \"%d\" , & n )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 31,
                          "end_byte": 32,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 33,
                          "end_byte": 37,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 33,
                              "end_byte": 34,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 34,
                              "end_byte": 36,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 36,
                              "end_byte": 37,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 38,
                          "end_byte": 39,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 40,
                          "end_byte": 43,
                          "text": "& n",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 40,
                              "end_byte": 41,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 42,
                              "end_byte": 43,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 44,
                          "end_byte": 45,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 46,
                  "end_byte": 47,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 48,
              "end_byte": 63,
              "text": "int arr [ n ] ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 48,
                  "end_byte": 51,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 52,
                  "end_byte": 61,
                  "text": "arr [ n ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 52,
                      "end_byte": 55,
                      "text": "arr",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 56,
                      "end_byte": 57,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 58,
                      "end_byte": 59,
                      "text": "n",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 60,
                      "end_byte": 61,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 62,
                  "end_byte": 63,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 64,
              "end_byte": 95,
              "text": "int i = 0 , j = 0 , count = n ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 64,
                  "end_byte": 67,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 68,
                  "end_byte": 73,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 68,
                      "end_byte": 69,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 70,
                      "end_byte": 71,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 72,
                      "end_byte": 73,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 74,
                  "end_byte": 75,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 76,
                  "end_byte": 81,
                  "text": "j = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 76,
                      "end_byte": 77,
                      "text": "j",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 78,
                      "end_byte": 79,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 80,
                      "end_byte": 81,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 82,
                  "end_byte": 83,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 84,
                  "end_byte": 93,
                  "text": "count = n",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 84,
                      "end_byte": 89,
                      "text": "count",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 90,
                      "end_byte": 91,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 92,
                      "end_byte": 93,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 94,
                  "end_byte": 95,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 96,
              "end_byte": 159,
              "text": "for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\" , & arr [ i ] ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 96,
                  "end_byte": 99,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 100,
                  "end_byte": 101,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 102,
                  "end_byte": 107,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 102,
                      "end_byte": 103,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 104,
                      "end_byte": 105,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 106,
                      "end_byte": 107,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 108,
                  "end_byte": 109,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 110,
                  "end_byte": 115,
                  "text": "i < n",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 110,
                      "end_byte": 111,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 112,
                      "end_byte": 113,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 114,
                      "end_byte": 115,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 116,
                  "end_byte": 117,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 118,
                  "end_byte": 122,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 118,
                      "end_byte": 119,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 120,
                      "end_byte": 122,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 123,
                  "end_byte": 124,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 125,
                  "end_byte": 159,
                  "text": "{ scanf ( \"%d\" , & arr [ i ] ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 125,
                      "end_byte": 126,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 127,
                      "end_byte": 157,
                      "text": "scanf ( \"%d\" , & arr [ i ] ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 127,
                          "end_byte": 155,
                          "text": "scanf ( \"%d\" , & arr [ i ] )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 127,
                              "end_byte": 132,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 133,
                              "end_byte": 155,
                              "text": "( \"%d\" , & arr [ i ] )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 133,
                                  "end_byte": 134,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 135,
                                  "end_byte": 139,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 135,
                                      "end_byte": 136,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 136,
                                      "end_byte": 138,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 138,
                                      "end_byte": 139,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 140,
                                  "end_byte": 141,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 142,
                                  "end_byte": 153,
                                  "text": "& arr [ i ]",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 142,
                                      "end_byte": 143,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 144,
                                      "end_byte": 153,
                                      "text": "arr [ i ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 144,
                                          "end_byte": 147,
                                          "text": "arr",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 148,
                                          "end_byte": 153,
                                          "text": "[ i ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 148,
                                              "end_byte": 149,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 150,
                                              "end_byte": 151,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 152,
                                              "end_byte": 153,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 154,
                                  "end_byte": 155,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 156,
                          "end_byte": 157,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 158,
                      "end_byte": 159,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 160,
              "end_byte": 167,
              "text": "i = 0 ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 160,
                  "end_byte": 165,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 160,
                      "end_byte": 161,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 162,
                      "end_byte": 163,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 164,
                      "end_byte": 165,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 166,
                  "end_byte": 167,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 168,
              "end_byte": 302,
              "text": "for ( i = 0 ; i < n - 1 ; i ++ ) { j = 0 ; while ( arr [ i + j ] <= arr [ i + j + 1 ] && ( i + j + 1 ) < n ) { j ++ ; } count += j ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 168,
                  "end_byte": 171,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 172,
                  "end_byte": 173,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 174,
                  "end_byte": 179,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 174,
                      "end_byte": 175,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 176,
                      "end_byte": 177,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 178,
                      "end_byte": 179,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 180,
                  "end_byte": 181,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 182,
                  "end_byte": 191,
                  "text": "i < n - 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 182,
                      "end_byte": 183,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 184,
                      "end_byte": 185,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 186,
                      "end_byte": 191,
                      "text": "n - 1",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 186,
                          "end_byte": 187,
                          "text": "n",
                          "children": []
                        },
                        {
                          "type": "-",
                          "start_byte": 188,
                          "end_byte": 189,
                          "text": "-",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 190,
                          "end_byte": 191,
                          "text": "1",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 192,
                  "end_byte": 193,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 194,
                  "end_byte": 198,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 194,
                      "end_byte": 195,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 196,
                      "end_byte": 198,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 199,
                  "end_byte": 200,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 201,
                  "end_byte": 302,
                  "text": "{ j = 0 ; while ( arr [ i + j ] <= arr [ i + j + 1 ] && ( i + j + 1 ) < n ) { j ++ ; } count += j ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 201,
                      "end_byte": 202,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 203,
                      "end_byte": 210,
                      "text": "j = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 203,
                          "end_byte": 208,
                          "text": "j = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 203,
                              "end_byte": 204,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 205,
                              "end_byte": 206,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 207,
                              "end_byte": 208,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 209,
                          "end_byte": 210,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 211,
                      "end_byte": 287,
                      "text": "while ( arr [ i + j ] <= arr [ i + j + 1 ] && ( i + j + 1 ) < n ) { j ++ ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 211,
                          "end_byte": 216,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 217,
                          "end_byte": 276,
                          "text": "( arr [ i + j ] <= arr [ i + j + 1 ] && ( i + j + 1 ) < n )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 217,
                              "end_byte": 218,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 219,
                              "end_byte": 274,
                              "text": "arr [ i + j ] <= arr [ i + j + 1 ] && ( i + j + 1 ) < n",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 219,
                                  "end_byte": 253,
                                  "text": "arr [ i + j ] <= arr [ i + j + 1 ]",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 219,
                                      "end_byte": 232,
                                      "text": "arr [ i + j ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 219,
                                          "end_byte": 222,
                                          "text": "arr",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 223,
                                          "end_byte": 232,
                                          "text": "[ i + j ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 223,
                                              "end_byte": 224,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 225,
                                              "end_byte": 230,
                                              "text": "i + j",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 225,
                                                  "end_byte": 226,
                                                  "text": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 227,
                                                  "end_byte": 228,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 229,
                                                  "end_byte": 230,
                                                  "text": "j",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 231,
                                              "end_byte": 232,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "<=",
                                      "start_byte": 233,
                                      "end_byte": 235,
                                      "text": "<=",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 236,
                                      "end_byte": 253,
                                      "text": "arr [ i + j + 1 ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 236,
                                          "end_byte": 239,
                                          "text": "arr",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 240,
                                          "end_byte": 253,
                                          "text": "[ i + j + 1 ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 240,
                                              "end_byte": 241,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 242,
                                              "end_byte": 251,
                                              "text": "i + j + 1",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 242,
                                                  "end_byte": 247,
                                                  "text": "i + j",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 242,
                                                      "end_byte": 243,
                                                      "text": "i",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "+",
                                                      "start_byte": 244,
                                                      "end_byte": 245,
                                                      "text": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 246,
                                                      "end_byte": 247,
                                                      "text": "j",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 248,
                                                  "end_byte": 249,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 250,
                                                  "end_byte": 251,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 252,
                                              "end_byte": 253,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "&&",
                                  "start_byte": 254,
                                  "end_byte": 256,
                                  "text": "&&",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 257,
                                  "end_byte": 274,
                                  "text": "( i + j + 1 ) < n",
                                  "children": [
                                    {
                                      "type": "parenthesized_expression",
                                      "start_byte": 257,
                                      "end_byte": 270,
                                      "text": "( i + j + 1 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 257,
                                          "end_byte": 258,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 259,
                                          "end_byte": 268,
                                          "text": "i + j + 1",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 259,
                                              "end_byte": 264,
                                              "text": "i + j",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 259,
                                                  "end_byte": 260,
                                                  "text": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 261,
                                                  "end_byte": 262,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 263,
                                                  "end_byte": 264,
                                                  "text": "j",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 265,
                                              "end_byte": 266,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 267,
                                              "end_byte": 268,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 269,
                                          "end_byte": 270,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "<",
                                      "start_byte": 271,
                                      "end_byte": 272,
                                      "text": "<",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 273,
                                      "end_byte": 274,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 275,
                              "end_byte": 276,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 277,
                          "end_byte": 287,
                          "text": "{ j ++ ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 277,
                              "end_byte": 278,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 279,
                              "end_byte": 285,
                              "text": "j ++ ;",
                              "children": [
                                {
                                  "type": "update_expression",
                                  "start_byte": 279,
                                  "end_byte": 283,
                                  "text": "j ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 279,
                                      "end_byte": 280,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 281,
                                      "end_byte": 283,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 284,
                                  "end_byte": 285,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 286,
                              "end_byte": 287,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 288,
                      "end_byte": 300,
                      "text": "count += j ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 288,
                          "end_byte": 298,
                          "text": "count += j",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 288,
                              "end_byte": 293,
                              "text": "count",
                              "children": []
                            },
                            {
                              "type": "+=",
                              "start_byte": 294,
                              "end_byte": 296,
                              "text": "+=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 297,
                              "end_byte": 298,
                              "text": "j",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 299,
                          "end_byte": 300,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 301,
                      "end_byte": 302,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 303,
              "end_byte": 317,
              "text": "return count ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 303,
                  "end_byte": 309,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 310,
                  "end_byte": 315,
                  "text": "count",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 316,
                  "end_byte": 317,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 318,
              "end_byte": 319,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 320,
      "end_byte": 451,
      "text": "int main ( ) { int t ; scanf ( \"%d\" , & t ) ; int i ; for ( i = 1 ; i <= t ; i ++ ) { printf ( \"%d\" , subinc ( ) ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 320,
          "end_byte": 323,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 324,
          "end_byte": 332,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 324,
              "end_byte": 328,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 329,
              "end_byte": 332,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 329,
                  "end_byte": 330,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 331,
                  "end_byte": 332,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 333,
          "end_byte": 451,
          "text": "{ int t ; scanf ( \"%d\" , & t ) ; int i ; for ( i = 1 ; i <= t ; i ++ ) { printf ( \"%d\" , subinc ( ) ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 333,
              "end_byte": 334,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 335,
              "end_byte": 342,
              "text": "int t ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 335,
                  "end_byte": 338,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 339,
                  "end_byte": 340,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 341,
                  "end_byte": 342,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 343,
              "end_byte": 365,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 343,
                  "end_byte": 363,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 343,
                      "end_byte": 348,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 349,
                      "end_byte": 363,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 349,
                          "end_byte": 350,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 351,
                          "end_byte": 355,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 351,
                              "end_byte": 352,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 352,
                              "end_byte": 354,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 354,
                              "end_byte": 355,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 356,
                          "end_byte": 357,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 358,
                          "end_byte": 361,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 358,
                              "end_byte": 359,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 360,
                              "end_byte": 361,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 362,
                          "end_byte": 363,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 364,
                  "end_byte": 365,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 366,
              "end_byte": 373,
              "text": "int i ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 366,
                  "end_byte": 369,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 370,
                  "end_byte": 371,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 372,
                  "end_byte": 373,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 374,
              "end_byte": 438,
              "text": "for ( i = 1 ; i <= t ; i ++ ) { printf ( \"%d\" , subinc ( ) ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 374,
                  "end_byte": 377,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 378,
                  "end_byte": 379,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 380,
                  "end_byte": 385,
                  "text": "i = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 380,
                      "end_byte": 381,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 382,
                      "end_byte": 383,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 384,
                      "end_byte": 385,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 386,
                  "end_byte": 387,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 388,
                  "end_byte": 394,
                  "text": "i <= t",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 388,
                      "end_byte": 389,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<=",
                      "start_byte": 390,
                      "end_byte": 392,
                      "text": "<=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 393,
                      "end_byte": 394,
                      "text": "t",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 395,
                  "end_byte": 396,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 397,
                  "end_byte": 401,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 397,
                      "end_byte": 398,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 399,
                      "end_byte": 401,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 402,
                  "end_byte": 403,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 404,
                  "end_byte": 438,
                  "text": "{ printf ( \"%d\" , subinc ( ) ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 404,
                      "end_byte": 405,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 406,
                      "end_byte": 436,
                      "text": "printf ( \"%d\" , subinc ( ) ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 406,
                          "end_byte": 434,
                          "text": "printf ( \"%d\" , subinc ( ) )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 406,
                              "end_byte": 412,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 413,
                              "end_byte": 434,
                              "text": "( \"%d\" , subinc ( ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 413,
                                  "end_byte": 414,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 415,
                                  "end_byte": 419,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 415,
                                      "end_byte": 416,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 416,
                                      "end_byte": 418,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 418,
                                      "end_byte": 419,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 420,
                                  "end_byte": 421,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 422,
                                  "end_byte": 432,
                                  "text": "subinc ( )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 422,
                                      "end_byte": 428,
                                      "text": "subinc",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 429,
                                      "end_byte": 432,
                                      "text": "( )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 429,
                                          "end_byte": 430,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 431,
                                          "end_byte": 432,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 433,
                                  "end_byte": 434,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 435,
                          "end_byte": 436,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 437,
                      "end_byte": 438,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 439,
              "end_byte": 449,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 439,
                  "end_byte": 445,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 446,
                  "end_byte": 447,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 448,
                  "end_byte": 449,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 450,
              "end_byte": 451,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}