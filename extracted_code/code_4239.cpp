void t_sums ( int sum , int i , int j ) ; int * * element , max , n ; int main ( void ) { int i , j , t ; scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & n ) ; element = ( int * * ) calloc ( n , sizeof ( int * ) ) ; for ( i = 0 ; i < n ; i ++ ) element [ i ] = ( int * ) calloc ( i + 1 , sizeof ( int ) ) ; for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j <= i ; j ++ ) scanf ( "%d" , & element [ i ] [ j ] ) ; max = 0 ; t_sums ( 0 , 0 , 0 ) ; printf ( "%d\n" , max ) ; for ( i = 0 ; i < n ; i ++ ) free ( element [ i ] ) ; free ( element ) ; } return 0 ; } void t_sums ( int sum , int i , int j ) { if ( i == n - 1 ) { sum += element [ i ] [ j ] ; if ( sum > max ) max = sum ; } else { t_sums ( sum + element [ i ] [ j ] , i + 1 , j ) ; t_sums ( sum + element [ i ] [ j ] , i + 1 , j + 1 ) ; } }