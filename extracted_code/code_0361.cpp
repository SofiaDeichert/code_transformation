int n ; int a [ 100 ] [ 100 ] , visited [ 100 ] [ 100 ] , cache [ 100 ] [ 100 ] ; int max ( int a , int b ) { if ( a >= b ) return a ; else return b ; } int sum ( int i , int j ) { if ( i >= n ) return 0 ; if ( visited [ i ] [ j ] == 1 ) return cache [ i ] [ j ] ; int t1 , t2 , t ; t1 = sum ( i + 1 , j ) ; t2 = sum ( i + 1 , j + 1 ) ; visited [ i ] [ j ] = 1 ; t = max ( t1 , t2 ) + a [ i ] [ j ] ; cache [ i ] [ j ] = t ; return t ; } int main ( ) { int cases , i , j ; scanf ( "%d" , & cases ) ; while ( cases -- ) { scanf ( "%d" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & a [ i ] [ j ] ) ; visited [ i ] [ j ] = 0 ; cache [ i ] [ j ] = 0 ; } } for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) printf ( "%d " , visited [ i ] [ j ] ) ; printf ( "\n" ) ; } for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) printf ( "%d " , cache [ i ] [ j ] ) ; printf ( "\n" ) ; } printf ( "%d\n" , sum ( 0 , 0 ) ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) printf ( "%d " , visited [ i ] [ j ] ) ; printf ( "\n" ) ; } for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) printf ( "%d " , cache [ i ] [ j ] ) ; printf ( "\n" ) ; } } }