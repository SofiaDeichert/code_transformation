int ar [ 1000 ] [ 5050 ] ; long long int maxy [ 1000 ] ; long long int max ; int n ; long long int a , q ; void sumtrian ( int i , int l , long long int p ) { static int r = 0 ; if ( l == n - 1 ) { q = p + ar [ a ] [ i ] ; if ( r == 0 ) max = q ; else if ( q > max ) { max = q ; maxy [ a ] = max ; } r ++ ; return ; } p += ar [ a ] [ i ] ; sumtrian ( i + l + 1 , l + 1 , p ) ; sumtrian ( i + l + 2 , l + 1 , p ) ; } int main ( ) { int t ; register int i , j , k ; scanf ( "%d" , & t ) ; for ( a = 0 ; a < t ; a ++ ) { scanf ( "%d" , & n ) ; for ( i = 0 ; i < ( ( n * ( n + 1 ) ) / 2 ) ; i ++ ) { scanf ( "%d" , & ar [ a ] [ i ] ) ; } } printf ( "\n" ) ; for ( a = 0 ; a < t ; a ++ ) { sumtrian ( 0 , 0 , 0 ) ; printf ( "%lld\n" , maxy [ a ] ) ; } }