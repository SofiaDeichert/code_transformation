void input ( int * * a , int n ) { int i , j ; for ( i = 1 ; i <= n ; i ++ ) for ( j = 1 ; j <= i ; j ++ ) scanf ( "%d" , & a [ i ] [ j ] ) ; } int max ( int a , int b ) { if ( a > b ) return a ; return b ; } int maxPath ( int * * a , int i , int j , int n ) { if ( i == n || j == n ) return a [ i ] [ j ] ; else if ( i == j && i != 1 ) return a [ i ] [ j ] ; else return a [ i ] [ j ] + max ( maxPath ( a , i + 1 , j , n ) , maxPath ( a , i + 1 , j + 1 , n ) ) ; } int main ( ) { int tc , n , i , * * a ; scanf ( "%d" , & tc ) ; while ( tc -- ) { scanf ( "%d" , & n ) ; a = ( int * * ) calloc ( n , sizeof ( int * ) ) ; for ( i = 1 ; i <= n ; i ++ ) a [ i ] = ( int * ) calloc ( n , sizeof ( int ) ) ; input ( a , n ) ; printf ( "%d\n" , maxPath ( a , 1 , 1 , n ) ) ; } return 0 ; }