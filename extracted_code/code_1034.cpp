int main ( ) { int t ; scanf ( "%d" , & t ) ; while ( t -- ) { int n ; scanf ( "%d" , & n ) ; int k = n * ( n + 1 ) / 2 , i , j ; int a [ k + 1 ] , heap [ 2 * n + 1 ] ; for ( i = 1 ; i < k + 1 ; i ++ ) scanf ( "%d" , & a [ i ] ) ; heap [ 0 ] = a [ 1 ] ; heap [ 1 ] = - 36 ; for ( i = 1 ; i < n + 1 ; i ++ ) { heap [ 2 * i ] = heap [ 2 * ( i - 1 ) ] + a [ 1 + i ] ; heap [ 2 * i + 1 ] = heap [ 2 * ( i - 1 ) ] + a [ 2 + i ] ; } int max = heap [ 0 ] ; for ( i = 0 ; i < 2 * n + 1 ; i ++ ) if ( max < heap [ i ] ) max = heap [ i ] ; printf ( "%d\n" , max ) ; } return 0 ; }