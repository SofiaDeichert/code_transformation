{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 687,
  "text": "long trisum ( int h , int line ) ; int a [ 99 ] ; int l ; int main ( ) { int t ; scanf ( \"%i\" , & t ) ; while ( t > 0 ) { scanf ( \"%i\" , & l ) ; int i , j ; for ( i = 0 ; i < l ; i ++ ) { for ( j = 0 ; j < i + 1 ; j ++ ) scanf ( \"%i\" , a + j ) ; } int sum = trisum ( 0 , 1 ) ; printf ( \"%i\\n\" , sum ) ; t -- ; } return 0 ; } long trisum ( int h , int line ) { if ( line == l - 1 ) { if ( a [ h + l - 1 ] > a [ h + l ] ) return a [ h + l - 1 ] + a [ h ] ; else return a [ h ] + a [ l + h ] ; } else { if ( trisum ( h + line , line + 1 ) > trisum ( h + line + 1 , line + 1 ) ) return a [ h ] + trisum ( h + line , line + 1 ) ; else return a [ h ] + trisum ( h + line + 1 , line + 1 ) ; } }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 34,
      "text": "long trisum ( int h , int line ) ;",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 0,
          "end_byte": 4,
          "text": "long",
          "children": [
            {
              "type": "long",
              "start_byte": 0,
              "end_byte": 4,
              "text": "long",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 5,
          "end_byte": 32,
          "text": "trisum ( int h , int line )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 5,
              "end_byte": 11,
              "text": "trisum",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 12,
              "end_byte": 32,
              "text": "( int h , int line )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 12,
                  "end_byte": 13,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 14,
                  "end_byte": 19,
                  "text": "int h",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 14,
                      "end_byte": 17,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 18,
                      "end_byte": 19,
                      "text": "h",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 20,
                  "end_byte": 21,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 22,
                  "end_byte": 30,
                  "text": "int line",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 22,
                      "end_byte": 25,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 26,
                      "end_byte": 30,
                      "text": "line",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 31,
                  "end_byte": 32,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 33,
          "end_byte": 34,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 35,
      "end_byte": 49,
      "text": "int a [ 99 ] ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 35,
          "end_byte": 38,
          "text": "int",
          "children": []
        },
        {
          "type": "array_declarator",
          "start_byte": 39,
          "end_byte": 47,
          "text": "a [ 99 ]",
          "children": [
            {
              "type": "identifier",
              "start_byte": 39,
              "end_byte": 40,
              "text": "a",
              "children": []
            },
            {
              "type": "[",
              "start_byte": 41,
              "end_byte": 42,
              "text": "[",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 43,
              "end_byte": 45,
              "text": "99",
              "children": []
            },
            {
              "type": "]",
              "start_byte": 46,
              "end_byte": 47,
              "text": "]",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 48,
          "end_byte": 49,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 50,
      "end_byte": 57,
      "text": "int l ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 50,
          "end_byte": 53,
          "text": "int",
          "children": []
        },
        {
          "type": "identifier",
          "start_byte": 54,
          "end_byte": 55,
          "text": "l",
          "children": []
        },
        {
          "type": ";",
          "start_byte": 56,
          "end_byte": 57,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 58,
      "end_byte": 324,
      "text": "int main ( ) { int t ; scanf ( \"%i\" , & t ) ; while ( t > 0 ) { scanf ( \"%i\" , & l ) ; int i , j ; for ( i = 0 ; i < l ; i ++ ) { for ( j = 0 ; j < i + 1 ; j ++ ) scanf ( \"%i\" , a + j ) ; } int sum = trisum ( 0 , 1 ) ; printf ( \"%i\\n\" , sum ) ; t -- ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 58,
          "end_byte": 61,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 62,
          "end_byte": 70,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 62,
              "end_byte": 66,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 67,
              "end_byte": 70,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 67,
                  "end_byte": 68,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 69,
                  "end_byte": 70,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 71,
          "end_byte": 324,
          "text": "{ int t ; scanf ( \"%i\" , & t ) ; while ( t > 0 ) { scanf ( \"%i\" , & l ) ; int i , j ; for ( i = 0 ; i < l ; i ++ ) { for ( j = 0 ; j < i + 1 ; j ++ ) scanf ( \"%i\" , a + j ) ; } int sum = trisum ( 0 , 1 ) ; printf ( \"%i\\n\" , sum ) ; t -- ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 71,
              "end_byte": 72,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 73,
              "end_byte": 80,
              "text": "int t ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 73,
                  "end_byte": 76,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 77,
                  "end_byte": 78,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 79,
                  "end_byte": 80,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 81,
              "end_byte": 103,
              "text": "scanf ( \"%i\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 81,
                  "end_byte": 101,
                  "text": "scanf ( \"%i\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 81,
                      "end_byte": 86,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 87,
                      "end_byte": 101,
                      "text": "( \"%i\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 87,
                          "end_byte": 88,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 89,
                          "end_byte": 93,
                          "text": "\"%i\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 89,
                              "end_byte": 90,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 90,
                              "end_byte": 92,
                              "text": "%i",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 92,
                              "end_byte": 93,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 94,
                          "end_byte": 95,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 96,
                          "end_byte": 99,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 96,
                              "end_byte": 97,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 98,
                              "end_byte": 99,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 100,
                          "end_byte": 101,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 102,
                  "end_byte": 103,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 104,
              "end_byte": 311,
              "text": "while ( t > 0 ) { scanf ( \"%i\" , & l ) ; int i , j ; for ( i = 0 ; i < l ; i ++ ) { for ( j = 0 ; j < i + 1 ; j ++ ) scanf ( \"%i\" , a + j ) ; } int sum = trisum ( 0 , 1 ) ; printf ( \"%i\\n\" , sum ) ; t -- ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 104,
                  "end_byte": 109,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 110,
                  "end_byte": 119,
                  "text": "( t > 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 110,
                      "end_byte": 111,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 112,
                      "end_byte": 117,
                      "text": "t > 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 112,
                          "end_byte": 113,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 114,
                          "end_byte": 115,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 116,
                          "end_byte": 117,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 118,
                      "end_byte": 119,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 120,
                  "end_byte": 311,
                  "text": "{ scanf ( \"%i\" , & l ) ; int i , j ; for ( i = 0 ; i < l ; i ++ ) { for ( j = 0 ; j < i + 1 ; j ++ ) scanf ( \"%i\" , a + j ) ; } int sum = trisum ( 0 , 1 ) ; printf ( \"%i\\n\" , sum ) ; t -- ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 120,
                      "end_byte": 121,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 122,
                      "end_byte": 144,
                      "text": "scanf ( \"%i\" , & l ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 122,
                          "end_byte": 142,
                          "text": "scanf ( \"%i\" , & l )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 122,
                              "end_byte": 127,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 128,
                              "end_byte": 142,
                              "text": "( \"%i\" , & l )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 128,
                                  "end_byte": 129,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 130,
                                  "end_byte": 134,
                                  "text": "\"%i\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 130,
                                      "end_byte": 131,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 131,
                                      "end_byte": 133,
                                      "text": "%i",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 133,
                                      "end_byte": 134,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 135,
                                  "end_byte": 136,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 137,
                                  "end_byte": 140,
                                  "text": "& l",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 137,
                                      "end_byte": 138,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 139,
                                      "end_byte": 140,
                                      "text": "l",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 141,
                                  "end_byte": 142,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 143,
                          "end_byte": 144,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 145,
                      "end_byte": 156,
                      "text": "int i , j ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 145,
                          "end_byte": 148,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 149,
                          "end_byte": 150,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 151,
                          "end_byte": 152,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 153,
                          "end_byte": 154,
                          "text": "j",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 155,
                          "end_byte": 156,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 157,
                      "end_byte": 247,
                      "text": "for ( i = 0 ; i < l ; i ++ ) { for ( j = 0 ; j < i + 1 ; j ++ ) scanf ( \"%i\" , a + j ) ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 157,
                          "end_byte": 160,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 161,
                          "end_byte": 162,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 163,
                          "end_byte": 168,
                          "text": "i = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 163,
                              "end_byte": 164,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 165,
                              "end_byte": 166,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 167,
                              "end_byte": 168,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 169,
                          "end_byte": 170,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 171,
                          "end_byte": 176,
                          "text": "i < l",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 171,
                              "end_byte": 172,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 173,
                              "end_byte": 174,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 175,
                              "end_byte": 176,
                              "text": "l",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 177,
                          "end_byte": 178,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 179,
                          "end_byte": 183,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 179,
                              "end_byte": 180,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 181,
                              "end_byte": 183,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 184,
                          "end_byte": 185,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 186,
                          "end_byte": 247,
                          "text": "{ for ( j = 0 ; j < i + 1 ; j ++ ) scanf ( \"%i\" , a + j ) ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 186,
                              "end_byte": 187,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 188,
                              "end_byte": 245,
                              "text": "for ( j = 0 ; j < i + 1 ; j ++ ) scanf ( \"%i\" , a + j ) ;",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 188,
                                  "end_byte": 191,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 192,
                                  "end_byte": 193,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 194,
                                  "end_byte": 199,
                                  "text": "j = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 194,
                                      "end_byte": 195,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 196,
                                      "end_byte": 197,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 198,
                                      "end_byte": 199,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 200,
                                  "end_byte": 201,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 202,
                                  "end_byte": 211,
                                  "text": "j < i + 1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 202,
                                      "end_byte": 203,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "<",
                                      "start_byte": 204,
                                      "end_byte": 205,
                                      "text": "<",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 206,
                                      "end_byte": 211,
                                      "text": "i + 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 206,
                                          "end_byte": 207,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 208,
                                          "end_byte": 209,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 210,
                                          "end_byte": 211,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 212,
                                  "end_byte": 213,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 214,
                                  "end_byte": 218,
                                  "text": "j ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 214,
                                      "end_byte": 215,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 216,
                                      "end_byte": 218,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 219,
                                  "end_byte": 220,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 221,
                                  "end_byte": 245,
                                  "text": "scanf ( \"%i\" , a + j ) ;",
                                  "children": [
                                    {
                                      "type": "call_expression",
                                      "start_byte": 221,
                                      "end_byte": 243,
                                      "text": "scanf ( \"%i\" , a + j )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 221,
                                          "end_byte": 226,
                                          "text": "scanf",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 227,
                                          "end_byte": 243,
                                          "text": "( \"%i\" , a + j )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 227,
                                              "end_byte": 228,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "string_literal",
                                              "start_byte": 229,
                                              "end_byte": 233,
                                              "text": "\"%i\"",
                                              "children": [
                                                {
                                                  "type": "\"",
                                                  "start_byte": 229,
                                                  "end_byte": 230,
                                                  "text": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_content",
                                                  "start_byte": 230,
                                                  "end_byte": 232,
                                                  "text": "%i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "\"",
                                                  "start_byte": 232,
                                                  "end_byte": 233,
                                                  "text": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 234,
                                              "end_byte": 235,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 236,
                                              "end_byte": 241,
                                              "text": "a + j",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 236,
                                                  "end_byte": 237,
                                                  "text": "a",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 238,
                                                  "end_byte": 239,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 240,
                                                  "end_byte": 241,
                                                  "text": "j",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 242,
                                              "end_byte": 243,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 244,
                                      "end_byte": 245,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 246,
                              "end_byte": 247,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 248,
                      "end_byte": 276,
                      "text": "int sum = trisum ( 0 , 1 ) ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 248,
                          "end_byte": 251,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "init_declarator",
                          "start_byte": 252,
                          "end_byte": 274,
                          "text": "sum = trisum ( 0 , 1 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 252,
                              "end_byte": 255,
                              "text": "sum",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 256,
                              "end_byte": 257,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 258,
                              "end_byte": 274,
                              "text": "trisum ( 0 , 1 )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 258,
                                  "end_byte": 264,
                                  "text": "trisum",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 265,
                                  "end_byte": 274,
                                  "text": "( 0 , 1 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 265,
                                      "end_byte": 266,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 267,
                                      "end_byte": 268,
                                      "text": "0",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 269,
                                      "end_byte": 270,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 271,
                                      "end_byte": 272,
                                      "text": "1",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 273,
                                      "end_byte": 274,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 275,
                          "end_byte": 276,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 277,
                      "end_byte": 302,
                      "text": "printf ( \"%i\\n\" , sum ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 277,
                          "end_byte": 300,
                          "text": "printf ( \"%i\\n\" , sum )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 277,
                              "end_byte": 283,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 284,
                              "end_byte": 300,
                              "text": "( \"%i\\n\" , sum )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 284,
                                  "end_byte": 285,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 286,
                                  "end_byte": 292,
                                  "text": "\"%i\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 286,
                                      "end_byte": 287,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 287,
                                      "end_byte": 289,
                                      "text": "%i",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 289,
                                      "end_byte": 291,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 291,
                                      "end_byte": 292,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 293,
                                  "end_byte": 294,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 295,
                                  "end_byte": 298,
                                  "text": "sum",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 299,
                                  "end_byte": 300,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 301,
                          "end_byte": 302,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 303,
                      "end_byte": 309,
                      "text": "t -- ;",
                      "children": [
                        {
                          "type": "update_expression",
                          "start_byte": 303,
                          "end_byte": 307,
                          "text": "t --",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 303,
                              "end_byte": 304,
                              "text": "t",
                              "children": []
                            },
                            {
                              "type": "--",
                              "start_byte": 305,
                              "end_byte": 307,
                              "text": "--",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 308,
                          "end_byte": 309,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 310,
                      "end_byte": 311,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 312,
              "end_byte": 322,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 312,
                  "end_byte": 318,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 319,
                  "end_byte": 320,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 321,
                  "end_byte": 322,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 323,
              "end_byte": 324,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 325,
      "end_byte": 687,
      "text": "long trisum ( int h , int line ) { if ( line == l - 1 ) { if ( a [ h + l - 1 ] > a [ h + l ] ) return a [ h + l - 1 ] + a [ h ] ; else return a [ h ] + a [ l + h ] ; } else { if ( trisum ( h + line , line + 1 ) > trisum ( h + line + 1 , line + 1 ) ) return a [ h ] + trisum ( h + line , line + 1 ) ; else return a [ h ] + trisum ( h + line + 1 , line + 1 ) ; } }",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 325,
          "end_byte": 329,
          "text": "long",
          "children": [
            {
              "type": "long",
              "start_byte": 325,
              "end_byte": 329,
              "text": "long",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 330,
          "end_byte": 357,
          "text": "trisum ( int h , int line )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 330,
              "end_byte": 336,
              "text": "trisum",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 337,
              "end_byte": 357,
              "text": "( int h , int line )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 337,
                  "end_byte": 338,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 339,
                  "end_byte": 344,
                  "text": "int h",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 339,
                      "end_byte": 342,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 343,
                      "end_byte": 344,
                      "text": "h",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 345,
                  "end_byte": 346,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 347,
                  "end_byte": 355,
                  "text": "int line",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 347,
                      "end_byte": 350,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 351,
                      "end_byte": 355,
                      "text": "line",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 356,
                  "end_byte": 357,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 358,
          "end_byte": 687,
          "text": "{ if ( line == l - 1 ) { if ( a [ h + l - 1 ] > a [ h + l ] ) return a [ h + l - 1 ] + a [ h ] ; else return a [ h ] + a [ l + h ] ; } else { if ( trisum ( h + line , line + 1 ) > trisum ( h + line + 1 , line + 1 ) ) return a [ h ] + trisum ( h + line , line + 1 ) ; else return a [ h ] + trisum ( h + line + 1 , line + 1 ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 358,
              "end_byte": 359,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 360,
              "end_byte": 685,
              "text": "if ( line == l - 1 ) { if ( a [ h + l - 1 ] > a [ h + l ] ) return a [ h + l - 1 ] + a [ h ] ; else return a [ h ] + a [ l + h ] ; } else { if ( trisum ( h + line , line + 1 ) > trisum ( h + line + 1 , line + 1 ) ) return a [ h ] + trisum ( h + line , line + 1 ) ; else return a [ h ] + trisum ( h + line + 1 , line + 1 ) ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 360,
                  "end_byte": 362,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 363,
                  "end_byte": 380,
                  "text": "( line == l - 1 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 363,
                      "end_byte": 364,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 365,
                      "end_byte": 378,
                      "text": "line == l - 1",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 365,
                          "end_byte": 369,
                          "text": "line",
                          "children": []
                        },
                        {
                          "type": "==",
                          "start_byte": 370,
                          "end_byte": 372,
                          "text": "==",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 373,
                          "end_byte": 378,
                          "text": "l - 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 373,
                              "end_byte": 374,
                              "text": "l",
                              "children": []
                            },
                            {
                              "type": "-",
                              "start_byte": 375,
                              "end_byte": 376,
                              "text": "-",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 377,
                              "end_byte": 378,
                              "text": "1",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 379,
                      "end_byte": 380,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 381,
                  "end_byte": 492,
                  "text": "{ if ( a [ h + l - 1 ] > a [ h + l ] ) return a [ h + l - 1 ] + a [ h ] ; else return a [ h ] + a [ l + h ] ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 381,
                      "end_byte": 382,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 383,
                      "end_byte": 490,
                      "text": "if ( a [ h + l - 1 ] > a [ h + l ] ) return a [ h + l - 1 ] + a [ h ] ; else return a [ h ] + a [ l + h ] ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 383,
                          "end_byte": 385,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 386,
                          "end_byte": 419,
                          "text": "( a [ h + l - 1 ] > a [ h + l ] )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 386,
                              "end_byte": 387,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 388,
                              "end_byte": 417,
                              "text": "a [ h + l - 1 ] > a [ h + l ]",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 388,
                                  "end_byte": 403,
                                  "text": "a [ h + l - 1 ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 388,
                                      "end_byte": 389,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 390,
                                      "end_byte": 403,
                                      "text": "[ h + l - 1 ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 390,
                                          "end_byte": 391,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 392,
                                          "end_byte": 401,
                                          "text": "h + l - 1",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 392,
                                              "end_byte": 397,
                                              "text": "h + l",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 392,
                                                  "end_byte": 393,
                                                  "text": "h",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 394,
                                                  "end_byte": 395,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 396,
                                                  "end_byte": 397,
                                                  "text": "l",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "-",
                                              "start_byte": 398,
                                              "end_byte": 399,
                                              "text": "-",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 400,
                                              "end_byte": 401,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 402,
                                          "end_byte": 403,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ">",
                                  "start_byte": 404,
                                  "end_byte": 405,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 406,
                                  "end_byte": 417,
                                  "text": "a [ h + l ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 406,
                                      "end_byte": 407,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 408,
                                      "end_byte": 417,
                                      "text": "[ h + l ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 408,
                                          "end_byte": 409,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 410,
                                          "end_byte": 415,
                                          "text": "h + l",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 410,
                                              "end_byte": 411,
                                              "text": "h",
                                              "children": []
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 412,
                                              "end_byte": 413,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 414,
                                              "end_byte": 415,
                                              "text": "l",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 416,
                                          "end_byte": 417,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 418,
                              "end_byte": 419,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "return_statement",
                          "start_byte": 420,
                          "end_byte": 454,
                          "text": "return a [ h + l - 1 ] + a [ h ] ;",
                          "children": [
                            {
                              "type": "return",
                              "start_byte": 420,
                              "end_byte": 426,
                              "text": "return",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 427,
                              "end_byte": 452,
                              "text": "a [ h + l - 1 ] + a [ h ]",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 427,
                                  "end_byte": 442,
                                  "text": "a [ h + l - 1 ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 427,
                                      "end_byte": 428,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 429,
                                      "end_byte": 442,
                                      "text": "[ h + l - 1 ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 429,
                                          "end_byte": 430,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 431,
                                          "end_byte": 440,
                                          "text": "h + l - 1",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 431,
                                              "end_byte": 436,
                                              "text": "h + l",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 431,
                                                  "end_byte": 432,
                                                  "text": "h",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 433,
                                                  "end_byte": 434,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 435,
                                                  "end_byte": 436,
                                                  "text": "l",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "-",
                                              "start_byte": 437,
                                              "end_byte": 438,
                                              "text": "-",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 439,
                                              "end_byte": 440,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 441,
                                          "end_byte": 442,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "+",
                                  "start_byte": 443,
                                  "end_byte": 444,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 445,
                                  "end_byte": 452,
                                  "text": "a [ h ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 445,
                                      "end_byte": 446,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 447,
                                      "end_byte": 452,
                                      "text": "[ h ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 447,
                                          "end_byte": 448,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 449,
                                          "end_byte": 450,
                                          "text": "h",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 451,
                                          "end_byte": 452,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 453,
                              "end_byte": 454,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 455,
                          "end_byte": 490,
                          "text": "else return a [ h ] + a [ l + h ] ;",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 455,
                              "end_byte": 459,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "return_statement",
                              "start_byte": 460,
                              "end_byte": 490,
                              "text": "return a [ h ] + a [ l + h ] ;",
                              "children": [
                                {
                                  "type": "return",
                                  "start_byte": 460,
                                  "end_byte": 466,
                                  "text": "return",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 467,
                                  "end_byte": 488,
                                  "text": "a [ h ] + a [ l + h ]",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 467,
                                      "end_byte": 474,
                                      "text": "a [ h ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 467,
                                          "end_byte": 468,
                                          "text": "a",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 469,
                                          "end_byte": 474,
                                          "text": "[ h ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 469,
                                              "end_byte": 470,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 471,
                                              "end_byte": 472,
                                              "text": "h",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 473,
                                              "end_byte": 474,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 475,
                                      "end_byte": 476,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 477,
                                      "end_byte": 488,
                                      "text": "a [ l + h ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 477,
                                          "end_byte": 478,
                                          "text": "a",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 479,
                                          "end_byte": 488,
                                          "text": "[ l + h ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 479,
                                              "end_byte": 480,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 481,
                                              "end_byte": 486,
                                              "text": "l + h",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 481,
                                                  "end_byte": 482,
                                                  "text": "l",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 483,
                                                  "end_byte": 484,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 485,
                                                  "end_byte": 486,
                                                  "text": "h",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 487,
                                              "end_byte": 488,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 489,
                                  "end_byte": 490,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 491,
                      "end_byte": 492,
                      "text": "}",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 493,
                  "end_byte": 685,
                  "text": "else { if ( trisum ( h + line , line + 1 ) > trisum ( h + line + 1 , line + 1 ) ) return a [ h ] + trisum ( h + line , line + 1 ) ; else return a [ h ] + trisum ( h + line + 1 , line + 1 ) ; }",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 493,
                      "end_byte": 497,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "compound_statement",
                      "start_byte": 498,
                      "end_byte": 685,
                      "text": "{ if ( trisum ( h + line , line + 1 ) > trisum ( h + line + 1 , line + 1 ) ) return a [ h ] + trisum ( h + line , line + 1 ) ; else return a [ h ] + trisum ( h + line + 1 , line + 1 ) ; }",
                      "children": [
                        {
                          "type": "{",
                          "start_byte": 498,
                          "end_byte": 499,
                          "text": "{",
                          "children": []
                        },
                        {
                          "type": "if_statement",
                          "start_byte": 500,
                          "end_byte": 683,
                          "text": "if ( trisum ( h + line , line + 1 ) > trisum ( h + line + 1 , line + 1 ) ) return a [ h ] + trisum ( h + line , line + 1 ) ; else return a [ h ] + trisum ( h + line + 1 , line + 1 ) ;",
                          "children": [
                            {
                              "type": "if",
                              "start_byte": 500,
                              "end_byte": 502,
                              "text": "if",
                              "children": []
                            },
                            {
                              "type": "condition_clause",
                              "start_byte": 503,
                              "end_byte": 574,
                              "text": "( trisum ( h + line , line + 1 ) > trisum ( h + line + 1 , line + 1 ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 503,
                                  "end_byte": 504,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 505,
                                  "end_byte": 572,
                                  "text": "trisum ( h + line , line + 1 ) > trisum ( h + line + 1 , line + 1 )",
                                  "children": [
                                    {
                                      "type": "call_expression",
                                      "start_byte": 505,
                                      "end_byte": 535,
                                      "text": "trisum ( h + line , line + 1 )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 505,
                                          "end_byte": 511,
                                          "text": "trisum",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 512,
                                          "end_byte": 535,
                                          "text": "( h + line , line + 1 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 512,
                                              "end_byte": 513,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 514,
                                              "end_byte": 522,
                                              "text": "h + line",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 514,
                                                  "end_byte": 515,
                                                  "text": "h",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 516,
                                                  "end_byte": 517,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 518,
                                                  "end_byte": 522,
                                                  "text": "line",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 523,
                                              "end_byte": 524,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 525,
                                              "end_byte": 533,
                                              "text": "line + 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 525,
                                                  "end_byte": 529,
                                                  "text": "line",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 530,
                                                  "end_byte": 531,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 532,
                                                  "end_byte": 533,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 534,
                                              "end_byte": 535,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ">",
                                      "start_byte": 536,
                                      "end_byte": 537,
                                      "text": ">",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 538,
                                      "end_byte": 572,
                                      "text": "trisum ( h + line + 1 , line + 1 )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 538,
                                          "end_byte": 544,
                                          "text": "trisum",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 545,
                                          "end_byte": 572,
                                          "text": "( h + line + 1 , line + 1 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 545,
                                              "end_byte": 546,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 547,
                                              "end_byte": 559,
                                              "text": "h + line + 1",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 547,
                                                  "end_byte": 555,
                                                  "text": "h + line",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 547,
                                                      "end_byte": 548,
                                                      "text": "h",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "+",
                                                      "start_byte": 549,
                                                      "end_byte": 550,
                                                      "text": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 551,
                                                      "end_byte": 555,
                                                      "text": "line",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 556,
                                                  "end_byte": 557,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 558,
                                                  "end_byte": 559,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 560,
                                              "end_byte": 561,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 562,
                                              "end_byte": 570,
                                              "text": "line + 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 562,
                                                  "end_byte": 566,
                                                  "text": "line",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 567,
                                                  "end_byte": 568,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 569,
                                                  "end_byte": 570,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 571,
                                              "end_byte": 572,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 573,
                                  "end_byte": 574,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "return_statement",
                              "start_byte": 575,
                              "end_byte": 624,
                              "text": "return a [ h ] + trisum ( h + line , line + 1 ) ;",
                              "children": [
                                {
                                  "type": "return",
                                  "start_byte": 575,
                                  "end_byte": 581,
                                  "text": "return",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 582,
                                  "end_byte": 622,
                                  "text": "a [ h ] + trisum ( h + line , line + 1 )",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 582,
                                      "end_byte": 589,
                                      "text": "a [ h ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 582,
                                          "end_byte": 583,
                                          "text": "a",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 584,
                                          "end_byte": 589,
                                          "text": "[ h ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 584,
                                              "end_byte": 585,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 586,
                                              "end_byte": 587,
                                              "text": "h",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 588,
                                              "end_byte": 589,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 590,
                                      "end_byte": 591,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 592,
                                      "end_byte": 622,
                                      "text": "trisum ( h + line , line + 1 )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 592,
                                          "end_byte": 598,
                                          "text": "trisum",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 599,
                                          "end_byte": 622,
                                          "text": "( h + line , line + 1 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 599,
                                              "end_byte": 600,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 601,
                                              "end_byte": 609,
                                              "text": "h + line",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 601,
                                                  "end_byte": 602,
                                                  "text": "h",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 603,
                                                  "end_byte": 604,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 605,
                                                  "end_byte": 609,
                                                  "text": "line",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 610,
                                              "end_byte": 611,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 612,
                                              "end_byte": 620,
                                              "text": "line + 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 612,
                                                  "end_byte": 616,
                                                  "text": "line",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 617,
                                                  "end_byte": 618,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 619,
                                                  "end_byte": 620,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 621,
                                              "end_byte": 622,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 623,
                                  "end_byte": 624,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "else_clause",
                              "start_byte": 625,
                              "end_byte": 683,
                              "text": "else return a [ h ] + trisum ( h + line + 1 , line + 1 ) ;",
                              "children": [
                                {
                                  "type": "else",
                                  "start_byte": 625,
                                  "end_byte": 629,
                                  "text": "else",
                                  "children": []
                                },
                                {
                                  "type": "return_statement",
                                  "start_byte": 630,
                                  "end_byte": 683,
                                  "text": "return a [ h ] + trisum ( h + line + 1 , line + 1 ) ;",
                                  "children": [
                                    {
                                      "type": "return",
                                      "start_byte": 630,
                                      "end_byte": 636,
                                      "text": "return",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 637,
                                      "end_byte": 681,
                                      "text": "a [ h ] + trisum ( h + line + 1 , line + 1 )",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 637,
                                          "end_byte": 644,
                                          "text": "a [ h ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 637,
                                              "end_byte": 638,
                                              "text": "a",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 639,
                                              "end_byte": 644,
                                              "text": "[ h ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 639,
                                                  "end_byte": 640,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 641,
                                                  "end_byte": 642,
                                                  "text": "h",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 643,
                                                  "end_byte": 644,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 645,
                                          "end_byte": 646,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "call_expression",
                                          "start_byte": 647,
                                          "end_byte": 681,
                                          "text": "trisum ( h + line + 1 , line + 1 )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 647,
                                              "end_byte": 653,
                                              "text": "trisum",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 654,
                                              "end_byte": 681,
                                              "text": "( h + line + 1 , line + 1 )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 654,
                                                  "end_byte": 655,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 656,
                                                  "end_byte": 668,
                                                  "text": "h + line + 1",
                                                  "children": [
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 656,
                                                      "end_byte": 664,
                                                      "text": "h + line",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 656,
                                                          "end_byte": 657,
                                                          "text": "h",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "+",
                                                          "start_byte": 658,
                                                          "end_byte": 659,
                                                          "text": "+",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 660,
                                                          "end_byte": 664,
                                                          "text": "line",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "+",
                                                      "start_byte": 665,
                                                      "end_byte": 666,
                                                      "text": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 667,
                                                      "end_byte": 668,
                                                      "text": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 669,
                                                  "end_byte": 670,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 671,
                                                  "end_byte": 679,
                                                  "text": "line + 1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 671,
                                                      "end_byte": 675,
                                                      "text": "line",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "+",
                                                      "start_byte": 676,
                                                      "end_byte": 677,
                                                      "text": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 678,
                                                      "end_byte": 679,
                                                      "text": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 680,
                                                  "end_byte": 681,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 682,
                                      "end_byte": 683,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start_byte": 684,
                          "end_byte": 685,
                          "text": "}",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 686,
              "end_byte": 687,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}