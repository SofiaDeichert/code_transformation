{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 349,
  "text": "int main ( ) { int a , b ; int temp , gcd ; long lcm , product ; printf ( \"\\n enter two number:\" ) ; scanf ( \"%d%d\" , & a , & b ) ; product = a * b ; while ( a > 0 ) { if ( a < b ) { temp = a ; a = b ; b = temp ; } a = a % b ; } gcd = b ; lcm = product / gcd ; printf ( \"\\ngcd and lcm values are:\" ) ; printf ( \"%d\\t%ld\" , gcd , lcm ) ; return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 349,
      "text": "int main ( ) { int a , b ; int temp , gcd ; long lcm , product ; printf ( \"\\n enter two number:\" ) ; scanf ( \"%d%d\" , & a , & b ) ; product = a * b ; while ( a > 0 ) { if ( a < b ) { temp = a ; a = b ; b = temp ; } a = a % b ; } gcd = b ; lcm = product / gcd ; printf ( \"\\ngcd and lcm values are:\" ) ; printf ( \"%d\\t%ld\" , gcd , lcm ) ; return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 349,
          "text": "{ int a , b ; int temp , gcd ; long lcm , product ; printf ( \"\\n enter two number:\" ) ; scanf ( \"%d%d\" , & a , & b ) ; product = a * b ; while ( a > 0 ) { if ( a < b ) { temp = a ; a = b ; b = temp ; } a = a % b ; } gcd = b ; lcm = product / gcd ; printf ( \"\\ngcd and lcm values are:\" ) ; printf ( \"%d\\t%ld\" , gcd , lcm ) ; return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 26,
              "text": "int a , b ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": "a",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 23,
                  "end_byte": 24,
                  "text": "b",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 27,
              "end_byte": 43,
              "text": "int temp , gcd ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 27,
                  "end_byte": 30,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 31,
                  "end_byte": 35,
                  "text": "temp",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 36,
                  "end_byte": 37,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 38,
                  "end_byte": 41,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 42,
                  "end_byte": 43,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 44,
              "end_byte": 64,
              "text": "long lcm , product ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 44,
                  "end_byte": 48,
                  "text": "long",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 44,
                      "end_byte": 48,
                      "text": "long",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 49,
                  "end_byte": 52,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 53,
                  "end_byte": 54,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 55,
                  "end_byte": 62,
                  "text": "product",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 63,
                  "end_byte": 64,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 65,
              "end_byte": 100,
              "text": "printf ( \"\\n enter two number:\" ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 65,
                  "end_byte": 98,
                  "text": "printf ( \"\\n enter two number:\" )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 65,
                      "end_byte": 71,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 72,
                      "end_byte": 98,
                      "text": "( \"\\n enter two number:\" )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 72,
                          "end_byte": 73,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 74,
                          "end_byte": 96,
                          "text": "\"\\n enter two number:\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 74,
                              "end_byte": 75,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 75,
                              "end_byte": 77,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 77,
                              "end_byte": 95,
                              "text": " enter two number:",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 95,
                              "end_byte": 96,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 97,
                          "end_byte": 98,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 99,
                  "end_byte": 100,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 101,
              "end_byte": 131,
              "text": "scanf ( \"%d%d\" , & a , & b ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 101,
                  "end_byte": 129,
                  "text": "scanf ( \"%d%d\" , & a , & b )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 101,
                      "end_byte": 106,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 107,
                      "end_byte": 129,
                      "text": "( \"%d%d\" , & a , & b )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 107,
                          "end_byte": 108,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 109,
                          "end_byte": 115,
                          "text": "\"%d%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 109,
                              "end_byte": 110,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 110,
                              "end_byte": 114,
                              "text": "%d%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 114,
                              "end_byte": 115,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 116,
                          "end_byte": 117,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 118,
                          "end_byte": 121,
                          "text": "& a",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 118,
                              "end_byte": 119,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 120,
                              "end_byte": 121,
                              "text": "a",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 122,
                          "end_byte": 123,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 124,
                          "end_byte": 127,
                          "text": "& b",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 124,
                              "end_byte": 125,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 126,
                              "end_byte": 127,
                              "text": "b",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 128,
                          "end_byte": 129,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 130,
                  "end_byte": 131,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 132,
              "end_byte": 149,
              "text": "product = a * b ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 132,
                  "end_byte": 147,
                  "text": "product = a * b",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 132,
                      "end_byte": 139,
                      "text": "product",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 140,
                      "end_byte": 141,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 142,
                      "end_byte": 147,
                      "text": "a * b",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 142,
                          "end_byte": 143,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": "*",
                          "start_byte": 144,
                          "end_byte": 145,
                          "text": "*",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 146,
                          "end_byte": 147,
                          "text": "b",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 148,
                  "end_byte": 149,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 150,
              "end_byte": 228,
              "text": "while ( a > 0 ) { if ( a < b ) { temp = a ; a = b ; b = temp ; } a = a % b ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 150,
                  "end_byte": 155,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 156,
                  "end_byte": 165,
                  "text": "( a > 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 156,
                      "end_byte": 157,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 158,
                      "end_byte": 163,
                      "text": "a > 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 158,
                          "end_byte": 159,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 160,
                          "end_byte": 161,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 162,
                          "end_byte": 163,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 164,
                      "end_byte": 165,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 166,
                  "end_byte": 228,
                  "text": "{ if ( a < b ) { temp = a ; a = b ; b = temp ; } a = a % b ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 166,
                      "end_byte": 167,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 168,
                      "end_byte": 214,
                      "text": "if ( a < b ) { temp = a ; a = b ; b = temp ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 168,
                          "end_byte": 170,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 171,
                          "end_byte": 180,
                          "text": "( a < b )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 171,
                              "end_byte": 172,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 173,
                              "end_byte": 178,
                              "text": "a < b",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 173,
                                  "end_byte": 174,
                                  "text": "a",
                                  "children": []
                                },
                                {
                                  "type": "<",
                                  "start_byte": 175,
                                  "end_byte": 176,
                                  "text": "<",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 177,
                                  "end_byte": 178,
                                  "text": "b",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 179,
                              "end_byte": 180,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 181,
                          "end_byte": 214,
                          "text": "{ temp = a ; a = b ; b = temp ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 181,
                              "end_byte": 182,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 183,
                              "end_byte": 193,
                              "text": "temp = a ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 183,
                                  "end_byte": 191,
                                  "text": "temp = a",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 183,
                                      "end_byte": 187,
                                      "text": "temp",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 188,
                                      "end_byte": 189,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 190,
                                      "end_byte": 191,
                                      "text": "a",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 192,
                                  "end_byte": 193,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 194,
                              "end_byte": 201,
                              "text": "a = b ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 194,
                                  "end_byte": 199,
                                  "text": "a = b",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 194,
                                      "end_byte": 195,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 196,
                                      "end_byte": 197,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 198,
                                      "end_byte": 199,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 200,
                                  "end_byte": 201,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 202,
                              "end_byte": 212,
                              "text": "b = temp ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 202,
                                  "end_byte": 210,
                                  "text": "b = temp",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 202,
                                      "end_byte": 203,
                                      "text": "b",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 204,
                                      "end_byte": 205,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 206,
                                      "end_byte": 210,
                                      "text": "temp",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 211,
                                  "end_byte": 212,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 213,
                              "end_byte": 214,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 215,
                      "end_byte": 226,
                      "text": "a = a % b ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 215,
                          "end_byte": 224,
                          "text": "a = a % b",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 215,
                              "end_byte": 216,
                              "text": "a",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 217,
                              "end_byte": 218,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 219,
                              "end_byte": 224,
                              "text": "a % b",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 219,
                                  "end_byte": 220,
                                  "text": "a",
                                  "children": []
                                },
                                {
                                  "type": "%",
                                  "start_byte": 221,
                                  "end_byte": 222,
                                  "text": "%",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 223,
                                  "end_byte": 224,
                                  "text": "b",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 225,
                          "end_byte": 226,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 227,
                      "end_byte": 228,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 229,
              "end_byte": 238,
              "text": "gcd = b ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 229,
                  "end_byte": 236,
                  "text": "gcd = b",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 229,
                      "end_byte": 232,
                      "text": "gcd",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 233,
                      "end_byte": 234,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 235,
                      "end_byte": 236,
                      "text": "b",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 237,
                  "end_byte": 238,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 239,
              "end_byte": 260,
              "text": "lcm = product / gcd ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 239,
                  "end_byte": 258,
                  "text": "lcm = product / gcd",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 239,
                      "end_byte": 242,
                      "text": "lcm",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 243,
                      "end_byte": 244,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 245,
                      "end_byte": 258,
                      "text": "product / gcd",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 245,
                          "end_byte": 252,
                          "text": "product",
                          "children": []
                        },
                        {
                          "type": "/",
                          "start_byte": 253,
                          "end_byte": 254,
                          "text": "/",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 255,
                          "end_byte": 258,
                          "text": "gcd",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 259,
                  "end_byte": 260,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 261,
              "end_byte": 301,
              "text": "printf ( \"\\ngcd and lcm values are:\" ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 261,
                  "end_byte": 299,
                  "text": "printf ( \"\\ngcd and lcm values are:\" )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 261,
                      "end_byte": 267,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 268,
                      "end_byte": 299,
                      "text": "( \"\\ngcd and lcm values are:\" )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 268,
                          "end_byte": 269,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 270,
                          "end_byte": 297,
                          "text": "\"\\ngcd and lcm values are:\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 270,
                              "end_byte": 271,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 271,
                              "end_byte": 273,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 273,
                              "end_byte": 296,
                              "text": "gcd and lcm values are:",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 296,
                              "end_byte": 297,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 298,
                          "end_byte": 299,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 300,
                  "end_byte": 301,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 302,
              "end_byte": 336,
              "text": "printf ( \"%d\\t%ld\" , gcd , lcm ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 302,
                  "end_byte": 334,
                  "text": "printf ( \"%d\\t%ld\" , gcd , lcm )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 302,
                      "end_byte": 308,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 309,
                      "end_byte": 334,
                      "text": "( \"%d\\t%ld\" , gcd , lcm )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 309,
                          "end_byte": 310,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 311,
                          "end_byte": 320,
                          "text": "\"%d\\t%ld\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 311,
                              "end_byte": 312,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 312,
                              "end_byte": 314,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 314,
                              "end_byte": 316,
                              "text": "\\t",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 316,
                              "end_byte": 319,
                              "text": "%ld",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 319,
                              "end_byte": 320,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 321,
                          "end_byte": 322,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 323,
                          "end_byte": 326,
                          "text": "gcd",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 327,
                          "end_byte": 328,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 329,
                          "end_byte": 332,
                          "text": "lcm",
                          "children": []
                        },
                        {
                          "type": ")",
                          "start_byte": 333,
                          "end_byte": 334,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 335,
                  "end_byte": 336,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 337,
              "end_byte": 347,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 337,
                  "end_byte": 343,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 344,
                  "end_byte": 345,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 346,
                  "end_byte": 347,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 348,
              "end_byte": 349,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}