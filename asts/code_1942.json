{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 458,
  "text": "long int GCD ( long int a , long int b ) { long int divisor , D , aux ; divisor = a > b ? b : a ; D = a > b ? a : b ; while ( 1 ) { if ( ( aux = D % divisor ) == 0 ) { return divisor ; } else { D = divisor ; divisor = aux ; } } } int main ( ) { long int x , y , i , j , lcm ; int T ; scanf ( \"%d\" , & T ) ; scanf ( \"%ld%ld\" , & x , & y ) ; for ( i = 0 ; i < T ; i ++ ) { j = GCD ( x , y ) ; lcm = x * y / j ; printf ( \"%ld %ld\\n\" , j , lcm ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 229,
      "text": "long int GCD ( long int a , long int b ) { long int divisor , D , aux ; divisor = a > b ? b : a ; D = a > b ? a : b ; while ( 1 ) { if ( ( aux = D % divisor ) == 0 ) { return divisor ; } else { D = divisor ; divisor = aux ; } } }",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 0,
          "end_byte": 8,
          "text": "long int",
          "children": [
            {
              "type": "long",
              "start_byte": 0,
              "end_byte": 4,
              "text": "long",
              "children": []
            },
            {
              "type": "primitive_type",
              "start_byte": 5,
              "end_byte": 8,
              "text": "int",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 9,
          "end_byte": 40,
          "text": "GCD ( long int a , long int b )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 9,
              "end_byte": 12,
              "text": "GCD",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 13,
              "end_byte": 40,
              "text": "( long int a , long int b )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 13,
                  "end_byte": 14,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 15,
                  "end_byte": 25,
                  "text": "long int a",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 15,
                      "end_byte": 23,
                      "text": "long int",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 15,
                          "end_byte": 19,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "primitive_type",
                          "start_byte": 20,
                          "end_byte": 23,
                          "text": "int",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 24,
                      "end_byte": 25,
                      "text": "a",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 26,
                  "end_byte": 27,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 28,
                  "end_byte": 38,
                  "text": "long int b",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 28,
                      "end_byte": 36,
                      "text": "long int",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 28,
                          "end_byte": 32,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "primitive_type",
                          "start_byte": 33,
                          "end_byte": 36,
                          "text": "int",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 37,
                      "end_byte": 38,
                      "text": "b",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 39,
                  "end_byte": 40,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 41,
          "end_byte": 229,
          "text": "{ long int divisor , D , aux ; divisor = a > b ? b : a ; D = a > b ? a : b ; while ( 1 ) { if ( ( aux = D % divisor ) == 0 ) { return divisor ; } else { D = divisor ; divisor = aux ; } } }",
          "children": [
            {
              "type": "{",
              "start_byte": 41,
              "end_byte": 42,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 43,
              "end_byte": 71,
              "text": "long int divisor , D , aux ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 43,
                  "end_byte": 51,
                  "text": "long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 43,
                      "end_byte": 47,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 48,
                      "end_byte": 51,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 52,
                  "end_byte": 59,
                  "text": "divisor",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 60,
                  "end_byte": 61,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 62,
                  "end_byte": 63,
                  "text": "D",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 64,
                  "end_byte": 65,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 66,
                  "end_byte": 69,
                  "text": "aux",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 70,
                  "end_byte": 71,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 72,
              "end_byte": 97,
              "text": "divisor = a > b ? b : a ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 72,
                  "end_byte": 95,
                  "text": "divisor = a > b ? b : a",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 72,
                      "end_byte": 79,
                      "text": "divisor",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 80,
                      "end_byte": 81,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "conditional_expression",
                      "start_byte": 82,
                      "end_byte": 95,
                      "text": "a > b ? b : a",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 82,
                          "end_byte": 87,
                          "text": "a > b",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 82,
                              "end_byte": 83,
                              "text": "a",
                              "children": []
                            },
                            {
                              "type": ">",
                              "start_byte": 84,
                              "end_byte": 85,
                              "text": ">",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 86,
                              "end_byte": 87,
                              "text": "b",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "?",
                          "start_byte": 88,
                          "end_byte": 89,
                          "text": "?",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 90,
                          "end_byte": 91,
                          "text": "b",
                          "children": []
                        },
                        {
                          "type": ":",
                          "start_byte": 92,
                          "end_byte": 93,
                          "text": ":",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 94,
                          "end_byte": 95,
                          "text": "a",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 96,
                  "end_byte": 97,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 98,
              "end_byte": 117,
              "text": "D = a > b ? a : b ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 98,
                  "end_byte": 115,
                  "text": "D = a > b ? a : b",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 98,
                      "end_byte": 99,
                      "text": "D",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 100,
                      "end_byte": 101,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "conditional_expression",
                      "start_byte": 102,
                      "end_byte": 115,
                      "text": "a > b ? a : b",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 102,
                          "end_byte": 107,
                          "text": "a > b",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 102,
                              "end_byte": 103,
                              "text": "a",
                              "children": []
                            },
                            {
                              "type": ">",
                              "start_byte": 104,
                              "end_byte": 105,
                              "text": ">",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 106,
                              "end_byte": 107,
                              "text": "b",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "?",
                          "start_byte": 108,
                          "end_byte": 109,
                          "text": "?",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 110,
                          "end_byte": 111,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": ":",
                          "start_byte": 112,
                          "end_byte": 113,
                          "text": ":",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 114,
                          "end_byte": 115,
                          "text": "b",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 116,
                  "end_byte": 117,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 118,
              "end_byte": 227,
              "text": "while ( 1 ) { if ( ( aux = D % divisor ) == 0 ) { return divisor ; } else { D = divisor ; divisor = aux ; } }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 118,
                  "end_byte": 123,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 124,
                  "end_byte": 129,
                  "text": "( 1 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 124,
                      "end_byte": 125,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 126,
                      "end_byte": 127,
                      "text": "1",
                      "children": []
                    },
                    {
                      "type": ")",
                      "start_byte": 128,
                      "end_byte": 129,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 130,
                  "end_byte": 227,
                  "text": "{ if ( ( aux = D % divisor ) == 0 ) { return divisor ; } else { D = divisor ; divisor = aux ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 130,
                      "end_byte": 131,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 132,
                      "end_byte": 225,
                      "text": "if ( ( aux = D % divisor ) == 0 ) { return divisor ; } else { D = divisor ; divisor = aux ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 132,
                          "end_byte": 134,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 135,
                          "end_byte": 165,
                          "text": "( ( aux = D % divisor ) == 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 135,
                              "end_byte": 136,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 137,
                              "end_byte": 163,
                              "text": "( aux = D % divisor ) == 0",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 137,
                                  "end_byte": 158,
                                  "text": "( aux = D % divisor )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 137,
                                      "end_byte": 138,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 139,
                                      "end_byte": 156,
                                      "text": "aux = D % divisor",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 139,
                                          "end_byte": 142,
                                          "text": "aux",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 143,
                                          "end_byte": 144,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 145,
                                          "end_byte": 156,
                                          "text": "D % divisor",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 145,
                                              "end_byte": 146,
                                              "text": "D",
                                              "children": []
                                            },
                                            {
                                              "type": "%",
                                              "start_byte": 147,
                                              "end_byte": 148,
                                              "text": "%",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 149,
                                              "end_byte": 156,
                                              "text": "divisor",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 157,
                                      "end_byte": 158,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "==",
                                  "start_byte": 159,
                                  "end_byte": 161,
                                  "text": "==",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 162,
                                  "end_byte": 163,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 164,
                              "end_byte": 165,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 166,
                          "end_byte": 186,
                          "text": "{ return divisor ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 166,
                              "end_byte": 167,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "return_statement",
                              "start_byte": 168,
                              "end_byte": 184,
                              "text": "return divisor ;",
                              "children": [
                                {
                                  "type": "return",
                                  "start_byte": 168,
                                  "end_byte": 174,
                                  "text": "return",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 175,
                                  "end_byte": 182,
                                  "text": "divisor",
                                  "children": []
                                },
                                {
                                  "type": ";",
                                  "start_byte": 183,
                                  "end_byte": 184,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 185,
                              "end_byte": 186,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 187,
                          "end_byte": 225,
                          "text": "else { D = divisor ; divisor = aux ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 187,
                              "end_byte": 191,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 192,
                              "end_byte": 225,
                              "text": "{ D = divisor ; divisor = aux ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 192,
                                  "end_byte": 193,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 194,
                                  "end_byte": 207,
                                  "text": "D = divisor ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 194,
                                      "end_byte": 205,
                                      "text": "D = divisor",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 194,
                                          "end_byte": 195,
                                          "text": "D",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 196,
                                          "end_byte": 197,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 198,
                                          "end_byte": 205,
                                          "text": "divisor",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 206,
                                      "end_byte": 207,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 208,
                                  "end_byte": 223,
                                  "text": "divisor = aux ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 208,
                                      "end_byte": 221,
                                      "text": "divisor = aux",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 208,
                                          "end_byte": 215,
                                          "text": "divisor",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 216,
                                          "end_byte": 217,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 218,
                                          "end_byte": 221,
                                          "text": "aux",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 222,
                                      "end_byte": 223,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 224,
                                  "end_byte": 225,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 226,
                      "end_byte": 227,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 228,
              "end_byte": 229,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 230,
      "end_byte": 458,
      "text": "int main ( ) { long int x , y , i , j , lcm ; int T ; scanf ( \"%d\" , & T ) ; scanf ( \"%ld%ld\" , & x , & y ) ; for ( i = 0 ; i < T ; i ++ ) { j = GCD ( x , y ) ; lcm = x * y / j ; printf ( \"%ld %ld\\n\" , j , lcm ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 230,
          "end_byte": 233,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 234,
          "end_byte": 242,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 234,
              "end_byte": 238,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 239,
              "end_byte": 242,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 239,
                  "end_byte": 240,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 241,
                  "end_byte": 242,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 243,
          "end_byte": 458,
          "text": "{ long int x , y , i , j , lcm ; int T ; scanf ( \"%d\" , & T ) ; scanf ( \"%ld%ld\" , & x , & y ) ; for ( i = 0 ; i < T ; i ++ ) { j = GCD ( x , y ) ; lcm = x * y / j ; printf ( \"%ld %ld\\n\" , j , lcm ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 243,
              "end_byte": 244,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 245,
              "end_byte": 275,
              "text": "long int x , y , i , j , lcm ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 245,
                  "end_byte": 253,
                  "text": "long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 245,
                      "end_byte": 249,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 250,
                      "end_byte": 253,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 254,
                  "end_byte": 255,
                  "text": "x",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 256,
                  "end_byte": 257,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 258,
                  "end_byte": 259,
                  "text": "y",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 260,
                  "end_byte": 261,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 262,
                  "end_byte": 263,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 264,
                  "end_byte": 265,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 266,
                  "end_byte": 267,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 268,
                  "end_byte": 269,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 270,
                  "end_byte": 273,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 274,
                  "end_byte": 275,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 276,
              "end_byte": 283,
              "text": "int T ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 276,
                  "end_byte": 279,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 280,
                  "end_byte": 281,
                  "text": "T",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 282,
                  "end_byte": 283,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 284,
              "end_byte": 306,
              "text": "scanf ( \"%d\" , & T ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 284,
                  "end_byte": 304,
                  "text": "scanf ( \"%d\" , & T )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 284,
                      "end_byte": 289,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 290,
                      "end_byte": 304,
                      "text": "( \"%d\" , & T )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 290,
                          "end_byte": 291,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 292,
                          "end_byte": 296,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 292,
                              "end_byte": 293,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 293,
                              "end_byte": 295,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 295,
                              "end_byte": 296,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 297,
                          "end_byte": 298,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 299,
                          "end_byte": 302,
                          "text": "& T",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 299,
                              "end_byte": 300,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 301,
                              "end_byte": 302,
                              "text": "T",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 303,
                          "end_byte": 304,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 305,
                  "end_byte": 306,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 307,
              "end_byte": 339,
              "text": "scanf ( \"%ld%ld\" , & x , & y ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 307,
                  "end_byte": 337,
                  "text": "scanf ( \"%ld%ld\" , & x , & y )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 307,
                      "end_byte": 312,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 313,
                      "end_byte": 337,
                      "text": "( \"%ld%ld\" , & x , & y )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 313,
                          "end_byte": 314,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 315,
                          "end_byte": 323,
                          "text": "\"%ld%ld\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 315,
                              "end_byte": 316,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 316,
                              "end_byte": 322,
                              "text": "%ld%ld",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 322,
                              "end_byte": 323,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 324,
                          "end_byte": 325,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 326,
                          "end_byte": 329,
                          "text": "& x",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 326,
                              "end_byte": 327,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 328,
                              "end_byte": 329,
                              "text": "x",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 330,
                          "end_byte": 331,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 332,
                          "end_byte": 335,
                          "text": "& y",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 332,
                              "end_byte": 333,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 334,
                              "end_byte": 335,
                              "text": "y",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 336,
                          "end_byte": 337,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 338,
                  "end_byte": 339,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 340,
              "end_byte": 445,
              "text": "for ( i = 0 ; i < T ; i ++ ) { j = GCD ( x , y ) ; lcm = x * y / j ; printf ( \"%ld %ld\\n\" , j , lcm ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 340,
                  "end_byte": 343,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 344,
                  "end_byte": 345,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 346,
                  "end_byte": 351,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 346,
                      "end_byte": 347,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 348,
                      "end_byte": 349,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 350,
                      "end_byte": 351,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 352,
                  "end_byte": 353,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 354,
                  "end_byte": 359,
                  "text": "i < T",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 354,
                      "end_byte": 355,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 356,
                      "end_byte": 357,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 358,
                      "end_byte": 359,
                      "text": "T",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 360,
                  "end_byte": 361,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 362,
                  "end_byte": 366,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 362,
                      "end_byte": 363,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 364,
                      "end_byte": 366,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 367,
                  "end_byte": 368,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 369,
                  "end_byte": 445,
                  "text": "{ j = GCD ( x , y ) ; lcm = x * y / j ; printf ( \"%ld %ld\\n\" , j , lcm ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 369,
                      "end_byte": 370,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 371,
                      "end_byte": 390,
                      "text": "j = GCD ( x , y ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 371,
                          "end_byte": 388,
                          "text": "j = GCD ( x , y )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 371,
                              "end_byte": 372,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 373,
                              "end_byte": 374,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 375,
                              "end_byte": 388,
                              "text": "GCD ( x , y )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 375,
                                  "end_byte": 378,
                                  "text": "GCD",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 379,
                                  "end_byte": 388,
                                  "text": "( x , y )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 379,
                                      "end_byte": 380,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 381,
                                      "end_byte": 382,
                                      "text": "x",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 383,
                                      "end_byte": 384,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 385,
                                      "end_byte": 386,
                                      "text": "y",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 387,
                                      "end_byte": 388,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 389,
                          "end_byte": 390,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 391,
                      "end_byte": 408,
                      "text": "lcm = x * y / j ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 391,
                          "end_byte": 406,
                          "text": "lcm = x * y / j",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 391,
                              "end_byte": 394,
                              "text": "lcm",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 395,
                              "end_byte": 396,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 397,
                              "end_byte": 406,
                              "text": "x * y / j",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 397,
                                  "end_byte": 402,
                                  "text": "x * y",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 397,
                                      "end_byte": 398,
                                      "text": "x",
                                      "children": []
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 399,
                                      "end_byte": 400,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 401,
                                      "end_byte": 402,
                                      "text": "y",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 403,
                                  "end_byte": 404,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 405,
                                  "end_byte": 406,
                                  "text": "j",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 407,
                          "end_byte": 408,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 409,
                      "end_byte": 443,
                      "text": "printf ( \"%ld %ld\\n\" , j , lcm ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 409,
                          "end_byte": 441,
                          "text": "printf ( \"%ld %ld\\n\" , j , lcm )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 409,
                              "end_byte": 415,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 416,
                              "end_byte": 441,
                              "text": "( \"%ld %ld\\n\" , j , lcm )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 416,
                                  "end_byte": 417,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 418,
                                  "end_byte": 429,
                                  "text": "\"%ld %ld\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 418,
                                      "end_byte": 419,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 419,
                                      "end_byte": 426,
                                      "text": "%ld %ld",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 426,
                                      "end_byte": 428,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 428,
                                      "end_byte": 429,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 430,
                                  "end_byte": 431,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 432,
                                  "end_byte": 433,
                                  "text": "j",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 434,
                                  "end_byte": 435,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 436,
                                  "end_byte": 439,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 440,
                                  "end_byte": 441,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 442,
                          "end_byte": 443,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 444,
                      "end_byte": 445,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 446,
              "end_byte": 456,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 446,
                  "end_byte": 452,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 453,
                  "end_byte": 454,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 455,
                  "end_byte": 456,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 457,
              "end_byte": 458,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}