int max ( int i , int j ) { if ( i > j ) return i ; else return j ; } int main ( ) { int i , j , k , l , m , n , t ; scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & n ) ; int * a = ( int * ) malloc ( n * ( n + 1 ) / 2 * sizeof ( int ) ) ; int * dp = ( int * ) malloc ( n * sizeof ( int ) ) ; for ( i = 0 ; i < n * ( n + 1 ) / 2 ; i ++ ) scanf ( "%d" , & a [ i ] ) ; dp [ 0 ] = a [ 0 ] ; j = 0 ; for ( i = 1 ; i < n ; i ++ ) { dp [ i ] = dp [ i - 1 ] + max ( a [ i + j ] , a [ i + j + 1 ] ) ; j ++ ; } printf ( "%d\n" , dp [ n - 1 ] ) ; } }