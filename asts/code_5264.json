{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 1215,
  "text": "long findmax ( long a [ ] , long check [ ] , long n ) { long max = 0 , i , j , k , idx , count = 0 ; for ( i = 0 ; i < n ; i ++ ) { if ( check [ i ] == 1 ) count ++ ; } if ( count == 1 ) return 0 ; for ( i = 0 ; i < n ; i ++ ) { if ( check [ i ] == 1 && a [ i ] >= max ) { max = a [ i ] ; idx = i ; } } check [ idx ] = 0 ; j = idx - 1 ; k = idx + 1 ; if ( j < 0 ) { for ( i = k ; i < n ; i ++ ) { if ( check [ i ] == 1 ) return a [ i ] ; } } if ( k >= n ) { for ( i = j ; i >= 0 ; i -- ) { if ( check [ i ] == 1 ) return a [ i ] ; } } while ( j >= 0 && k < n ) { if ( check [ j ] == 1 && check [ k ] == 1 ) { if ( a [ j ] <= a [ k ] ) return a [ j ] ; else return a [ k ] ; } else if ( check [ j ] == 1 && check [ k ] == 0 ) { k ++ ; } else if ( check [ j ] == 0 && check [ k ] == 1 ) { j -- ; } else { j -- ; k ++ ; } } return a [ idx ] ; } int main ( ) { int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { long n , i ; scanf ( \"%ld\" , & n ) ; long a [ n + 1 ] , sum ; long check [ n + 1 ] ; for ( i = 0 ; i < n ; i ++ ) scanf ( \"%ld\" , & a [ i ] ) ; for ( i = 0 ; i < n ; i ++ ) check [ i ] = 1 ; sum = 0 ; for ( i = 0 ; i < n ; i ++ ) { sum += findmax ( a , check , n ) ; } printf ( \"%ld\\n\" , sum ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 841,
      "text": "long findmax ( long a [ ] , long check [ ] , long n ) { long max = 0 , i , j , k , idx , count = 0 ; for ( i = 0 ; i < n ; i ++ ) { if ( check [ i ] == 1 ) count ++ ; } if ( count == 1 ) return 0 ; for ( i = 0 ; i < n ; i ++ ) { if ( check [ i ] == 1 && a [ i ] >= max ) { max = a [ i ] ; idx = i ; } } check [ idx ] = 0 ; j = idx - 1 ; k = idx + 1 ; if ( j < 0 ) { for ( i = k ; i < n ; i ++ ) { if ( check [ i ] == 1 ) return a [ i ] ; } } if ( k >= n ) { for ( i = j ; i >= 0 ; i -- ) { if ( check [ i ] == 1 ) return a [ i ] ; } } while ( j >= 0 && k < n ) { if ( check [ j ] == 1 && check [ k ] == 1 ) { if ( a [ j ] <= a [ k ] ) return a [ j ] ; else return a [ k ] ; } else if ( check [ j ] == 1 && check [ k ] == 0 ) { k ++ ; } else if ( check [ j ] == 0 && check [ k ] == 1 ) { j -- ; } else { j -- ; k ++ ; } } return a [ idx ] ; }",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 0,
          "end_byte": 4,
          "text": "long",
          "children": [
            {
              "type": "long",
              "start_byte": 0,
              "end_byte": 4,
              "text": "long",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 5,
          "end_byte": 53,
          "text": "findmax ( long a [ ] , long check [ ] , long n )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 5,
              "end_byte": 12,
              "text": "findmax",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 13,
              "end_byte": 53,
              "text": "( long a [ ] , long check [ ] , long n )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 13,
                  "end_byte": 14,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 15,
                  "end_byte": 25,
                  "text": "long a [ ]",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 15,
                      "end_byte": 19,
                      "text": "long",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 15,
                          "end_byte": 19,
                          "text": "long",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "array_declarator",
                      "start_byte": 20,
                      "end_byte": 25,
                      "text": "a [ ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 20,
                          "end_byte": 21,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": "[",
                          "start_byte": 22,
                          "end_byte": 23,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 24,
                          "end_byte": 25,
                          "text": "]",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 26,
                  "end_byte": 27,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 28,
                  "end_byte": 42,
                  "text": "long check [ ]",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 28,
                      "end_byte": 32,
                      "text": "long",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 28,
                          "end_byte": 32,
                          "text": "long",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "array_declarator",
                      "start_byte": 33,
                      "end_byte": 42,
                      "text": "check [ ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 33,
                          "end_byte": 38,
                          "text": "check",
                          "children": []
                        },
                        {
                          "type": "[",
                          "start_byte": 39,
                          "end_byte": 40,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 41,
                          "end_byte": 42,
                          "text": "]",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 43,
                  "end_byte": 44,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 45,
                  "end_byte": 51,
                  "text": "long n",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 45,
                      "end_byte": 49,
                      "text": "long",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 45,
                          "end_byte": 49,
                          "text": "long",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 50,
                      "end_byte": 51,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 52,
                  "end_byte": 53,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 54,
          "end_byte": 841,
          "text": "{ long max = 0 , i , j , k , idx , count = 0 ; for ( i = 0 ; i < n ; i ++ ) { if ( check [ i ] == 1 ) count ++ ; } if ( count == 1 ) return 0 ; for ( i = 0 ; i < n ; i ++ ) { if ( check [ i ] == 1 && a [ i ] >= max ) { max = a [ i ] ; idx = i ; } } check [ idx ] = 0 ; j = idx - 1 ; k = idx + 1 ; if ( j < 0 ) { for ( i = k ; i < n ; i ++ ) { if ( check [ i ] == 1 ) return a [ i ] ; } } if ( k >= n ) { for ( i = j ; i >= 0 ; i -- ) { if ( check [ i ] == 1 ) return a [ i ] ; } } while ( j >= 0 && k < n ) { if ( check [ j ] == 1 && check [ k ] == 1 ) { if ( a [ j ] <= a [ k ] ) return a [ j ] ; else return a [ k ] ; } else if ( check [ j ] == 1 && check [ k ] == 0 ) { k ++ ; } else if ( check [ j ] == 0 && check [ k ] == 1 ) { j -- ; } else { j -- ; k ++ ; } } return a [ idx ] ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 54,
              "end_byte": 55,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 56,
              "end_byte": 100,
              "text": "long max = 0 , i , j , k , idx , count = 0 ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 56,
                  "end_byte": 60,
                  "text": "long",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 56,
                      "end_byte": 60,
                      "text": "long",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "init_declarator",
                  "start_byte": 61,
                  "end_byte": 68,
                  "text": "max = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 61,
                      "end_byte": 64,
                      "text": "max",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 65,
                      "end_byte": 66,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 67,
                      "end_byte": 68,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 69,
                  "end_byte": 70,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 71,
                  "end_byte": 72,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 73,
                  "end_byte": 74,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 75,
                  "end_byte": 76,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 77,
                  "end_byte": 78,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 79,
                  "end_byte": 80,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 81,
                  "end_byte": 82,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 83,
                  "end_byte": 86,
                  "text": "idx",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 87,
                  "end_byte": 88,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 89,
                  "end_byte": 98,
                  "text": "count = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 89,
                      "end_byte": 94,
                      "text": "count",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 95,
                      "end_byte": 96,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 97,
                      "end_byte": 98,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 99,
                  "end_byte": 100,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 101,
              "end_byte": 168,
              "text": "for ( i = 0 ; i < n ; i ++ ) { if ( check [ i ] == 1 ) count ++ ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 101,
                  "end_byte": 104,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 105,
                  "end_byte": 106,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 107,
                  "end_byte": 112,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 107,
                      "end_byte": 108,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 109,
                      "end_byte": 110,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 111,
                      "end_byte": 112,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 113,
                  "end_byte": 114,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 115,
                  "end_byte": 120,
                  "text": "i < n",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 115,
                      "end_byte": 116,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 117,
                      "end_byte": 118,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 119,
                      "end_byte": 120,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 121,
                  "end_byte": 122,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 123,
                  "end_byte": 127,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 123,
                      "end_byte": 124,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 125,
                      "end_byte": 127,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 128,
                  "end_byte": 129,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 130,
                  "end_byte": 168,
                  "text": "{ if ( check [ i ] == 1 ) count ++ ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 130,
                      "end_byte": 131,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 132,
                      "end_byte": 166,
                      "text": "if ( check [ i ] == 1 ) count ++ ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 132,
                          "end_byte": 134,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 135,
                          "end_byte": 155,
                          "text": "( check [ i ] == 1 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 135,
                              "end_byte": 136,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 137,
                              "end_byte": 153,
                              "text": "check [ i ] == 1",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 137,
                                  "end_byte": 148,
                                  "text": "check [ i ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 137,
                                      "end_byte": 142,
                                      "text": "check",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 143,
                                      "end_byte": 148,
                                      "text": "[ i ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 143,
                                          "end_byte": 144,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 145,
                                          "end_byte": 146,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 147,
                                          "end_byte": 148,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "==",
                                  "start_byte": 149,
                                  "end_byte": 151,
                                  "text": "==",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 152,
                                  "end_byte": 153,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 154,
                              "end_byte": 155,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 156,
                          "end_byte": 166,
                          "text": "count ++ ;",
                          "children": [
                            {
                              "type": "update_expression",
                              "start_byte": 156,
                              "end_byte": 164,
                              "text": "count ++",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 156,
                                  "end_byte": 161,
                                  "text": "count",
                                  "children": []
                                },
                                {
                                  "type": "++",
                                  "start_byte": 162,
                                  "end_byte": 164,
                                  "text": "++",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 165,
                              "end_byte": 166,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 167,
                      "end_byte": 168,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 169,
              "end_byte": 197,
              "text": "if ( count == 1 ) return 0 ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 169,
                  "end_byte": 171,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 172,
                  "end_byte": 186,
                  "text": "( count == 1 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 172,
                      "end_byte": 173,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 174,
                      "end_byte": 184,
                      "text": "count == 1",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 174,
                          "end_byte": 179,
                          "text": "count",
                          "children": []
                        },
                        {
                          "type": "==",
                          "start_byte": 180,
                          "end_byte": 182,
                          "text": "==",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 183,
                          "end_byte": 184,
                          "text": "1",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 185,
                      "end_byte": 186,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 187,
                  "end_byte": 197,
                  "text": "return 0 ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 187,
                      "end_byte": 193,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 194,
                      "end_byte": 195,
                      "text": "0",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 196,
                      "end_byte": 197,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 198,
              "end_byte": 302,
              "text": "for ( i = 0 ; i < n ; i ++ ) { if ( check [ i ] == 1 && a [ i ] >= max ) { max = a [ i ] ; idx = i ; } }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 198,
                  "end_byte": 201,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 202,
                  "end_byte": 203,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 204,
                  "end_byte": 209,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 204,
                      "end_byte": 205,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 206,
                      "end_byte": 207,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 208,
                      "end_byte": 209,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 210,
                  "end_byte": 211,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 212,
                  "end_byte": 217,
                  "text": "i < n",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 212,
                      "end_byte": 213,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 214,
                      "end_byte": 215,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 216,
                      "end_byte": 217,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 218,
                  "end_byte": 219,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 220,
                  "end_byte": 224,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 220,
                      "end_byte": 221,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 222,
                      "end_byte": 224,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 225,
                  "end_byte": 226,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 227,
                  "end_byte": 302,
                  "text": "{ if ( check [ i ] == 1 && a [ i ] >= max ) { max = a [ i ] ; idx = i ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 227,
                      "end_byte": 228,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 229,
                      "end_byte": 300,
                      "text": "if ( check [ i ] == 1 && a [ i ] >= max ) { max = a [ i ] ; idx = i ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 229,
                          "end_byte": 231,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 232,
                          "end_byte": 270,
                          "text": "( check [ i ] == 1 && a [ i ] >= max )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 232,
                              "end_byte": 233,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 234,
                              "end_byte": 268,
                              "text": "check [ i ] == 1 && a [ i ] >= max",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 234,
                                  "end_byte": 250,
                                  "text": "check [ i ] == 1",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 234,
                                      "end_byte": 245,
                                      "text": "check [ i ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 234,
                                          "end_byte": 239,
                                          "text": "check",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 240,
                                          "end_byte": 245,
                                          "text": "[ i ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 240,
                                              "end_byte": 241,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 242,
                                              "end_byte": 243,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 244,
                                              "end_byte": 245,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "==",
                                      "start_byte": 246,
                                      "end_byte": 248,
                                      "text": "==",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 249,
                                      "end_byte": 250,
                                      "text": "1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "&&",
                                  "start_byte": 251,
                                  "end_byte": 253,
                                  "text": "&&",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 254,
                                  "end_byte": 268,
                                  "text": "a [ i ] >= max",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 254,
                                      "end_byte": 261,
                                      "text": "a [ i ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 254,
                                          "end_byte": 255,
                                          "text": "a",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 256,
                                          "end_byte": 261,
                                          "text": "[ i ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 256,
                                              "end_byte": 257,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 258,
                                              "end_byte": 259,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 260,
                                              "end_byte": 261,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ">=",
                                      "start_byte": 262,
                                      "end_byte": 264,
                                      "text": ">=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 265,
                                      "end_byte": 268,
                                      "text": "max",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 269,
                              "end_byte": 270,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 271,
                          "end_byte": 300,
                          "text": "{ max = a [ i ] ; idx = i ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 271,
                              "end_byte": 272,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 273,
                              "end_byte": 288,
                              "text": "max = a [ i ] ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 273,
                                  "end_byte": 286,
                                  "text": "max = a [ i ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 273,
                                      "end_byte": 276,
                                      "text": "max",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 277,
                                      "end_byte": 278,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 279,
                                      "end_byte": 286,
                                      "text": "a [ i ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 279,
                                          "end_byte": 280,
                                          "text": "a",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 281,
                                          "end_byte": 286,
                                          "text": "[ i ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 281,
                                              "end_byte": 282,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 283,
                                              "end_byte": 284,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 285,
                                              "end_byte": 286,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 287,
                                  "end_byte": 288,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 289,
                              "end_byte": 298,
                              "text": "idx = i ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 289,
                                  "end_byte": 296,
                                  "text": "idx = i",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 289,
                                      "end_byte": 292,
                                      "text": "idx",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 293,
                                      "end_byte": 294,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 295,
                                      "end_byte": 296,
                                      "text": "i",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 297,
                                  "end_byte": 298,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 299,
                              "end_byte": 300,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 301,
                      "end_byte": 302,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 303,
              "end_byte": 322,
              "text": "check [ idx ] = 0 ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 303,
                  "end_byte": 320,
                  "text": "check [ idx ] = 0",
                  "children": [
                    {
                      "type": "subscript_expression",
                      "start_byte": 303,
                      "end_byte": 316,
                      "text": "check [ idx ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 303,
                          "end_byte": 308,
                          "text": "check",
                          "children": []
                        },
                        {
                          "type": "subscript_argument_list",
                          "start_byte": 309,
                          "end_byte": 316,
                          "text": "[ idx ]",
                          "children": [
                            {
                              "type": "[",
                              "start_byte": 309,
                              "end_byte": 310,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 311,
                              "end_byte": 314,
                              "text": "idx",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 315,
                              "end_byte": 316,
                              "text": "]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start_byte": 317,
                      "end_byte": 318,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 319,
                      "end_byte": 320,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 321,
                  "end_byte": 322,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 323,
              "end_byte": 336,
              "text": "j = idx - 1 ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 323,
                  "end_byte": 334,
                  "text": "j = idx - 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 323,
                      "end_byte": 324,
                      "text": "j",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 325,
                      "end_byte": 326,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 327,
                      "end_byte": 334,
                      "text": "idx - 1",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 327,
                          "end_byte": 330,
                          "text": "idx",
                          "children": []
                        },
                        {
                          "type": "-",
                          "start_byte": 331,
                          "end_byte": 332,
                          "text": "-",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 333,
                          "end_byte": 334,
                          "text": "1",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 335,
                  "end_byte": 336,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 337,
              "end_byte": 350,
              "text": "k = idx + 1 ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 337,
                  "end_byte": 348,
                  "text": "k = idx + 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 337,
                      "end_byte": 338,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 339,
                      "end_byte": 340,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 341,
                      "end_byte": 348,
                      "text": "idx + 1",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 341,
                          "end_byte": 344,
                          "text": "idx",
                          "children": []
                        },
                        {
                          "type": "+",
                          "start_byte": 345,
                          "end_byte": 346,
                          "text": "+",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 347,
                          "end_byte": 348,
                          "text": "1",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 349,
                  "end_byte": 350,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 351,
              "end_byte": 441,
              "text": "if ( j < 0 ) { for ( i = k ; i < n ; i ++ ) { if ( check [ i ] == 1 ) return a [ i ] ; } }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 351,
                  "end_byte": 353,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 354,
                  "end_byte": 363,
                  "text": "( j < 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 354,
                      "end_byte": 355,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 356,
                      "end_byte": 361,
                      "text": "j < 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 356,
                          "end_byte": 357,
                          "text": "j",
                          "children": []
                        },
                        {
                          "type": "<",
                          "start_byte": 358,
                          "end_byte": 359,
                          "text": "<",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 360,
                          "end_byte": 361,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 362,
                      "end_byte": 363,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 364,
                  "end_byte": 441,
                  "text": "{ for ( i = k ; i < n ; i ++ ) { if ( check [ i ] == 1 ) return a [ i ] ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 364,
                      "end_byte": 365,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 366,
                      "end_byte": 439,
                      "text": "for ( i = k ; i < n ; i ++ ) { if ( check [ i ] == 1 ) return a [ i ] ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 366,
                          "end_byte": 369,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 370,
                          "end_byte": 371,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 372,
                          "end_byte": 377,
                          "text": "i = k",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 372,
                              "end_byte": 373,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 374,
                              "end_byte": 375,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 376,
                              "end_byte": 377,
                              "text": "k",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 378,
                          "end_byte": 379,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 380,
                          "end_byte": 385,
                          "text": "i < n",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 380,
                              "end_byte": 381,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 382,
                              "end_byte": 383,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 384,
                              "end_byte": 385,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 386,
                          "end_byte": 387,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 388,
                          "end_byte": 392,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 388,
                              "end_byte": 389,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 390,
                              "end_byte": 392,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 393,
                          "end_byte": 394,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 395,
                          "end_byte": 439,
                          "text": "{ if ( check [ i ] == 1 ) return a [ i ] ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 395,
                              "end_byte": 396,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 397,
                              "end_byte": 437,
                              "text": "if ( check [ i ] == 1 ) return a [ i ] ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 397,
                                  "end_byte": 399,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 400,
                                  "end_byte": 420,
                                  "text": "( check [ i ] == 1 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 400,
                                      "end_byte": 401,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 402,
                                      "end_byte": 418,
                                      "text": "check [ i ] == 1",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 402,
                                          "end_byte": 413,
                                          "text": "check [ i ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 402,
                                              "end_byte": 407,
                                              "text": "check",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 408,
                                              "end_byte": 413,
                                              "text": "[ i ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 408,
                                                  "end_byte": 409,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 410,
                                                  "end_byte": 411,
                                                  "text": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 412,
                                                  "end_byte": 413,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "==",
                                          "start_byte": 414,
                                          "end_byte": 416,
                                          "text": "==",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 417,
                                          "end_byte": 418,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 419,
                                      "end_byte": 420,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "return_statement",
                                  "start_byte": 421,
                                  "end_byte": 437,
                                  "text": "return a [ i ] ;",
                                  "children": [
                                    {
                                      "type": "return",
                                      "start_byte": 421,
                                      "end_byte": 427,
                                      "text": "return",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 428,
                                      "end_byte": 435,
                                      "text": "a [ i ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 428,
                                          "end_byte": 429,
                                          "text": "a",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 430,
                                          "end_byte": 435,
                                          "text": "[ i ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 430,
                                              "end_byte": 431,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 432,
                                              "end_byte": 433,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 434,
                                              "end_byte": 435,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 436,
                                      "end_byte": 437,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 438,
                              "end_byte": 439,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 440,
                      "end_byte": 441,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 442,
              "end_byte": 534,
              "text": "if ( k >= n ) { for ( i = j ; i >= 0 ; i -- ) { if ( check [ i ] == 1 ) return a [ i ] ; } }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 442,
                  "end_byte": 444,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 445,
                  "end_byte": 455,
                  "text": "( k >= n )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 445,
                      "end_byte": 446,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 447,
                      "end_byte": 453,
                      "text": "k >= n",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 447,
                          "end_byte": 448,
                          "text": "k",
                          "children": []
                        },
                        {
                          "type": ">=",
                          "start_byte": 449,
                          "end_byte": 451,
                          "text": ">=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 452,
                          "end_byte": 453,
                          "text": "n",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 454,
                      "end_byte": 455,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 456,
                  "end_byte": 534,
                  "text": "{ for ( i = j ; i >= 0 ; i -- ) { if ( check [ i ] == 1 ) return a [ i ] ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 456,
                      "end_byte": 457,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 458,
                      "end_byte": 532,
                      "text": "for ( i = j ; i >= 0 ; i -- ) { if ( check [ i ] == 1 ) return a [ i ] ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 458,
                          "end_byte": 461,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 462,
                          "end_byte": 463,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 464,
                          "end_byte": 469,
                          "text": "i = j",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 464,
                              "end_byte": 465,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 466,
                              "end_byte": 467,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 468,
                              "end_byte": 469,
                              "text": "j",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 470,
                          "end_byte": 471,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 472,
                          "end_byte": 478,
                          "text": "i >= 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 472,
                              "end_byte": 473,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": ">=",
                              "start_byte": 474,
                              "end_byte": 476,
                              "text": ">=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 477,
                              "end_byte": 478,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 479,
                          "end_byte": 480,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 481,
                          "end_byte": 485,
                          "text": "i --",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 481,
                              "end_byte": 482,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "--",
                              "start_byte": 483,
                              "end_byte": 485,
                              "text": "--",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 486,
                          "end_byte": 487,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 488,
                          "end_byte": 532,
                          "text": "{ if ( check [ i ] == 1 ) return a [ i ] ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 488,
                              "end_byte": 489,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 490,
                              "end_byte": 530,
                              "text": "if ( check [ i ] == 1 ) return a [ i ] ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 490,
                                  "end_byte": 492,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 493,
                                  "end_byte": 513,
                                  "text": "( check [ i ] == 1 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 493,
                                      "end_byte": 494,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 495,
                                      "end_byte": 511,
                                      "text": "check [ i ] == 1",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 495,
                                          "end_byte": 506,
                                          "text": "check [ i ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 495,
                                              "end_byte": 500,
                                              "text": "check",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 501,
                                              "end_byte": 506,
                                              "text": "[ i ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 501,
                                                  "end_byte": 502,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 503,
                                                  "end_byte": 504,
                                                  "text": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 505,
                                                  "end_byte": 506,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "==",
                                          "start_byte": 507,
                                          "end_byte": 509,
                                          "text": "==",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 510,
                                          "end_byte": 511,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 512,
                                      "end_byte": 513,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "return_statement",
                                  "start_byte": 514,
                                  "end_byte": 530,
                                  "text": "return a [ i ] ;",
                                  "children": [
                                    {
                                      "type": "return",
                                      "start_byte": 514,
                                      "end_byte": 520,
                                      "text": "return",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 521,
                                      "end_byte": 528,
                                      "text": "a [ i ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 521,
                                          "end_byte": 522,
                                          "text": "a",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 523,
                                          "end_byte": 528,
                                          "text": "[ i ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 523,
                                              "end_byte": 524,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 525,
                                              "end_byte": 526,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 527,
                                              "end_byte": 528,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 529,
                                      "end_byte": 530,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 531,
                              "end_byte": 532,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 533,
                      "end_byte": 534,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 535,
              "end_byte": 820,
              "text": "while ( j >= 0 && k < n ) { if ( check [ j ] == 1 && check [ k ] == 1 ) { if ( a [ j ] <= a [ k ] ) return a [ j ] ; else return a [ k ] ; } else if ( check [ j ] == 1 && check [ k ] == 0 ) { k ++ ; } else if ( check [ j ] == 0 && check [ k ] == 1 ) { j -- ; } else { j -- ; k ++ ; } }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 535,
                  "end_byte": 540,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 541,
                  "end_byte": 560,
                  "text": "( j >= 0 && k < n )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 541,
                      "end_byte": 542,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 543,
                      "end_byte": 558,
                      "text": "j >= 0 && k < n",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 543,
                          "end_byte": 549,
                          "text": "j >= 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 543,
                              "end_byte": 544,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": ">=",
                              "start_byte": 545,
                              "end_byte": 547,
                              "text": ">=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 548,
                              "end_byte": 549,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "&&",
                          "start_byte": 550,
                          "end_byte": 552,
                          "text": "&&",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 553,
                          "end_byte": 558,
                          "text": "k < n",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 553,
                              "end_byte": 554,
                              "text": "k",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 555,
                              "end_byte": 556,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 557,
                              "end_byte": 558,
                              "text": "n",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 559,
                      "end_byte": 560,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 561,
                  "end_byte": 820,
                  "text": "{ if ( check [ j ] == 1 && check [ k ] == 1 ) { if ( a [ j ] <= a [ k ] ) return a [ j ] ; else return a [ k ] ; } else if ( check [ j ] == 1 && check [ k ] == 0 ) { k ++ ; } else if ( check [ j ] == 0 && check [ k ] == 1 ) { j -- ; } else { j -- ; k ++ ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 561,
                      "end_byte": 562,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 563,
                      "end_byte": 818,
                      "text": "if ( check [ j ] == 1 && check [ k ] == 1 ) { if ( a [ j ] <= a [ k ] ) return a [ j ] ; else return a [ k ] ; } else if ( check [ j ] == 1 && check [ k ] == 0 ) { k ++ ; } else if ( check [ j ] == 0 && check [ k ] == 1 ) { j -- ; } else { j -- ; k ++ ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 563,
                          "end_byte": 565,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 566,
                          "end_byte": 606,
                          "text": "( check [ j ] == 1 && check [ k ] == 1 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 566,
                              "end_byte": 567,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 568,
                              "end_byte": 604,
                              "text": "check [ j ] == 1 && check [ k ] == 1",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 568,
                                  "end_byte": 584,
                                  "text": "check [ j ] == 1",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 568,
                                      "end_byte": 579,
                                      "text": "check [ j ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 568,
                                          "end_byte": 573,
                                          "text": "check",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 574,
                                          "end_byte": 579,
                                          "text": "[ j ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 574,
                                              "end_byte": 575,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 576,
                                              "end_byte": 577,
                                              "text": "j",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 578,
                                              "end_byte": 579,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "==",
                                      "start_byte": 580,
                                      "end_byte": 582,
                                      "text": "==",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 583,
                                      "end_byte": 584,
                                      "text": "1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "&&",
                                  "start_byte": 585,
                                  "end_byte": 587,
                                  "text": "&&",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 588,
                                  "end_byte": 604,
                                  "text": "check [ k ] == 1",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 588,
                                      "end_byte": 599,
                                      "text": "check [ k ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 588,
                                          "end_byte": 593,
                                          "text": "check",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 594,
                                          "end_byte": 599,
                                          "text": "[ k ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 594,
                                              "end_byte": 595,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 596,
                                              "end_byte": 597,
                                              "text": "k",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 598,
                                              "end_byte": 599,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "==",
                                      "start_byte": 600,
                                      "end_byte": 602,
                                      "text": "==",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 603,
                                      "end_byte": 604,
                                      "text": "1",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 605,
                              "end_byte": 606,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 607,
                          "end_byte": 675,
                          "text": "{ if ( a [ j ] <= a [ k ] ) return a [ j ] ; else return a [ k ] ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 607,
                              "end_byte": 608,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 609,
                              "end_byte": 673,
                              "text": "if ( a [ j ] <= a [ k ] ) return a [ j ] ; else return a [ k ] ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 609,
                                  "end_byte": 611,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 612,
                                  "end_byte": 634,
                                  "text": "( a [ j ] <= a [ k ] )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 612,
                                      "end_byte": 613,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 614,
                                      "end_byte": 632,
                                      "text": "a [ j ] <= a [ k ]",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 614,
                                          "end_byte": 621,
                                          "text": "a [ j ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 614,
                                              "end_byte": 615,
                                              "text": "a",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 616,
                                              "end_byte": 621,
                                              "text": "[ j ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 616,
                                                  "end_byte": 617,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 618,
                                                  "end_byte": 619,
                                                  "text": "j",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 620,
                                                  "end_byte": 621,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "<=",
                                          "start_byte": 622,
                                          "end_byte": 624,
                                          "text": "<=",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 625,
                                          "end_byte": 632,
                                          "text": "a [ k ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 625,
                                              "end_byte": 626,
                                              "text": "a",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 627,
                                              "end_byte": 632,
                                              "text": "[ k ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 627,
                                                  "end_byte": 628,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 629,
                                                  "end_byte": 630,
                                                  "text": "k",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 631,
                                                  "end_byte": 632,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 633,
                                      "end_byte": 634,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "return_statement",
                                  "start_byte": 635,
                                  "end_byte": 651,
                                  "text": "return a [ j ] ;",
                                  "children": [
                                    {
                                      "type": "return",
                                      "start_byte": 635,
                                      "end_byte": 641,
                                      "text": "return",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 642,
                                      "end_byte": 649,
                                      "text": "a [ j ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 642,
                                          "end_byte": 643,
                                          "text": "a",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 644,
                                          "end_byte": 649,
                                          "text": "[ j ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 644,
                                              "end_byte": 645,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 646,
                                              "end_byte": 647,
                                              "text": "j",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 648,
                                              "end_byte": 649,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 650,
                                      "end_byte": 651,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start_byte": 652,
                                  "end_byte": 673,
                                  "text": "else return a [ k ] ;",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start_byte": 652,
                                      "end_byte": 656,
                                      "text": "else",
                                      "children": []
                                    },
                                    {
                                      "type": "return_statement",
                                      "start_byte": 657,
                                      "end_byte": 673,
                                      "text": "return a [ k ] ;",
                                      "children": [
                                        {
                                          "type": "return",
                                          "start_byte": 657,
                                          "end_byte": 663,
                                          "text": "return",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 664,
                                          "end_byte": 671,
                                          "text": "a [ k ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 664,
                                              "end_byte": 665,
                                              "text": "a",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 666,
                                              "end_byte": 671,
                                              "text": "[ k ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 666,
                                                  "end_byte": 667,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 668,
                                                  "end_byte": 669,
                                                  "text": "k",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 670,
                                                  "end_byte": 671,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 672,
                                          "end_byte": 673,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 674,
                              "end_byte": 675,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 676,
                          "end_byte": 818,
                          "text": "else if ( check [ j ] == 1 && check [ k ] == 0 ) { k ++ ; } else if ( check [ j ] == 0 && check [ k ] == 1 ) { j -- ; } else { j -- ; k ++ ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 676,
                              "end_byte": 680,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 681,
                              "end_byte": 818,
                              "text": "if ( check [ j ] == 1 && check [ k ] == 0 ) { k ++ ; } else if ( check [ j ] == 0 && check [ k ] == 1 ) { j -- ; } else { j -- ; k ++ ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 681,
                                  "end_byte": 683,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 684,
                                  "end_byte": 724,
                                  "text": "( check [ j ] == 1 && check [ k ] == 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 684,
                                      "end_byte": 685,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 686,
                                      "end_byte": 722,
                                      "text": "check [ j ] == 1 && check [ k ] == 0",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 686,
                                          "end_byte": 702,
                                          "text": "check [ j ] == 1",
                                          "children": [
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 686,
                                              "end_byte": 697,
                                              "text": "check [ j ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 686,
                                                  "end_byte": 691,
                                                  "text": "check",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 692,
                                                  "end_byte": 697,
                                                  "text": "[ j ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 692,
                                                      "end_byte": 693,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 694,
                                                      "end_byte": 695,
                                                      "text": "j",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 696,
                                                      "end_byte": 697,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "==",
                                              "start_byte": 698,
                                              "end_byte": 700,
                                              "text": "==",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 701,
                                              "end_byte": 702,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "&&",
                                          "start_byte": 703,
                                          "end_byte": 705,
                                          "text": "&&",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 706,
                                          "end_byte": 722,
                                          "text": "check [ k ] == 0",
                                          "children": [
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 706,
                                              "end_byte": 717,
                                              "text": "check [ k ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 706,
                                                  "end_byte": 711,
                                                  "text": "check",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 712,
                                                  "end_byte": 717,
                                                  "text": "[ k ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 712,
                                                      "end_byte": 713,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 714,
                                                      "end_byte": 715,
                                                      "text": "k",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 716,
                                                      "end_byte": 717,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "==",
                                              "start_byte": 718,
                                              "end_byte": 720,
                                              "text": "==",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 721,
                                              "end_byte": 722,
                                              "text": "0",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 723,
                                      "end_byte": 724,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 725,
                                  "end_byte": 735,
                                  "text": "{ k ++ ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 725,
                                      "end_byte": 726,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 727,
                                      "end_byte": 733,
                                      "text": "k ++ ;",
                                      "children": [
                                        {
                                          "type": "update_expression",
                                          "start_byte": 727,
                                          "end_byte": 731,
                                          "text": "k ++",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 727,
                                              "end_byte": 728,
                                              "text": "k",
                                              "children": []
                                            },
                                            {
                                              "type": "++",
                                              "start_byte": 729,
                                              "end_byte": 731,
                                              "text": "++",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 732,
                                          "end_byte": 733,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 734,
                                      "end_byte": 735,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start_byte": 736,
                                  "end_byte": 818,
                                  "text": "else if ( check [ j ] == 0 && check [ k ] == 1 ) { j -- ; } else { j -- ; k ++ ; }",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start_byte": 736,
                                      "end_byte": 740,
                                      "text": "else",
                                      "children": []
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 741,
                                      "end_byte": 818,
                                      "text": "if ( check [ j ] == 0 && check [ k ] == 1 ) { j -- ; } else { j -- ; k ++ ; }",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 741,
                                          "end_byte": 743,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 744,
                                          "end_byte": 784,
                                          "text": "( check [ j ] == 0 && check [ k ] == 1 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 744,
                                              "end_byte": 745,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 746,
                                              "end_byte": 782,
                                              "text": "check [ j ] == 0 && check [ k ] == 1",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 746,
                                                  "end_byte": 762,
                                                  "text": "check [ j ] == 0",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 746,
                                                      "end_byte": 757,
                                                      "text": "check [ j ]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 746,
                                                          "end_byte": 751,
                                                          "text": "check",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 752,
                                                          "end_byte": 757,
                                                          "text": "[ j ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 752,
                                                              "end_byte": 753,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 754,
                                                              "end_byte": 755,
                                                              "text": "j",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 756,
                                                              "end_byte": 757,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "==",
                                                      "start_byte": 758,
                                                      "end_byte": 760,
                                                      "text": "==",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 761,
                                                      "end_byte": 762,
                                                      "text": "0",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "&&",
                                                  "start_byte": 763,
                                                  "end_byte": 765,
                                                  "text": "&&",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 766,
                                                  "end_byte": 782,
                                                  "text": "check [ k ] == 1",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 766,
                                                      "end_byte": 777,
                                                      "text": "check [ k ]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 766,
                                                          "end_byte": 771,
                                                          "text": "check",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 772,
                                                          "end_byte": 777,
                                                          "text": "[ k ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 772,
                                                              "end_byte": 773,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 774,
                                                              "end_byte": 775,
                                                              "text": "k",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 776,
                                                              "end_byte": 777,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "==",
                                                      "start_byte": 778,
                                                      "end_byte": 780,
                                                      "text": "==",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 781,
                                                      "end_byte": 782,
                                                      "text": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 783,
                                              "end_byte": 784,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "compound_statement",
                                          "start_byte": 785,
                                          "end_byte": 795,
                                          "text": "{ j -- ; }",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start_byte": 785,
                                              "end_byte": 786,
                                              "text": "{",
                                              "children": []
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 787,
                                              "end_byte": 793,
                                              "text": "j -- ;",
                                              "children": [
                                                {
                                                  "type": "update_expression",
                                                  "start_byte": 787,
                                                  "end_byte": 791,
                                                  "text": "j --",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 787,
                                                      "end_byte": 788,
                                                      "text": "j",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "--",
                                                      "start_byte": 789,
                                                      "end_byte": 791,
                                                      "text": "--",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 792,
                                                  "end_byte": 793,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start_byte": 794,
                                              "end_byte": 795,
                                              "text": "}",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "else_clause",
                                          "start_byte": 796,
                                          "end_byte": 818,
                                          "text": "else { j -- ; k ++ ; }",
                                          "children": [
                                            {
                                              "type": "else",
                                              "start_byte": 796,
                                              "end_byte": 800,
                                              "text": "else",
                                              "children": []
                                            },
                                            {
                                              "type": "compound_statement",
                                              "start_byte": 801,
                                              "end_byte": 818,
                                              "text": "{ j -- ; k ++ ; }",
                                              "children": [
                                                {
                                                  "type": "{",
                                                  "start_byte": 801,
                                                  "end_byte": 802,
                                                  "text": "{",
                                                  "children": []
                                                },
                                                {
                                                  "type": "expression_statement",
                                                  "start_byte": 803,
                                                  "end_byte": 809,
                                                  "text": "j -- ;",
                                                  "children": [
                                                    {
                                                      "type": "update_expression",
                                                      "start_byte": 803,
                                                      "end_byte": 807,
                                                      "text": "j --",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 803,
                                                          "end_byte": 804,
                                                          "text": "j",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "--",
                                                          "start_byte": 805,
                                                          "end_byte": 807,
                                                          "text": "--",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ";",
                                                      "start_byte": 808,
                                                      "end_byte": 809,
                                                      "text": ";",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "expression_statement",
                                                  "start_byte": 810,
                                                  "end_byte": 816,
                                                  "text": "k ++ ;",
                                                  "children": [
                                                    {
                                                      "type": "update_expression",
                                                      "start_byte": 810,
                                                      "end_byte": 814,
                                                      "text": "k ++",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 810,
                                                          "end_byte": 811,
                                                          "text": "k",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "++",
                                                          "start_byte": 812,
                                                          "end_byte": 814,
                                                          "text": "++",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ";",
                                                      "start_byte": 815,
                                                      "end_byte": 816,
                                                      "text": ";",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "}",
                                                  "start_byte": 817,
                                                  "end_byte": 818,
                                                  "text": "}",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 819,
                      "end_byte": 820,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 821,
              "end_byte": 839,
              "text": "return a [ idx ] ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 821,
                  "end_byte": 827,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "subscript_expression",
                  "start_byte": 828,
                  "end_byte": 837,
                  "text": "a [ idx ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 828,
                      "end_byte": 829,
                      "text": "a",
                      "children": []
                    },
                    {
                      "type": "subscript_argument_list",
                      "start_byte": 830,
                      "end_byte": 837,
                      "text": "[ idx ]",
                      "children": [
                        {
                          "type": "[",
                          "start_byte": 830,
                          "end_byte": 831,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 832,
                          "end_byte": 835,
                          "text": "idx",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 836,
                          "end_byte": 837,
                          "text": "]",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 838,
                  "end_byte": 839,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 840,
              "end_byte": 841,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 842,
      "end_byte": 1215,
      "text": "int main ( ) { int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { long n , i ; scanf ( \"%ld\" , & n ) ; long a [ n + 1 ] , sum ; long check [ n + 1 ] ; for ( i = 0 ; i < n ; i ++ ) scanf ( \"%ld\" , & a [ i ] ) ; for ( i = 0 ; i < n ; i ++ ) check [ i ] = 1 ; sum = 0 ; for ( i = 0 ; i < n ; i ++ ) { sum += findmax ( a , check , n ) ; } printf ( \"%ld\\n\" , sum ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 842,
          "end_byte": 845,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 846,
          "end_byte": 854,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 846,
              "end_byte": 850,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 851,
              "end_byte": 854,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 851,
                  "end_byte": 852,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 853,
                  "end_byte": 854,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 855,
          "end_byte": 1215,
          "text": "{ int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { long n , i ; scanf ( \"%ld\" , & n ) ; long a [ n + 1 ] , sum ; long check [ n + 1 ] ; for ( i = 0 ; i < n ; i ++ ) scanf ( \"%ld\" , & a [ i ] ) ; for ( i = 0 ; i < n ; i ++ ) check [ i ] = 1 ; sum = 0 ; for ( i = 0 ; i < n ; i ++ ) { sum += findmax ( a , check , n ) ; } printf ( \"%ld\\n\" , sum ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 855,
              "end_byte": 856,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 857,
              "end_byte": 864,
              "text": "int t ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 857,
                  "end_byte": 860,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 861,
                  "end_byte": 862,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 863,
                  "end_byte": 864,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 865,
              "end_byte": 887,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 865,
                  "end_byte": 885,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 865,
                      "end_byte": 870,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 871,
                      "end_byte": 885,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 871,
                          "end_byte": 872,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 873,
                          "end_byte": 877,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 873,
                              "end_byte": 874,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 874,
                              "end_byte": 876,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 876,
                              "end_byte": 877,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 878,
                          "end_byte": 879,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 880,
                          "end_byte": 883,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 880,
                              "end_byte": 881,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 882,
                              "end_byte": 883,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 884,
                          "end_byte": 885,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 886,
                  "end_byte": 887,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 888,
              "end_byte": 1202,
              "text": "while ( t -- ) { long n , i ; scanf ( \"%ld\" , & n ) ; long a [ n + 1 ] , sum ; long check [ n + 1 ] ; for ( i = 0 ; i < n ; i ++ ) scanf ( \"%ld\" , & a [ i ] ) ; for ( i = 0 ; i < n ; i ++ ) check [ i ] = 1 ; sum = 0 ; for ( i = 0 ; i < n ; i ++ ) { sum += findmax ( a , check , n ) ; } printf ( \"%ld\\n\" , sum ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 888,
                  "end_byte": 893,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 894,
                  "end_byte": 902,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 894,
                      "end_byte": 895,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 896,
                      "end_byte": 900,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 896,
                          "end_byte": 897,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 898,
                          "end_byte": 900,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 901,
                      "end_byte": 902,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 903,
                  "end_byte": 1202,
                  "text": "{ long n , i ; scanf ( \"%ld\" , & n ) ; long a [ n + 1 ] , sum ; long check [ n + 1 ] ; for ( i = 0 ; i < n ; i ++ ) scanf ( \"%ld\" , & a [ i ] ) ; for ( i = 0 ; i < n ; i ++ ) check [ i ] = 1 ; sum = 0 ; for ( i = 0 ; i < n ; i ++ ) { sum += findmax ( a , check , n ) ; } printf ( \"%ld\\n\" , sum ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 903,
                      "end_byte": 904,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "declaration",
                      "start_byte": 905,
                      "end_byte": 917,
                      "text": "long n , i ;",
                      "children": [
                        {
                          "type": "sized_type_specifier",
                          "start_byte": 905,
                          "end_byte": 909,
                          "text": "long",
                          "children": [
                            {
                              "type": "long",
                              "start_byte": 905,
                              "end_byte": 909,
                              "text": "long",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "identifier",
                          "start_byte": 910,
                          "end_byte": 911,
                          "text": "n",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 912,
                          "end_byte": 913,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 914,
                          "end_byte": 915,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 916,
                          "end_byte": 917,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 918,
                      "end_byte": 941,
                      "text": "scanf ( \"%ld\" , & n ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 918,
                          "end_byte": 939,
                          "text": "scanf ( \"%ld\" , & n )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 918,
                              "end_byte": 923,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 924,
                              "end_byte": 939,
                              "text": "( \"%ld\" , & n )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 924,
                                  "end_byte": 925,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 926,
                                  "end_byte": 931,
                                  "text": "\"%ld\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 926,
                                      "end_byte": 927,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 927,
                                      "end_byte": 930,
                                      "text": "%ld",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 930,
                                      "end_byte": 931,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 932,
                                  "end_byte": 933,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 934,
                                  "end_byte": 937,
                                  "text": "& n",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 934,
                                      "end_byte": 935,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 936,
                                      "end_byte": 937,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 938,
                                  "end_byte": 939,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 940,
                          "end_byte": 941,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 942,
                      "end_byte": 966,
                      "text": "long a [ n + 1 ] , sum ;",
                      "children": [
                        {
                          "type": "sized_type_specifier",
                          "start_byte": 942,
                          "end_byte": 946,
                          "text": "long",
                          "children": [
                            {
                              "type": "long",
                              "start_byte": 942,
                              "end_byte": 946,
                              "text": "long",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "array_declarator",
                          "start_byte": 947,
                          "end_byte": 958,
                          "text": "a [ n + 1 ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 947,
                              "end_byte": 948,
                              "text": "a",
                              "children": []
                            },
                            {
                              "type": "[",
                              "start_byte": 949,
                              "end_byte": 950,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 951,
                              "end_byte": 956,
                              "text": "n + 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 951,
                                  "end_byte": 952,
                                  "text": "n",
                                  "children": []
                                },
                                {
                                  "type": "+",
                                  "start_byte": 953,
                                  "end_byte": 954,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 955,
                                  "end_byte": 956,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "]",
                              "start_byte": 957,
                              "end_byte": 958,
                              "text": "]",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 959,
                          "end_byte": 960,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 961,
                          "end_byte": 964,
                          "text": "sum",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 965,
                          "end_byte": 966,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 967,
                      "end_byte": 989,
                      "text": "long check [ n + 1 ] ;",
                      "children": [
                        {
                          "type": "sized_type_specifier",
                          "start_byte": 967,
                          "end_byte": 971,
                          "text": "long",
                          "children": [
                            {
                              "type": "long",
                              "start_byte": 967,
                              "end_byte": 971,
                              "text": "long",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "array_declarator",
                          "start_byte": 972,
                          "end_byte": 987,
                          "text": "check [ n + 1 ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 972,
                              "end_byte": 977,
                              "text": "check",
                              "children": []
                            },
                            {
                              "type": "[",
                              "start_byte": 978,
                              "end_byte": 979,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 980,
                              "end_byte": 985,
                              "text": "n + 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 980,
                                  "end_byte": 981,
                                  "text": "n",
                                  "children": []
                                },
                                {
                                  "type": "+",
                                  "start_byte": 982,
                                  "end_byte": 983,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 984,
                                  "end_byte": 985,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "]",
                              "start_byte": 986,
                              "end_byte": 987,
                              "text": "]",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 988,
                          "end_byte": 989,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 990,
                      "end_byte": 1048,
                      "text": "for ( i = 0 ; i < n ; i ++ ) scanf ( \"%ld\" , & a [ i ] ) ;",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 990,
                          "end_byte": 993,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 994,
                          "end_byte": 995,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 996,
                          "end_byte": 1001,
                          "text": "i = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 996,
                              "end_byte": 997,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 998,
                              "end_byte": 999,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 1000,
                              "end_byte": 1001,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1002,
                          "end_byte": 1003,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 1004,
                          "end_byte": 1009,
                          "text": "i < n",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1004,
                              "end_byte": 1005,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 1006,
                              "end_byte": 1007,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 1008,
                              "end_byte": 1009,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1010,
                          "end_byte": 1011,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 1012,
                          "end_byte": 1016,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1012,
                              "end_byte": 1013,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 1014,
                              "end_byte": 1016,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 1017,
                          "end_byte": 1018,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 1019,
                          "end_byte": 1048,
                          "text": "scanf ( \"%ld\" , & a [ i ] ) ;",
                          "children": [
                            {
                              "type": "call_expression",
                              "start_byte": 1019,
                              "end_byte": 1046,
                              "text": "scanf ( \"%ld\" , & a [ i ] )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 1019,
                                  "end_byte": 1024,
                                  "text": "scanf",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 1025,
                                  "end_byte": 1046,
                                  "text": "( \"%ld\" , & a [ i ] )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 1025,
                                      "end_byte": 1026,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "string_literal",
                                      "start_byte": 1027,
                                      "end_byte": 1032,
                                      "text": "\"%ld\"",
                                      "children": [
                                        {
                                          "type": "\"",
                                          "start_byte": 1027,
                                          "end_byte": 1028,
                                          "text": "\"",
                                          "children": []
                                        },
                                        {
                                          "type": "string_content",
                                          "start_byte": 1028,
                                          "end_byte": 1031,
                                          "text": "%ld",
                                          "children": []
                                        },
                                        {
                                          "type": "\"",
                                          "start_byte": 1031,
                                          "end_byte": 1032,
                                          "text": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 1033,
                                      "end_byte": 1034,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "pointer_expression",
                                      "start_byte": 1035,
                                      "end_byte": 1044,
                                      "text": "& a [ i ]",
                                      "children": [
                                        {
                                          "type": "&",
                                          "start_byte": 1035,
                                          "end_byte": 1036,
                                          "text": "&",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 1037,
                                          "end_byte": 1044,
                                          "text": "a [ i ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1037,
                                              "end_byte": 1038,
                                              "text": "a",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 1039,
                                              "end_byte": 1044,
                                              "text": "[ i ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 1039,
                                                  "end_byte": 1040,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1041,
                                                  "end_byte": 1042,
                                                  "text": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 1043,
                                                  "end_byte": 1044,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 1045,
                                      "end_byte": 1046,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 1047,
                              "end_byte": 1048,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 1049,
                      "end_byte": 1095,
                      "text": "for ( i = 0 ; i < n ; i ++ ) check [ i ] = 1 ;",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 1049,
                          "end_byte": 1052,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 1053,
                          "end_byte": 1054,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 1055,
                          "end_byte": 1060,
                          "text": "i = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1055,
                              "end_byte": 1056,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 1057,
                              "end_byte": 1058,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 1059,
                              "end_byte": 1060,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1061,
                          "end_byte": 1062,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 1063,
                          "end_byte": 1068,
                          "text": "i < n",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1063,
                              "end_byte": 1064,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 1065,
                              "end_byte": 1066,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 1067,
                              "end_byte": 1068,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1069,
                          "end_byte": 1070,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 1071,
                          "end_byte": 1075,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1071,
                              "end_byte": 1072,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 1073,
                              "end_byte": 1075,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 1076,
                          "end_byte": 1077,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 1078,
                          "end_byte": 1095,
                          "text": "check [ i ] = 1 ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 1078,
                              "end_byte": 1093,
                              "text": "check [ i ] = 1",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 1078,
                                  "end_byte": 1089,
                                  "text": "check [ i ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1078,
                                      "end_byte": 1083,
                                      "text": "check",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 1084,
                                      "end_byte": 1089,
                                      "text": "[ i ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 1084,
                                          "end_byte": 1085,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 1086,
                                          "end_byte": 1087,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 1088,
                                          "end_byte": 1089,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "=",
                                  "start_byte": 1090,
                                  "end_byte": 1091,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 1092,
                                  "end_byte": 1093,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 1094,
                              "end_byte": 1095,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1096,
                      "end_byte": 1105,
                      "text": "sum = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 1096,
                          "end_byte": 1103,
                          "text": "sum = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1096,
                              "end_byte": 1099,
                              "text": "sum",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 1100,
                              "end_byte": 1101,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 1102,
                              "end_byte": 1103,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1104,
                          "end_byte": 1105,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 1106,
                      "end_byte": 1173,
                      "text": "for ( i = 0 ; i < n ; i ++ ) { sum += findmax ( a , check , n ) ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 1106,
                          "end_byte": 1109,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 1110,
                          "end_byte": 1111,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 1112,
                          "end_byte": 1117,
                          "text": "i = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1112,
                              "end_byte": 1113,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 1114,
                              "end_byte": 1115,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 1116,
                              "end_byte": 1117,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1118,
                          "end_byte": 1119,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 1120,
                          "end_byte": 1125,
                          "text": "i < n",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1120,
                              "end_byte": 1121,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 1122,
                              "end_byte": 1123,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 1124,
                              "end_byte": 1125,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1126,
                          "end_byte": 1127,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 1128,
                          "end_byte": 1132,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1128,
                              "end_byte": 1129,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 1130,
                              "end_byte": 1132,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 1133,
                          "end_byte": 1134,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 1135,
                          "end_byte": 1173,
                          "text": "{ sum += findmax ( a , check , n ) ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 1135,
                              "end_byte": 1136,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1137,
                              "end_byte": 1171,
                              "text": "sum += findmax ( a , check , n ) ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1137,
                                  "end_byte": 1169,
                                  "text": "sum += findmax ( a , check , n )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1137,
                                      "end_byte": 1140,
                                      "text": "sum",
                                      "children": []
                                    },
                                    {
                                      "type": "+=",
                                      "start_byte": 1141,
                                      "end_byte": 1143,
                                      "text": "+=",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 1144,
                                      "end_byte": 1169,
                                      "text": "findmax ( a , check , n )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1144,
                                          "end_byte": 1151,
                                          "text": "findmax",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 1152,
                                          "end_byte": 1169,
                                          "text": "( a , check , n )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 1152,
                                              "end_byte": 1153,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 1154,
                                              "end_byte": 1155,
                                              "text": "a",
                                              "children": []
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 1156,
                                              "end_byte": 1157,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 1158,
                                              "end_byte": 1163,
                                              "text": "check",
                                              "children": []
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 1164,
                                              "end_byte": 1165,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 1166,
                                              "end_byte": 1167,
                                              "text": "n",
                                              "children": []
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 1168,
                                              "end_byte": 1169,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1170,
                                  "end_byte": 1171,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 1172,
                              "end_byte": 1173,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1174,
                      "end_byte": 1200,
                      "text": "printf ( \"%ld\\n\" , sum ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 1174,
                          "end_byte": 1198,
                          "text": "printf ( \"%ld\\n\" , sum )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1174,
                              "end_byte": 1180,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 1181,
                              "end_byte": 1198,
                              "text": "( \"%ld\\n\" , sum )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 1181,
                                  "end_byte": 1182,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 1183,
                                  "end_byte": 1190,
                                  "text": "\"%ld\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 1183,
                                      "end_byte": 1184,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 1184,
                                      "end_byte": 1187,
                                      "text": "%ld",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 1187,
                                      "end_byte": 1189,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 1189,
                                      "end_byte": 1190,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 1191,
                                  "end_byte": 1192,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 1193,
                                  "end_byte": 1196,
                                  "text": "sum",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1197,
                                  "end_byte": 1198,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1199,
                          "end_byte": 1200,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 1201,
                      "end_byte": 1202,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 1203,
              "end_byte": 1213,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 1203,
                  "end_byte": 1209,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 1210,
                  "end_byte": 1211,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 1212,
                  "end_byte": 1213,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 1214,
              "end_byte": 1215,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}