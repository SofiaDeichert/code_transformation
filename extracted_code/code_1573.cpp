int sums [ 4 ] [ 4 ] = { { 0 , 0 , 0 , 0 } , { 0 , 0 , 0 , 0 } , { 0 , 0 , 0 , 0 } , { 0 , 0 , 0 , 0 } } ; int findsum ( int * * a , int i , int j , int n ) { if ( sums [ i ] [ j ] > 0 ) return sums [ i ] [ j ] ; int sum1 = 0 , sum2 = 0 ; if ( i >= n - 2 || j > n - 2 ) { fflush ( stdin ) ; sum1 = a [ i ] [ j ] + a [ i + 1 ] [ j ] ; sum2 = a [ i ] [ j ] + a [ i + 1 ] [ j + 1 ] ; if ( sum1 >= sum2 ) { sums [ i ] [ j ] = sum1 ; return sum1 ; } sums [ i ] [ j ] = sum2 ; return sum2 ; } else { sum1 = a [ i ] [ j ] + findsum ( a , i + 1 , j , n ) ; sum2 = a [ i ] [ j ] + findsum ( a , i + 1 , j + 1 , n ) ; if ( sum1 >= sum2 ) { sums [ i ] [ j ] = sum1 ; return sum1 ; } sums [ i ] [ j ] = sum2 ; return sum2 ; } } int main ( ) { int t , n ; scanf ( "%d" , & t ) ; scanf ( "%d" , & n ) ; int * * a = malloc ( n * sizeof ( int * ) ) ; int i , j ; for ( i = 0 ; i < n ; i ++ ) { a [ i ] = malloc ( n * sizeof ( int ) ) ; for ( j = 0 ; j < 4 ; j ++ ) { scanf ( "%d" , & a [ i ] [ j ] ) ; } } for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j < n ; j ++ ) { printf ( "%d\t" , a [ i ] [ j ] ) ; } printf ( "\n" ) ; } printf ( "%d\n" , findsum ( a , 0 , 0 , n ) ) ; return 0 ; }