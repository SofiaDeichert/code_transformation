int greater ( int , int ) ; int main ( ) { int t ; scanf ( "%d" , & t ) ; int n ; int i , j , max ; while ( t -- ) { scanf ( "%d" , & n ) ; int A [ n ] [ n ] , B [ n ] [ n ] ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) scanf ( "%d" , & A [ i ] [ j ] ) ; } B [ 0 ] [ 0 ] = A [ 0 ] [ 0 ] ; for ( i = 1 ; i < n ; i ++ ) { B [ i ] [ 0 ] = A [ i ] [ 0 ] + B [ i - 1 ] [ 0 ] ; B [ i ] [ i ] = A [ i ] [ i ] + B [ i - 1 ] [ i - 1 ] ; } for ( i = 2 ; i < n ; i ++ ) { for ( j = 1 ; j < i ; j ++ ) { B [ i ] [ j ] = A [ i ] [ j ] + greater ( B [ i - 1 ] [ j ] , B [ i - 1 ] [ j - 1 ] ) ; } } max = 0 ; for ( i = 0 ; i < n ; i ++ ) { max = greater ( B [ n - 1 ] [ i ] , max ) ; } printf ( "\n%d" , max ) ; printf ( "\n" ) ; } return 0 ; } int greater ( int a , int b ) { if ( a > b ) return a ; return b ; }