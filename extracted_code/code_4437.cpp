void build_tringle ( ) ; int max ( int , int ) ; int a [ 100 ] [ 100 ] , b [ 100 ] [ 100 ] ; int main ( ) { int i , j , n , rows = 0 , sum = 0 ; scanf ( "%d" , & n ) ; while ( n != 0 ) { scanf ( "%d" , & rows ) ; for ( i = 0 ; i < rows ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & a [ i ] [ j ] ) ; } } build_tringle ( ) ; for ( i = 0 ; i < rows ; i ++ ) { if ( b [ rows - 1 ] [ i ] >= sum ) sum = b [ rows - 1 ] [ i ] ; } printf ( "%d\n" , sum ) ; n -- ; } return 0 ; } void build_tringle ( ) { int sum , max_sum ; sum = max_sum = 0 ; int i , j ; b [ 0 ] [ 0 ] = a [ 0 ] [ 0 ] ; for ( i = 1 ; i < 100 ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { if ( j == i ) { b [ i ] [ j ] = b [ i - 1 ] [ j - 1 ] + a [ i ] [ j ] ; } b [ i ] [ j ] = max ( b [ i - 1 ] [ j - 1 ] + a [ i ] [ j ] , b [ i - 1 ] [ j ] + a [ i ] [ j ] ) ; } } } int max ( int a , int b ) { if ( a >= b ) return a ; else return b ; }