{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 512,
  "text": "int * a ; int n , N ; int maxtraversalsum ( int i , int j ) { int sum = a [ i ] ; if ( j < n ) sum += MAX ( maxtraversalsum ( i + j , j + 1 ) , maxtraversalsum ( i + j + 1 , j + 1 ) ) ; return sum ; } int main ( void ) { int t , i ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d\" , & n ) ; a = ( int * ) malloc ( ( N = ( n * ( n + 1 ) ) / 2 + 1 ) * sizeof ( int ) ) ; a [ 0 ] = 0 ; for ( i = 1 ; i < N ; i ++ ) scanf ( \"%d\" , & ( a [ i ] ) ) ; printf ( \"%d\\n\" , maxtraversalsum ( 1 , 1 ) ) ; } return 0 ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 9,
      "text": "int * a ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "pointer_declarator",
          "start_byte": 4,
          "end_byte": 7,
          "text": "* a",
          "children": [
            {
              "type": "*",
              "start_byte": 4,
              "end_byte": 5,
              "text": "*",
              "children": []
            },
            {
              "type": "identifier",
              "start_byte": 6,
              "end_byte": 7,
              "text": "a",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 8,
          "end_byte": 9,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 10,
      "end_byte": 21,
      "text": "int n , N ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 10,
          "end_byte": 13,
          "text": "int",
          "children": []
        },
        {
          "type": "identifier",
          "start_byte": 14,
          "end_byte": 15,
          "text": "n",
          "children": []
        },
        {
          "type": ",",
          "start_byte": 16,
          "end_byte": 17,
          "text": ",",
          "children": []
        },
        {
          "type": "identifier",
          "start_byte": 18,
          "end_byte": 19,
          "text": "N",
          "children": []
        },
        {
          "type": ";",
          "start_byte": 20,
          "end_byte": 21,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 22,
      "end_byte": 200,
      "text": "int maxtraversalsum ( int i , int j ) { int sum = a [ i ] ; if ( j < n ) sum += MAX ( maxtraversalsum ( i + j , j + 1 ) , maxtraversalsum ( i + j + 1 , j + 1 ) ) ; return sum ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 22,
          "end_byte": 25,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 26,
          "end_byte": 59,
          "text": "maxtraversalsum ( int i , int j )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 26,
              "end_byte": 41,
              "text": "maxtraversalsum",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 42,
              "end_byte": 59,
              "text": "( int i , int j )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 42,
                  "end_byte": 43,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 44,
                  "end_byte": 49,
                  "text": "int i",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 44,
                      "end_byte": 47,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 48,
                      "end_byte": 49,
                      "text": "i",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 50,
                  "end_byte": 51,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 52,
                  "end_byte": 57,
                  "text": "int j",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 52,
                      "end_byte": 55,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 56,
                      "end_byte": 57,
                      "text": "j",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 58,
                  "end_byte": 59,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 60,
          "end_byte": 200,
          "text": "{ int sum = a [ i ] ; if ( j < n ) sum += MAX ( maxtraversalsum ( i + j , j + 1 ) , maxtraversalsum ( i + j + 1 , j + 1 ) ) ; return sum ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 60,
              "end_byte": 61,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 62,
              "end_byte": 81,
              "text": "int sum = a [ i ] ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 62,
                  "end_byte": 65,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 66,
                  "end_byte": 79,
                  "text": "sum = a [ i ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 66,
                      "end_byte": 69,
                      "text": "sum",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 70,
                      "end_byte": 71,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "subscript_expression",
                      "start_byte": 72,
                      "end_byte": 79,
                      "text": "a [ i ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 72,
                          "end_byte": 73,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": "subscript_argument_list",
                          "start_byte": 74,
                          "end_byte": 79,
                          "text": "[ i ]",
                          "children": [
                            {
                              "type": "[",
                              "start_byte": 74,
                              "end_byte": 75,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 76,
                              "end_byte": 77,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 78,
                              "end_byte": 79,
                              "text": "]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 80,
                  "end_byte": 81,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 82,
              "end_byte": 185,
              "text": "if ( j < n ) sum += MAX ( maxtraversalsum ( i + j , j + 1 ) , maxtraversalsum ( i + j + 1 , j + 1 ) ) ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 82,
                  "end_byte": 84,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 85,
                  "end_byte": 94,
                  "text": "( j < n )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 85,
                      "end_byte": 86,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 87,
                      "end_byte": 92,
                      "text": "j < n",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 87,
                          "end_byte": 88,
                          "text": "j",
                          "children": []
                        },
                        {
                          "type": "<",
                          "start_byte": 89,
                          "end_byte": 90,
                          "text": "<",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 91,
                          "end_byte": 92,
                          "text": "n",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 93,
                      "end_byte": 94,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "expression_statement",
                  "start_byte": 95,
                  "end_byte": 185,
                  "text": "sum += MAX ( maxtraversalsum ( i + j , j + 1 ) , maxtraversalsum ( i + j + 1 , j + 1 ) ) ;",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start_byte": 95,
                      "end_byte": 183,
                      "text": "sum += MAX ( maxtraversalsum ( i + j , j + 1 ) , maxtraversalsum ( i + j + 1 , j + 1 ) )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 95,
                          "end_byte": 98,
                          "text": "sum",
                          "children": []
                        },
                        {
                          "type": "+=",
                          "start_byte": 99,
                          "end_byte": 101,
                          "text": "+=",
                          "children": []
                        },
                        {
                          "type": "call_expression",
                          "start_byte": 102,
                          "end_byte": 183,
                          "text": "MAX ( maxtraversalsum ( i + j , j + 1 ) , maxtraversalsum ( i + j + 1 , j + 1 ) )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 102,
                              "end_byte": 105,
                              "text": "MAX",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 106,
                              "end_byte": 183,
                              "text": "( maxtraversalsum ( i + j , j + 1 ) , maxtraversalsum ( i + j + 1 , j + 1 ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 106,
                                  "end_byte": 107,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 108,
                                  "end_byte": 141,
                                  "text": "maxtraversalsum ( i + j , j + 1 )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 108,
                                      "end_byte": 123,
                                      "text": "maxtraversalsum",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 124,
                                      "end_byte": 141,
                                      "text": "( i + j , j + 1 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 124,
                                          "end_byte": 125,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 126,
                                          "end_byte": 131,
                                          "text": "i + j",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 126,
                                              "end_byte": 127,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 128,
                                              "end_byte": 129,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 130,
                                              "end_byte": 131,
                                              "text": "j",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 132,
                                          "end_byte": 133,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 134,
                                          "end_byte": 139,
                                          "text": "j + 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 134,
                                              "end_byte": 135,
                                              "text": "j",
                                              "children": []
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 136,
                                              "end_byte": 137,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 138,
                                              "end_byte": 139,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 140,
                                          "end_byte": 141,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 142,
                                  "end_byte": 143,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 144,
                                  "end_byte": 181,
                                  "text": "maxtraversalsum ( i + j + 1 , j + 1 )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 144,
                                      "end_byte": 159,
                                      "text": "maxtraversalsum",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 160,
                                      "end_byte": 181,
                                      "text": "( i + j + 1 , j + 1 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 160,
                                          "end_byte": 161,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 162,
                                          "end_byte": 171,
                                          "text": "i + j + 1",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 162,
                                              "end_byte": 167,
                                              "text": "i + j",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 162,
                                                  "end_byte": 163,
                                                  "text": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 164,
                                                  "end_byte": 165,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 166,
                                                  "end_byte": 167,
                                                  "text": "j",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 168,
                                              "end_byte": 169,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 170,
                                              "end_byte": 171,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 172,
                                          "end_byte": 173,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 174,
                                          "end_byte": 179,
                                          "text": "j + 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 174,
                                              "end_byte": 175,
                                              "text": "j",
                                              "children": []
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 176,
                                              "end_byte": 177,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 178,
                                              "end_byte": 179,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 180,
                                          "end_byte": 181,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 182,
                                  "end_byte": 183,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 184,
                      "end_byte": 185,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 186,
              "end_byte": 198,
              "text": "return sum ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 186,
                  "end_byte": 192,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 193,
                  "end_byte": 196,
                  "text": "sum",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 197,
                  "end_byte": 198,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 199,
              "end_byte": 200,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 201,
      "end_byte": 512,
      "text": "int main ( void ) { int t , i ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d\" , & n ) ; a = ( int * ) malloc ( ( N = ( n * ( n + 1 ) ) / 2 + 1 ) * sizeof ( int ) ) ; a [ 0 ] = 0 ; for ( i = 1 ; i < N ; i ++ ) scanf ( \"%d\" , & ( a [ i ] ) ) ; printf ( \"%d\\n\" , maxtraversalsum ( 1 , 1 ) ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 201,
          "end_byte": 204,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 205,
          "end_byte": 218,
          "text": "main ( void )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 205,
              "end_byte": 209,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 210,
              "end_byte": 218,
              "text": "( void )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 210,
                  "end_byte": 211,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 212,
                  "end_byte": 216,
                  "text": "void",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 212,
                      "end_byte": 216,
                      "text": "void",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 217,
                  "end_byte": 218,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 219,
          "end_byte": 512,
          "text": "{ int t , i ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d\" , & n ) ; a = ( int * ) malloc ( ( N = ( n * ( n + 1 ) ) / 2 + 1 ) * sizeof ( int ) ) ; a [ 0 ] = 0 ; for ( i = 1 ; i < N ; i ++ ) scanf ( \"%d\" , & ( a [ i ] ) ) ; printf ( \"%d\\n\" , maxtraversalsum ( 1 , 1 ) ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 219,
              "end_byte": 220,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 221,
              "end_byte": 232,
              "text": "int t , i ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 221,
                  "end_byte": 224,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 225,
                  "end_byte": 226,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 227,
                  "end_byte": 228,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 229,
                  "end_byte": 230,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 231,
                  "end_byte": 232,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 233,
              "end_byte": 255,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 233,
                  "end_byte": 253,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 233,
                      "end_byte": 238,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 239,
                      "end_byte": 253,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 239,
                          "end_byte": 240,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 241,
                          "end_byte": 245,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 241,
                              "end_byte": 242,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 242,
                              "end_byte": 244,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 244,
                              "end_byte": 245,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 246,
                          "end_byte": 247,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 248,
                          "end_byte": 251,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 248,
                              "end_byte": 249,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 250,
                              "end_byte": 251,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 252,
                          "end_byte": 253,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 254,
                  "end_byte": 255,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 256,
              "end_byte": 499,
              "text": "while ( t -- ) { scanf ( \"%d\" , & n ) ; a = ( int * ) malloc ( ( N = ( n * ( n + 1 ) ) / 2 + 1 ) * sizeof ( int ) ) ; a [ 0 ] = 0 ; for ( i = 1 ; i < N ; i ++ ) scanf ( \"%d\" , & ( a [ i ] ) ) ; printf ( \"%d\\n\" , maxtraversalsum ( 1 , 1 ) ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 256,
                  "end_byte": 261,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 262,
                  "end_byte": 270,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 262,
                      "end_byte": 263,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 264,
                      "end_byte": 268,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 264,
                          "end_byte": 265,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 266,
                          "end_byte": 268,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 269,
                      "end_byte": 270,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 271,
                  "end_byte": 499,
                  "text": "{ scanf ( \"%d\" , & n ) ; a = ( int * ) malloc ( ( N = ( n * ( n + 1 ) ) / 2 + 1 ) * sizeof ( int ) ) ; a [ 0 ] = 0 ; for ( i = 1 ; i < N ; i ++ ) scanf ( \"%d\" , & ( a [ i ] ) ) ; printf ( \"%d\\n\" , maxtraversalsum ( 1 , 1 ) ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 271,
                      "end_byte": 272,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 273,
                      "end_byte": 295,
                      "text": "scanf ( \"%d\" , & n ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 273,
                          "end_byte": 293,
                          "text": "scanf ( \"%d\" , & n )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 273,
                              "end_byte": 278,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 279,
                              "end_byte": 293,
                              "text": "( \"%d\" , & n )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 279,
                                  "end_byte": 280,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 281,
                                  "end_byte": 285,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 281,
                                      "end_byte": 282,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 282,
                                      "end_byte": 284,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 284,
                                      "end_byte": 285,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 286,
                                  "end_byte": 287,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 288,
                                  "end_byte": 291,
                                  "text": "& n",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 288,
                                      "end_byte": 289,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 290,
                                      "end_byte": 291,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 292,
                                  "end_byte": 293,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 294,
                          "end_byte": 295,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 296,
                      "end_byte": 373,
                      "text": "a = ( int * ) malloc ( ( N = ( n * ( n + 1 ) ) / 2 + 1 ) * sizeof ( int ) ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 296,
                          "end_byte": 371,
                          "text": "a = ( int * ) malloc ( ( N = ( n * ( n + 1 ) ) / 2 + 1 ) * sizeof ( int ) )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 296,
                              "end_byte": 297,
                              "text": "a",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 298,
                              "end_byte": 299,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "cast_expression",
                              "start_byte": 300,
                              "end_byte": 371,
                              "text": "( int * ) malloc ( ( N = ( n * ( n + 1 ) ) / 2 + 1 ) * sizeof ( int ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 300,
                                  "end_byte": 301,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "type_descriptor",
                                  "start_byte": 302,
                                  "end_byte": 307,
                                  "text": "int *",
                                  "children": [
                                    {
                                      "type": "primitive_type",
                                      "start_byte": 302,
                                      "end_byte": 305,
                                      "text": "int",
                                      "children": []
                                    },
                                    {
                                      "type": "abstract_pointer_declarator",
                                      "start_byte": 306,
                                      "end_byte": 307,
                                      "text": "*",
                                      "children": [
                                        {
                                          "type": "*",
                                          "start_byte": 306,
                                          "end_byte": 307,
                                          "text": "*",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 308,
                                  "end_byte": 309,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 310,
                                  "end_byte": 371,
                                  "text": "malloc ( ( N = ( n * ( n + 1 ) ) / 2 + 1 ) * sizeof ( int ) )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 310,
                                      "end_byte": 316,
                                      "text": "malloc",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 317,
                                      "end_byte": 371,
                                      "text": "( ( N = ( n * ( n + 1 ) ) / 2 + 1 ) * sizeof ( int ) )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 317,
                                          "end_byte": 318,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 319,
                                          "end_byte": 369,
                                          "text": "( N = ( n * ( n + 1 ) ) / 2 + 1 ) * sizeof ( int )",
                                          "children": [
                                            {
                                              "type": "parenthesized_expression",
                                              "start_byte": 319,
                                              "end_byte": 352,
                                              "text": "( N = ( n * ( n + 1 ) ) / 2 + 1 )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 319,
                                                  "end_byte": 320,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 321,
                                                  "end_byte": 350,
                                                  "text": "N = ( n * ( n + 1 ) ) / 2 + 1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 321,
                                                      "end_byte": 322,
                                                      "text": "N",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 323,
                                                      "end_byte": 324,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 325,
                                                      "end_byte": 350,
                                                      "text": "( n * ( n + 1 ) ) / 2 + 1",
                                                      "children": [
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 325,
                                                          "end_byte": 346,
                                                          "text": "( n * ( n + 1 ) ) / 2",
                                                          "children": [
                                                            {
                                                              "type": "parenthesized_expression",
                                                              "start_byte": 325,
                                                              "end_byte": 342,
                                                              "text": "( n * ( n + 1 ) )",
                                                              "children": [
                                                                {
                                                                  "type": "(",
                                                                  "start_byte": 325,
                                                                  "end_byte": 326,
                                                                  "text": "(",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "binary_expression",
                                                                  "start_byte": 327,
                                                                  "end_byte": 340,
                                                                  "text": "n * ( n + 1 )",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 327,
                                                                      "end_byte": 328,
                                                                      "text": "n",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "*",
                                                                      "start_byte": 329,
                                                                      "end_byte": 330,
                                                                      "text": "*",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "parenthesized_expression",
                                                                      "start_byte": 331,
                                                                      "end_byte": 340,
                                                                      "text": "( n + 1 )",
                                                                      "children": [
                                                                        {
                                                                          "type": "(",
                                                                          "start_byte": 331,
                                                                          "end_byte": 332,
                                                                          "text": "(",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "binary_expression",
                                                                          "start_byte": 333,
                                                                          "end_byte": 338,
                                                                          "text": "n + 1",
                                                                          "children": [
                                                                            {
                                                                              "type": "identifier",
                                                                              "start_byte": 333,
                                                                              "end_byte": 334,
                                                                              "text": "n",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "+",
                                                                              "start_byte": 335,
                                                                              "end_byte": 336,
                                                                              "text": "+",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "number_literal",
                                                                              "start_byte": 337,
                                                                              "end_byte": 338,
                                                                              "text": "1",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": ")",
                                                                          "start_byte": 339,
                                                                          "end_byte": 340,
                                                                          "text": ")",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": ")",
                                                                  "start_byte": 341,
                                                                  "end_byte": 342,
                                                                  "text": ")",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "/",
                                                              "start_byte": 343,
                                                              "end_byte": 344,
                                                              "text": "/",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "number_literal",
                                                              "start_byte": 345,
                                                              "end_byte": 346,
                                                              "text": "2",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "+",
                                                          "start_byte": 347,
                                                          "end_byte": 348,
                                                          "text": "+",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "number_literal",
                                                          "start_byte": 349,
                                                          "end_byte": 350,
                                                          "text": "1",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 351,
                                                  "end_byte": 352,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "*",
                                              "start_byte": 353,
                                              "end_byte": 354,
                                              "text": "*",
                                              "children": []
                                            },
                                            {
                                              "type": "sizeof_expression",
                                              "start_byte": 355,
                                              "end_byte": 369,
                                              "text": "sizeof ( int )",
                                              "children": [
                                                {
                                                  "type": "sizeof",
                                                  "start_byte": 355,
                                                  "end_byte": 361,
                                                  "text": "sizeof",
                                                  "children": []
                                                },
                                                {
                                                  "type": "(",
                                                  "start_byte": 362,
                                                  "end_byte": 363,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "type_descriptor",
                                                  "start_byte": 364,
                                                  "end_byte": 367,
                                                  "text": "int",
                                                  "children": [
                                                    {
                                                      "type": "primitive_type",
                                                      "start_byte": 364,
                                                      "end_byte": 367,
                                                      "text": "int",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 368,
                                                  "end_byte": 369,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 370,
                                          "end_byte": 371,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 372,
                          "end_byte": 373,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 374,
                      "end_byte": 387,
                      "text": "a [ 0 ] = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 374,
                          "end_byte": 385,
                          "text": "a [ 0 ] = 0",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 374,
                              "end_byte": 381,
                              "text": "a [ 0 ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 374,
                                  "end_byte": 375,
                                  "text": "a",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 376,
                                  "end_byte": 381,
                                  "text": "[ 0 ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 376,
                                      "end_byte": 377,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 378,
                                      "end_byte": 379,
                                      "text": "0",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 380,
                                      "end_byte": 381,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 382,
                              "end_byte": 383,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 384,
                              "end_byte": 385,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 386,
                          "end_byte": 387,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 388,
                      "end_byte": 449,
                      "text": "for ( i = 1 ; i < N ; i ++ ) scanf ( \"%d\" , & ( a [ i ] ) ) ;",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 388,
                          "end_byte": 391,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 392,
                          "end_byte": 393,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 394,
                          "end_byte": 399,
                          "text": "i = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 394,
                              "end_byte": 395,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 396,
                              "end_byte": 397,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 398,
                              "end_byte": 399,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 400,
                          "end_byte": 401,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 402,
                          "end_byte": 407,
                          "text": "i < N",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 402,
                              "end_byte": 403,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 404,
                              "end_byte": 405,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 406,
                              "end_byte": 407,
                              "text": "N",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 408,
                          "end_byte": 409,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 410,
                          "end_byte": 414,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 410,
                              "end_byte": 411,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 412,
                              "end_byte": 414,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 415,
                          "end_byte": 416,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 417,
                          "end_byte": 449,
                          "text": "scanf ( \"%d\" , & ( a [ i ] ) ) ;",
                          "children": [
                            {
                              "type": "call_expression",
                              "start_byte": 417,
                              "end_byte": 447,
                              "text": "scanf ( \"%d\" , & ( a [ i ] ) )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 417,
                                  "end_byte": 422,
                                  "text": "scanf",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 423,
                                  "end_byte": 447,
                                  "text": "( \"%d\" , & ( a [ i ] ) )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 423,
                                      "end_byte": 424,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "string_literal",
                                      "start_byte": 425,
                                      "end_byte": 429,
                                      "text": "\"%d\"",
                                      "children": [
                                        {
                                          "type": "\"",
                                          "start_byte": 425,
                                          "end_byte": 426,
                                          "text": "\"",
                                          "children": []
                                        },
                                        {
                                          "type": "string_content",
                                          "start_byte": 426,
                                          "end_byte": 428,
                                          "text": "%d",
                                          "children": []
                                        },
                                        {
                                          "type": "\"",
                                          "start_byte": 428,
                                          "end_byte": 429,
                                          "text": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 430,
                                      "end_byte": 431,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "pointer_expression",
                                      "start_byte": 432,
                                      "end_byte": 445,
                                      "text": "& ( a [ i ] )",
                                      "children": [
                                        {
                                          "type": "&",
                                          "start_byte": 432,
                                          "end_byte": 433,
                                          "text": "&",
                                          "children": []
                                        },
                                        {
                                          "type": "parenthesized_expression",
                                          "start_byte": 434,
                                          "end_byte": 445,
                                          "text": "( a [ i ] )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 434,
                                              "end_byte": 435,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 436,
                                              "end_byte": 443,
                                              "text": "a [ i ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 436,
                                                  "end_byte": 437,
                                                  "text": "a",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 438,
                                                  "end_byte": 443,
                                                  "text": "[ i ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 438,
                                                      "end_byte": 439,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 440,
                                                      "end_byte": 441,
                                                      "text": "i",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 442,
                                                      "end_byte": 443,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 444,
                                              "end_byte": 445,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 446,
                                      "end_byte": 447,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 448,
                              "end_byte": 449,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 450,
                      "end_byte": 497,
                      "text": "printf ( \"%d\\n\" , maxtraversalsum ( 1 , 1 ) ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 450,
                          "end_byte": 495,
                          "text": "printf ( \"%d\\n\" , maxtraversalsum ( 1 , 1 ) )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 450,
                              "end_byte": 456,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 457,
                              "end_byte": 495,
                              "text": "( \"%d\\n\" , maxtraversalsum ( 1 , 1 ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 457,
                                  "end_byte": 458,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 459,
                                  "end_byte": 465,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 459,
                                      "end_byte": 460,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 460,
                                      "end_byte": 462,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 462,
                                      "end_byte": 464,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 464,
                                      "end_byte": 465,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 466,
                                  "end_byte": 467,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 468,
                                  "end_byte": 493,
                                  "text": "maxtraversalsum ( 1 , 1 )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 468,
                                      "end_byte": 483,
                                      "text": "maxtraversalsum",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 484,
                                      "end_byte": 493,
                                      "text": "( 1 , 1 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 484,
                                          "end_byte": 485,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 486,
                                          "end_byte": 487,
                                          "text": "1",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 488,
                                          "end_byte": 489,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 490,
                                          "end_byte": 491,
                                          "text": "1",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 492,
                                          "end_byte": 493,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 494,
                                  "end_byte": 495,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 496,
                          "end_byte": 497,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 498,
                      "end_byte": 499,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 500,
              "end_byte": 510,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 500,
                  "end_byte": 506,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 507,
                  "end_byte": 508,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 509,
                  "end_byte": 510,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 511,
              "end_byte": 512,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}