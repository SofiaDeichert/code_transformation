{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 1072,
  "text": "unsigned long compute ( unsigned long count ) ; unsigned long C ( unsigned long n , unsigned long r ) ; int main ( ) { int m , t ; scanf ( \"%d\\n\" , & t ) ; char * Number = NULL ; unsigned long ch = EOF ; Number = ( char * ) malloc ( sizeof ( char ) ) ; unsigned long count = 0 ; unsigned long answer = 0 ; for ( m = 0 ; m < t ; m ++ ) { count = 0 ; answer = 0 ; ch = EOF ; while ( 1 ) { ch = getc ( stdin ) ; if ( ch != '\\n' ) { if ( ch != 32 ) { if ( ( ch - 48 ) > atoi ( Number ) ) { Number [ 0 ] = ch ; count ++ ; } else { answer += compute ( count ) ; Number [ 0 ] = ch ; count = 1 ; } } } else { answer += compute ( count ) ; Number [ 0 ] = 0 ; break ; } } printf ( \"%lu\\n\" , answer ) ; } return 0 ; } unsigned long compute ( unsigned long count ) { unsigned long i , total = 0 ; for ( i = 1 ; i <= count ; i ++ ) { total += C ( count , i ) ; } return total ; } unsigned long C ( unsigned long n , unsigned long r ) { if ( r > n / 2 ) r = n - r ; unsigned long ans = 1 ; unsigned long i ; for ( i = 1 ; i <= r ; i ++ ) { ans *= n - r + i ; ans /= i ; } return ans ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 47,
      "text": "unsigned long compute ( unsigned long count ) ;",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 0,
          "end_byte": 13,
          "text": "unsigned long",
          "children": [
            {
              "type": "unsigned",
              "start_byte": 0,
              "end_byte": 8,
              "text": "unsigned",
              "children": []
            },
            {
              "type": "long",
              "start_byte": 9,
              "end_byte": 13,
              "text": "long",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 14,
          "end_byte": 45,
          "text": "compute ( unsigned long count )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 14,
              "end_byte": 21,
              "text": "compute",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 22,
              "end_byte": 45,
              "text": "( unsigned long count )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 22,
                  "end_byte": 23,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 24,
                  "end_byte": 43,
                  "text": "unsigned long count",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 24,
                      "end_byte": 37,
                      "text": "unsigned long",
                      "children": [
                        {
                          "type": "unsigned",
                          "start_byte": 24,
                          "end_byte": 32,
                          "text": "unsigned",
                          "children": []
                        },
                        {
                          "type": "long",
                          "start_byte": 33,
                          "end_byte": 37,
                          "text": "long",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 38,
                      "end_byte": 43,
                      "text": "count",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 44,
                  "end_byte": 45,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 46,
          "end_byte": 47,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 48,
      "end_byte": 103,
      "text": "unsigned long C ( unsigned long n , unsigned long r ) ;",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 48,
          "end_byte": 61,
          "text": "unsigned long",
          "children": [
            {
              "type": "unsigned",
              "start_byte": 48,
              "end_byte": 56,
              "text": "unsigned",
              "children": []
            },
            {
              "type": "long",
              "start_byte": 57,
              "end_byte": 61,
              "text": "long",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 62,
          "end_byte": 101,
          "text": "C ( unsigned long n , unsigned long r )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 62,
              "end_byte": 63,
              "text": "C",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 64,
              "end_byte": 101,
              "text": "( unsigned long n , unsigned long r )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 64,
                  "end_byte": 65,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 66,
                  "end_byte": 81,
                  "text": "unsigned long n",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 66,
                      "end_byte": 79,
                      "text": "unsigned long",
                      "children": [
                        {
                          "type": "unsigned",
                          "start_byte": 66,
                          "end_byte": 74,
                          "text": "unsigned",
                          "children": []
                        },
                        {
                          "type": "long",
                          "start_byte": 75,
                          "end_byte": 79,
                          "text": "long",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 80,
                      "end_byte": 81,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 82,
                  "end_byte": 83,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 84,
                  "end_byte": 99,
                  "text": "unsigned long r",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 84,
                      "end_byte": 97,
                      "text": "unsigned long",
                      "children": [
                        {
                          "type": "unsigned",
                          "start_byte": 84,
                          "end_byte": 92,
                          "text": "unsigned",
                          "children": []
                        },
                        {
                          "type": "long",
                          "start_byte": 93,
                          "end_byte": 97,
                          "text": "long",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 98,
                      "end_byte": 99,
                      "text": "r",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 100,
                  "end_byte": 101,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 102,
          "end_byte": 103,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 104,
      "end_byte": 706,
      "text": "int main ( ) { int m , t ; scanf ( \"%d\\n\" , & t ) ; char * Number = NULL ; unsigned long ch = EOF ; Number = ( char * ) malloc ( sizeof ( char ) ) ; unsigned long count = 0 ; unsigned long answer = 0 ; for ( m = 0 ; m < t ; m ++ ) { count = 0 ; answer = 0 ; ch = EOF ; while ( 1 ) { ch = getc ( stdin ) ; if ( ch != '\\n' ) { if ( ch != 32 ) { if ( ( ch - 48 ) > atoi ( Number ) ) { Number [ 0 ] = ch ; count ++ ; } else { answer += compute ( count ) ; Number [ 0 ] = ch ; count = 1 ; } } } else { answer += compute ( count ) ; Number [ 0 ] = 0 ; break ; } } printf ( \"%lu\\n\" , answer ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 104,
          "end_byte": 107,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 108,
          "end_byte": 116,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 108,
              "end_byte": 112,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 113,
              "end_byte": 116,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 113,
                  "end_byte": 114,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 115,
                  "end_byte": 116,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 117,
          "end_byte": 706,
          "text": "{ int m , t ; scanf ( \"%d\\n\" , & t ) ; char * Number = NULL ; unsigned long ch = EOF ; Number = ( char * ) malloc ( sizeof ( char ) ) ; unsigned long count = 0 ; unsigned long answer = 0 ; for ( m = 0 ; m < t ; m ++ ) { count = 0 ; answer = 0 ; ch = EOF ; while ( 1 ) { ch = getc ( stdin ) ; if ( ch != '\\n' ) { if ( ch != 32 ) { if ( ( ch - 48 ) > atoi ( Number ) ) { Number [ 0 ] = ch ; count ++ ; } else { answer += compute ( count ) ; Number [ 0 ] = ch ; count = 1 ; } } } else { answer += compute ( count ) ; Number [ 0 ] = 0 ; break ; } } printf ( \"%lu\\n\" , answer ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 117,
              "end_byte": 118,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 119,
              "end_byte": 130,
              "text": "int m , t ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 119,
                  "end_byte": 122,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 123,
                  "end_byte": 124,
                  "text": "m",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 125,
                  "end_byte": 126,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 127,
                  "end_byte": 128,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 129,
                  "end_byte": 130,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 131,
              "end_byte": 155,
              "text": "scanf ( \"%d\\n\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 131,
                  "end_byte": 153,
                  "text": "scanf ( \"%d\\n\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 131,
                      "end_byte": 136,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 137,
                      "end_byte": 153,
                      "text": "( \"%d\\n\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 137,
                          "end_byte": 138,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 139,
                          "end_byte": 145,
                          "text": "\"%d\\n\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 139,
                              "end_byte": 140,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 140,
                              "end_byte": 142,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 142,
                              "end_byte": 144,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 144,
                              "end_byte": 145,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 146,
                          "end_byte": 147,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 148,
                          "end_byte": 151,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 148,
                              "end_byte": 149,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 150,
                              "end_byte": 151,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 152,
                          "end_byte": 153,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 154,
                  "end_byte": 155,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 156,
              "end_byte": 178,
              "text": "char * Number = NULL ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 156,
                  "end_byte": 160,
                  "text": "char",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 161,
                  "end_byte": 176,
                  "text": "* Number = NULL",
                  "children": [
                    {
                      "type": "pointer_declarator",
                      "start_byte": 161,
                      "end_byte": 169,
                      "text": "* Number",
                      "children": [
                        {
                          "type": "*",
                          "start_byte": 161,
                          "end_byte": 162,
                          "text": "*",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 163,
                          "end_byte": 169,
                          "text": "Number",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start_byte": 170,
                      "end_byte": 171,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "null",
                      "start_byte": 172,
                      "end_byte": 176,
                      "text": "NULL",
                      "children": [
                        {
                          "type": "NULL",
                          "start_byte": 172,
                          "end_byte": 176,
                          "text": "NULL",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 177,
                  "end_byte": 178,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 179,
              "end_byte": 203,
              "text": "unsigned long ch = EOF ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 179,
                  "end_byte": 192,
                  "text": "unsigned long",
                  "children": [
                    {
                      "type": "unsigned",
                      "start_byte": 179,
                      "end_byte": 187,
                      "text": "unsigned",
                      "children": []
                    },
                    {
                      "type": "long",
                      "start_byte": 188,
                      "end_byte": 192,
                      "text": "long",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "init_declarator",
                  "start_byte": 193,
                  "end_byte": 201,
                  "text": "ch = EOF",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 193,
                      "end_byte": 195,
                      "text": "ch",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 196,
                      "end_byte": 197,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 198,
                      "end_byte": 201,
                      "text": "EOF",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 202,
                  "end_byte": 203,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 204,
              "end_byte": 252,
              "text": "Number = ( char * ) malloc ( sizeof ( char ) ) ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 204,
                  "end_byte": 250,
                  "text": "Number = ( char * ) malloc ( sizeof ( char ) )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 204,
                      "end_byte": 210,
                      "text": "Number",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 211,
                      "end_byte": 212,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "cast_expression",
                      "start_byte": 213,
                      "end_byte": 250,
                      "text": "( char * ) malloc ( sizeof ( char ) )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 213,
                          "end_byte": 214,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "type_descriptor",
                          "start_byte": 215,
                          "end_byte": 221,
                          "text": "char *",
                          "children": [
                            {
                              "type": "primitive_type",
                              "start_byte": 215,
                              "end_byte": 219,
                              "text": "char",
                              "children": []
                            },
                            {
                              "type": "abstract_pointer_declarator",
                              "start_byte": 220,
                              "end_byte": 221,
                              "text": "*",
                              "children": [
                                {
                                  "type": "*",
                                  "start_byte": 220,
                                  "end_byte": 221,
                                  "text": "*",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 222,
                          "end_byte": 223,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "call_expression",
                          "start_byte": 224,
                          "end_byte": 250,
                          "text": "malloc ( sizeof ( char ) )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 224,
                              "end_byte": 230,
                              "text": "malloc",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 231,
                              "end_byte": 250,
                              "text": "( sizeof ( char ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 231,
                                  "end_byte": 232,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "sizeof_expression",
                                  "start_byte": 233,
                                  "end_byte": 248,
                                  "text": "sizeof ( char )",
                                  "children": [
                                    {
                                      "type": "sizeof",
                                      "start_byte": 233,
                                      "end_byte": 239,
                                      "text": "sizeof",
                                      "children": []
                                    },
                                    {
                                      "type": "(",
                                      "start_byte": 240,
                                      "end_byte": 241,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "type_descriptor",
                                      "start_byte": 242,
                                      "end_byte": 246,
                                      "text": "char",
                                      "children": [
                                        {
                                          "type": "primitive_type",
                                          "start_byte": 242,
                                          "end_byte": 246,
                                          "text": "char",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 247,
                                      "end_byte": 248,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 249,
                                  "end_byte": 250,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 251,
                  "end_byte": 252,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 253,
              "end_byte": 278,
              "text": "unsigned long count = 0 ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 253,
                  "end_byte": 266,
                  "text": "unsigned long",
                  "children": [
                    {
                      "type": "unsigned",
                      "start_byte": 253,
                      "end_byte": 261,
                      "text": "unsigned",
                      "children": []
                    },
                    {
                      "type": "long",
                      "start_byte": 262,
                      "end_byte": 266,
                      "text": "long",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "init_declarator",
                  "start_byte": 267,
                  "end_byte": 276,
                  "text": "count = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 267,
                      "end_byte": 272,
                      "text": "count",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 273,
                      "end_byte": 274,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 275,
                      "end_byte": 276,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 277,
                  "end_byte": 278,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 279,
              "end_byte": 305,
              "text": "unsigned long answer = 0 ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 279,
                  "end_byte": 292,
                  "text": "unsigned long",
                  "children": [
                    {
                      "type": "unsigned",
                      "start_byte": 279,
                      "end_byte": 287,
                      "text": "unsigned",
                      "children": []
                    },
                    {
                      "type": "long",
                      "start_byte": 288,
                      "end_byte": 292,
                      "text": "long",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "init_declarator",
                  "start_byte": 293,
                  "end_byte": 303,
                  "text": "answer = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 293,
                      "end_byte": 299,
                      "text": "answer",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 300,
                      "end_byte": 301,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 302,
                      "end_byte": 303,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 304,
                  "end_byte": 305,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 306,
              "end_byte": 693,
              "text": "for ( m = 0 ; m < t ; m ++ ) { count = 0 ; answer = 0 ; ch = EOF ; while ( 1 ) { ch = getc ( stdin ) ; if ( ch != '\\n' ) { if ( ch != 32 ) { if ( ( ch - 48 ) > atoi ( Number ) ) { Number [ 0 ] = ch ; count ++ ; } else { answer += compute ( count ) ; Number [ 0 ] = ch ; count = 1 ; } } } else { answer += compute ( count ) ; Number [ 0 ] = 0 ; break ; } } printf ( \"%lu\\n\" , answer ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 306,
                  "end_byte": 309,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 310,
                  "end_byte": 311,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 312,
                  "end_byte": 317,
                  "text": "m = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 312,
                      "end_byte": 313,
                      "text": "m",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 314,
                      "end_byte": 315,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 316,
                      "end_byte": 317,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 318,
                  "end_byte": 319,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 320,
                  "end_byte": 325,
                  "text": "m < t",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 320,
                      "end_byte": 321,
                      "text": "m",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 322,
                      "end_byte": 323,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 324,
                      "end_byte": 325,
                      "text": "t",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 326,
                  "end_byte": 327,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 328,
                  "end_byte": 332,
                  "text": "m ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 328,
                      "end_byte": 329,
                      "text": "m",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 330,
                      "end_byte": 332,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 333,
                  "end_byte": 334,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 335,
                  "end_byte": 693,
                  "text": "{ count = 0 ; answer = 0 ; ch = EOF ; while ( 1 ) { ch = getc ( stdin ) ; if ( ch != '\\n' ) { if ( ch != 32 ) { if ( ( ch - 48 ) > atoi ( Number ) ) { Number [ 0 ] = ch ; count ++ ; } else { answer += compute ( count ) ; Number [ 0 ] = ch ; count = 1 ; } } } else { answer += compute ( count ) ; Number [ 0 ] = 0 ; break ; } } printf ( \"%lu\\n\" , answer ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 335,
                      "end_byte": 336,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 337,
                      "end_byte": 348,
                      "text": "count = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 337,
                          "end_byte": 346,
                          "text": "count = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 337,
                              "end_byte": 342,
                              "text": "count",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 343,
                              "end_byte": 344,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 345,
                              "end_byte": 346,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 347,
                          "end_byte": 348,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 349,
                      "end_byte": 361,
                      "text": "answer = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 349,
                          "end_byte": 359,
                          "text": "answer = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 349,
                              "end_byte": 355,
                              "text": "answer",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 356,
                              "end_byte": 357,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 358,
                              "end_byte": 359,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 360,
                          "end_byte": 361,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 362,
                      "end_byte": 372,
                      "text": "ch = EOF ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 362,
                          "end_byte": 370,
                          "text": "ch = EOF",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 362,
                              "end_byte": 364,
                              "text": "ch",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 365,
                              "end_byte": 366,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 367,
                              "end_byte": 370,
                              "text": "EOF",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 371,
                          "end_byte": 372,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 373,
                      "end_byte": 661,
                      "text": "while ( 1 ) { ch = getc ( stdin ) ; if ( ch != '\\n' ) { if ( ch != 32 ) { if ( ( ch - 48 ) > atoi ( Number ) ) { Number [ 0 ] = ch ; count ++ ; } else { answer += compute ( count ) ; Number [ 0 ] = ch ; count = 1 ; } } } else { answer += compute ( count ) ; Number [ 0 ] = 0 ; break ; } }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 373,
                          "end_byte": 378,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 379,
                          "end_byte": 384,
                          "text": "( 1 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 379,
                              "end_byte": 380,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 381,
                              "end_byte": 382,
                              "text": "1",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 383,
                              "end_byte": 384,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 385,
                          "end_byte": 661,
                          "text": "{ ch = getc ( stdin ) ; if ( ch != '\\n' ) { if ( ch != 32 ) { if ( ( ch - 48 ) > atoi ( Number ) ) { Number [ 0 ] = ch ; count ++ ; } else { answer += compute ( count ) ; Number [ 0 ] = ch ; count = 1 ; } } } else { answer += compute ( count ) ; Number [ 0 ] = 0 ; break ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 385,
                              "end_byte": 386,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 387,
                              "end_byte": 408,
                              "text": "ch = getc ( stdin ) ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 387,
                                  "end_byte": 406,
                                  "text": "ch = getc ( stdin )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 387,
                                      "end_byte": 389,
                                      "text": "ch",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 390,
                                      "end_byte": 391,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 392,
                                      "end_byte": 406,
                                      "text": "getc ( stdin )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 392,
                                          "end_byte": 396,
                                          "text": "getc",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 397,
                                          "end_byte": 406,
                                          "text": "( stdin )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 397,
                                              "end_byte": 398,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 399,
                                              "end_byte": 404,
                                              "text": "stdin",
                                              "children": []
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 405,
                                              "end_byte": 406,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 407,
                                  "end_byte": 408,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 409,
                              "end_byte": 659,
                              "text": "if ( ch != '\\n' ) { if ( ch != 32 ) { if ( ( ch - 48 ) > atoi ( Number ) ) { Number [ 0 ] = ch ; count ++ ; } else { answer += compute ( count ) ; Number [ 0 ] = ch ; count = 1 ; } } } else { answer += compute ( count ) ; Number [ 0 ] = 0 ; break ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 409,
                                  "end_byte": 411,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 412,
                                  "end_byte": 426,
                                  "text": "( ch != '\\n' )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 412,
                                      "end_byte": 413,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 414,
                                      "end_byte": 424,
                                      "text": "ch != '\\n'",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 414,
                                          "end_byte": 416,
                                          "text": "ch",
                                          "children": []
                                        },
                                        {
                                          "type": "!=",
                                          "start_byte": 417,
                                          "end_byte": 419,
                                          "text": "!=",
                                          "children": []
                                        },
                                        {
                                          "type": "char_literal",
                                          "start_byte": 420,
                                          "end_byte": 424,
                                          "text": "'\\n'",
                                          "children": [
                                            {
                                              "type": "'",
                                              "start_byte": 420,
                                              "end_byte": 421,
                                              "text": "'",
                                              "children": []
                                            },
                                            {
                                              "type": "escape_sequence",
                                              "start_byte": 421,
                                              "end_byte": 423,
                                              "text": "\\n",
                                              "children": []
                                            },
                                            {
                                              "type": "'",
                                              "start_byte": 423,
                                              "end_byte": 424,
                                              "text": "'",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 425,
                                      "end_byte": 426,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 427,
                                  "end_byte": 593,
                                  "text": "{ if ( ch != 32 ) { if ( ( ch - 48 ) > atoi ( Number ) ) { Number [ 0 ] = ch ; count ++ ; } else { answer += compute ( count ) ; Number [ 0 ] = ch ; count = 1 ; } } }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 427,
                                      "end_byte": 428,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 429,
                                      "end_byte": 591,
                                      "text": "if ( ch != 32 ) { if ( ( ch - 48 ) > atoi ( Number ) ) { Number [ 0 ] = ch ; count ++ ; } else { answer += compute ( count ) ; Number [ 0 ] = ch ; count = 1 ; } }",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 429,
                                          "end_byte": 431,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 432,
                                          "end_byte": 444,
                                          "text": "( ch != 32 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 432,
                                              "end_byte": 433,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 434,
                                              "end_byte": 442,
                                              "text": "ch != 32",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 434,
                                                  "end_byte": 436,
                                                  "text": "ch",
                                                  "children": []
                                                },
                                                {
                                                  "type": "!=",
                                                  "start_byte": 437,
                                                  "end_byte": 439,
                                                  "text": "!=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 440,
                                                  "end_byte": 442,
                                                  "text": "32",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 443,
                                              "end_byte": 444,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "compound_statement",
                                          "start_byte": 445,
                                          "end_byte": 591,
                                          "text": "{ if ( ( ch - 48 ) > atoi ( Number ) ) { Number [ 0 ] = ch ; count ++ ; } else { answer += compute ( count ) ; Number [ 0 ] = ch ; count = 1 ; } }",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start_byte": 445,
                                              "end_byte": 446,
                                              "text": "{",
                                              "children": []
                                            },
                                            {
                                              "type": "if_statement",
                                              "start_byte": 447,
                                              "end_byte": 589,
                                              "text": "if ( ( ch - 48 ) > atoi ( Number ) ) { Number [ 0 ] = ch ; count ++ ; } else { answer += compute ( count ) ; Number [ 0 ] = ch ; count = 1 ; }",
                                              "children": [
                                                {
                                                  "type": "if",
                                                  "start_byte": 447,
                                                  "end_byte": 449,
                                                  "text": "if",
                                                  "children": []
                                                },
                                                {
                                                  "type": "condition_clause",
                                                  "start_byte": 450,
                                                  "end_byte": 483,
                                                  "text": "( ( ch - 48 ) > atoi ( Number ) )",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start_byte": 450,
                                                      "end_byte": 451,
                                                      "text": "(",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 452,
                                                      "end_byte": 481,
                                                      "text": "( ch - 48 ) > atoi ( Number )",
                                                      "children": [
                                                        {
                                                          "type": "parenthesized_expression",
                                                          "start_byte": 452,
                                                          "end_byte": 463,
                                                          "text": "( ch - 48 )",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start_byte": 452,
                                                              "end_byte": 453,
                                                              "text": "(",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 454,
                                                              "end_byte": 461,
                                                              "text": "ch - 48",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 454,
                                                                  "end_byte": 456,
                                                                  "text": "ch",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "-",
                                                                  "start_byte": 457,
                                                                  "end_byte": 458,
                                                                  "text": "-",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "number_literal",
                                                                  "start_byte": 459,
                                                                  "end_byte": 461,
                                                                  "text": "48",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start_byte": 462,
                                                              "end_byte": 463,
                                                              "text": ")",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ">",
                                                          "start_byte": 464,
                                                          "end_byte": 465,
                                                          "text": ">",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "call_expression",
                                                          "start_byte": 466,
                                                          "end_byte": 481,
                                                          "text": "atoi ( Number )",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 466,
                                                              "end_byte": 470,
                                                              "text": "atoi",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "argument_list",
                                                              "start_byte": 471,
                                                              "end_byte": 481,
                                                              "text": "( Number )",
                                                              "children": [
                                                                {
                                                                  "type": "(",
                                                                  "start_byte": 471,
                                                                  "end_byte": 472,
                                                                  "text": "(",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 473,
                                                                  "end_byte": 479,
                                                                  "text": "Number",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": ")",
                                                                  "start_byte": 480,
                                                                  "end_byte": 481,
                                                                  "text": ")",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start_byte": 482,
                                                      "end_byte": 483,
                                                      "text": ")",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "compound_statement",
                                                  "start_byte": 484,
                                                  "end_byte": 518,
                                                  "text": "{ Number [ 0 ] = ch ; count ++ ; }",
                                                  "children": [
                                                    {
                                                      "type": "{",
                                                      "start_byte": 484,
                                                      "end_byte": 485,
                                                      "text": "{",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "expression_statement",
                                                      "start_byte": 486,
                                                      "end_byte": 505,
                                                      "text": "Number [ 0 ] = ch ;",
                                                      "children": [
                                                        {
                                                          "type": "assignment_expression",
                                                          "start_byte": 486,
                                                          "end_byte": 503,
                                                          "text": "Number [ 0 ] = ch",
                                                          "children": [
                                                            {
                                                              "type": "subscript_expression",
                                                              "start_byte": 486,
                                                              "end_byte": 498,
                                                              "text": "Number [ 0 ]",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 486,
                                                                  "end_byte": 492,
                                                                  "text": "Number",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "subscript_argument_list",
                                                                  "start_byte": 493,
                                                                  "end_byte": 498,
                                                                  "text": "[ 0 ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "[",
                                                                      "start_byte": 493,
                                                                      "end_byte": 494,
                                                                      "text": "[",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "number_literal",
                                                                      "start_byte": 495,
                                                                      "end_byte": 496,
                                                                      "text": "0",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "]",
                                                                      "start_byte": 497,
                                                                      "end_byte": 498,
                                                                      "text": "]",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "=",
                                                              "start_byte": 499,
                                                              "end_byte": 500,
                                                              "text": "=",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 501,
                                                              "end_byte": 503,
                                                              "text": "ch",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ";",
                                                          "start_byte": 504,
                                                          "end_byte": 505,
                                                          "text": ";",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "expression_statement",
                                                      "start_byte": 506,
                                                      "end_byte": 516,
                                                      "text": "count ++ ;",
                                                      "children": [
                                                        {
                                                          "type": "update_expression",
                                                          "start_byte": 506,
                                                          "end_byte": 514,
                                                          "text": "count ++",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 506,
                                                              "end_byte": 511,
                                                              "text": "count",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "++",
                                                              "start_byte": 512,
                                                              "end_byte": 514,
                                                              "text": "++",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ";",
                                                          "start_byte": 515,
                                                          "end_byte": 516,
                                                          "text": ";",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "}",
                                                      "start_byte": 517,
                                                      "end_byte": 518,
                                                      "text": "}",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "else_clause",
                                                  "start_byte": 519,
                                                  "end_byte": 589,
                                                  "text": "else { answer += compute ( count ) ; Number [ 0 ] = ch ; count = 1 ; }",
                                                  "children": [
                                                    {
                                                      "type": "else",
                                                      "start_byte": 519,
                                                      "end_byte": 523,
                                                      "text": "else",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "compound_statement",
                                                      "start_byte": 524,
                                                      "end_byte": 589,
                                                      "text": "{ answer += compute ( count ) ; Number [ 0 ] = ch ; count = 1 ; }",
                                                      "children": [
                                                        {
                                                          "type": "{",
                                                          "start_byte": 524,
                                                          "end_byte": 525,
                                                          "text": "{",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "expression_statement",
                                                          "start_byte": 526,
                                                          "end_byte": 555,
                                                          "text": "answer += compute ( count ) ;",
                                                          "children": [
                                                            {
                                                              "type": "assignment_expression",
                                                              "start_byte": 526,
                                                              "end_byte": 553,
                                                              "text": "answer += compute ( count )",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 526,
                                                                  "end_byte": 532,
                                                                  "text": "answer",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "+=",
                                                                  "start_byte": 533,
                                                                  "end_byte": 535,
                                                                  "text": "+=",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "call_expression",
                                                                  "start_byte": 536,
                                                                  "end_byte": 553,
                                                                  "text": "compute ( count )",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 536,
                                                                      "end_byte": 543,
                                                                      "text": "compute",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "argument_list",
                                                                      "start_byte": 544,
                                                                      "end_byte": 553,
                                                                      "text": "( count )",
                                                                      "children": [
                                                                        {
                                                                          "type": "(",
                                                                          "start_byte": 544,
                                                                          "end_byte": 545,
                                                                          "text": "(",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 546,
                                                                          "end_byte": 551,
                                                                          "text": "count",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": ")",
                                                                          "start_byte": 552,
                                                                          "end_byte": 553,
                                                                          "text": ")",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ";",
                                                              "start_byte": 554,
                                                              "end_byte": 555,
                                                              "text": ";",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "expression_statement",
                                                          "start_byte": 556,
                                                          "end_byte": 575,
                                                          "text": "Number [ 0 ] = ch ;",
                                                          "children": [
                                                            {
                                                              "type": "assignment_expression",
                                                              "start_byte": 556,
                                                              "end_byte": 573,
                                                              "text": "Number [ 0 ] = ch",
                                                              "children": [
                                                                {
                                                                  "type": "subscript_expression",
                                                                  "start_byte": 556,
                                                                  "end_byte": 568,
                                                                  "text": "Number [ 0 ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 556,
                                                                      "end_byte": 562,
                                                                      "text": "Number",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "subscript_argument_list",
                                                                      "start_byte": 563,
                                                                      "end_byte": 568,
                                                                      "text": "[ 0 ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "[",
                                                                          "start_byte": 563,
                                                                          "end_byte": 564,
                                                                          "text": "[",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "number_literal",
                                                                          "start_byte": 565,
                                                                          "end_byte": 566,
                                                                          "text": "0",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "]",
                                                                          "start_byte": 567,
                                                                          "end_byte": 568,
                                                                          "text": "]",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "=",
                                                                  "start_byte": 569,
                                                                  "end_byte": 570,
                                                                  "text": "=",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 571,
                                                                  "end_byte": 573,
                                                                  "text": "ch",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ";",
                                                              "start_byte": 574,
                                                              "end_byte": 575,
                                                              "text": ";",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "expression_statement",
                                                          "start_byte": 576,
                                                          "end_byte": 587,
                                                          "text": "count = 1 ;",
                                                          "children": [
                                                            {
                                                              "type": "assignment_expression",
                                                              "start_byte": 576,
                                                              "end_byte": 585,
                                                              "text": "count = 1",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 576,
                                                                  "end_byte": 581,
                                                                  "text": "count",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "=",
                                                                  "start_byte": 582,
                                                                  "end_byte": 583,
                                                                  "text": "=",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "number_literal",
                                                                  "start_byte": 584,
                                                                  "end_byte": 585,
                                                                  "text": "1",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ";",
                                                              "start_byte": 586,
                                                              "end_byte": 587,
                                                              "text": ";",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "}",
                                                          "start_byte": 588,
                                                          "end_byte": 589,
                                                          "text": "}",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start_byte": 590,
                                              "end_byte": 591,
                                              "text": "}",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 592,
                                      "end_byte": 593,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start_byte": 594,
                                  "end_byte": 659,
                                  "text": "else { answer += compute ( count ) ; Number [ 0 ] = 0 ; break ; }",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start_byte": 594,
                                      "end_byte": 598,
                                      "text": "else",
                                      "children": []
                                    },
                                    {
                                      "type": "compound_statement",
                                      "start_byte": 599,
                                      "end_byte": 659,
                                      "text": "{ answer += compute ( count ) ; Number [ 0 ] = 0 ; break ; }",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start_byte": 599,
                                          "end_byte": 600,
                                          "text": "{",
                                          "children": []
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 601,
                                          "end_byte": 630,
                                          "text": "answer += compute ( count ) ;",
                                          "children": [
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 601,
                                              "end_byte": 628,
                                              "text": "answer += compute ( count )",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 601,
                                                  "end_byte": 607,
                                                  "text": "answer",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+=",
                                                  "start_byte": 608,
                                                  "end_byte": 610,
                                                  "text": "+=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "call_expression",
                                                  "start_byte": 611,
                                                  "end_byte": 628,
                                                  "text": "compute ( count )",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 611,
                                                      "end_byte": 618,
                                                      "text": "compute",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "argument_list",
                                                      "start_byte": 619,
                                                      "end_byte": 628,
                                                      "text": "( count )",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start_byte": 619,
                                                          "end_byte": 620,
                                                          "text": "(",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 621,
                                                          "end_byte": 626,
                                                          "text": "count",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start_byte": 627,
                                                          "end_byte": 628,
                                                          "text": ")",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 629,
                                              "end_byte": 630,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 631,
                                          "end_byte": 649,
                                          "text": "Number [ 0 ] = 0 ;",
                                          "children": [
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 631,
                                              "end_byte": 647,
                                              "text": "Number [ 0 ] = 0",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 631,
                                                  "end_byte": 643,
                                                  "text": "Number [ 0 ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 631,
                                                      "end_byte": 637,
                                                      "text": "Number",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 638,
                                                      "end_byte": 643,
                                                      "text": "[ 0 ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 638,
                                                          "end_byte": 639,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "number_literal",
                                                          "start_byte": 640,
                                                          "end_byte": 641,
                                                          "text": "0",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 642,
                                                          "end_byte": 643,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "=",
                                                  "start_byte": 644,
                                                  "end_byte": 645,
                                                  "text": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 646,
                                                  "end_byte": 647,
                                                  "text": "0",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 648,
                                              "end_byte": 649,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "break_statement",
                                          "start_byte": 650,
                                          "end_byte": 657,
                                          "text": "break ;",
                                          "children": [
                                            {
                                              "type": "break",
                                              "start_byte": 650,
                                              "end_byte": 655,
                                              "text": "break",
                                              "children": []
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 656,
                                              "end_byte": 657,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start_byte": 658,
                                          "end_byte": 659,
                                          "text": "}",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 660,
                              "end_byte": 661,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 662,
                      "end_byte": 691,
                      "text": "printf ( \"%lu\\n\" , answer ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 662,
                          "end_byte": 689,
                          "text": "printf ( \"%lu\\n\" , answer )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 662,
                              "end_byte": 668,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 669,
                              "end_byte": 689,
                              "text": "( \"%lu\\n\" , answer )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 669,
                                  "end_byte": 670,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 671,
                                  "end_byte": 678,
                                  "text": "\"%lu\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 671,
                                      "end_byte": 672,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 672,
                                      "end_byte": 675,
                                      "text": "%lu",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 675,
                                      "end_byte": 677,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 677,
                                      "end_byte": 678,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 679,
                                  "end_byte": 680,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 681,
                                  "end_byte": 687,
                                  "text": "answer",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 688,
                                  "end_byte": 689,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 690,
                          "end_byte": 691,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 692,
                      "end_byte": 693,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 694,
              "end_byte": 704,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 694,
                  "end_byte": 700,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 701,
                  "end_byte": 702,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 703,
                  "end_byte": 704,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 705,
              "end_byte": 706,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 707,
      "end_byte": 866,
      "text": "unsigned long compute ( unsigned long count ) { unsigned long i , total = 0 ; for ( i = 1 ; i <= count ; i ++ ) { total += C ( count , i ) ; } return total ; }",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 707,
          "end_byte": 720,
          "text": "unsigned long",
          "children": [
            {
              "type": "unsigned",
              "start_byte": 707,
              "end_byte": 715,
              "text": "unsigned",
              "children": []
            },
            {
              "type": "long",
              "start_byte": 716,
              "end_byte": 720,
              "text": "long",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 721,
          "end_byte": 752,
          "text": "compute ( unsigned long count )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 721,
              "end_byte": 728,
              "text": "compute",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 729,
              "end_byte": 752,
              "text": "( unsigned long count )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 729,
                  "end_byte": 730,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 731,
                  "end_byte": 750,
                  "text": "unsigned long count",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 731,
                      "end_byte": 744,
                      "text": "unsigned long",
                      "children": [
                        {
                          "type": "unsigned",
                          "start_byte": 731,
                          "end_byte": 739,
                          "text": "unsigned",
                          "children": []
                        },
                        {
                          "type": "long",
                          "start_byte": 740,
                          "end_byte": 744,
                          "text": "long",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 745,
                      "end_byte": 750,
                      "text": "count",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 751,
                  "end_byte": 752,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 753,
          "end_byte": 866,
          "text": "{ unsigned long i , total = 0 ; for ( i = 1 ; i <= count ; i ++ ) { total += C ( count , i ) ; } return total ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 753,
              "end_byte": 754,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 755,
              "end_byte": 784,
              "text": "unsigned long i , total = 0 ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 755,
                  "end_byte": 768,
                  "text": "unsigned long",
                  "children": [
                    {
                      "type": "unsigned",
                      "start_byte": 755,
                      "end_byte": 763,
                      "text": "unsigned",
                      "children": []
                    },
                    {
                      "type": "long",
                      "start_byte": 764,
                      "end_byte": 768,
                      "text": "long",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 769,
                  "end_byte": 770,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 771,
                  "end_byte": 772,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 773,
                  "end_byte": 782,
                  "text": "total = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 773,
                      "end_byte": 778,
                      "text": "total",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 779,
                      "end_byte": 780,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 781,
                      "end_byte": 782,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 783,
                  "end_byte": 784,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 785,
              "end_byte": 849,
              "text": "for ( i = 1 ; i <= count ; i ++ ) { total += C ( count , i ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 785,
                  "end_byte": 788,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 789,
                  "end_byte": 790,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 791,
                  "end_byte": 796,
                  "text": "i = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 791,
                      "end_byte": 792,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 793,
                      "end_byte": 794,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 795,
                      "end_byte": 796,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 797,
                  "end_byte": 798,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 799,
                  "end_byte": 809,
                  "text": "i <= count",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 799,
                      "end_byte": 800,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<=",
                      "start_byte": 801,
                      "end_byte": 803,
                      "text": "<=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 804,
                      "end_byte": 809,
                      "text": "count",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 810,
                  "end_byte": 811,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 812,
                  "end_byte": 816,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 812,
                      "end_byte": 813,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 814,
                      "end_byte": 816,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 817,
                  "end_byte": 818,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 819,
                  "end_byte": 849,
                  "text": "{ total += C ( count , i ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 819,
                      "end_byte": 820,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 821,
                      "end_byte": 847,
                      "text": "total += C ( count , i ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 821,
                          "end_byte": 845,
                          "text": "total += C ( count , i )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 821,
                              "end_byte": 826,
                              "text": "total",
                              "children": []
                            },
                            {
                              "type": "+=",
                              "start_byte": 827,
                              "end_byte": 829,
                              "text": "+=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 830,
                              "end_byte": 845,
                              "text": "C ( count , i )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 830,
                                  "end_byte": 831,
                                  "text": "C",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 832,
                                  "end_byte": 845,
                                  "text": "( count , i )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 832,
                                      "end_byte": 833,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 834,
                                      "end_byte": 839,
                                      "text": "count",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 840,
                                      "end_byte": 841,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 842,
                                      "end_byte": 843,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 844,
                                      "end_byte": 845,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 846,
                          "end_byte": 847,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 848,
                      "end_byte": 849,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 850,
              "end_byte": 864,
              "text": "return total ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 850,
                  "end_byte": 856,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 857,
                  "end_byte": 862,
                  "text": "total",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 863,
                  "end_byte": 864,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 865,
              "end_byte": 866,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 867,
      "end_byte": 1072,
      "text": "unsigned long C ( unsigned long n , unsigned long r ) { if ( r > n / 2 ) r = n - r ; unsigned long ans = 1 ; unsigned long i ; for ( i = 1 ; i <= r ; i ++ ) { ans *= n - r + i ; ans /= i ; } return ans ; }",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 867,
          "end_byte": 880,
          "text": "unsigned long",
          "children": [
            {
              "type": "unsigned",
              "start_byte": 867,
              "end_byte": 875,
              "text": "unsigned",
              "children": []
            },
            {
              "type": "long",
              "start_byte": 876,
              "end_byte": 880,
              "text": "long",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 881,
          "end_byte": 920,
          "text": "C ( unsigned long n , unsigned long r )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 881,
              "end_byte": 882,
              "text": "C",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 883,
              "end_byte": 920,
              "text": "( unsigned long n , unsigned long r )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 883,
                  "end_byte": 884,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 885,
                  "end_byte": 900,
                  "text": "unsigned long n",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 885,
                      "end_byte": 898,
                      "text": "unsigned long",
                      "children": [
                        {
                          "type": "unsigned",
                          "start_byte": 885,
                          "end_byte": 893,
                          "text": "unsigned",
                          "children": []
                        },
                        {
                          "type": "long",
                          "start_byte": 894,
                          "end_byte": 898,
                          "text": "long",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 899,
                      "end_byte": 900,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 901,
                  "end_byte": 902,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 903,
                  "end_byte": 918,
                  "text": "unsigned long r",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 903,
                      "end_byte": 916,
                      "text": "unsigned long",
                      "children": [
                        {
                          "type": "unsigned",
                          "start_byte": 903,
                          "end_byte": 911,
                          "text": "unsigned",
                          "children": []
                        },
                        {
                          "type": "long",
                          "start_byte": 912,
                          "end_byte": 916,
                          "text": "long",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 917,
                      "end_byte": 918,
                      "text": "r",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 919,
                  "end_byte": 920,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 921,
          "end_byte": 1072,
          "text": "{ if ( r > n / 2 ) r = n - r ; unsigned long ans = 1 ; unsigned long i ; for ( i = 1 ; i <= r ; i ++ ) { ans *= n - r + i ; ans /= i ; } return ans ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 921,
              "end_byte": 922,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 923,
              "end_byte": 951,
              "text": "if ( r > n / 2 ) r = n - r ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 923,
                  "end_byte": 925,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 926,
                  "end_byte": 939,
                  "text": "( r > n / 2 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 926,
                      "end_byte": 927,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 928,
                      "end_byte": 937,
                      "text": "r > n / 2",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 928,
                          "end_byte": 929,
                          "text": "r",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 930,
                          "end_byte": 931,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 932,
                          "end_byte": 937,
                          "text": "n / 2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 932,
                              "end_byte": 933,
                              "text": "n",
                              "children": []
                            },
                            {
                              "type": "/",
                              "start_byte": 934,
                              "end_byte": 935,
                              "text": "/",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 936,
                              "end_byte": 937,
                              "text": "2",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 938,
                      "end_byte": 939,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "expression_statement",
                  "start_byte": 940,
                  "end_byte": 951,
                  "text": "r = n - r ;",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start_byte": 940,
                      "end_byte": 949,
                      "text": "r = n - r",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 940,
                          "end_byte": 941,
                          "text": "r",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 942,
                          "end_byte": 943,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 944,
                          "end_byte": 949,
                          "text": "n - r",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 944,
                              "end_byte": 945,
                              "text": "n",
                              "children": []
                            },
                            {
                              "type": "-",
                              "start_byte": 946,
                              "end_byte": 947,
                              "text": "-",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 948,
                              "end_byte": 949,
                              "text": "r",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 950,
                      "end_byte": 951,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 952,
              "end_byte": 975,
              "text": "unsigned long ans = 1 ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 952,
                  "end_byte": 965,
                  "text": "unsigned long",
                  "children": [
                    {
                      "type": "unsigned",
                      "start_byte": 952,
                      "end_byte": 960,
                      "text": "unsigned",
                      "children": []
                    },
                    {
                      "type": "long",
                      "start_byte": 961,
                      "end_byte": 965,
                      "text": "long",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "init_declarator",
                  "start_byte": 966,
                  "end_byte": 973,
                  "text": "ans = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 966,
                      "end_byte": 969,
                      "text": "ans",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 970,
                      "end_byte": 971,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 972,
                      "end_byte": 973,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 974,
                  "end_byte": 975,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 976,
              "end_byte": 993,
              "text": "unsigned long i ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 976,
                  "end_byte": 989,
                  "text": "unsigned long",
                  "children": [
                    {
                      "type": "unsigned",
                      "start_byte": 976,
                      "end_byte": 984,
                      "text": "unsigned",
                      "children": []
                    },
                    {
                      "type": "long",
                      "start_byte": 985,
                      "end_byte": 989,
                      "text": "long",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 990,
                  "end_byte": 991,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 992,
                  "end_byte": 993,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 994,
              "end_byte": 1057,
              "text": "for ( i = 1 ; i <= r ; i ++ ) { ans *= n - r + i ; ans /= i ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 994,
                  "end_byte": 997,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 998,
                  "end_byte": 999,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 1000,
                  "end_byte": 1005,
                  "text": "i = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1000,
                      "end_byte": 1001,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 1002,
                      "end_byte": 1003,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 1004,
                      "end_byte": 1005,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1006,
                  "end_byte": 1007,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 1008,
                  "end_byte": 1014,
                  "text": "i <= r",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1008,
                      "end_byte": 1009,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<=",
                      "start_byte": 1010,
                      "end_byte": 1012,
                      "text": "<=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 1013,
                      "end_byte": 1014,
                      "text": "r",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1015,
                  "end_byte": 1016,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 1017,
                  "end_byte": 1021,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1017,
                      "end_byte": 1018,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 1019,
                      "end_byte": 1021,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 1022,
                  "end_byte": 1023,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 1024,
                  "end_byte": 1057,
                  "text": "{ ans *= n - r + i ; ans /= i ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 1024,
                      "end_byte": 1025,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1026,
                      "end_byte": 1044,
                      "text": "ans *= n - r + i ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 1026,
                          "end_byte": 1042,
                          "text": "ans *= n - r + i",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1026,
                              "end_byte": 1029,
                              "text": "ans",
                              "children": []
                            },
                            {
                              "type": "*=",
                              "start_byte": 1030,
                              "end_byte": 1032,
                              "text": "*=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 1033,
                              "end_byte": 1042,
                              "text": "n - r + i",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 1033,
                                  "end_byte": 1038,
                                  "text": "n - r",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1033,
                                      "end_byte": 1034,
                                      "text": "n",
                                      "children": []
                                    },
                                    {
                                      "type": "-",
                                      "start_byte": 1035,
                                      "end_byte": 1036,
                                      "text": "-",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 1037,
                                      "end_byte": 1038,
                                      "text": "r",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "+",
                                  "start_byte": 1039,
                                  "end_byte": 1040,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 1041,
                                  "end_byte": 1042,
                                  "text": "i",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1043,
                          "end_byte": 1044,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1045,
                      "end_byte": 1055,
                      "text": "ans /= i ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 1045,
                          "end_byte": 1053,
                          "text": "ans /= i",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1045,
                              "end_byte": 1048,
                              "text": "ans",
                              "children": []
                            },
                            {
                              "type": "/=",
                              "start_byte": 1049,
                              "end_byte": 1051,
                              "text": "/=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 1052,
                              "end_byte": 1053,
                              "text": "i",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1054,
                          "end_byte": 1055,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 1056,
                      "end_byte": 1057,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 1058,
              "end_byte": 1070,
              "text": "return ans ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 1058,
                  "end_byte": 1064,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 1065,
                  "end_byte": 1068,
                  "text": "ans",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 1069,
                  "end_byte": 1070,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 1071,
              "end_byte": 1072,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}