int max ( int , int ) ; int sum ( int , int , int [ ] [ 100 ] , int ) ; int main ( ) { int i , j , maxsum = 0 , r = 0 , c = 0 , t , n ; int a [ 100 ] [ 100 ] ; scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & n ) ; for ( i = 0 ; i <= n - 1 ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & a [ i ] [ j ] ) ; } } maxsum = a [ 0 ] [ 0 ] + max ( sum ( r + 1 , c , a , n ) , sum ( r + 1 , c + 1 , a , n ) ) ; printf ( "%d\n" , maxsum ) ; } return 0 ; } int max ( int a , int b ) { int max = 0 ; if ( a > b ) max = a ; else max = b ; return max ; } int sum ( int row , int col , int arr [ 100 ] [ 100 ] , int num ) { int s = 0 ; if ( row == ( num - 1 ) ) return arr [ row ] [ col ] ; s = arr [ row ] [ col ] + max ( sum ( row + 1 , col , arr , num ) , sum ( row + 1 , col + 1 , arr , num ) ) ; return s ; }