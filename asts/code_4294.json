{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 528,
  "text": "int gcd ( int m , int n ) { if ( m == n ) { return m ; } else { if ( m > n ) return gcd ( m - n , n ) ; else return gcd ( m , n - m ) ; } } int lcm ( int m , int n ) { int x ; if ( m > n ) x = m ; else x = n ; while ( 1 ) { if ( m > n ) { if ( x % n == 0 ) { return x ; break ; } x += m ; } else { if ( x % m == 0 ) { return x ; break ; } x += n ; } } } main ( ) { int t , i , m , n ; scanf ( \"%d\" , & t ) ; for ( i = 0 ; i < t ; i ++ ) { scanf ( \"%d%d\" , & m , & n ) ; printf ( \"%d %d\\n\" , gcd ( m , n ) , lcm ( m , n ) ) ; } }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 139,
      "text": "int gcd ( int m , int n ) { if ( m == n ) { return m ; } else { if ( m > n ) return gcd ( m - n , n ) ; else return gcd ( m , n - m ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 25,
          "text": "gcd ( int m , int n )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 7,
              "text": "gcd",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 8,
              "end_byte": 25,
              "text": "( int m , int n )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 8,
                  "end_byte": 9,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 10,
                  "end_byte": 15,
                  "text": "int m",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 10,
                      "end_byte": 13,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 14,
                      "end_byte": 15,
                      "text": "m",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 16,
                  "end_byte": 17,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 18,
                  "end_byte": 23,
                  "text": "int n",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 18,
                      "end_byte": 21,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 22,
                      "end_byte": 23,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 24,
                  "end_byte": 25,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 26,
          "end_byte": 139,
          "text": "{ if ( m == n ) { return m ; } else { if ( m > n ) return gcd ( m - n , n ) ; else return gcd ( m , n - m ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 26,
              "end_byte": 27,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 28,
              "end_byte": 137,
              "text": "if ( m == n ) { return m ; } else { if ( m > n ) return gcd ( m - n , n ) ; else return gcd ( m , n - m ) ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 28,
                  "end_byte": 30,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 31,
                  "end_byte": 41,
                  "text": "( m == n )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 31,
                      "end_byte": 32,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 33,
                      "end_byte": 39,
                      "text": "m == n",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 33,
                          "end_byte": 34,
                          "text": "m",
                          "children": []
                        },
                        {
                          "type": "==",
                          "start_byte": 35,
                          "end_byte": 37,
                          "text": "==",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 38,
                          "end_byte": 39,
                          "text": "n",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 40,
                      "end_byte": 41,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 42,
                  "end_byte": 56,
                  "text": "{ return m ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 42,
                      "end_byte": 43,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 44,
                      "end_byte": 54,
                      "text": "return m ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 44,
                          "end_byte": 50,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 51,
                          "end_byte": 52,
                          "text": "m",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 53,
                          "end_byte": 54,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 55,
                      "end_byte": 56,
                      "text": "}",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 57,
                  "end_byte": 137,
                  "text": "else { if ( m > n ) return gcd ( m - n , n ) ; else return gcd ( m , n - m ) ; }",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 57,
                      "end_byte": 61,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "compound_statement",
                      "start_byte": 62,
                      "end_byte": 137,
                      "text": "{ if ( m > n ) return gcd ( m - n , n ) ; else return gcd ( m , n - m ) ; }",
                      "children": [
                        {
                          "type": "{",
                          "start_byte": 62,
                          "end_byte": 63,
                          "text": "{",
                          "children": []
                        },
                        {
                          "type": "if_statement",
                          "start_byte": 64,
                          "end_byte": 135,
                          "text": "if ( m > n ) return gcd ( m - n , n ) ; else return gcd ( m , n - m ) ;",
                          "children": [
                            {
                              "type": "if",
                              "start_byte": 64,
                              "end_byte": 66,
                              "text": "if",
                              "children": []
                            },
                            {
                              "type": "condition_clause",
                              "start_byte": 67,
                              "end_byte": 76,
                              "text": "( m > n )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 67,
                                  "end_byte": 68,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 69,
                                  "end_byte": 74,
                                  "text": "m > n",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 69,
                                      "end_byte": 70,
                                      "text": "m",
                                      "children": []
                                    },
                                    {
                                      "type": ">",
                                      "start_byte": 71,
                                      "end_byte": 72,
                                      "text": ">",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 73,
                                      "end_byte": 74,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 75,
                                  "end_byte": 76,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "return_statement",
                              "start_byte": 77,
                              "end_byte": 103,
                              "text": "return gcd ( m - n , n ) ;",
                              "children": [
                                {
                                  "type": "return",
                                  "start_byte": 77,
                                  "end_byte": 83,
                                  "text": "return",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 84,
                                  "end_byte": 101,
                                  "text": "gcd ( m - n , n )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 84,
                                      "end_byte": 87,
                                      "text": "gcd",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 88,
                                      "end_byte": 101,
                                      "text": "( m - n , n )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 88,
                                          "end_byte": 89,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 90,
                                          "end_byte": 95,
                                          "text": "m - n",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 90,
                                              "end_byte": 91,
                                              "text": "m",
                                              "children": []
                                            },
                                            {
                                              "type": "-",
                                              "start_byte": 92,
                                              "end_byte": 93,
                                              "text": "-",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 94,
                                              "end_byte": 95,
                                              "text": "n",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 96,
                                          "end_byte": 97,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 98,
                                          "end_byte": 99,
                                          "text": "n",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 100,
                                          "end_byte": 101,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 102,
                                  "end_byte": 103,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "else_clause",
                              "start_byte": 104,
                              "end_byte": 135,
                              "text": "else return gcd ( m , n - m ) ;",
                              "children": [
                                {
                                  "type": "else",
                                  "start_byte": 104,
                                  "end_byte": 108,
                                  "text": "else",
                                  "children": []
                                },
                                {
                                  "type": "return_statement",
                                  "start_byte": 109,
                                  "end_byte": 135,
                                  "text": "return gcd ( m , n - m ) ;",
                                  "children": [
                                    {
                                      "type": "return",
                                      "start_byte": 109,
                                      "end_byte": 115,
                                      "text": "return",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 116,
                                      "end_byte": 133,
                                      "text": "gcd ( m , n - m )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 116,
                                          "end_byte": 119,
                                          "text": "gcd",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 120,
                                          "end_byte": 133,
                                          "text": "( m , n - m )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 120,
                                              "end_byte": 121,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 122,
                                              "end_byte": 123,
                                              "text": "m",
                                              "children": []
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 124,
                                              "end_byte": 125,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 126,
                                              "end_byte": 131,
                                              "text": "n - m",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 126,
                                                  "end_byte": 127,
                                                  "text": "n",
                                                  "children": []
                                                },
                                                {
                                                  "type": "-",
                                                  "start_byte": 128,
                                                  "end_byte": 129,
                                                  "text": "-",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 130,
                                                  "end_byte": 131,
                                                  "text": "m",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 132,
                                              "end_byte": 133,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 134,
                                      "end_byte": 135,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start_byte": 136,
                          "end_byte": 137,
                          "text": "}",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 138,
              "end_byte": 139,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 140,
      "end_byte": 353,
      "text": "int lcm ( int m , int n ) { int x ; if ( m > n ) x = m ; else x = n ; while ( 1 ) { if ( m > n ) { if ( x % n == 0 ) { return x ; break ; } x += m ; } else { if ( x % m == 0 ) { return x ; break ; } x += n ; } } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 140,
          "end_byte": 143,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 144,
          "end_byte": 165,
          "text": "lcm ( int m , int n )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 144,
              "end_byte": 147,
              "text": "lcm",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 148,
              "end_byte": 165,
              "text": "( int m , int n )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 148,
                  "end_byte": 149,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 150,
                  "end_byte": 155,
                  "text": "int m",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 150,
                      "end_byte": 153,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 154,
                      "end_byte": 155,
                      "text": "m",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 156,
                  "end_byte": 157,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 158,
                  "end_byte": 163,
                  "text": "int n",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 158,
                      "end_byte": 161,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 162,
                      "end_byte": 163,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 164,
                  "end_byte": 165,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 166,
          "end_byte": 353,
          "text": "{ int x ; if ( m > n ) x = m ; else x = n ; while ( 1 ) { if ( m > n ) { if ( x % n == 0 ) { return x ; break ; } x += m ; } else { if ( x % m == 0 ) { return x ; break ; } x += n ; } } }",
          "children": [
            {
              "type": "{",
              "start_byte": 166,
              "end_byte": 167,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 168,
              "end_byte": 175,
              "text": "int x ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 168,
                  "end_byte": 171,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 172,
                  "end_byte": 173,
                  "text": "x",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 174,
                  "end_byte": 175,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 176,
              "end_byte": 209,
              "text": "if ( m > n ) x = m ; else x = n ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 176,
                  "end_byte": 178,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 179,
                  "end_byte": 188,
                  "text": "( m > n )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 179,
                      "end_byte": 180,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 181,
                      "end_byte": 186,
                      "text": "m > n",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 181,
                          "end_byte": 182,
                          "text": "m",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 183,
                          "end_byte": 184,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 185,
                          "end_byte": 186,
                          "text": "n",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 187,
                      "end_byte": 188,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "expression_statement",
                  "start_byte": 189,
                  "end_byte": 196,
                  "text": "x = m ;",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start_byte": 189,
                      "end_byte": 194,
                      "text": "x = m",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 189,
                          "end_byte": 190,
                          "text": "x",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 191,
                          "end_byte": 192,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 193,
                          "end_byte": 194,
                          "text": "m",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 195,
                      "end_byte": 196,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 197,
                  "end_byte": 209,
                  "text": "else x = n ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 197,
                      "end_byte": 201,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 202,
                      "end_byte": 209,
                      "text": "x = n ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 202,
                          "end_byte": 207,
                          "text": "x = n",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 202,
                              "end_byte": 203,
                              "text": "x",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 204,
                              "end_byte": 205,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 206,
                              "end_byte": 207,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 208,
                          "end_byte": 209,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 210,
              "end_byte": 351,
              "text": "while ( 1 ) { if ( m > n ) { if ( x % n == 0 ) { return x ; break ; } x += m ; } else { if ( x % m == 0 ) { return x ; break ; } x += n ; } }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 210,
                  "end_byte": 215,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 216,
                  "end_byte": 221,
                  "text": "( 1 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 216,
                      "end_byte": 217,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 218,
                      "end_byte": 219,
                      "text": "1",
                      "children": []
                    },
                    {
                      "type": ")",
                      "start_byte": 220,
                      "end_byte": 221,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 222,
                  "end_byte": 351,
                  "text": "{ if ( m > n ) { if ( x % n == 0 ) { return x ; break ; } x += m ; } else { if ( x % m == 0 ) { return x ; break ; } x += n ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 222,
                      "end_byte": 223,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 224,
                      "end_byte": 349,
                      "text": "if ( m > n ) { if ( x % n == 0 ) { return x ; break ; } x += m ; } else { if ( x % m == 0 ) { return x ; break ; } x += n ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 224,
                          "end_byte": 226,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 227,
                          "end_byte": 236,
                          "text": "( m > n )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 227,
                              "end_byte": 228,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 229,
                              "end_byte": 234,
                              "text": "m > n",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 229,
                                  "end_byte": 230,
                                  "text": "m",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 231,
                                  "end_byte": 232,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 233,
                                  "end_byte": 234,
                                  "text": "n",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 235,
                              "end_byte": 236,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 237,
                          "end_byte": 290,
                          "text": "{ if ( x % n == 0 ) { return x ; break ; } x += m ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 237,
                              "end_byte": 238,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 239,
                              "end_byte": 279,
                              "text": "if ( x % n == 0 ) { return x ; break ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 239,
                                  "end_byte": 241,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 242,
                                  "end_byte": 256,
                                  "text": "( x % n == 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 242,
                                      "end_byte": 243,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 244,
                                      "end_byte": 254,
                                      "text": "x % n == 0",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 244,
                                          "end_byte": 249,
                                          "text": "x % n",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 244,
                                              "end_byte": 245,
                                              "text": "x",
                                              "children": []
                                            },
                                            {
                                              "type": "%",
                                              "start_byte": 246,
                                              "end_byte": 247,
                                              "text": "%",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 248,
                                              "end_byte": 249,
                                              "text": "n",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "==",
                                          "start_byte": 250,
                                          "end_byte": 252,
                                          "text": "==",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 253,
                                          "end_byte": 254,
                                          "text": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 255,
                                      "end_byte": 256,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 257,
                                  "end_byte": 279,
                                  "text": "{ return x ; break ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 257,
                                      "end_byte": 258,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "return_statement",
                                      "start_byte": 259,
                                      "end_byte": 269,
                                      "text": "return x ;",
                                      "children": [
                                        {
                                          "type": "return",
                                          "start_byte": 259,
                                          "end_byte": 265,
                                          "text": "return",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 266,
                                          "end_byte": 267,
                                          "text": "x",
                                          "children": []
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 268,
                                          "end_byte": 269,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "break_statement",
                                      "start_byte": 270,
                                      "end_byte": 277,
                                      "text": "break ;",
                                      "children": [
                                        {
                                          "type": "break",
                                          "start_byte": 270,
                                          "end_byte": 275,
                                          "text": "break",
                                          "children": []
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 276,
                                          "end_byte": 277,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 278,
                                      "end_byte": 279,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 280,
                              "end_byte": 288,
                              "text": "x += m ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 280,
                                  "end_byte": 286,
                                  "text": "x += m",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 280,
                                      "end_byte": 281,
                                      "text": "x",
                                      "children": []
                                    },
                                    {
                                      "type": "+=",
                                      "start_byte": 282,
                                      "end_byte": 284,
                                      "text": "+=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 285,
                                      "end_byte": 286,
                                      "text": "m",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 287,
                                  "end_byte": 288,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 289,
                              "end_byte": 290,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 291,
                          "end_byte": 349,
                          "text": "else { if ( x % m == 0 ) { return x ; break ; } x += n ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 291,
                              "end_byte": 295,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 296,
                              "end_byte": 349,
                              "text": "{ if ( x % m == 0 ) { return x ; break ; } x += n ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 296,
                                  "end_byte": 297,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "if_statement",
                                  "start_byte": 298,
                                  "end_byte": 338,
                                  "text": "if ( x % m == 0 ) { return x ; break ; }",
                                  "children": [
                                    {
                                      "type": "if",
                                      "start_byte": 298,
                                      "end_byte": 300,
                                      "text": "if",
                                      "children": []
                                    },
                                    {
                                      "type": "condition_clause",
                                      "start_byte": 301,
                                      "end_byte": 315,
                                      "text": "( x % m == 0 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 301,
                                          "end_byte": 302,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 303,
                                          "end_byte": 313,
                                          "text": "x % m == 0",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 303,
                                              "end_byte": 308,
                                              "text": "x % m",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 303,
                                                  "end_byte": 304,
                                                  "text": "x",
                                                  "children": []
                                                },
                                                {
                                                  "type": "%",
                                                  "start_byte": 305,
                                                  "end_byte": 306,
                                                  "text": "%",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 307,
                                                  "end_byte": 308,
                                                  "text": "m",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "==",
                                              "start_byte": 309,
                                              "end_byte": 311,
                                              "text": "==",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 312,
                                              "end_byte": 313,
                                              "text": "0",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 314,
                                          "end_byte": 315,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "compound_statement",
                                      "start_byte": 316,
                                      "end_byte": 338,
                                      "text": "{ return x ; break ; }",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start_byte": 316,
                                          "end_byte": 317,
                                          "text": "{",
                                          "children": []
                                        },
                                        {
                                          "type": "return_statement",
                                          "start_byte": 318,
                                          "end_byte": 328,
                                          "text": "return x ;",
                                          "children": [
                                            {
                                              "type": "return",
                                              "start_byte": 318,
                                              "end_byte": 324,
                                              "text": "return",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 325,
                                              "end_byte": 326,
                                              "text": "x",
                                              "children": []
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 327,
                                              "end_byte": 328,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "break_statement",
                                          "start_byte": 329,
                                          "end_byte": 336,
                                          "text": "break ;",
                                          "children": [
                                            {
                                              "type": "break",
                                              "start_byte": 329,
                                              "end_byte": 334,
                                              "text": "break",
                                              "children": []
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 335,
                                              "end_byte": 336,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start_byte": 337,
                                          "end_byte": 338,
                                          "text": "}",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 339,
                                  "end_byte": 347,
                                  "text": "x += n ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 339,
                                      "end_byte": 345,
                                      "text": "x += n",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 339,
                                          "end_byte": 340,
                                          "text": "x",
                                          "children": []
                                        },
                                        {
                                          "type": "+=",
                                          "start_byte": 341,
                                          "end_byte": 343,
                                          "text": "+=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 344,
                                          "end_byte": 345,
                                          "text": "n",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 346,
                                      "end_byte": 347,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 348,
                                  "end_byte": 349,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 350,
                      "end_byte": 351,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 352,
              "end_byte": 353,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 354,
      "end_byte": 528,
      "text": "main ( ) { int t , i , m , n ; scanf ( \"%d\" , & t ) ; for ( i = 0 ; i < t ; i ++ ) { scanf ( \"%d%d\" , & m , & n ) ; printf ( \"%d %d\\n\" , gcd ( m , n ) , lcm ( m , n ) ) ; } }",
      "children": [
        {
          "type": "function_declarator",
          "start_byte": 354,
          "end_byte": 362,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 354,
              "end_byte": 358,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 359,
              "end_byte": 362,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 359,
                  "end_byte": 360,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 361,
                  "end_byte": 362,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 363,
          "end_byte": 528,
          "text": "{ int t , i , m , n ; scanf ( \"%d\" , & t ) ; for ( i = 0 ; i < t ; i ++ ) { scanf ( \"%d%d\" , & m , & n ) ; printf ( \"%d %d\\n\" , gcd ( m , n ) , lcm ( m , n ) ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 363,
              "end_byte": 364,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 365,
              "end_byte": 384,
              "text": "int t , i , m , n ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 365,
                  "end_byte": 368,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 369,
                  "end_byte": 370,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 371,
                  "end_byte": 372,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 373,
                  "end_byte": 374,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 375,
                  "end_byte": 376,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 377,
                  "end_byte": 378,
                  "text": "m",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 379,
                  "end_byte": 380,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 381,
                  "end_byte": 382,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 383,
                  "end_byte": 384,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 385,
              "end_byte": 407,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 385,
                  "end_byte": 405,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 385,
                      "end_byte": 390,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 391,
                      "end_byte": 405,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 391,
                          "end_byte": 392,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 393,
                          "end_byte": 397,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 393,
                              "end_byte": 394,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 394,
                              "end_byte": 396,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 396,
                              "end_byte": 397,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 398,
                          "end_byte": 399,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 400,
                          "end_byte": 403,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 400,
                              "end_byte": 401,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 402,
                              "end_byte": 403,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 404,
                          "end_byte": 405,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 406,
                  "end_byte": 407,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 408,
              "end_byte": 526,
              "text": "for ( i = 0 ; i < t ; i ++ ) { scanf ( \"%d%d\" , & m , & n ) ; printf ( \"%d %d\\n\" , gcd ( m , n ) , lcm ( m , n ) ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 408,
                  "end_byte": 411,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 412,
                  "end_byte": 413,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 414,
                  "end_byte": 419,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 414,
                      "end_byte": 415,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 416,
                      "end_byte": 417,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 418,
                      "end_byte": 419,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 420,
                  "end_byte": 421,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 422,
                  "end_byte": 427,
                  "text": "i < t",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 422,
                      "end_byte": 423,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 424,
                      "end_byte": 425,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 426,
                      "end_byte": 427,
                      "text": "t",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 428,
                  "end_byte": 429,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 430,
                  "end_byte": 434,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 430,
                      "end_byte": 431,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 432,
                      "end_byte": 434,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 435,
                  "end_byte": 436,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 437,
                  "end_byte": 526,
                  "text": "{ scanf ( \"%d%d\" , & m , & n ) ; printf ( \"%d %d\\n\" , gcd ( m , n ) , lcm ( m , n ) ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 437,
                      "end_byte": 438,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 439,
                      "end_byte": 469,
                      "text": "scanf ( \"%d%d\" , & m , & n ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 439,
                          "end_byte": 467,
                          "text": "scanf ( \"%d%d\" , & m , & n )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 439,
                              "end_byte": 444,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 445,
                              "end_byte": 467,
                              "text": "( \"%d%d\" , & m , & n )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 445,
                                  "end_byte": 446,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 447,
                                  "end_byte": 453,
                                  "text": "\"%d%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 447,
                                      "end_byte": 448,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 448,
                                      "end_byte": 452,
                                      "text": "%d%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 452,
                                      "end_byte": 453,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 454,
                                  "end_byte": 455,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 456,
                                  "end_byte": 459,
                                  "text": "& m",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 456,
                                      "end_byte": 457,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 458,
                                      "end_byte": 459,
                                      "text": "m",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 460,
                                  "end_byte": 461,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 462,
                                  "end_byte": 465,
                                  "text": "& n",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 462,
                                      "end_byte": 463,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 464,
                                      "end_byte": 465,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 466,
                                  "end_byte": 467,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 468,
                          "end_byte": 469,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 470,
                      "end_byte": 524,
                      "text": "printf ( \"%d %d\\n\" , gcd ( m , n ) , lcm ( m , n ) ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 470,
                          "end_byte": 522,
                          "text": "printf ( \"%d %d\\n\" , gcd ( m , n ) , lcm ( m , n ) )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 470,
                              "end_byte": 476,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 477,
                              "end_byte": 522,
                              "text": "( \"%d %d\\n\" , gcd ( m , n ) , lcm ( m , n ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 477,
                                  "end_byte": 478,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 479,
                                  "end_byte": 488,
                                  "text": "\"%d %d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 479,
                                      "end_byte": 480,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 480,
                                      "end_byte": 485,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 485,
                                      "end_byte": 487,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 487,
                                      "end_byte": 488,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 489,
                                  "end_byte": 490,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 491,
                                  "end_byte": 504,
                                  "text": "gcd ( m , n )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 491,
                                      "end_byte": 494,
                                      "text": "gcd",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 495,
                                      "end_byte": 504,
                                      "text": "( m , n )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 495,
                                          "end_byte": 496,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 497,
                                          "end_byte": 498,
                                          "text": "m",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 499,
                                          "end_byte": 500,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 501,
                                          "end_byte": 502,
                                          "text": "n",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 503,
                                          "end_byte": 504,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 505,
                                  "end_byte": 506,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 507,
                                  "end_byte": 520,
                                  "text": "lcm ( m , n )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 507,
                                      "end_byte": 510,
                                      "text": "lcm",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 511,
                                      "end_byte": 520,
                                      "text": "( m , n )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 511,
                                          "end_byte": 512,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 513,
                                          "end_byte": 514,
                                          "text": "m",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 515,
                                          "end_byte": 516,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 517,
                                          "end_byte": 518,
                                          "text": "n",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 519,
                                          "end_byte": 520,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 521,
                                  "end_byte": 522,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 523,
                          "end_byte": 524,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 525,
                      "end_byte": 526,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 527,
              "end_byte": 528,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}