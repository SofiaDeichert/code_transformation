{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 587,
  "text": "int main ( int argc , char * argv [ ] ) { int t ; printf ( \"Enter the no of test case:\\n\" ) ; scanf ( \"%d\" , & t ) ; while ( t -- ) { int n1 , n2 , x , y ; printf ( \"enter two no:\\n\" ) ; scanf ( \"%d%d\" , & n1 , & n2 ) ; x = gcd ( n1 , n2 ) ; printf ( \"%d\\t\" , x ) ; y = lcm ( n1 , n2 ) ; printf ( \"%d\\n\" , y ) ; } } int gcd ( int n1 , int n2 ) { while ( n1 != n2 ) { if ( n1 > n2 ) n1 = n1 - n2 ; else n2 = n2 - n1 ; } return n1 ; } int lcm ( int n1 , int n2 ) { int x , y ; x = n1 , y = n2 ; while ( n1 != n2 ) { if ( n1 > n2 ) n1 = n1 - n2 ; else n2 = n2 - n1 ; } return x * y / n1 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 315,
      "text": "int main ( int argc , char * argv [ ] ) { int t ; printf ( \"Enter the no of test case:\\n\" ) ; scanf ( \"%d\" , & t ) ; while ( t -- ) { int n1 , n2 , x , y ; printf ( \"enter two no:\\n\" ) ; scanf ( \"%d%d\" , & n1 , & n2 ) ; x = gcd ( n1 , n2 ) ; printf ( \"%d\\t\" , x ) ; y = lcm ( n1 , n2 ) ; printf ( \"%d\\n\" , y ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 39,
          "text": "main ( int argc , char * argv [ ] )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 39,
              "text": "( int argc , char * argv [ ] )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 11,
                  "end_byte": 19,
                  "text": "int argc",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 11,
                      "end_byte": 14,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 15,
                      "end_byte": 19,
                      "text": "argc",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 20,
                  "end_byte": 21,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 22,
                  "end_byte": 37,
                  "text": "char * argv [ ]",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 22,
                      "end_byte": 26,
                      "text": "char",
                      "children": []
                    },
                    {
                      "type": "pointer_declarator",
                      "start_byte": 27,
                      "end_byte": 37,
                      "text": "* argv [ ]",
                      "children": [
                        {
                          "type": "*",
                          "start_byte": 27,
                          "end_byte": 28,
                          "text": "*",
                          "children": []
                        },
                        {
                          "type": "array_declarator",
                          "start_byte": 29,
                          "end_byte": 37,
                          "text": "argv [ ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 29,
                              "end_byte": 33,
                              "text": "argv",
                              "children": []
                            },
                            {
                              "type": "[",
                              "start_byte": 34,
                              "end_byte": 35,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 36,
                              "end_byte": 37,
                              "text": "]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 38,
                  "end_byte": 39,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 40,
          "end_byte": 315,
          "text": "{ int t ; printf ( \"Enter the no of test case:\\n\" ) ; scanf ( \"%d\" , & t ) ; while ( t -- ) { int n1 , n2 , x , y ; printf ( \"enter two no:\\n\" ) ; scanf ( \"%d%d\" , & n1 , & n2 ) ; x = gcd ( n1 , n2 ) ; printf ( \"%d\\t\" , x ) ; y = lcm ( n1 , n2 ) ; printf ( \"%d\\n\" , y ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 40,
              "end_byte": 41,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 42,
              "end_byte": 49,
              "text": "int t ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 42,
                  "end_byte": 45,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 46,
                  "end_byte": 47,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 48,
                  "end_byte": 49,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 50,
              "end_byte": 93,
              "text": "printf ( \"Enter the no of test case:\\n\" ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 50,
                  "end_byte": 91,
                  "text": "printf ( \"Enter the no of test case:\\n\" )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 50,
                      "end_byte": 56,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 57,
                      "end_byte": 91,
                      "text": "( \"Enter the no of test case:\\n\" )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 57,
                          "end_byte": 58,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 59,
                          "end_byte": 89,
                          "text": "\"Enter the no of test case:\\n\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 59,
                              "end_byte": 60,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 60,
                              "end_byte": 86,
                              "text": "Enter the no of test case:",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 86,
                              "end_byte": 88,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 88,
                              "end_byte": 89,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 90,
                          "end_byte": 91,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 92,
                  "end_byte": 93,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 94,
              "end_byte": 116,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 94,
                  "end_byte": 114,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 94,
                      "end_byte": 99,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 100,
                      "end_byte": 114,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 100,
                          "end_byte": 101,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 102,
                          "end_byte": 106,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 102,
                              "end_byte": 103,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 103,
                              "end_byte": 105,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 105,
                              "end_byte": 106,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 107,
                          "end_byte": 108,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 109,
                          "end_byte": 112,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 109,
                              "end_byte": 110,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 111,
                              "end_byte": 112,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 113,
                          "end_byte": 114,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 115,
                  "end_byte": 116,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 117,
              "end_byte": 313,
              "text": "while ( t -- ) { int n1 , n2 , x , y ; printf ( \"enter two no:\\n\" ) ; scanf ( \"%d%d\" , & n1 , & n2 ) ; x = gcd ( n1 , n2 ) ; printf ( \"%d\\t\" , x ) ; y = lcm ( n1 , n2 ) ; printf ( \"%d\\n\" , y ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 117,
                  "end_byte": 122,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 123,
                  "end_byte": 131,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 123,
                      "end_byte": 124,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 125,
                      "end_byte": 129,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 125,
                          "end_byte": 126,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 127,
                          "end_byte": 129,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 130,
                      "end_byte": 131,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 132,
                  "end_byte": 313,
                  "text": "{ int n1 , n2 , x , y ; printf ( \"enter two no:\\n\" ) ; scanf ( \"%d%d\" , & n1 , & n2 ) ; x = gcd ( n1 , n2 ) ; printf ( \"%d\\t\" , x ) ; y = lcm ( n1 , n2 ) ; printf ( \"%d\\n\" , y ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 132,
                      "end_byte": 133,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "declaration",
                      "start_byte": 134,
                      "end_byte": 155,
                      "text": "int n1 , n2 , x , y ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 134,
                          "end_byte": 137,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 138,
                          "end_byte": 140,
                          "text": "n1",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 141,
                          "end_byte": 142,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 143,
                          "end_byte": 145,
                          "text": "n2",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 146,
                          "end_byte": 147,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 148,
                          "end_byte": 149,
                          "text": "x",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 150,
                          "end_byte": 151,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 152,
                          "end_byte": 153,
                          "text": "y",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 154,
                          "end_byte": 155,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 156,
                      "end_byte": 186,
                      "text": "printf ( \"enter two no:\\n\" ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 156,
                          "end_byte": 184,
                          "text": "printf ( \"enter two no:\\n\" )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 156,
                              "end_byte": 162,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 163,
                              "end_byte": 184,
                              "text": "( \"enter two no:\\n\" )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 163,
                                  "end_byte": 164,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 165,
                                  "end_byte": 182,
                                  "text": "\"enter two no:\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 165,
                                      "end_byte": 166,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 166,
                                      "end_byte": 179,
                                      "text": "enter two no:",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 179,
                                      "end_byte": 181,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 181,
                                      "end_byte": 182,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 183,
                                  "end_byte": 184,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 185,
                          "end_byte": 186,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 187,
                      "end_byte": 219,
                      "text": "scanf ( \"%d%d\" , & n1 , & n2 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 187,
                          "end_byte": 217,
                          "text": "scanf ( \"%d%d\" , & n1 , & n2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 187,
                              "end_byte": 192,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 193,
                              "end_byte": 217,
                              "text": "( \"%d%d\" , & n1 , & n2 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 193,
                                  "end_byte": 194,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 195,
                                  "end_byte": 201,
                                  "text": "\"%d%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 195,
                                      "end_byte": 196,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 196,
                                      "end_byte": 200,
                                      "text": "%d%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 200,
                                      "end_byte": 201,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 202,
                                  "end_byte": 203,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 204,
                                  "end_byte": 208,
                                  "text": "& n1",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 204,
                                      "end_byte": 205,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 206,
                                      "end_byte": 208,
                                      "text": "n1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 209,
                                  "end_byte": 210,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 211,
                                  "end_byte": 215,
                                  "text": "& n2",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 211,
                                      "end_byte": 212,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 213,
                                      "end_byte": 215,
                                      "text": "n2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 216,
                                  "end_byte": 217,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 218,
                          "end_byte": 219,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 220,
                      "end_byte": 241,
                      "text": "x = gcd ( n1 , n2 ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 220,
                          "end_byte": 239,
                          "text": "x = gcd ( n1 , n2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 220,
                              "end_byte": 221,
                              "text": "x",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 222,
                              "end_byte": 223,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 224,
                              "end_byte": 239,
                              "text": "gcd ( n1 , n2 )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 224,
                                  "end_byte": 227,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 228,
                                  "end_byte": 239,
                                  "text": "( n1 , n2 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 228,
                                      "end_byte": 229,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 230,
                                      "end_byte": 232,
                                      "text": "n1",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 233,
                                      "end_byte": 234,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 235,
                                      "end_byte": 237,
                                      "text": "n2",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 238,
                                      "end_byte": 239,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 240,
                          "end_byte": 241,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 242,
                      "end_byte": 265,
                      "text": "printf ( \"%d\\t\" , x ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 242,
                          "end_byte": 263,
                          "text": "printf ( \"%d\\t\" , x )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 242,
                              "end_byte": 248,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 249,
                              "end_byte": 263,
                              "text": "( \"%d\\t\" , x )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 249,
                                  "end_byte": 250,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 251,
                                  "end_byte": 257,
                                  "text": "\"%d\\t\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 251,
                                      "end_byte": 252,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 252,
                                      "end_byte": 254,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 254,
                                      "end_byte": 256,
                                      "text": "\\t",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 256,
                                      "end_byte": 257,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 258,
                                  "end_byte": 259,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 260,
                                  "end_byte": 261,
                                  "text": "x",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 262,
                                  "end_byte": 263,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 264,
                          "end_byte": 265,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 266,
                      "end_byte": 287,
                      "text": "y = lcm ( n1 , n2 ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 266,
                          "end_byte": 285,
                          "text": "y = lcm ( n1 , n2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 266,
                              "end_byte": 267,
                              "text": "y",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 268,
                              "end_byte": 269,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 270,
                              "end_byte": 285,
                              "text": "lcm ( n1 , n2 )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 270,
                                  "end_byte": 273,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 274,
                                  "end_byte": 285,
                                  "text": "( n1 , n2 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 274,
                                      "end_byte": 275,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 276,
                                      "end_byte": 278,
                                      "text": "n1",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 279,
                                      "end_byte": 280,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 281,
                                      "end_byte": 283,
                                      "text": "n2",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 284,
                                      "end_byte": 285,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 286,
                          "end_byte": 287,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 288,
                      "end_byte": 311,
                      "text": "printf ( \"%d\\n\" , y ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 288,
                          "end_byte": 309,
                          "text": "printf ( \"%d\\n\" , y )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 288,
                              "end_byte": 294,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 295,
                              "end_byte": 309,
                              "text": "( \"%d\\n\" , y )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 295,
                                  "end_byte": 296,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 297,
                                  "end_byte": 303,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 297,
                                      "end_byte": 298,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 298,
                                      "end_byte": 300,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 300,
                                      "end_byte": 302,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 302,
                                      "end_byte": 303,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 304,
                                  "end_byte": 305,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 306,
                                  "end_byte": 307,
                                  "text": "y",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 308,
                                  "end_byte": 309,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 310,
                          "end_byte": 311,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 312,
                      "end_byte": 313,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 314,
              "end_byte": 315,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 316,
      "end_byte": 432,
      "text": "int gcd ( int n1 , int n2 ) { while ( n1 != n2 ) { if ( n1 > n2 ) n1 = n1 - n2 ; else n2 = n2 - n1 ; } return n1 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 316,
          "end_byte": 319,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 320,
          "end_byte": 343,
          "text": "gcd ( int n1 , int n2 )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 320,
              "end_byte": 323,
              "text": "gcd",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 324,
              "end_byte": 343,
              "text": "( int n1 , int n2 )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 324,
                  "end_byte": 325,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 326,
                  "end_byte": 332,
                  "text": "int n1",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 326,
                      "end_byte": 329,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 330,
                      "end_byte": 332,
                      "text": "n1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 333,
                  "end_byte": 334,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 335,
                  "end_byte": 341,
                  "text": "int n2",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 335,
                      "end_byte": 338,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 339,
                      "end_byte": 341,
                      "text": "n2",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 342,
                  "end_byte": 343,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 344,
          "end_byte": 432,
          "text": "{ while ( n1 != n2 ) { if ( n1 > n2 ) n1 = n1 - n2 ; else n2 = n2 - n1 ; } return n1 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 344,
              "end_byte": 345,
              "text": "{",
              "children": []
            },
            {
              "type": "while_statement",
              "start_byte": 346,
              "end_byte": 418,
              "text": "while ( n1 != n2 ) { if ( n1 > n2 ) n1 = n1 - n2 ; else n2 = n2 - n1 ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 346,
                  "end_byte": 351,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 352,
                  "end_byte": 364,
                  "text": "( n1 != n2 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 352,
                      "end_byte": 353,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 354,
                      "end_byte": 362,
                      "text": "n1 != n2",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 354,
                          "end_byte": 356,
                          "text": "n1",
                          "children": []
                        },
                        {
                          "type": "!=",
                          "start_byte": 357,
                          "end_byte": 359,
                          "text": "!=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 360,
                          "end_byte": 362,
                          "text": "n2",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 363,
                      "end_byte": 364,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 365,
                  "end_byte": 418,
                  "text": "{ if ( n1 > n2 ) n1 = n1 - n2 ; else n2 = n2 - n1 ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 365,
                      "end_byte": 366,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 367,
                      "end_byte": 416,
                      "text": "if ( n1 > n2 ) n1 = n1 - n2 ; else n2 = n2 - n1 ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 367,
                          "end_byte": 369,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 370,
                          "end_byte": 381,
                          "text": "( n1 > n2 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 370,
                              "end_byte": 371,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 372,
                              "end_byte": 379,
                              "text": "n1 > n2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 372,
                                  "end_byte": 374,
                                  "text": "n1",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 375,
                                  "end_byte": 376,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 377,
                                  "end_byte": 379,
                                  "text": "n2",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 380,
                              "end_byte": 381,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 382,
                          "end_byte": 396,
                          "text": "n1 = n1 - n2 ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 382,
                              "end_byte": 394,
                              "text": "n1 = n1 - n2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 382,
                                  "end_byte": 384,
                                  "text": "n1",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 385,
                                  "end_byte": 386,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 387,
                                  "end_byte": 394,
                                  "text": "n1 - n2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 387,
                                      "end_byte": 389,
                                      "text": "n1",
                                      "children": []
                                    },
                                    {
                                      "type": "-",
                                      "start_byte": 390,
                                      "end_byte": 391,
                                      "text": "-",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 392,
                                      "end_byte": 394,
                                      "text": "n2",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 395,
                              "end_byte": 396,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 397,
                          "end_byte": 416,
                          "text": "else n2 = n2 - n1 ;",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 397,
                              "end_byte": 401,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 402,
                              "end_byte": 416,
                              "text": "n2 = n2 - n1 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 402,
                                  "end_byte": 414,
                                  "text": "n2 = n2 - n1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 402,
                                      "end_byte": 404,
                                      "text": "n2",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 405,
                                      "end_byte": 406,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 407,
                                      "end_byte": 414,
                                      "text": "n2 - n1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 407,
                                          "end_byte": 409,
                                          "text": "n2",
                                          "children": []
                                        },
                                        {
                                          "type": "-",
                                          "start_byte": 410,
                                          "end_byte": 411,
                                          "text": "-",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 412,
                                          "end_byte": 414,
                                          "text": "n1",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 415,
                                  "end_byte": 416,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 417,
                      "end_byte": 418,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 419,
              "end_byte": 430,
              "text": "return n1 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 419,
                  "end_byte": 425,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 426,
                  "end_byte": 428,
                  "text": "n1",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 429,
                  "end_byte": 430,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 431,
              "end_byte": 432,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 433,
      "end_byte": 587,
      "text": "int lcm ( int n1 , int n2 ) { int x , y ; x = n1 , y = n2 ; while ( n1 != n2 ) { if ( n1 > n2 ) n1 = n1 - n2 ; else n2 = n2 - n1 ; } return x * y / n1 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 433,
          "end_byte": 436,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 437,
          "end_byte": 460,
          "text": "lcm ( int n1 , int n2 )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 437,
              "end_byte": 440,
              "text": "lcm",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 441,
              "end_byte": 460,
              "text": "( int n1 , int n2 )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 441,
                  "end_byte": 442,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 443,
                  "end_byte": 449,
                  "text": "int n1",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 443,
                      "end_byte": 446,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 447,
                      "end_byte": 449,
                      "text": "n1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 450,
                  "end_byte": 451,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 452,
                  "end_byte": 458,
                  "text": "int n2",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 452,
                      "end_byte": 455,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 456,
                      "end_byte": 458,
                      "text": "n2",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 459,
                  "end_byte": 460,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 461,
          "end_byte": 587,
          "text": "{ int x , y ; x = n1 , y = n2 ; while ( n1 != n2 ) { if ( n1 > n2 ) n1 = n1 - n2 ; else n2 = n2 - n1 ; } return x * y / n1 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 461,
              "end_byte": 462,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 463,
              "end_byte": 474,
              "text": "int x , y ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 463,
                  "end_byte": 466,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 467,
                  "end_byte": 468,
                  "text": "x",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 469,
                  "end_byte": 470,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 471,
                  "end_byte": 472,
                  "text": "y",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 473,
                  "end_byte": 474,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 475,
              "end_byte": 492,
              "text": "x = n1 , y = n2 ;",
              "children": [
                {
                  "type": "comma_expression",
                  "start_byte": 475,
                  "end_byte": 490,
                  "text": "x = n1 , y = n2",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start_byte": 475,
                      "end_byte": 481,
                      "text": "x = n1",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 475,
                          "end_byte": 476,
                          "text": "x",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 477,
                          "end_byte": 478,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 479,
                          "end_byte": 481,
                          "text": "n1",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ",",
                      "start_byte": 482,
                      "end_byte": 483,
                      "text": ",",
                      "children": []
                    },
                    {
                      "type": "assignment_expression",
                      "start_byte": 484,
                      "end_byte": 490,
                      "text": "y = n2",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 484,
                          "end_byte": 485,
                          "text": "y",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 486,
                          "end_byte": 487,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 488,
                          "end_byte": 490,
                          "text": "n2",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 491,
                  "end_byte": 492,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 493,
              "end_byte": 565,
              "text": "while ( n1 != n2 ) { if ( n1 > n2 ) n1 = n1 - n2 ; else n2 = n2 - n1 ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 493,
                  "end_byte": 498,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 499,
                  "end_byte": 511,
                  "text": "( n1 != n2 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 499,
                      "end_byte": 500,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 501,
                      "end_byte": 509,
                      "text": "n1 != n2",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 501,
                          "end_byte": 503,
                          "text": "n1",
                          "children": []
                        },
                        {
                          "type": "!=",
                          "start_byte": 504,
                          "end_byte": 506,
                          "text": "!=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 507,
                          "end_byte": 509,
                          "text": "n2",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 510,
                      "end_byte": 511,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 512,
                  "end_byte": 565,
                  "text": "{ if ( n1 > n2 ) n1 = n1 - n2 ; else n2 = n2 - n1 ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 512,
                      "end_byte": 513,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 514,
                      "end_byte": 563,
                      "text": "if ( n1 > n2 ) n1 = n1 - n2 ; else n2 = n2 - n1 ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 514,
                          "end_byte": 516,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 517,
                          "end_byte": 528,
                          "text": "( n1 > n2 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 517,
                              "end_byte": 518,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 519,
                              "end_byte": 526,
                              "text": "n1 > n2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 519,
                                  "end_byte": 521,
                                  "text": "n1",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 522,
                                  "end_byte": 523,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 524,
                                  "end_byte": 526,
                                  "text": "n2",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 527,
                              "end_byte": 528,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 529,
                          "end_byte": 543,
                          "text": "n1 = n1 - n2 ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 529,
                              "end_byte": 541,
                              "text": "n1 = n1 - n2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 529,
                                  "end_byte": 531,
                                  "text": "n1",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 532,
                                  "end_byte": 533,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 534,
                                  "end_byte": 541,
                                  "text": "n1 - n2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 534,
                                      "end_byte": 536,
                                      "text": "n1",
                                      "children": []
                                    },
                                    {
                                      "type": "-",
                                      "start_byte": 537,
                                      "end_byte": 538,
                                      "text": "-",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 539,
                                      "end_byte": 541,
                                      "text": "n2",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 542,
                              "end_byte": 543,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 544,
                          "end_byte": 563,
                          "text": "else n2 = n2 - n1 ;",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 544,
                              "end_byte": 548,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 549,
                              "end_byte": 563,
                              "text": "n2 = n2 - n1 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 549,
                                  "end_byte": 561,
                                  "text": "n2 = n2 - n1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 549,
                                      "end_byte": 551,
                                      "text": "n2",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 552,
                                      "end_byte": 553,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 554,
                                      "end_byte": 561,
                                      "text": "n2 - n1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 554,
                                          "end_byte": 556,
                                          "text": "n2",
                                          "children": []
                                        },
                                        {
                                          "type": "-",
                                          "start_byte": 557,
                                          "end_byte": 558,
                                          "text": "-",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 559,
                                          "end_byte": 561,
                                          "text": "n1",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 562,
                                  "end_byte": 563,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 564,
                      "end_byte": 565,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 566,
              "end_byte": 585,
              "text": "return x * y / n1 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 566,
                  "end_byte": 572,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 573,
                  "end_byte": 583,
                  "text": "x * y / n1",
                  "children": [
                    {
                      "type": "binary_expression",
                      "start_byte": 573,
                      "end_byte": 578,
                      "text": "x * y",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 573,
                          "end_byte": 574,
                          "text": "x",
                          "children": []
                        },
                        {
                          "type": "*",
                          "start_byte": 575,
                          "end_byte": 576,
                          "text": "*",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 577,
                          "end_byte": 578,
                          "text": "y",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "/",
                      "start_byte": 579,
                      "end_byte": 580,
                      "text": "/",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 581,
                      "end_byte": 583,
                      "text": "n1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 584,
                  "end_byte": 585,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 586,
              "end_byte": 587,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}