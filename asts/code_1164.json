{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 487,
  "text": "long long int min ( long long int a , long long int b ) { if ( a > b ) return b ; else return a ; } int main ( ) { int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { long long int p , q , l , g , i ; scanf ( \"%lld %lld\" , & p , & q ) ; if ( p > q && p % q == 0 ) { g = q ; l = p ; } else if ( q > p && q % p == 0 ) { g = p ; l = q ; } else { for ( i = 1 ; i < min ( p , q ) ; i ++ ) { if ( p % i == 0 && q % i == 0 ) g = i ; } l = p * q ; } printf ( \"%lld %lld\\n\" , g , l ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 99,
      "text": "long long int min ( long long int a , long long int b ) { if ( a > b ) return b ; else return a ; }",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 0,
          "end_byte": 13,
          "text": "long long int",
          "children": [
            {
              "type": "long",
              "start_byte": 0,
              "end_byte": 4,
              "text": "long",
              "children": []
            },
            {
              "type": "long",
              "start_byte": 5,
              "end_byte": 9,
              "text": "long",
              "children": []
            },
            {
              "type": "primitive_type",
              "start_byte": 10,
              "end_byte": 13,
              "text": "int",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 14,
          "end_byte": 55,
          "text": "min ( long long int a , long long int b )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 14,
              "end_byte": 17,
              "text": "min",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 18,
              "end_byte": 55,
              "text": "( long long int a , long long int b )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 18,
                  "end_byte": 19,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 20,
                  "end_byte": 35,
                  "text": "long long int a",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 20,
                      "end_byte": 33,
                      "text": "long long int",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 20,
                          "end_byte": 24,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "long",
                          "start_byte": 25,
                          "end_byte": 29,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "primitive_type",
                          "start_byte": 30,
                          "end_byte": 33,
                          "text": "int",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 34,
                      "end_byte": 35,
                      "text": "a",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 36,
                  "end_byte": 37,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 38,
                  "end_byte": 53,
                  "text": "long long int b",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 38,
                      "end_byte": 51,
                      "text": "long long int",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 38,
                          "end_byte": 42,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "long",
                          "start_byte": 43,
                          "end_byte": 47,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "primitive_type",
                          "start_byte": 48,
                          "end_byte": 51,
                          "text": "int",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 52,
                      "end_byte": 53,
                      "text": "b",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 54,
                  "end_byte": 55,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 56,
          "end_byte": 99,
          "text": "{ if ( a > b ) return b ; else return a ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 56,
              "end_byte": 57,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 58,
              "end_byte": 97,
              "text": "if ( a > b ) return b ; else return a ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 58,
                  "end_byte": 60,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 61,
                  "end_byte": 70,
                  "text": "( a > b )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 61,
                      "end_byte": 62,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 63,
                      "end_byte": 68,
                      "text": "a > b",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 63,
                          "end_byte": 64,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 65,
                          "end_byte": 66,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 67,
                          "end_byte": 68,
                          "text": "b",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 69,
                      "end_byte": 70,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 71,
                  "end_byte": 81,
                  "text": "return b ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 71,
                      "end_byte": 77,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 78,
                      "end_byte": 79,
                      "text": "b",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 80,
                      "end_byte": 81,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 82,
                  "end_byte": 97,
                  "text": "else return a ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 82,
                      "end_byte": 86,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 87,
                      "end_byte": 97,
                      "text": "return a ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 87,
                          "end_byte": 93,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 94,
                          "end_byte": 95,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 96,
                          "end_byte": 97,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 98,
              "end_byte": 99,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 100,
      "end_byte": 487,
      "text": "int main ( ) { int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { long long int p , q , l , g , i ; scanf ( \"%lld %lld\" , & p , & q ) ; if ( p > q && p % q == 0 ) { g = q ; l = p ; } else if ( q > p && q % p == 0 ) { g = p ; l = q ; } else { for ( i = 1 ; i < min ( p , q ) ; i ++ ) { if ( p % i == 0 && q % i == 0 ) g = i ; } l = p * q ; } printf ( \"%lld %lld\\n\" , g , l ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 100,
          "end_byte": 103,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 104,
          "end_byte": 112,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 104,
              "end_byte": 108,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 109,
              "end_byte": 112,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 109,
                  "end_byte": 110,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 111,
                  "end_byte": 112,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 113,
          "end_byte": 487,
          "text": "{ int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { long long int p , q , l , g , i ; scanf ( \"%lld %lld\" , & p , & q ) ; if ( p > q && p % q == 0 ) { g = q ; l = p ; } else if ( q > p && q % p == 0 ) { g = p ; l = q ; } else { for ( i = 1 ; i < min ( p , q ) ; i ++ ) { if ( p % i == 0 && q % i == 0 ) g = i ; } l = p * q ; } printf ( \"%lld %lld\\n\" , g , l ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 113,
              "end_byte": 114,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 115,
              "end_byte": 122,
              "text": "int t ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 115,
                  "end_byte": 118,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 119,
                  "end_byte": 120,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 121,
                  "end_byte": 122,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 123,
              "end_byte": 145,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 123,
                  "end_byte": 143,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 123,
                      "end_byte": 128,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 129,
                      "end_byte": 143,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 129,
                          "end_byte": 130,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 131,
                          "end_byte": 135,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 131,
                              "end_byte": 132,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 132,
                              "end_byte": 134,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 134,
                              "end_byte": 135,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 136,
                          "end_byte": 137,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 138,
                          "end_byte": 141,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 138,
                              "end_byte": 139,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 140,
                              "end_byte": 141,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 142,
                          "end_byte": 143,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 144,
                  "end_byte": 145,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 146,
              "end_byte": 474,
              "text": "while ( t -- ) { long long int p , q , l , g , i ; scanf ( \"%lld %lld\" , & p , & q ) ; if ( p > q && p % q == 0 ) { g = q ; l = p ; } else if ( q > p && q % p == 0 ) { g = p ; l = q ; } else { for ( i = 1 ; i < min ( p , q ) ; i ++ ) { if ( p % i == 0 && q % i == 0 ) g = i ; } l = p * q ; } printf ( \"%lld %lld\\n\" , g , l ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 146,
                  "end_byte": 151,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 152,
                  "end_byte": 160,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 152,
                      "end_byte": 153,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 154,
                      "end_byte": 158,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 154,
                          "end_byte": 155,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 156,
                          "end_byte": 158,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 159,
                      "end_byte": 160,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 161,
                  "end_byte": 474,
                  "text": "{ long long int p , q , l , g , i ; scanf ( \"%lld %lld\" , & p , & q ) ; if ( p > q && p % q == 0 ) { g = q ; l = p ; } else if ( q > p && q % p == 0 ) { g = p ; l = q ; } else { for ( i = 1 ; i < min ( p , q ) ; i ++ ) { if ( p % i == 0 && q % i == 0 ) g = i ; } l = p * q ; } printf ( \"%lld %lld\\n\" , g , l ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 161,
                      "end_byte": 162,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "declaration",
                      "start_byte": 163,
                      "end_byte": 196,
                      "text": "long long int p , q , l , g , i ;",
                      "children": [
                        {
                          "type": "sized_type_specifier",
                          "start_byte": 163,
                          "end_byte": 176,
                          "text": "long long int",
                          "children": [
                            {
                              "type": "long",
                              "start_byte": 163,
                              "end_byte": 167,
                              "text": "long",
                              "children": []
                            },
                            {
                              "type": "long",
                              "start_byte": 168,
                              "end_byte": 172,
                              "text": "long",
                              "children": []
                            },
                            {
                              "type": "primitive_type",
                              "start_byte": 173,
                              "end_byte": 176,
                              "text": "int",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "identifier",
                          "start_byte": 177,
                          "end_byte": 178,
                          "text": "p",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 179,
                          "end_byte": 180,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 181,
                          "end_byte": 182,
                          "text": "q",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 183,
                          "end_byte": 184,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 185,
                          "end_byte": 186,
                          "text": "l",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 187,
                          "end_byte": 188,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 189,
                          "end_byte": 190,
                          "text": "g",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 191,
                          "end_byte": 192,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 193,
                          "end_byte": 194,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 195,
                          "end_byte": 196,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 197,
                      "end_byte": 232,
                      "text": "scanf ( \"%lld %lld\" , & p , & q ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 197,
                          "end_byte": 230,
                          "text": "scanf ( \"%lld %lld\" , & p , & q )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 197,
                              "end_byte": 202,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 203,
                              "end_byte": 230,
                              "text": "( \"%lld %lld\" , & p , & q )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 203,
                                  "end_byte": 204,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 205,
                                  "end_byte": 216,
                                  "text": "\"%lld %lld\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 205,
                                      "end_byte": 206,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 206,
                                      "end_byte": 215,
                                      "text": "%lld %lld",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 215,
                                      "end_byte": 216,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 217,
                                  "end_byte": 218,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 219,
                                  "end_byte": 222,
                                  "text": "& p",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 219,
                                      "end_byte": 220,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 221,
                                      "end_byte": 222,
                                      "text": "p",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 223,
                                  "end_byte": 224,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 225,
                                  "end_byte": 228,
                                  "text": "& q",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 225,
                                      "end_byte": 226,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 227,
                                      "end_byte": 228,
                                      "text": "q",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 229,
                                  "end_byte": 230,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 231,
                          "end_byte": 232,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 233,
                      "end_byte": 437,
                      "text": "if ( p > q && p % q == 0 ) { g = q ; l = p ; } else if ( q > p && q % p == 0 ) { g = p ; l = q ; } else { for ( i = 1 ; i < min ( p , q ) ; i ++ ) { if ( p % i == 0 && q % i == 0 ) g = i ; } l = p * q ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 233,
                          "end_byte": 235,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 236,
                          "end_byte": 259,
                          "text": "( p > q && p % q == 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 236,
                              "end_byte": 237,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 238,
                              "end_byte": 257,
                              "text": "p > q && p % q == 0",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 238,
                                  "end_byte": 243,
                                  "text": "p > q",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 238,
                                      "end_byte": 239,
                                      "text": "p",
                                      "children": []
                                    },
                                    {
                                      "type": ">",
                                      "start_byte": 240,
                                      "end_byte": 241,
                                      "text": ">",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 242,
                                      "end_byte": 243,
                                      "text": "q",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "&&",
                                  "start_byte": 244,
                                  "end_byte": 246,
                                  "text": "&&",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 247,
                                  "end_byte": 257,
                                  "text": "p % q == 0",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 247,
                                      "end_byte": 252,
                                      "text": "p % q",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 247,
                                          "end_byte": 248,
                                          "text": "p",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 249,
                                          "end_byte": 250,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 251,
                                          "end_byte": 252,
                                          "text": "q",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "==",
                                      "start_byte": 253,
                                      "end_byte": 255,
                                      "text": "==",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 256,
                                      "end_byte": 257,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 258,
                              "end_byte": 259,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 260,
                          "end_byte": 279,
                          "text": "{ g = q ; l = p ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 260,
                              "end_byte": 261,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 262,
                              "end_byte": 269,
                              "text": "g = q ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 262,
                                  "end_byte": 267,
                                  "text": "g = q",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 262,
                                      "end_byte": 263,
                                      "text": "g",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 264,
                                      "end_byte": 265,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 266,
                                      "end_byte": 267,
                                      "text": "q",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 268,
                                  "end_byte": 269,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 270,
                              "end_byte": 277,
                              "text": "l = p ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 270,
                                  "end_byte": 275,
                                  "text": "l = p",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 270,
                                      "end_byte": 271,
                                      "text": "l",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 272,
                                      "end_byte": 273,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 274,
                                      "end_byte": 275,
                                      "text": "p",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 276,
                                  "end_byte": 277,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 278,
                              "end_byte": 279,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 280,
                          "end_byte": 437,
                          "text": "else if ( q > p && q % p == 0 ) { g = p ; l = q ; } else { for ( i = 1 ; i < min ( p , q ) ; i ++ ) { if ( p % i == 0 && q % i == 0 ) g = i ; } l = p * q ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 280,
                              "end_byte": 284,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 285,
                              "end_byte": 437,
                              "text": "if ( q > p && q % p == 0 ) { g = p ; l = q ; } else { for ( i = 1 ; i < min ( p , q ) ; i ++ ) { if ( p % i == 0 && q % i == 0 ) g = i ; } l = p * q ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 285,
                                  "end_byte": 287,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 288,
                                  "end_byte": 311,
                                  "text": "( q > p && q % p == 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 288,
                                      "end_byte": 289,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 290,
                                      "end_byte": 309,
                                      "text": "q > p && q % p == 0",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 290,
                                          "end_byte": 295,
                                          "text": "q > p",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 290,
                                              "end_byte": 291,
                                              "text": "q",
                                              "children": []
                                            },
                                            {
                                              "type": ">",
                                              "start_byte": 292,
                                              "end_byte": 293,
                                              "text": ">",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 294,
                                              "end_byte": 295,
                                              "text": "p",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "&&",
                                          "start_byte": 296,
                                          "end_byte": 298,
                                          "text": "&&",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 299,
                                          "end_byte": 309,
                                          "text": "q % p == 0",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 299,
                                              "end_byte": 304,
                                              "text": "q % p",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 299,
                                                  "end_byte": 300,
                                                  "text": "q",
                                                  "children": []
                                                },
                                                {
                                                  "type": "%",
                                                  "start_byte": 301,
                                                  "end_byte": 302,
                                                  "text": "%",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 303,
                                                  "end_byte": 304,
                                                  "text": "p",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "==",
                                              "start_byte": 305,
                                              "end_byte": 307,
                                              "text": "==",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 308,
                                              "end_byte": 309,
                                              "text": "0",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 310,
                                      "end_byte": 311,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 312,
                                  "end_byte": 331,
                                  "text": "{ g = p ; l = q ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 312,
                                      "end_byte": 313,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 314,
                                      "end_byte": 321,
                                      "text": "g = p ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 314,
                                          "end_byte": 319,
                                          "text": "g = p",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 314,
                                              "end_byte": 315,
                                              "text": "g",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 316,
                                              "end_byte": 317,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 318,
                                              "end_byte": 319,
                                              "text": "p",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 320,
                                          "end_byte": 321,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 322,
                                      "end_byte": 329,
                                      "text": "l = q ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 322,
                                          "end_byte": 327,
                                          "text": "l = q",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 322,
                                              "end_byte": 323,
                                              "text": "l",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 324,
                                              "end_byte": 325,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 326,
                                              "end_byte": 327,
                                              "text": "q",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 328,
                                          "end_byte": 329,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 330,
                                      "end_byte": 331,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start_byte": 332,
                                  "end_byte": 437,
                                  "text": "else { for ( i = 1 ; i < min ( p , q ) ; i ++ ) { if ( p % i == 0 && q % i == 0 ) g = i ; } l = p * q ; }",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start_byte": 332,
                                      "end_byte": 336,
                                      "text": "else",
                                      "children": []
                                    },
                                    {
                                      "type": "compound_statement",
                                      "start_byte": 337,
                                      "end_byte": 437,
                                      "text": "{ for ( i = 1 ; i < min ( p , q ) ; i ++ ) { if ( p % i == 0 && q % i == 0 ) g = i ; } l = p * q ; }",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start_byte": 337,
                                          "end_byte": 338,
                                          "text": "{",
                                          "children": []
                                        },
                                        {
                                          "type": "for_statement",
                                          "start_byte": 339,
                                          "end_byte": 423,
                                          "text": "for ( i = 1 ; i < min ( p , q ) ; i ++ ) { if ( p % i == 0 && q % i == 0 ) g = i ; }",
                                          "children": [
                                            {
                                              "type": "for",
                                              "start_byte": 339,
                                              "end_byte": 342,
                                              "text": "for",
                                              "children": []
                                            },
                                            {
                                              "type": "(",
                                              "start_byte": 343,
                                              "end_byte": 344,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 345,
                                              "end_byte": 350,
                                              "text": "i = 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 345,
                                                  "end_byte": 346,
                                                  "text": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "=",
                                                  "start_byte": 347,
                                                  "end_byte": 348,
                                                  "text": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 349,
                                                  "end_byte": 350,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 351,
                                              "end_byte": 352,
                                              "text": ";",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 353,
                                              "end_byte": 370,
                                              "text": "i < min ( p , q )",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 353,
                                                  "end_byte": 354,
                                                  "text": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "<",
                                                  "start_byte": 355,
                                                  "end_byte": 356,
                                                  "text": "<",
                                                  "children": []
                                                },
                                                {
                                                  "type": "call_expression",
                                                  "start_byte": 357,
                                                  "end_byte": 370,
                                                  "text": "min ( p , q )",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 357,
                                                      "end_byte": 360,
                                                      "text": "min",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "argument_list",
                                                      "start_byte": 361,
                                                      "end_byte": 370,
                                                      "text": "( p , q )",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start_byte": 361,
                                                          "end_byte": 362,
                                                          "text": "(",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 363,
                                                          "end_byte": 364,
                                                          "text": "p",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": ",",
                                                          "start_byte": 365,
                                                          "end_byte": 366,
                                                          "text": ",",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 367,
                                                          "end_byte": 368,
                                                          "text": "q",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start_byte": 369,
                                                          "end_byte": 370,
                                                          "text": ")",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 371,
                                              "end_byte": 372,
                                              "text": ";",
                                              "children": []
                                            },
                                            {
                                              "type": "update_expression",
                                              "start_byte": 373,
                                              "end_byte": 377,
                                              "text": "i ++",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 373,
                                                  "end_byte": 374,
                                                  "text": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "++",
                                                  "start_byte": 375,
                                                  "end_byte": 377,
                                                  "text": "++",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 378,
                                              "end_byte": 379,
                                              "text": ")",
                                              "children": []
                                            },
                                            {
                                              "type": "compound_statement",
                                              "start_byte": 380,
                                              "end_byte": 423,
                                              "text": "{ if ( p % i == 0 && q % i == 0 ) g = i ; }",
                                              "children": [
                                                {
                                                  "type": "{",
                                                  "start_byte": 380,
                                                  "end_byte": 381,
                                                  "text": "{",
                                                  "children": []
                                                },
                                                {
                                                  "type": "if_statement",
                                                  "start_byte": 382,
                                                  "end_byte": 421,
                                                  "text": "if ( p % i == 0 && q % i == 0 ) g = i ;",
                                                  "children": [
                                                    {
                                                      "type": "if",
                                                      "start_byte": 382,
                                                      "end_byte": 384,
                                                      "text": "if",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "condition_clause",
                                                      "start_byte": 385,
                                                      "end_byte": 413,
                                                      "text": "( p % i == 0 && q % i == 0 )",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start_byte": 385,
                                                          "end_byte": 386,
                                                          "text": "(",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 387,
                                                          "end_byte": 411,
                                                          "text": "p % i == 0 && q % i == 0",
                                                          "children": [
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 387,
                                                              "end_byte": 397,
                                                              "text": "p % i == 0",
                                                              "children": [
                                                                {
                                                                  "type": "binary_expression",
                                                                  "start_byte": 387,
                                                                  "end_byte": 392,
                                                                  "text": "p % i",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 387,
                                                                      "end_byte": 388,
                                                                      "text": "p",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "%",
                                                                      "start_byte": 389,
                                                                      "end_byte": 390,
                                                                      "text": "%",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 391,
                                                                      "end_byte": 392,
                                                                      "text": "i",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "==",
                                                                  "start_byte": 393,
                                                                  "end_byte": 395,
                                                                  "text": "==",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "number_literal",
                                                                  "start_byte": 396,
                                                                  "end_byte": 397,
                                                                  "text": "0",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "&&",
                                                              "start_byte": 398,
                                                              "end_byte": 400,
                                                              "text": "&&",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 401,
                                                              "end_byte": 411,
                                                              "text": "q % i == 0",
                                                              "children": [
                                                                {
                                                                  "type": "binary_expression",
                                                                  "start_byte": 401,
                                                                  "end_byte": 406,
                                                                  "text": "q % i",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 401,
                                                                      "end_byte": 402,
                                                                      "text": "q",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "%",
                                                                      "start_byte": 403,
                                                                      "end_byte": 404,
                                                                      "text": "%",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 405,
                                                                      "end_byte": 406,
                                                                      "text": "i",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "==",
                                                                  "start_byte": 407,
                                                                  "end_byte": 409,
                                                                  "text": "==",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "number_literal",
                                                                  "start_byte": 410,
                                                                  "end_byte": 411,
                                                                  "text": "0",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start_byte": 412,
                                                          "end_byte": 413,
                                                          "text": ")",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "expression_statement",
                                                      "start_byte": 414,
                                                      "end_byte": 421,
                                                      "text": "g = i ;",
                                                      "children": [
                                                        {
                                                          "type": "assignment_expression",
                                                          "start_byte": 414,
                                                          "end_byte": 419,
                                                          "text": "g = i",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 414,
                                                              "end_byte": 415,
                                                              "text": "g",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "=",
                                                              "start_byte": 416,
                                                              "end_byte": 417,
                                                              "text": "=",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 418,
                                                              "end_byte": 419,
                                                              "text": "i",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ";",
                                                          "start_byte": 420,
                                                          "end_byte": 421,
                                                          "text": ";",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "}",
                                                  "start_byte": 422,
                                                  "end_byte": 423,
                                                  "text": "}",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 424,
                                          "end_byte": 435,
                                          "text": "l = p * q ;",
                                          "children": [
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 424,
                                              "end_byte": 433,
                                              "text": "l = p * q",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 424,
                                                  "end_byte": 425,
                                                  "text": "l",
                                                  "children": []
                                                },
                                                {
                                                  "type": "=",
                                                  "start_byte": 426,
                                                  "end_byte": 427,
                                                  "text": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 428,
                                                  "end_byte": 433,
                                                  "text": "p * q",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 428,
                                                      "end_byte": 429,
                                                      "text": "p",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "*",
                                                      "start_byte": 430,
                                                      "end_byte": 431,
                                                      "text": "*",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 432,
                                                      "end_byte": 433,
                                                      "text": "q",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 434,
                                              "end_byte": 435,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start_byte": 436,
                                          "end_byte": 437,
                                          "text": "}",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 438,
                      "end_byte": 472,
                      "text": "printf ( \"%lld %lld\\n\" , g , l ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 438,
                          "end_byte": 470,
                          "text": "printf ( \"%lld %lld\\n\" , g , l )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 438,
                              "end_byte": 444,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 445,
                              "end_byte": 470,
                              "text": "( \"%lld %lld\\n\" , g , l )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 445,
                                  "end_byte": 446,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 447,
                                  "end_byte": 460,
                                  "text": "\"%lld %lld\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 447,
                                      "end_byte": 448,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 448,
                                      "end_byte": 457,
                                      "text": "%lld %lld",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 457,
                                      "end_byte": 459,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 459,
                                      "end_byte": 460,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 461,
                                  "end_byte": 462,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 463,
                                  "end_byte": 464,
                                  "text": "g",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 465,
                                  "end_byte": 466,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 467,
                                  "end_byte": 468,
                                  "text": "l",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 469,
                                  "end_byte": 470,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 471,
                          "end_byte": 472,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 473,
                      "end_byte": 474,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 475,
              "end_byte": 485,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 475,
                  "end_byte": 481,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 482,
                  "end_byte": 483,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 484,
                  "end_byte": 485,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 486,
              "end_byte": 487,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}