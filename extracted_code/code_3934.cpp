int n ; int findMaxOf ( int array [ ] ) { int max = 0 ; int i = 0 ; for ( i = 0 ; i < n ; i += 1 ) { if ( max < array [ i ] ) { max = array [ i ] ; } } return max ; } int main ( ) { int testcases = 0 ; scanf ( "%d" , & testcases ) ; int testcase = 0 ; for ( ; testcase < testcases ; testcase += 1 ) { scanf ( "%d" , & n ) ; int array [ n ] [ n ] ; int i = 0 , j = 0 ; for ( ; i < n ; i += 1 ) { for ( j = 0 ; j <= i ; j += 1 ) { scanf ( "%d" , & array [ i ] [ j ] ) ; } } for ( i = 0 ; i < n ; i += 1 ) { if ( i == 0 ) { continue ; } for ( j = 0 ; j < i ; j += 1 ) { if ( j == 0 ) { array [ i ] [ j ] += array [ i - 1 ] [ j ] ; } else { array [ i ] [ j ] += ( array [ i - 1 ] [ j ] > array [ i - 1 ] [ j - 1 ] ? array [ i - 1 ] [ j ] : array [ i - 1 ] [ j - 1 ] ) ; } } } printf ( "%d\n" , findMaxOf ( array [ n - 1 ] ) ) ; } return 0 ; }