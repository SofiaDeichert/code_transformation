{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 526,
  "text": "unsigned int gcd ( unsigned m , unsigned n ) ; int main ( ) { int n , a , b , i ; printf ( \"\\nenter the number of test cases: \" ) ; scanf ( \"%d\" , & n ) ; printf ( \"\\nFor each test cases,enter the two numbers which gcd is to be found:\" ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\\t%d\" , & a , & b ) ; printf ( \"%d\\t%d\" , gcd ( a , b ) , ( a * b ) / gcd ( a , b ) ) ; } return 0 ; } unsigned int gcd ( unsigned m , unsigned n ) { if ( n > m ) return gcd ( n , m ) ; if ( n == 0 ) return m ; else return gcd ( n , m % n ) ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 46,
      "text": "unsigned int gcd ( unsigned m , unsigned n ) ;",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 0,
          "end_byte": 12,
          "text": "unsigned int",
          "children": [
            {
              "type": "unsigned",
              "start_byte": 0,
              "end_byte": 8,
              "text": "unsigned",
              "children": []
            },
            {
              "type": "primitive_type",
              "start_byte": 9,
              "end_byte": 12,
              "text": "int",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 13,
          "end_byte": 44,
          "text": "gcd ( unsigned m , unsigned n )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 13,
              "end_byte": 16,
              "text": "gcd",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 17,
              "end_byte": 44,
              "text": "( unsigned m , unsigned n )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 17,
                  "end_byte": 18,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 19,
                  "end_byte": 29,
                  "text": "unsigned m",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 19,
                      "end_byte": 27,
                      "text": "unsigned",
                      "children": [
                        {
                          "type": "unsigned",
                          "start_byte": 19,
                          "end_byte": 27,
                          "text": "unsigned",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 28,
                      "end_byte": 29,
                      "text": "m",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 30,
                  "end_byte": 31,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 32,
                  "end_byte": 42,
                  "text": "unsigned n",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 32,
                      "end_byte": 40,
                      "text": "unsigned",
                      "children": [
                        {
                          "type": "unsigned",
                          "start_byte": 32,
                          "end_byte": 40,
                          "text": "unsigned",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 41,
                      "end_byte": 42,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 43,
                  "end_byte": 44,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 45,
          "end_byte": 46,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 47,
      "end_byte": 384,
      "text": "int main ( ) { int n , a , b , i ; printf ( \"\\nenter the number of test cases: \" ) ; scanf ( \"%d\" , & n ) ; printf ( \"\\nFor each test cases,enter the two numbers which gcd is to be found:\" ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\\t%d\" , & a , & b ) ; printf ( \"%d\\t%d\" , gcd ( a , b ) , ( a * b ) / gcd ( a , b ) ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 47,
          "end_byte": 50,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 51,
          "end_byte": 59,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 51,
              "end_byte": 55,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 56,
              "end_byte": 59,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 56,
                  "end_byte": 57,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 58,
                  "end_byte": 59,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 60,
          "end_byte": 384,
          "text": "{ int n , a , b , i ; printf ( \"\\nenter the number of test cases: \" ) ; scanf ( \"%d\" , & n ) ; printf ( \"\\nFor each test cases,enter the two numbers which gcd is to be found:\" ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\\t%d\" , & a , & b ) ; printf ( \"%d\\t%d\" , gcd ( a , b ) , ( a * b ) / gcd ( a , b ) ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 60,
              "end_byte": 61,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 62,
              "end_byte": 81,
              "text": "int n , a , b , i ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 62,
                  "end_byte": 65,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 66,
                  "end_byte": 67,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 68,
                  "end_byte": 69,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 70,
                  "end_byte": 71,
                  "text": "a",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 72,
                  "end_byte": 73,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 74,
                  "end_byte": 75,
                  "text": "b",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 76,
                  "end_byte": 77,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 78,
                  "end_byte": 79,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 80,
                  "end_byte": 81,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 82,
              "end_byte": 131,
              "text": "printf ( \"\\nenter the number of test cases: \" ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 82,
                  "end_byte": 129,
                  "text": "printf ( \"\\nenter the number of test cases: \" )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 82,
                      "end_byte": 88,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 89,
                      "end_byte": 129,
                      "text": "( \"\\nenter the number of test cases: \" )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 89,
                          "end_byte": 90,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 91,
                          "end_byte": 127,
                          "text": "\"\\nenter the number of test cases: \"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 91,
                              "end_byte": 92,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 92,
                              "end_byte": 94,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 94,
                              "end_byte": 126,
                              "text": "enter the number of test cases: ",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 126,
                              "end_byte": 127,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 128,
                          "end_byte": 129,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 130,
                  "end_byte": 131,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 132,
              "end_byte": 154,
              "text": "scanf ( \"%d\" , & n ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 132,
                  "end_byte": 152,
                  "text": "scanf ( \"%d\" , & n )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 132,
                      "end_byte": 137,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 138,
                      "end_byte": 152,
                      "text": "( \"%d\" , & n )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 138,
                          "end_byte": 139,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 140,
                          "end_byte": 144,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 140,
                              "end_byte": 141,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 141,
                              "end_byte": 143,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 143,
                              "end_byte": 144,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 145,
                          "end_byte": 146,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 147,
                          "end_byte": 150,
                          "text": "& n",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 147,
                              "end_byte": 148,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 149,
                              "end_byte": 150,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 151,
                          "end_byte": 152,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 153,
                  "end_byte": 154,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 155,
              "end_byte": 239,
              "text": "printf ( \"\\nFor each test cases,enter the two numbers which gcd is to be found:\" ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 155,
                  "end_byte": 237,
                  "text": "printf ( \"\\nFor each test cases,enter the two numbers which gcd is to be found:\" )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 155,
                      "end_byte": 161,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 162,
                      "end_byte": 237,
                      "text": "( \"\\nFor each test cases,enter the two numbers which gcd is to be found:\" )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 162,
                          "end_byte": 163,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 164,
                          "end_byte": 235,
                          "text": "\"\\nFor each test cases,enter the two numbers which gcd is to be found:\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 164,
                              "end_byte": 165,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 165,
                              "end_byte": 167,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 167,
                              "end_byte": 234,
                              "text": "For each test cases,enter the two numbers which gcd is to be found:",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 234,
                              "end_byte": 235,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 236,
                          "end_byte": 237,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 238,
                  "end_byte": 239,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 240,
              "end_byte": 371,
              "text": "for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\\t%d\" , & a , & b ) ; printf ( \"%d\\t%d\" , gcd ( a , b ) , ( a * b ) / gcd ( a , b ) ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 240,
                  "end_byte": 243,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 244,
                  "end_byte": 245,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 246,
                  "end_byte": 251,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 246,
                      "end_byte": 247,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 248,
                      "end_byte": 249,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 250,
                      "end_byte": 251,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 252,
                  "end_byte": 253,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 254,
                  "end_byte": 259,
                  "text": "i < n",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 254,
                      "end_byte": 255,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 256,
                      "end_byte": 257,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 258,
                      "end_byte": 259,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 260,
                  "end_byte": 261,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 262,
                  "end_byte": 266,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 262,
                      "end_byte": 263,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 264,
                      "end_byte": 266,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 267,
                  "end_byte": 268,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 269,
                  "end_byte": 371,
                  "text": "{ scanf ( \"%d\\t%d\" , & a , & b ) ; printf ( \"%d\\t%d\" , gcd ( a , b ) , ( a * b ) / gcd ( a , b ) ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 269,
                      "end_byte": 270,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 271,
                      "end_byte": 303,
                      "text": "scanf ( \"%d\\t%d\" , & a , & b ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 271,
                          "end_byte": 301,
                          "text": "scanf ( \"%d\\t%d\" , & a , & b )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 271,
                              "end_byte": 276,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 277,
                              "end_byte": 301,
                              "text": "( \"%d\\t%d\" , & a , & b )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 277,
                                  "end_byte": 278,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 279,
                                  "end_byte": 287,
                                  "text": "\"%d\\t%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 279,
                                      "end_byte": 280,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 280,
                                      "end_byte": 282,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 282,
                                      "end_byte": 284,
                                      "text": "\\t",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 284,
                                      "end_byte": 286,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 286,
                                      "end_byte": 287,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 288,
                                  "end_byte": 289,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 290,
                                  "end_byte": 293,
                                  "text": "& a",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 290,
                                      "end_byte": 291,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 292,
                                      "end_byte": 293,
                                      "text": "a",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 294,
                                  "end_byte": 295,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 296,
                                  "end_byte": 299,
                                  "text": "& b",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 296,
                                      "end_byte": 297,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 298,
                                      "end_byte": 299,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 300,
                                  "end_byte": 301,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 302,
                          "end_byte": 303,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 304,
                      "end_byte": 369,
                      "text": "printf ( \"%d\\t%d\" , gcd ( a , b ) , ( a * b ) / gcd ( a , b ) ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 304,
                          "end_byte": 367,
                          "text": "printf ( \"%d\\t%d\" , gcd ( a , b ) , ( a * b ) / gcd ( a , b ) )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 304,
                              "end_byte": 310,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 311,
                              "end_byte": 367,
                              "text": "( \"%d\\t%d\" , gcd ( a , b ) , ( a * b ) / gcd ( a , b ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 311,
                                  "end_byte": 312,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 313,
                                  "end_byte": 321,
                                  "text": "\"%d\\t%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 313,
                                      "end_byte": 314,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 314,
                                      "end_byte": 316,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 316,
                                      "end_byte": 318,
                                      "text": "\\t",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 318,
                                      "end_byte": 320,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 320,
                                      "end_byte": 321,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 322,
                                  "end_byte": 323,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 324,
                                  "end_byte": 337,
                                  "text": "gcd ( a , b )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 324,
                                      "end_byte": 327,
                                      "text": "gcd",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 328,
                                      "end_byte": 337,
                                      "text": "( a , b )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 328,
                                          "end_byte": 329,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 330,
                                          "end_byte": 331,
                                          "text": "a",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 332,
                                          "end_byte": 333,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 334,
                                          "end_byte": 335,
                                          "text": "b",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 336,
                                          "end_byte": 337,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 338,
                                  "end_byte": 339,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 340,
                                  "end_byte": 365,
                                  "text": "( a * b ) / gcd ( a , b )",
                                  "children": [
                                    {
                                      "type": "parenthesized_expression",
                                      "start_byte": 340,
                                      "end_byte": 349,
                                      "text": "( a * b )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 340,
                                          "end_byte": 341,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 342,
                                          "end_byte": 347,
                                          "text": "a * b",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 342,
                                              "end_byte": 343,
                                              "text": "a",
                                              "children": []
                                            },
                                            {
                                              "type": "*",
                                              "start_byte": 344,
                                              "end_byte": 345,
                                              "text": "*",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 346,
                                              "end_byte": 347,
                                              "text": "b",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 348,
                                          "end_byte": 349,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "/",
                                      "start_byte": 350,
                                      "end_byte": 351,
                                      "text": "/",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 352,
                                      "end_byte": 365,
                                      "text": "gcd ( a , b )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 352,
                                          "end_byte": 355,
                                          "text": "gcd",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 356,
                                          "end_byte": 365,
                                          "text": "( a , b )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 356,
                                              "end_byte": 357,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 358,
                                              "end_byte": 359,
                                              "text": "a",
                                              "children": []
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 360,
                                              "end_byte": 361,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 362,
                                              "end_byte": 363,
                                              "text": "b",
                                              "children": []
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 364,
                                              "end_byte": 365,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 366,
                                  "end_byte": 367,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 368,
                          "end_byte": 369,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 370,
                      "end_byte": 371,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 372,
              "end_byte": 382,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 372,
                  "end_byte": 378,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 379,
                  "end_byte": 380,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 381,
                  "end_byte": 382,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 383,
              "end_byte": 384,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 385,
      "end_byte": 526,
      "text": "unsigned int gcd ( unsigned m , unsigned n ) { if ( n > m ) return gcd ( n , m ) ; if ( n == 0 ) return m ; else return gcd ( n , m % n ) ; }",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 385,
          "end_byte": 397,
          "text": "unsigned int",
          "children": [
            {
              "type": "unsigned",
              "start_byte": 385,
              "end_byte": 393,
              "text": "unsigned",
              "children": []
            },
            {
              "type": "primitive_type",
              "start_byte": 394,
              "end_byte": 397,
              "text": "int",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 398,
          "end_byte": 429,
          "text": "gcd ( unsigned m , unsigned n )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 398,
              "end_byte": 401,
              "text": "gcd",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 402,
              "end_byte": 429,
              "text": "( unsigned m , unsigned n )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 402,
                  "end_byte": 403,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 404,
                  "end_byte": 414,
                  "text": "unsigned m",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 404,
                      "end_byte": 412,
                      "text": "unsigned",
                      "children": [
                        {
                          "type": "unsigned",
                          "start_byte": 404,
                          "end_byte": 412,
                          "text": "unsigned",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 413,
                      "end_byte": 414,
                      "text": "m",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 415,
                  "end_byte": 416,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 417,
                  "end_byte": 427,
                  "text": "unsigned n",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 417,
                      "end_byte": 425,
                      "text": "unsigned",
                      "children": [
                        {
                          "type": "unsigned",
                          "start_byte": 417,
                          "end_byte": 425,
                          "text": "unsigned",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 426,
                      "end_byte": 427,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 428,
                  "end_byte": 429,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 430,
          "end_byte": 526,
          "text": "{ if ( n > m ) return gcd ( n , m ) ; if ( n == 0 ) return m ; else return gcd ( n , m % n ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 430,
              "end_byte": 431,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 432,
              "end_byte": 467,
              "text": "if ( n > m ) return gcd ( n , m ) ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 432,
                  "end_byte": 434,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 435,
                  "end_byte": 444,
                  "text": "( n > m )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 435,
                      "end_byte": 436,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 437,
                      "end_byte": 442,
                      "text": "n > m",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 437,
                          "end_byte": 438,
                          "text": "n",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 439,
                          "end_byte": 440,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 441,
                          "end_byte": 442,
                          "text": "m",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 443,
                      "end_byte": 444,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 445,
                  "end_byte": 467,
                  "text": "return gcd ( n , m ) ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 445,
                      "end_byte": 451,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 452,
                      "end_byte": 465,
                      "text": "gcd ( n , m )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 452,
                          "end_byte": 455,
                          "text": "gcd",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 456,
                          "end_byte": 465,
                          "text": "( n , m )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 456,
                              "end_byte": 457,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 458,
                              "end_byte": 459,
                              "text": "n",
                              "children": []
                            },
                            {
                              "type": ",",
                              "start_byte": 460,
                              "end_byte": 461,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 462,
                              "end_byte": 463,
                              "text": "m",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 464,
                              "end_byte": 465,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 466,
                      "end_byte": 467,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 468,
              "end_byte": 524,
              "text": "if ( n == 0 ) return m ; else return gcd ( n , m % n ) ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 468,
                  "end_byte": 470,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 471,
                  "end_byte": 481,
                  "text": "( n == 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 471,
                      "end_byte": 472,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 473,
                      "end_byte": 479,
                      "text": "n == 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 473,
                          "end_byte": 474,
                          "text": "n",
                          "children": []
                        },
                        {
                          "type": "==",
                          "start_byte": 475,
                          "end_byte": 477,
                          "text": "==",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 478,
                          "end_byte": 479,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 480,
                      "end_byte": 481,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 482,
                  "end_byte": 492,
                  "text": "return m ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 482,
                      "end_byte": 488,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 489,
                      "end_byte": 490,
                      "text": "m",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 491,
                      "end_byte": 492,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 493,
                  "end_byte": 524,
                  "text": "else return gcd ( n , m % n ) ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 493,
                      "end_byte": 497,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 498,
                      "end_byte": 524,
                      "text": "return gcd ( n , m % n ) ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 498,
                          "end_byte": 504,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "call_expression",
                          "start_byte": 505,
                          "end_byte": 522,
                          "text": "gcd ( n , m % n )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 505,
                              "end_byte": 508,
                              "text": "gcd",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 509,
                              "end_byte": 522,
                              "text": "( n , m % n )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 509,
                                  "end_byte": 510,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 511,
                                  "end_byte": 512,
                                  "text": "n",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 513,
                                  "end_byte": 514,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 515,
                                  "end_byte": 520,
                                  "text": "m % n",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 515,
                                      "end_byte": 516,
                                      "text": "m",
                                      "children": []
                                    },
                                    {
                                      "type": "%",
                                      "start_byte": 517,
                                      "end_byte": 518,
                                      "text": "%",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 519,
                                      "end_byte": 520,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 521,
                                  "end_byte": 522,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 523,
                          "end_byte": 524,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 525,
              "end_byte": 526,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}