{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 441,
  "text": "long int find_gcm ( long int , long int ) ; int main ( ) { unsigned int T , i ; T = i = 0 ; scanf ( \"%u\" , & T ) ; for ( i = 0 ; i < T ; i ++ ) { long int A , B , O ; A = B = O = 0 ; scanf ( \"%ld %ld\" , & A , & B ) ; O = find_gcm ( A , B ) ; printf ( \"%ld \" , O ) ; printf ( \"%ld\\n\" , ( A * B / O ) ) ; } return 0 ; } long int find_gcm ( long int A , long int B ) { while ( A != B ) { if ( A > B ) A = A - B ; else B = B - A ; } return A ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 43,
      "text": "long int find_gcm ( long int , long int ) ;",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 0,
          "end_byte": 8,
          "text": "long int",
          "children": [
            {
              "type": "long",
              "start_byte": 0,
              "end_byte": 4,
              "text": "long",
              "children": []
            },
            {
              "type": "primitive_type",
              "start_byte": 5,
              "end_byte": 8,
              "text": "int",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 9,
          "end_byte": 41,
          "text": "find_gcm ( long int , long int )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 9,
              "end_byte": 17,
              "text": "find_gcm",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 18,
              "end_byte": 41,
              "text": "( long int , long int )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 18,
                  "end_byte": 19,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 20,
                  "end_byte": 28,
                  "text": "long int",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 20,
                      "end_byte": 28,
                      "text": "long int",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 20,
                          "end_byte": 24,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "primitive_type",
                          "start_byte": 25,
                          "end_byte": 28,
                          "text": "int",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 29,
                  "end_byte": 30,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 31,
                  "end_byte": 39,
                  "text": "long int",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 31,
                      "end_byte": 39,
                      "text": "long int",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 31,
                          "end_byte": 35,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "primitive_type",
                          "start_byte": 36,
                          "end_byte": 39,
                          "text": "int",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 40,
                  "end_byte": 41,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 42,
          "end_byte": 43,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 44,
      "end_byte": 317,
      "text": "int main ( ) { unsigned int T , i ; T = i = 0 ; scanf ( \"%u\" , & T ) ; for ( i = 0 ; i < T ; i ++ ) { long int A , B , O ; A = B = O = 0 ; scanf ( \"%ld %ld\" , & A , & B ) ; O = find_gcm ( A , B ) ; printf ( \"%ld \" , O ) ; printf ( \"%ld\\n\" , ( A * B / O ) ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 44,
          "end_byte": 47,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 48,
          "end_byte": 56,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 48,
              "end_byte": 52,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 53,
              "end_byte": 56,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 53,
                  "end_byte": 54,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 55,
                  "end_byte": 56,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 57,
          "end_byte": 317,
          "text": "{ unsigned int T , i ; T = i = 0 ; scanf ( \"%u\" , & T ) ; for ( i = 0 ; i < T ; i ++ ) { long int A , B , O ; A = B = O = 0 ; scanf ( \"%ld %ld\" , & A , & B ) ; O = find_gcm ( A , B ) ; printf ( \"%ld \" , O ) ; printf ( \"%ld\\n\" , ( A * B / O ) ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 57,
              "end_byte": 58,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 59,
              "end_byte": 79,
              "text": "unsigned int T , i ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 59,
                  "end_byte": 71,
                  "text": "unsigned int",
                  "children": [
                    {
                      "type": "unsigned",
                      "start_byte": 59,
                      "end_byte": 67,
                      "text": "unsigned",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 68,
                      "end_byte": 71,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 72,
                  "end_byte": 73,
                  "text": "T",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 74,
                  "end_byte": 75,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 76,
                  "end_byte": 77,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 78,
                  "end_byte": 79,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 80,
              "end_byte": 91,
              "text": "T = i = 0 ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 80,
                  "end_byte": 89,
                  "text": "T = i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 80,
                      "end_byte": 81,
                      "text": "T",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 82,
                      "end_byte": 83,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "assignment_expression",
                      "start_byte": 84,
                      "end_byte": 89,
                      "text": "i = 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 84,
                          "end_byte": 85,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 86,
                          "end_byte": 87,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 88,
                          "end_byte": 89,
                          "text": "0",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 90,
                  "end_byte": 91,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 92,
              "end_byte": 114,
              "text": "scanf ( \"%u\" , & T ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 92,
                  "end_byte": 112,
                  "text": "scanf ( \"%u\" , & T )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 92,
                      "end_byte": 97,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 98,
                      "end_byte": 112,
                      "text": "( \"%u\" , & T )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 98,
                          "end_byte": 99,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 100,
                          "end_byte": 104,
                          "text": "\"%u\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 100,
                              "end_byte": 101,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 101,
                              "end_byte": 103,
                              "text": "%u",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 103,
                              "end_byte": 104,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 105,
                          "end_byte": 106,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 107,
                          "end_byte": 110,
                          "text": "& T",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 107,
                              "end_byte": 108,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 109,
                              "end_byte": 110,
                              "text": "T",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 111,
                          "end_byte": 112,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 113,
                  "end_byte": 114,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 115,
              "end_byte": 304,
              "text": "for ( i = 0 ; i < T ; i ++ ) { long int A , B , O ; A = B = O = 0 ; scanf ( \"%ld %ld\" , & A , & B ) ; O = find_gcm ( A , B ) ; printf ( \"%ld \" , O ) ; printf ( \"%ld\\n\" , ( A * B / O ) ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 115,
                  "end_byte": 118,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 119,
                  "end_byte": 120,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 121,
                  "end_byte": 126,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 121,
                      "end_byte": 122,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 123,
                      "end_byte": 124,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 125,
                      "end_byte": 126,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 127,
                  "end_byte": 128,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 129,
                  "end_byte": 134,
                  "text": "i < T",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 129,
                      "end_byte": 130,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 131,
                      "end_byte": 132,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 133,
                      "end_byte": 134,
                      "text": "T",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 135,
                  "end_byte": 136,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 137,
                  "end_byte": 141,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 137,
                      "end_byte": 138,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 139,
                      "end_byte": 141,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 142,
                  "end_byte": 143,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 144,
                  "end_byte": 304,
                  "text": "{ long int A , B , O ; A = B = O = 0 ; scanf ( \"%ld %ld\" , & A , & B ) ; O = find_gcm ( A , B ) ; printf ( \"%ld \" , O ) ; printf ( \"%ld\\n\" , ( A * B / O ) ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 144,
                      "end_byte": 145,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "declaration",
                      "start_byte": 146,
                      "end_byte": 166,
                      "text": "long int A , B , O ;",
                      "children": [
                        {
                          "type": "sized_type_specifier",
                          "start_byte": 146,
                          "end_byte": 154,
                          "text": "long int",
                          "children": [
                            {
                              "type": "long",
                              "start_byte": 146,
                              "end_byte": 150,
                              "text": "long",
                              "children": []
                            },
                            {
                              "type": "primitive_type",
                              "start_byte": 151,
                              "end_byte": 154,
                              "text": "int",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "identifier",
                          "start_byte": 155,
                          "end_byte": 156,
                          "text": "A",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 157,
                          "end_byte": 158,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 159,
                          "end_byte": 160,
                          "text": "B",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 161,
                          "end_byte": 162,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 163,
                          "end_byte": 164,
                          "text": "O",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 165,
                          "end_byte": 166,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 167,
                      "end_byte": 182,
                      "text": "A = B = O = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 167,
                          "end_byte": 180,
                          "text": "A = B = O = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 167,
                              "end_byte": 168,
                              "text": "A",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 169,
                              "end_byte": 170,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "assignment_expression",
                              "start_byte": 171,
                              "end_byte": 180,
                              "text": "B = O = 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 171,
                                  "end_byte": 172,
                                  "text": "B",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 173,
                                  "end_byte": 174,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 175,
                                  "end_byte": 180,
                                  "text": "O = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 175,
                                      "end_byte": 176,
                                      "text": "O",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 177,
                                      "end_byte": 178,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 179,
                                      "end_byte": 180,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 181,
                          "end_byte": 182,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 183,
                      "end_byte": 216,
                      "text": "scanf ( \"%ld %ld\" , & A , & B ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 183,
                          "end_byte": 214,
                          "text": "scanf ( \"%ld %ld\" , & A , & B )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 183,
                              "end_byte": 188,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 189,
                              "end_byte": 214,
                              "text": "( \"%ld %ld\" , & A , & B )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 189,
                                  "end_byte": 190,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 191,
                                  "end_byte": 200,
                                  "text": "\"%ld %ld\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 191,
                                      "end_byte": 192,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 192,
                                      "end_byte": 199,
                                      "text": "%ld %ld",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 199,
                                      "end_byte": 200,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 201,
                                  "end_byte": 202,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 203,
                                  "end_byte": 206,
                                  "text": "& A",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 203,
                                      "end_byte": 204,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 205,
                                      "end_byte": 206,
                                      "text": "A",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 207,
                                  "end_byte": 208,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 209,
                                  "end_byte": 212,
                                  "text": "& B",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 209,
                                      "end_byte": 210,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 211,
                                      "end_byte": 212,
                                      "text": "B",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 213,
                                  "end_byte": 214,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 215,
                          "end_byte": 216,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 217,
                      "end_byte": 241,
                      "text": "O = find_gcm ( A , B ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 217,
                          "end_byte": 239,
                          "text": "O = find_gcm ( A , B )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 217,
                              "end_byte": 218,
                              "text": "O",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 219,
                              "end_byte": 220,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 221,
                              "end_byte": 239,
                              "text": "find_gcm ( A , B )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 221,
                                  "end_byte": 229,
                                  "text": "find_gcm",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 230,
                                  "end_byte": 239,
                                  "text": "( A , B )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 230,
                                      "end_byte": 231,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 232,
                                      "end_byte": 233,
                                      "text": "A",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 234,
                                      "end_byte": 235,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 236,
                                      "end_byte": 237,
                                      "text": "B",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 238,
                                      "end_byte": 239,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 240,
                          "end_byte": 241,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 242,
                      "end_byte": 265,
                      "text": "printf ( \"%ld \" , O ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 242,
                          "end_byte": 263,
                          "text": "printf ( \"%ld \" , O )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 242,
                              "end_byte": 248,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 249,
                              "end_byte": 263,
                              "text": "( \"%ld \" , O )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 249,
                                  "end_byte": 250,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 251,
                                  "end_byte": 257,
                                  "text": "\"%ld \"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 251,
                                      "end_byte": 252,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 252,
                                      "end_byte": 256,
                                      "text": "%ld ",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 256,
                                      "end_byte": 257,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 258,
                                  "end_byte": 259,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 260,
                                  "end_byte": 261,
                                  "text": "O",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 262,
                                  "end_byte": 263,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 264,
                          "end_byte": 265,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 266,
                      "end_byte": 302,
                      "text": "printf ( \"%ld\\n\" , ( A * B / O ) ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 266,
                          "end_byte": 300,
                          "text": "printf ( \"%ld\\n\" , ( A * B / O ) )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 266,
                              "end_byte": 272,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 273,
                              "end_byte": 300,
                              "text": "( \"%ld\\n\" , ( A * B / O ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 273,
                                  "end_byte": 274,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 275,
                                  "end_byte": 282,
                                  "text": "\"%ld\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 275,
                                      "end_byte": 276,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 276,
                                      "end_byte": 279,
                                      "text": "%ld",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 279,
                                      "end_byte": 281,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 281,
                                      "end_byte": 282,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 283,
                                  "end_byte": 284,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 285,
                                  "end_byte": 298,
                                  "text": "( A * B / O )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 285,
                                      "end_byte": 286,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 287,
                                      "end_byte": 296,
                                      "text": "A * B / O",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 287,
                                          "end_byte": 292,
                                          "text": "A * B",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 287,
                                              "end_byte": 288,
                                              "text": "A",
                                              "children": []
                                            },
                                            {
                                              "type": "*",
                                              "start_byte": 289,
                                              "end_byte": 290,
                                              "text": "*",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 291,
                                              "end_byte": 292,
                                              "text": "B",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "/",
                                          "start_byte": 293,
                                          "end_byte": 294,
                                          "text": "/",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 295,
                                          "end_byte": 296,
                                          "text": "O",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 297,
                                      "end_byte": 298,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 299,
                                  "end_byte": 300,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 301,
                          "end_byte": 302,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 303,
                      "end_byte": 304,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 305,
              "end_byte": 315,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 305,
                  "end_byte": 311,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 312,
                  "end_byte": 313,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 314,
                  "end_byte": 315,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 316,
              "end_byte": 317,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 318,
      "end_byte": 441,
      "text": "long int find_gcm ( long int A , long int B ) { while ( A != B ) { if ( A > B ) A = A - B ; else B = B - A ; } return A ; }",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 318,
          "end_byte": 326,
          "text": "long int",
          "children": [
            {
              "type": "long",
              "start_byte": 318,
              "end_byte": 322,
              "text": "long",
              "children": []
            },
            {
              "type": "primitive_type",
              "start_byte": 323,
              "end_byte": 326,
              "text": "int",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 327,
          "end_byte": 363,
          "text": "find_gcm ( long int A , long int B )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 327,
              "end_byte": 335,
              "text": "find_gcm",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 336,
              "end_byte": 363,
              "text": "( long int A , long int B )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 336,
                  "end_byte": 337,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 338,
                  "end_byte": 348,
                  "text": "long int A",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 338,
                      "end_byte": 346,
                      "text": "long int",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 338,
                          "end_byte": 342,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "primitive_type",
                          "start_byte": 343,
                          "end_byte": 346,
                          "text": "int",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 347,
                      "end_byte": 348,
                      "text": "A",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 349,
                  "end_byte": 350,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 351,
                  "end_byte": 361,
                  "text": "long int B",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 351,
                      "end_byte": 359,
                      "text": "long int",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 351,
                          "end_byte": 355,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "primitive_type",
                          "start_byte": 356,
                          "end_byte": 359,
                          "text": "int",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 360,
                      "end_byte": 361,
                      "text": "B",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 362,
                  "end_byte": 363,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 364,
          "end_byte": 441,
          "text": "{ while ( A != B ) { if ( A > B ) A = A - B ; else B = B - A ; } return A ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 364,
              "end_byte": 365,
              "text": "{",
              "children": []
            },
            {
              "type": "while_statement",
              "start_byte": 366,
              "end_byte": 428,
              "text": "while ( A != B ) { if ( A > B ) A = A - B ; else B = B - A ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 366,
                  "end_byte": 371,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 372,
                  "end_byte": 382,
                  "text": "( A != B )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 372,
                      "end_byte": 373,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 374,
                      "end_byte": 380,
                      "text": "A != B",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 374,
                          "end_byte": 375,
                          "text": "A",
                          "children": []
                        },
                        {
                          "type": "!=",
                          "start_byte": 376,
                          "end_byte": 378,
                          "text": "!=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 379,
                          "end_byte": 380,
                          "text": "B",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 381,
                      "end_byte": 382,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 383,
                  "end_byte": 428,
                  "text": "{ if ( A > B ) A = A - B ; else B = B - A ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 383,
                      "end_byte": 384,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 385,
                      "end_byte": 426,
                      "text": "if ( A > B ) A = A - B ; else B = B - A ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 385,
                          "end_byte": 387,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 388,
                          "end_byte": 397,
                          "text": "( A > B )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 388,
                              "end_byte": 389,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 390,
                              "end_byte": 395,
                              "text": "A > B",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 390,
                                  "end_byte": 391,
                                  "text": "A",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 392,
                                  "end_byte": 393,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 394,
                                  "end_byte": 395,
                                  "text": "B",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 396,
                              "end_byte": 397,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 398,
                          "end_byte": 409,
                          "text": "A = A - B ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 398,
                              "end_byte": 407,
                              "text": "A = A - B",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 398,
                                  "end_byte": 399,
                                  "text": "A",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 400,
                                  "end_byte": 401,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 402,
                                  "end_byte": 407,
                                  "text": "A - B",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 402,
                                      "end_byte": 403,
                                      "text": "A",
                                      "children": []
                                    },
                                    {
                                      "type": "-",
                                      "start_byte": 404,
                                      "end_byte": 405,
                                      "text": "-",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 406,
                                      "end_byte": 407,
                                      "text": "B",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 408,
                              "end_byte": 409,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 410,
                          "end_byte": 426,
                          "text": "else B = B - A ;",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 410,
                              "end_byte": 414,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 415,
                              "end_byte": 426,
                              "text": "B = B - A ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 415,
                                  "end_byte": 424,
                                  "text": "B = B - A",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 415,
                                      "end_byte": 416,
                                      "text": "B",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 417,
                                      "end_byte": 418,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 419,
                                      "end_byte": 424,
                                      "text": "B - A",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 419,
                                          "end_byte": 420,
                                          "text": "B",
                                          "children": []
                                        },
                                        {
                                          "type": "-",
                                          "start_byte": 421,
                                          "end_byte": 422,
                                          "text": "-",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 423,
                                          "end_byte": 424,
                                          "text": "A",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 425,
                                  "end_byte": 426,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 427,
                      "end_byte": 428,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 429,
              "end_byte": 439,
              "text": "return A ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 429,
                  "end_byte": 435,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 436,
                  "end_byte": 437,
                  "text": "A",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 438,
                  "end_byte": 439,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 440,
              "end_byte": 441,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}