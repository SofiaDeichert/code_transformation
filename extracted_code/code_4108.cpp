int sum ( int , char [ 100 ] [ 100 ] , int , int ) ; int max ( int , int ) ; int scanInt ( ) ; void printInt ( int ) ; int M [ 101 ] [ 101 ] ; int main ( ) { char a [ 100 ] [ 100 ] = { 0 } ; int n , r , o , p , q , temp ; n = scanInt ( n ) ; while ( n -- ) { r = scanInt ( ) ; for ( o = 0 ; o < r ; o ++ ) for ( q = 0 ; q <= o ; q ++ ) { a [ o ] [ q ] = ( char ) scanInt ( ) ; M [ o ] [ q ] = - 1 ; } printf ( "%d\n" , sum ( r , a , 0 , 0 ) ) ; } } int sum ( int n , char a [ 100 ] [ 100 ] , int x , int y ) { char L1 [ 100 ] [ 100 ] , L2 [ 100 ] [ 100 ] ; int i , j , i1 , j1 , k , m = 0 ; if ( M [ x ] [ y ] >= 0 ) { return M [ x ] [ y ] ; } else { if ( n == 1 ) { M [ x ] [ y ] = a [ 0 ] [ 0 ] ; return M [ x ] [ y ] ; } else { for ( i = 1 , i1 = 0 ; i < n ; i ++ , i1 ++ ) for ( j = 0 , j1 = 0 ; j < i ; j ++ , j1 ++ ) { L1 [ i1 ] [ j1 ] = a [ i ] [ j ] ; } for ( i = 1 , i1 = 0 ; i < n ; i ++ , i1 ++ ) for ( j = 1 , j1 = 0 ; j <= i ; j1 ++ , j ++ ) { L2 [ i1 ] [ j1 ] = a [ i ] [ j ] ; } M [ x ] [ y ] = a [ 0 ] [ 0 ] + max ( sum ( n - 1 , L1 , x , y + 1 ) , sum ( n - 1 , L2 , x + 1 , y + 1 ) ) ; return M [ x ] [ y ] ; } } } int max ( int a , int b ) { return ( a > b ) ? a : b ; } int scanInt ( ) { int x = 0 ; char ch ; ch = getchar ( ) ; while ( ch > '9' || ch < '0' ) { ch = getchar ( ) ; } while ( ch <= '9' && ch >= '0' ) { x = ( x << 3 ) + ( x << 1 ) + ch - '0' ; ch = getchar ( ) ; } return x ; } void printInt ( int x ) { int i = 0 ; char ch [ 11 ] ; while ( x > 0 ) { ch [ i ++ ] = ( char ) ( '0' + x ) ; x /= 10 ; } while ( i -- ) { putchar ( ch [ i ] ) ; } }