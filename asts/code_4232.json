{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 1198,
  "text": "int a [ ROWS ] ; int lowerBound ; int upperBound ; char buffer [ N ] ; int max ( index , n ) { if ( index >= lowerBound && index <= upperBound ) { return a [ index ] ; } else { int offset = index - ( n - 1 ) * n / 2 ; int downIndex = n * ( n + 1 ) / 2 + offset ; int rightIndex = downIndex + 1 ; int downMaxSum = max ( downIndex , n + 1 ) ; int rightMaxSum = max ( rightIndex , n + 1 ) ; return a [ index ] + ( downMaxSum > rightMaxSum ? downMaxSum : rightMaxSum ) ; } } int main ( ) { int t ; scanf ( \"%d\" , & t ) ; int lines ; int j ; int c ; int inputN = 1 ; int n = 0 ; long innerC = 0 ; long x = - 1 ; long q ; int temp = 0 ; do { c = read ( 0 , buffer , N ) ; for ( j = 0 ; j < c ; j ++ ) { if ( buffer [ j ] == '\\n' && inputN ) { q = temp * ( temp + 1 ) / 2 ; n = temp ; temp = 0 ; inputN = 0 ; } else if ( ( buffer [ j ] == '\\n' || buffer [ j ] == ' ' ) && ! inputN ) { x ++ ; a [ x ] = temp ; temp = 0 ; if ( ( x + 1 ) == q ) { innerC ++ ; inputN = 1 ; lowerBound = ( n - 1 ) * n / 2 ; upperBound = ( n + 1 ) * n / 2 - 1 ; printf ( \"%d\\n\" , max ( 0 , 1 ) ) ; x = - 1 ; if ( innerC == t ) break ; } } else { temp = temp * 10 + buffer [ j ] - '0' ; } } } while ( innerC != t ) ; return 0 ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 16,
      "text": "int a [ ROWS ] ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "array_declarator",
          "start_byte": 4,
          "end_byte": 14,
          "text": "a [ ROWS ]",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 5,
              "text": "a",
              "children": []
            },
            {
              "type": "[",
              "start_byte": 6,
              "end_byte": 7,
              "text": "[",
              "children": []
            },
            {
              "type": "identifier",
              "start_byte": 8,
              "end_byte": 12,
              "text": "ROWS",
              "children": []
            },
            {
              "type": "]",
              "start_byte": 13,
              "end_byte": 14,
              "text": "]",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 15,
          "end_byte": 16,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 17,
      "end_byte": 33,
      "text": "int lowerBound ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 17,
          "end_byte": 20,
          "text": "int",
          "children": []
        },
        {
          "type": "identifier",
          "start_byte": 21,
          "end_byte": 31,
          "text": "lowerBound",
          "children": []
        },
        {
          "type": ";",
          "start_byte": 32,
          "end_byte": 33,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 34,
      "end_byte": 50,
      "text": "int upperBound ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 34,
          "end_byte": 37,
          "text": "int",
          "children": []
        },
        {
          "type": "identifier",
          "start_byte": 38,
          "end_byte": 48,
          "text": "upperBound",
          "children": []
        },
        {
          "type": ";",
          "start_byte": 49,
          "end_byte": 50,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 51,
      "end_byte": 70,
      "text": "char buffer [ N ] ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 51,
          "end_byte": 55,
          "text": "char",
          "children": []
        },
        {
          "type": "array_declarator",
          "start_byte": 56,
          "end_byte": 68,
          "text": "buffer [ N ]",
          "children": [
            {
              "type": "identifier",
              "start_byte": 56,
              "end_byte": 62,
              "text": "buffer",
              "children": []
            },
            {
              "type": "[",
              "start_byte": 63,
              "end_byte": 64,
              "text": "[",
              "children": []
            },
            {
              "type": "identifier",
              "start_byte": 65,
              "end_byte": 66,
              "text": "N",
              "children": []
            },
            {
              "type": "]",
              "start_byte": 67,
              "end_byte": 68,
              "text": "]",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 69,
          "end_byte": 70,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 71,
      "end_byte": 470,
      "text": "int max ( index , n ) { if ( index >= lowerBound && index <= upperBound ) { return a [ index ] ; } else { int offset = index - ( n - 1 ) * n / 2 ; int downIndex = n * ( n + 1 ) / 2 + offset ; int rightIndex = downIndex + 1 ; int downMaxSum = max ( downIndex , n + 1 ) ; int rightMaxSum = max ( rightIndex , n + 1 ) ; return a [ index ] + ( downMaxSum > rightMaxSum ? downMaxSum : rightMaxSum ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 71,
          "end_byte": 74,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 75,
          "end_byte": 92,
          "text": "max ( index , n )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 75,
              "end_byte": 78,
              "text": "max",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 79,
              "end_byte": 92,
              "text": "( index , n )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 79,
                  "end_byte": 80,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 81,
                  "end_byte": 86,
                  "text": "index",
                  "children": [
                    {
                      "type": "type_identifier",
                      "start_byte": 81,
                      "end_byte": 86,
                      "text": "index",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 87,
                  "end_byte": 88,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 89,
                  "end_byte": 90,
                  "text": "n",
                  "children": [
                    {
                      "type": "type_identifier",
                      "start_byte": 89,
                      "end_byte": 90,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 91,
                  "end_byte": 92,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 93,
          "end_byte": 470,
          "text": "{ if ( index >= lowerBound && index <= upperBound ) { return a [ index ] ; } else { int offset = index - ( n - 1 ) * n / 2 ; int downIndex = n * ( n + 1 ) / 2 + offset ; int rightIndex = downIndex + 1 ; int downMaxSum = max ( downIndex , n + 1 ) ; int rightMaxSum = max ( rightIndex , n + 1 ) ; return a [ index ] + ( downMaxSum > rightMaxSum ? downMaxSum : rightMaxSum ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 93,
              "end_byte": 94,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 95,
              "end_byte": 468,
              "text": "if ( index >= lowerBound && index <= upperBound ) { return a [ index ] ; } else { int offset = index - ( n - 1 ) * n / 2 ; int downIndex = n * ( n + 1 ) / 2 + offset ; int rightIndex = downIndex + 1 ; int downMaxSum = max ( downIndex , n + 1 ) ; int rightMaxSum = max ( rightIndex , n + 1 ) ; return a [ index ] + ( downMaxSum > rightMaxSum ? downMaxSum : rightMaxSum ) ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 95,
                  "end_byte": 97,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 98,
                  "end_byte": 144,
                  "text": "( index >= lowerBound && index <= upperBound )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 98,
                      "end_byte": 99,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 100,
                      "end_byte": 142,
                      "text": "index >= lowerBound && index <= upperBound",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 100,
                          "end_byte": 119,
                          "text": "index >= lowerBound",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 100,
                              "end_byte": 105,
                              "text": "index",
                              "children": []
                            },
                            {
                              "type": ">=",
                              "start_byte": 106,
                              "end_byte": 108,
                              "text": ">=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 109,
                              "end_byte": 119,
                              "text": "lowerBound",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "&&",
                          "start_byte": 120,
                          "end_byte": 122,
                          "text": "&&",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 123,
                          "end_byte": 142,
                          "text": "index <= upperBound",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 123,
                              "end_byte": 128,
                              "text": "index",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 129,
                              "end_byte": 131,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 132,
                              "end_byte": 142,
                              "text": "upperBound",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 143,
                      "end_byte": 144,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 145,
                  "end_byte": 169,
                  "text": "{ return a [ index ] ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 145,
                      "end_byte": 146,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 147,
                      "end_byte": 167,
                      "text": "return a [ index ] ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 147,
                          "end_byte": 153,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "subscript_expression",
                          "start_byte": 154,
                          "end_byte": 165,
                          "text": "a [ index ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 154,
                              "end_byte": 155,
                              "text": "a",
                              "children": []
                            },
                            {
                              "type": "subscript_argument_list",
                              "start_byte": 156,
                              "end_byte": 165,
                              "text": "[ index ]",
                              "children": [
                                {
                                  "type": "[",
                                  "start_byte": 156,
                                  "end_byte": 157,
                                  "text": "[",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 158,
                                  "end_byte": 163,
                                  "text": "index",
                                  "children": []
                                },
                                {
                                  "type": "]",
                                  "start_byte": 164,
                                  "end_byte": 165,
                                  "text": "]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 166,
                          "end_byte": 167,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 168,
                      "end_byte": 169,
                      "text": "}",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 170,
                  "end_byte": 468,
                  "text": "else { int offset = index - ( n - 1 ) * n / 2 ; int downIndex = n * ( n + 1 ) / 2 + offset ; int rightIndex = downIndex + 1 ; int downMaxSum = max ( downIndex , n + 1 ) ; int rightMaxSum = max ( rightIndex , n + 1 ) ; return a [ index ] + ( downMaxSum > rightMaxSum ? downMaxSum : rightMaxSum ) ; }",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 170,
                      "end_byte": 174,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "compound_statement",
                      "start_byte": 175,
                      "end_byte": 468,
                      "text": "{ int offset = index - ( n - 1 ) * n / 2 ; int downIndex = n * ( n + 1 ) / 2 + offset ; int rightIndex = downIndex + 1 ; int downMaxSum = max ( downIndex , n + 1 ) ; int rightMaxSum = max ( rightIndex , n + 1 ) ; return a [ index ] + ( downMaxSum > rightMaxSum ? downMaxSum : rightMaxSum ) ; }",
                      "children": [
                        {
                          "type": "{",
                          "start_byte": 175,
                          "end_byte": 176,
                          "text": "{",
                          "children": []
                        },
                        {
                          "type": "declaration",
                          "start_byte": 177,
                          "end_byte": 217,
                          "text": "int offset = index - ( n - 1 ) * n / 2 ;",
                          "children": [
                            {
                              "type": "primitive_type",
                              "start_byte": 177,
                              "end_byte": 180,
                              "text": "int",
                              "children": []
                            },
                            {
                              "type": "init_declarator",
                              "start_byte": 181,
                              "end_byte": 215,
                              "text": "offset = index - ( n - 1 ) * n / 2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 181,
                                  "end_byte": 187,
                                  "text": "offset",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 188,
                                  "end_byte": 189,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 190,
                                  "end_byte": 215,
                                  "text": "index - ( n - 1 ) * n / 2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 190,
                                      "end_byte": 195,
                                      "text": "index",
                                      "children": []
                                    },
                                    {
                                      "type": "-",
                                      "start_byte": 196,
                                      "end_byte": 197,
                                      "text": "-",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 198,
                                      "end_byte": 215,
                                      "text": "( n - 1 ) * n / 2",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 198,
                                          "end_byte": 211,
                                          "text": "( n - 1 ) * n",
                                          "children": [
                                            {
                                              "type": "parenthesized_expression",
                                              "start_byte": 198,
                                              "end_byte": 207,
                                              "text": "( n - 1 )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 198,
                                                  "end_byte": 199,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 200,
                                                  "end_byte": 205,
                                                  "text": "n - 1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 200,
                                                      "end_byte": 201,
                                                      "text": "n",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "-",
                                                      "start_byte": 202,
                                                      "end_byte": 203,
                                                      "text": "-",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 204,
                                                      "end_byte": 205,
                                                      "text": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 206,
                                                  "end_byte": 207,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "*",
                                              "start_byte": 208,
                                              "end_byte": 209,
                                              "text": "*",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 210,
                                              "end_byte": 211,
                                              "text": "n",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "/",
                                          "start_byte": 212,
                                          "end_byte": 213,
                                          "text": "/",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 214,
                                          "end_byte": 215,
                                          "text": "2",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 216,
                              "end_byte": 217,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "declaration",
                          "start_byte": 218,
                          "end_byte": 262,
                          "text": "int downIndex = n * ( n + 1 ) / 2 + offset ;",
                          "children": [
                            {
                              "type": "primitive_type",
                              "start_byte": 218,
                              "end_byte": 221,
                              "text": "int",
                              "children": []
                            },
                            {
                              "type": "init_declarator",
                              "start_byte": 222,
                              "end_byte": 260,
                              "text": "downIndex = n * ( n + 1 ) / 2 + offset",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 222,
                                  "end_byte": 231,
                                  "text": "downIndex",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 232,
                                  "end_byte": 233,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 234,
                                  "end_byte": 260,
                                  "text": "n * ( n + 1 ) / 2 + offset",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 234,
                                      "end_byte": 251,
                                      "text": "n * ( n + 1 ) / 2",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 234,
                                          "end_byte": 247,
                                          "text": "n * ( n + 1 )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 234,
                                              "end_byte": 235,
                                              "text": "n",
                                              "children": []
                                            },
                                            {
                                              "type": "*",
                                              "start_byte": 236,
                                              "end_byte": 237,
                                              "text": "*",
                                              "children": []
                                            },
                                            {
                                              "type": "parenthesized_expression",
                                              "start_byte": 238,
                                              "end_byte": 247,
                                              "text": "( n + 1 )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 238,
                                                  "end_byte": 239,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 240,
                                                  "end_byte": 245,
                                                  "text": "n + 1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 240,
                                                      "end_byte": 241,
                                                      "text": "n",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "+",
                                                      "start_byte": 242,
                                                      "end_byte": 243,
                                                      "text": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 244,
                                                      "end_byte": 245,
                                                      "text": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 246,
                                                  "end_byte": 247,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "/",
                                          "start_byte": 248,
                                          "end_byte": 249,
                                          "text": "/",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 250,
                                          "end_byte": 251,
                                          "text": "2",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 252,
                                      "end_byte": 253,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 254,
                                      "end_byte": 260,
                                      "text": "offset",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 261,
                              "end_byte": 262,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "declaration",
                          "start_byte": 263,
                          "end_byte": 295,
                          "text": "int rightIndex = downIndex + 1 ;",
                          "children": [
                            {
                              "type": "primitive_type",
                              "start_byte": 263,
                              "end_byte": 266,
                              "text": "int",
                              "children": []
                            },
                            {
                              "type": "init_declarator",
                              "start_byte": 267,
                              "end_byte": 293,
                              "text": "rightIndex = downIndex + 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 267,
                                  "end_byte": 277,
                                  "text": "rightIndex",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 278,
                                  "end_byte": 279,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 280,
                                  "end_byte": 293,
                                  "text": "downIndex + 1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 280,
                                      "end_byte": 289,
                                      "text": "downIndex",
                                      "children": []
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 290,
                                      "end_byte": 291,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 292,
                                      "end_byte": 293,
                                      "text": "1",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 294,
                              "end_byte": 295,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "declaration",
                          "start_byte": 296,
                          "end_byte": 340,
                          "text": "int downMaxSum = max ( downIndex , n + 1 ) ;",
                          "children": [
                            {
                              "type": "primitive_type",
                              "start_byte": 296,
                              "end_byte": 299,
                              "text": "int",
                              "children": []
                            },
                            {
                              "type": "init_declarator",
                              "start_byte": 300,
                              "end_byte": 338,
                              "text": "downMaxSum = max ( downIndex , n + 1 )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 300,
                                  "end_byte": 310,
                                  "text": "downMaxSum",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 311,
                                  "end_byte": 312,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 313,
                                  "end_byte": 338,
                                  "text": "max ( downIndex , n + 1 )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 313,
                                      "end_byte": 316,
                                      "text": "max",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 317,
                                      "end_byte": 338,
                                      "text": "( downIndex , n + 1 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 317,
                                          "end_byte": 318,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 319,
                                          "end_byte": 328,
                                          "text": "downIndex",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 329,
                                          "end_byte": 330,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 331,
                                          "end_byte": 336,
                                          "text": "n + 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 331,
                                              "end_byte": 332,
                                              "text": "n",
                                              "children": []
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 333,
                                              "end_byte": 334,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 335,
                                              "end_byte": 336,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 337,
                                          "end_byte": 338,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 339,
                              "end_byte": 340,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "declaration",
                          "start_byte": 341,
                          "end_byte": 387,
                          "text": "int rightMaxSum = max ( rightIndex , n + 1 ) ;",
                          "children": [
                            {
                              "type": "primitive_type",
                              "start_byte": 341,
                              "end_byte": 344,
                              "text": "int",
                              "children": []
                            },
                            {
                              "type": "init_declarator",
                              "start_byte": 345,
                              "end_byte": 385,
                              "text": "rightMaxSum = max ( rightIndex , n + 1 )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 345,
                                  "end_byte": 356,
                                  "text": "rightMaxSum",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 357,
                                  "end_byte": 358,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 359,
                                  "end_byte": 385,
                                  "text": "max ( rightIndex , n + 1 )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 359,
                                      "end_byte": 362,
                                      "text": "max",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 363,
                                      "end_byte": 385,
                                      "text": "( rightIndex , n + 1 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 363,
                                          "end_byte": 364,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 365,
                                          "end_byte": 375,
                                          "text": "rightIndex",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 376,
                                          "end_byte": 377,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 378,
                                          "end_byte": 383,
                                          "text": "n + 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 378,
                                              "end_byte": 379,
                                              "text": "n",
                                              "children": []
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 380,
                                              "end_byte": 381,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 382,
                                              "end_byte": 383,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 384,
                                          "end_byte": 385,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 386,
                              "end_byte": 387,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "return_statement",
                          "start_byte": 388,
                          "end_byte": 466,
                          "text": "return a [ index ] + ( downMaxSum > rightMaxSum ? downMaxSum : rightMaxSum ) ;",
                          "children": [
                            {
                              "type": "return",
                              "start_byte": 388,
                              "end_byte": 394,
                              "text": "return",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 395,
                              "end_byte": 464,
                              "text": "a [ index ] + ( downMaxSum > rightMaxSum ? downMaxSum : rightMaxSum )",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 395,
                                  "end_byte": 406,
                                  "text": "a [ index ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 395,
                                      "end_byte": 396,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 397,
                                      "end_byte": 406,
                                      "text": "[ index ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 397,
                                          "end_byte": 398,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 399,
                                          "end_byte": 404,
                                          "text": "index",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 405,
                                          "end_byte": 406,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "+",
                                  "start_byte": 407,
                                  "end_byte": 408,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 409,
                                  "end_byte": 464,
                                  "text": "( downMaxSum > rightMaxSum ? downMaxSum : rightMaxSum )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 409,
                                      "end_byte": 410,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "conditional_expression",
                                      "start_byte": 411,
                                      "end_byte": 462,
                                      "text": "downMaxSum > rightMaxSum ? downMaxSum : rightMaxSum",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 411,
                                          "end_byte": 435,
                                          "text": "downMaxSum > rightMaxSum",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 411,
                                              "end_byte": 421,
                                              "text": "downMaxSum",
                                              "children": []
                                            },
                                            {
                                              "type": ">",
                                              "start_byte": 422,
                                              "end_byte": 423,
                                              "text": ">",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 424,
                                              "end_byte": 435,
                                              "text": "rightMaxSum",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "?",
                                          "start_byte": 436,
                                          "end_byte": 437,
                                          "text": "?",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 438,
                                          "end_byte": 448,
                                          "text": "downMaxSum",
                                          "children": []
                                        },
                                        {
                                          "type": ":",
                                          "start_byte": 449,
                                          "end_byte": 450,
                                          "text": ":",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 451,
                                          "end_byte": 462,
                                          "text": "rightMaxSum",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 463,
                                      "end_byte": 464,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 465,
                              "end_byte": 466,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start_byte": 467,
                          "end_byte": 468,
                          "text": "}",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 469,
              "end_byte": 470,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 471,
      "end_byte": 1198,
      "text": "int main ( ) { int t ; scanf ( \"%d\" , & t ) ; int lines ; int j ; int c ; int inputN = 1 ; int n = 0 ; long innerC = 0 ; long x = - 1 ; long q ; int temp = 0 ; do { c = read ( 0 , buffer , N ) ; for ( j = 0 ; j < c ; j ++ ) { if ( buffer [ j ] == '\\n' && inputN ) { q = temp * ( temp + 1 ) / 2 ; n = temp ; temp = 0 ; inputN = 0 ; } else if ( ( buffer [ j ] == '\\n' || buffer [ j ] == ' ' ) && ! inputN ) { x ++ ; a [ x ] = temp ; temp = 0 ; if ( ( x + 1 ) == q ) { innerC ++ ; inputN = 1 ; lowerBound = ( n - 1 ) * n / 2 ; upperBound = ( n + 1 ) * n / 2 - 1 ; printf ( \"%d\\n\" , max ( 0 , 1 ) ) ; x = - 1 ; if ( innerC == t ) break ; } } else { temp = temp * 10 + buffer [ j ] - '0' ; } } } while ( innerC != t ) ; return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 471,
          "end_byte": 474,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 475,
          "end_byte": 483,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 475,
              "end_byte": 479,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 480,
              "end_byte": 483,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 480,
                  "end_byte": 481,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 482,
                  "end_byte": 483,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 484,
          "end_byte": 1198,
          "text": "{ int t ; scanf ( \"%d\" , & t ) ; int lines ; int j ; int c ; int inputN = 1 ; int n = 0 ; long innerC = 0 ; long x = - 1 ; long q ; int temp = 0 ; do { c = read ( 0 , buffer , N ) ; for ( j = 0 ; j < c ; j ++ ) { if ( buffer [ j ] == '\\n' && inputN ) { q = temp * ( temp + 1 ) / 2 ; n = temp ; temp = 0 ; inputN = 0 ; } else if ( ( buffer [ j ] == '\\n' || buffer [ j ] == ' ' ) && ! inputN ) { x ++ ; a [ x ] = temp ; temp = 0 ; if ( ( x + 1 ) == q ) { innerC ++ ; inputN = 1 ; lowerBound = ( n - 1 ) * n / 2 ; upperBound = ( n + 1 ) * n / 2 - 1 ; printf ( \"%d\\n\" , max ( 0 , 1 ) ) ; x = - 1 ; if ( innerC == t ) break ; } } else { temp = temp * 10 + buffer [ j ] - '0' ; } } } while ( innerC != t ) ; return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 484,
              "end_byte": 485,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 486,
              "end_byte": 493,
              "text": "int t ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 486,
                  "end_byte": 489,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 490,
                  "end_byte": 491,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 492,
                  "end_byte": 493,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 494,
              "end_byte": 516,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 494,
                  "end_byte": 514,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 494,
                      "end_byte": 499,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 500,
                      "end_byte": 514,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 500,
                          "end_byte": 501,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 502,
                          "end_byte": 506,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 502,
                              "end_byte": 503,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 503,
                              "end_byte": 505,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 505,
                              "end_byte": 506,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 507,
                          "end_byte": 508,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 509,
                          "end_byte": 512,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 509,
                              "end_byte": 510,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 511,
                              "end_byte": 512,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 513,
                          "end_byte": 514,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 515,
                  "end_byte": 516,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 517,
              "end_byte": 528,
              "text": "int lines ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 517,
                  "end_byte": 520,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 521,
                  "end_byte": 526,
                  "text": "lines",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 527,
                  "end_byte": 528,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 529,
              "end_byte": 536,
              "text": "int j ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 529,
                  "end_byte": 532,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 533,
                  "end_byte": 534,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 535,
                  "end_byte": 536,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 537,
              "end_byte": 544,
              "text": "int c ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 537,
                  "end_byte": 540,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 541,
                  "end_byte": 542,
                  "text": "c",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 543,
                  "end_byte": 544,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 545,
              "end_byte": 561,
              "text": "int inputN = 1 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 545,
                  "end_byte": 548,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 549,
                  "end_byte": 559,
                  "text": "inputN = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 549,
                      "end_byte": 555,
                      "text": "inputN",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 556,
                      "end_byte": 557,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 558,
                      "end_byte": 559,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 560,
                  "end_byte": 561,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 562,
              "end_byte": 573,
              "text": "int n = 0 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 562,
                  "end_byte": 565,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 566,
                  "end_byte": 571,
                  "text": "n = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 566,
                      "end_byte": 567,
                      "text": "n",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 568,
                      "end_byte": 569,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 570,
                      "end_byte": 571,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 572,
                  "end_byte": 573,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 574,
              "end_byte": 591,
              "text": "long innerC = 0 ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 574,
                  "end_byte": 578,
                  "text": "long",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 574,
                      "end_byte": 578,
                      "text": "long",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "init_declarator",
                  "start_byte": 579,
                  "end_byte": 589,
                  "text": "innerC = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 579,
                      "end_byte": 585,
                      "text": "innerC",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 586,
                      "end_byte": 587,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 588,
                      "end_byte": 589,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 590,
                  "end_byte": 591,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 592,
              "end_byte": 606,
              "text": "long x = - 1 ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 592,
                  "end_byte": 596,
                  "text": "long",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 592,
                      "end_byte": 596,
                      "text": "long",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "init_declarator",
                  "start_byte": 597,
                  "end_byte": 604,
                  "text": "x = - 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 597,
                      "end_byte": 598,
                      "text": "x",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 599,
                      "end_byte": 600,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "unary_expression",
                      "start_byte": 601,
                      "end_byte": 604,
                      "text": "- 1",
                      "children": [
                        {
                          "type": "-",
                          "start_byte": 601,
                          "end_byte": 602,
                          "text": "-",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 603,
                          "end_byte": 604,
                          "text": "1",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 605,
                  "end_byte": 606,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 607,
              "end_byte": 615,
              "text": "long q ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 607,
                  "end_byte": 611,
                  "text": "long",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 607,
                      "end_byte": 611,
                      "text": "long",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 612,
                  "end_byte": 613,
                  "text": "q",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 614,
                  "end_byte": 615,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 616,
              "end_byte": 630,
              "text": "int temp = 0 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 616,
                  "end_byte": 619,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 620,
                  "end_byte": 628,
                  "text": "temp = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 620,
                      "end_byte": 624,
                      "text": "temp",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 625,
                      "end_byte": 626,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 627,
                      "end_byte": 628,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 629,
                  "end_byte": 630,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "do_statement",
              "start_byte": 631,
              "end_byte": 1185,
              "text": "do { c = read ( 0 , buffer , N ) ; for ( j = 0 ; j < c ; j ++ ) { if ( buffer [ j ] == '\\n' && inputN ) { q = temp * ( temp + 1 ) / 2 ; n = temp ; temp = 0 ; inputN = 0 ; } else if ( ( buffer [ j ] == '\\n' || buffer [ j ] == ' ' ) && ! inputN ) { x ++ ; a [ x ] = temp ; temp = 0 ; if ( ( x + 1 ) == q ) { innerC ++ ; inputN = 1 ; lowerBound = ( n - 1 ) * n / 2 ; upperBound = ( n + 1 ) * n / 2 - 1 ; printf ( \"%d\\n\" , max ( 0 , 1 ) ) ; x = - 1 ; if ( innerC == t ) break ; } } else { temp = temp * 10 + buffer [ j ] - '0' ; } } } while ( innerC != t ) ;",
              "children": [
                {
                  "type": "do",
                  "start_byte": 631,
                  "end_byte": 633,
                  "text": "do",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 634,
                  "end_byte": 1161,
                  "text": "{ c = read ( 0 , buffer , N ) ; for ( j = 0 ; j < c ; j ++ ) { if ( buffer [ j ] == '\\n' && inputN ) { q = temp * ( temp + 1 ) / 2 ; n = temp ; temp = 0 ; inputN = 0 ; } else if ( ( buffer [ j ] == '\\n' || buffer [ j ] == ' ' ) && ! inputN ) { x ++ ; a [ x ] = temp ; temp = 0 ; if ( ( x + 1 ) == q ) { innerC ++ ; inputN = 1 ; lowerBound = ( n - 1 ) * n / 2 ; upperBound = ( n + 1 ) * n / 2 - 1 ; printf ( \"%d\\n\" , max ( 0 , 1 ) ) ; x = - 1 ; if ( innerC == t ) break ; } } else { temp = temp * 10 + buffer [ j ] - '0' ; } } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 634,
                      "end_byte": 635,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 636,
                      "end_byte": 665,
                      "text": "c = read ( 0 , buffer , N ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 636,
                          "end_byte": 663,
                          "text": "c = read ( 0 , buffer , N )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 636,
                              "end_byte": 637,
                              "text": "c",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 638,
                              "end_byte": 639,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 640,
                              "end_byte": 663,
                              "text": "read ( 0 , buffer , N )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 640,
                                  "end_byte": 644,
                                  "text": "read",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 645,
                                  "end_byte": 663,
                                  "text": "( 0 , buffer , N )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 645,
                                      "end_byte": 646,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 647,
                                      "end_byte": 648,
                                      "text": "0",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 649,
                                      "end_byte": 650,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 651,
                                      "end_byte": 657,
                                      "text": "buffer",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 658,
                                      "end_byte": 659,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 660,
                                      "end_byte": 661,
                                      "text": "N",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 662,
                                      "end_byte": 663,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 664,
                          "end_byte": 665,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 666,
                      "end_byte": 1159,
                      "text": "for ( j = 0 ; j < c ; j ++ ) { if ( buffer [ j ] == '\\n' && inputN ) { q = temp * ( temp + 1 ) / 2 ; n = temp ; temp = 0 ; inputN = 0 ; } else if ( ( buffer [ j ] == '\\n' || buffer [ j ] == ' ' ) && ! inputN ) { x ++ ; a [ x ] = temp ; temp = 0 ; if ( ( x + 1 ) == q ) { innerC ++ ; inputN = 1 ; lowerBound = ( n - 1 ) * n / 2 ; upperBound = ( n + 1 ) * n / 2 - 1 ; printf ( \"%d\\n\" , max ( 0 , 1 ) ) ; x = - 1 ; if ( innerC == t ) break ; } } else { temp = temp * 10 + buffer [ j ] - '0' ; } }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 666,
                          "end_byte": 669,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 670,
                          "end_byte": 671,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 672,
                          "end_byte": 677,
                          "text": "j = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 672,
                              "end_byte": 673,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 674,
                              "end_byte": 675,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 676,
                              "end_byte": 677,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 678,
                          "end_byte": 679,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 680,
                          "end_byte": 685,
                          "text": "j < c",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 680,
                              "end_byte": 681,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 682,
                              "end_byte": 683,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 684,
                              "end_byte": 685,
                              "text": "c",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 686,
                          "end_byte": 687,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 688,
                          "end_byte": 692,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 688,
                              "end_byte": 689,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 690,
                              "end_byte": 692,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 693,
                          "end_byte": 694,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 695,
                          "end_byte": 1159,
                          "text": "{ if ( buffer [ j ] == '\\n' && inputN ) { q = temp * ( temp + 1 ) / 2 ; n = temp ; temp = 0 ; inputN = 0 ; } else if ( ( buffer [ j ] == '\\n' || buffer [ j ] == ' ' ) && ! inputN ) { x ++ ; a [ x ] = temp ; temp = 0 ; if ( ( x + 1 ) == q ) { innerC ++ ; inputN = 1 ; lowerBound = ( n - 1 ) * n / 2 ; upperBound = ( n + 1 ) * n / 2 - 1 ; printf ( \"%d\\n\" , max ( 0 , 1 ) ) ; x = - 1 ; if ( innerC == t ) break ; } } else { temp = temp * 10 + buffer [ j ] - '0' ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 695,
                              "end_byte": 696,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 697,
                              "end_byte": 1157,
                              "text": "if ( buffer [ j ] == '\\n' && inputN ) { q = temp * ( temp + 1 ) / 2 ; n = temp ; temp = 0 ; inputN = 0 ; } else if ( ( buffer [ j ] == '\\n' || buffer [ j ] == ' ' ) && ! inputN ) { x ++ ; a [ x ] = temp ; temp = 0 ; if ( ( x + 1 ) == q ) { innerC ++ ; inputN = 1 ; lowerBound = ( n - 1 ) * n / 2 ; upperBound = ( n + 1 ) * n / 2 - 1 ; printf ( \"%d\\n\" , max ( 0 , 1 ) ) ; x = - 1 ; if ( innerC == t ) break ; } } else { temp = temp * 10 + buffer [ j ] - '0' ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 697,
                                  "end_byte": 699,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 700,
                                  "end_byte": 734,
                                  "text": "( buffer [ j ] == '\\n' && inputN )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 700,
                                      "end_byte": 701,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 702,
                                      "end_byte": 732,
                                      "text": "buffer [ j ] == '\\n' && inputN",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 702,
                                          "end_byte": 722,
                                          "text": "buffer [ j ] == '\\n'",
                                          "children": [
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 702,
                                              "end_byte": 714,
                                              "text": "buffer [ j ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 702,
                                                  "end_byte": 708,
                                                  "text": "buffer",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 709,
                                                  "end_byte": 714,
                                                  "text": "[ j ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 709,
                                                      "end_byte": 710,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 711,
                                                      "end_byte": 712,
                                                      "text": "j",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 713,
                                                      "end_byte": 714,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "==",
                                              "start_byte": 715,
                                              "end_byte": 717,
                                              "text": "==",
                                              "children": []
                                            },
                                            {
                                              "type": "char_literal",
                                              "start_byte": 718,
                                              "end_byte": 722,
                                              "text": "'\\n'",
                                              "children": [
                                                {
                                                  "type": "'",
                                                  "start_byte": 718,
                                                  "end_byte": 719,
                                                  "text": "'",
                                                  "children": []
                                                },
                                                {
                                                  "type": "escape_sequence",
                                                  "start_byte": 719,
                                                  "end_byte": 721,
                                                  "text": "\\n",
                                                  "children": []
                                                },
                                                {
                                                  "type": "'",
                                                  "start_byte": 721,
                                                  "end_byte": 722,
                                                  "text": "'",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "&&",
                                          "start_byte": 723,
                                          "end_byte": 725,
                                          "text": "&&",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 726,
                                          "end_byte": 732,
                                          "text": "inputN",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 733,
                                      "end_byte": 734,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 735,
                                  "end_byte": 803,
                                  "text": "{ q = temp * ( temp + 1 ) / 2 ; n = temp ; temp = 0 ; inputN = 0 ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 735,
                                      "end_byte": 736,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 737,
                                      "end_byte": 766,
                                      "text": "q = temp * ( temp + 1 ) / 2 ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 737,
                                          "end_byte": 764,
                                          "text": "q = temp * ( temp + 1 ) / 2",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 737,
                                              "end_byte": 738,
                                              "text": "q",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 739,
                                              "end_byte": 740,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 741,
                                              "end_byte": 764,
                                              "text": "temp * ( temp + 1 ) / 2",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 741,
                                                  "end_byte": 760,
                                                  "text": "temp * ( temp + 1 )",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 741,
                                                      "end_byte": 745,
                                                      "text": "temp",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "*",
                                                      "start_byte": 746,
                                                      "end_byte": 747,
                                                      "text": "*",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "parenthesized_expression",
                                                      "start_byte": 748,
                                                      "end_byte": 760,
                                                      "text": "( temp + 1 )",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start_byte": 748,
                                                          "end_byte": 749,
                                                          "text": "(",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 750,
                                                          "end_byte": 758,
                                                          "text": "temp + 1",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 750,
                                                              "end_byte": 754,
                                                              "text": "temp",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "+",
                                                              "start_byte": 755,
                                                              "end_byte": 756,
                                                              "text": "+",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "number_literal",
                                                              "start_byte": 757,
                                                              "end_byte": 758,
                                                              "text": "1",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start_byte": 759,
                                                          "end_byte": 760,
                                                          "text": ")",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "/",
                                                  "start_byte": 761,
                                                  "end_byte": 762,
                                                  "text": "/",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 763,
                                                  "end_byte": 764,
                                                  "text": "2",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 765,
                                          "end_byte": 766,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 767,
                                      "end_byte": 777,
                                      "text": "n = temp ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 767,
                                          "end_byte": 775,
                                          "text": "n = temp",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 767,
                                              "end_byte": 768,
                                              "text": "n",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 769,
                                              "end_byte": 770,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 771,
                                              "end_byte": 775,
                                              "text": "temp",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 776,
                                          "end_byte": 777,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 778,
                                      "end_byte": 788,
                                      "text": "temp = 0 ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 778,
                                          "end_byte": 786,
                                          "text": "temp = 0",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 778,
                                              "end_byte": 782,
                                              "text": "temp",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 783,
                                              "end_byte": 784,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 785,
                                              "end_byte": 786,
                                              "text": "0",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 787,
                                          "end_byte": 788,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 789,
                                      "end_byte": 801,
                                      "text": "inputN = 0 ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 789,
                                          "end_byte": 799,
                                          "text": "inputN = 0",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 789,
                                              "end_byte": 795,
                                              "text": "inputN",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 796,
                                              "end_byte": 797,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 798,
                                              "end_byte": 799,
                                              "text": "0",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 800,
                                          "end_byte": 801,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 802,
                                      "end_byte": 803,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start_byte": 804,
                                  "end_byte": 1157,
                                  "text": "else if ( ( buffer [ j ] == '\\n' || buffer [ j ] == ' ' ) && ! inputN ) { x ++ ; a [ x ] = temp ; temp = 0 ; if ( ( x + 1 ) == q ) { innerC ++ ; inputN = 1 ; lowerBound = ( n - 1 ) * n / 2 ; upperBound = ( n + 1 ) * n / 2 - 1 ; printf ( \"%d\\n\" , max ( 0 , 1 ) ) ; x = - 1 ; if ( innerC == t ) break ; } } else { temp = temp * 10 + buffer [ j ] - '0' ; }",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start_byte": 804,
                                      "end_byte": 808,
                                      "text": "else",
                                      "children": []
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 809,
                                      "end_byte": 1157,
                                      "text": "if ( ( buffer [ j ] == '\\n' || buffer [ j ] == ' ' ) && ! inputN ) { x ++ ; a [ x ] = temp ; temp = 0 ; if ( ( x + 1 ) == q ) { innerC ++ ; inputN = 1 ; lowerBound = ( n - 1 ) * n / 2 ; upperBound = ( n + 1 ) * n / 2 - 1 ; printf ( \"%d\\n\" , max ( 0 , 1 ) ) ; x = - 1 ; if ( innerC == t ) break ; } } else { temp = temp * 10 + buffer [ j ] - '0' ; }",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 809,
                                          "end_byte": 811,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 812,
                                          "end_byte": 875,
                                          "text": "( ( buffer [ j ] == '\\n' || buffer [ j ] == ' ' ) && ! inputN )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 812,
                                              "end_byte": 813,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 814,
                                              "end_byte": 873,
                                              "text": "( buffer [ j ] == '\\n' || buffer [ j ] == ' ' ) && ! inputN",
                                              "children": [
                                                {
                                                  "type": "parenthesized_expression",
                                                  "start_byte": 814,
                                                  "end_byte": 861,
                                                  "text": "( buffer [ j ] == '\\n' || buffer [ j ] == ' ' )",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start_byte": 814,
                                                      "end_byte": 815,
                                                      "text": "(",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 816,
                                                      "end_byte": 859,
                                                      "text": "buffer [ j ] == '\\n' || buffer [ j ] == ' '",
                                                      "children": [
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 816,
                                                          "end_byte": 836,
                                                          "text": "buffer [ j ] == '\\n'",
                                                          "children": [
                                                            {
                                                              "type": "subscript_expression",
                                                              "start_byte": 816,
                                                              "end_byte": 828,
                                                              "text": "buffer [ j ]",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 816,
                                                                  "end_byte": 822,
                                                                  "text": "buffer",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "subscript_argument_list",
                                                                  "start_byte": 823,
                                                                  "end_byte": 828,
                                                                  "text": "[ j ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "[",
                                                                      "start_byte": 823,
                                                                      "end_byte": 824,
                                                                      "text": "[",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 825,
                                                                      "end_byte": 826,
                                                                      "text": "j",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "]",
                                                                      "start_byte": 827,
                                                                      "end_byte": 828,
                                                                      "text": "]",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "==",
                                                              "start_byte": 829,
                                                              "end_byte": 831,
                                                              "text": "==",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "char_literal",
                                                              "start_byte": 832,
                                                              "end_byte": 836,
                                                              "text": "'\\n'",
                                                              "children": [
                                                                {
                                                                  "type": "'",
                                                                  "start_byte": 832,
                                                                  "end_byte": 833,
                                                                  "text": "'",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "escape_sequence",
                                                                  "start_byte": 833,
                                                                  "end_byte": 835,
                                                                  "text": "\\n",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "'",
                                                                  "start_byte": 835,
                                                                  "end_byte": 836,
                                                                  "text": "'",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "||",
                                                          "start_byte": 837,
                                                          "end_byte": 839,
                                                          "text": "||",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 840,
                                                          "end_byte": 859,
                                                          "text": "buffer [ j ] == ' '",
                                                          "children": [
                                                            {
                                                              "type": "subscript_expression",
                                                              "start_byte": 840,
                                                              "end_byte": 852,
                                                              "text": "buffer [ j ]",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 840,
                                                                  "end_byte": 846,
                                                                  "text": "buffer",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "subscript_argument_list",
                                                                  "start_byte": 847,
                                                                  "end_byte": 852,
                                                                  "text": "[ j ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "[",
                                                                      "start_byte": 847,
                                                                      "end_byte": 848,
                                                                      "text": "[",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 849,
                                                                      "end_byte": 850,
                                                                      "text": "j",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "]",
                                                                      "start_byte": 851,
                                                                      "end_byte": 852,
                                                                      "text": "]",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "==",
                                                              "start_byte": 853,
                                                              "end_byte": 855,
                                                              "text": "==",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "char_literal",
                                                              "start_byte": 856,
                                                              "end_byte": 859,
                                                              "text": "' '",
                                                              "children": [
                                                                {
                                                                  "type": "'",
                                                                  "start_byte": 856,
                                                                  "end_byte": 857,
                                                                  "text": "'",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "character",
                                                                  "start_byte": 857,
                                                                  "end_byte": 858,
                                                                  "text": " ",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "'",
                                                                  "start_byte": 858,
                                                                  "end_byte": 859,
                                                                  "text": "'",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start_byte": 860,
                                                      "end_byte": 861,
                                                      "text": ")",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "&&",
                                                  "start_byte": 862,
                                                  "end_byte": 864,
                                                  "text": "&&",
                                                  "children": []
                                                },
                                                {
                                                  "type": "unary_expression",
                                                  "start_byte": 865,
                                                  "end_byte": 873,
                                                  "text": "! inputN",
                                                  "children": [
                                                    {
                                                      "type": "!",
                                                      "start_byte": 865,
                                                      "end_byte": 866,
                                                      "text": "!",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 867,
                                                      "end_byte": 873,
                                                      "text": "inputN",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 874,
                                              "end_byte": 875,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "compound_statement",
                                          "start_byte": 876,
                                          "end_byte": 1108,
                                          "text": "{ x ++ ; a [ x ] = temp ; temp = 0 ; if ( ( x + 1 ) == q ) { innerC ++ ; inputN = 1 ; lowerBound = ( n - 1 ) * n / 2 ; upperBound = ( n + 1 ) * n / 2 - 1 ; printf ( \"%d\\n\" , max ( 0 , 1 ) ) ; x = - 1 ; if ( innerC == t ) break ; } }",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start_byte": 876,
                                              "end_byte": 877,
                                              "text": "{",
                                              "children": []
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 878,
                                              "end_byte": 884,
                                              "text": "x ++ ;",
                                              "children": [
                                                {
                                                  "type": "update_expression",
                                                  "start_byte": 878,
                                                  "end_byte": 882,
                                                  "text": "x ++",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 878,
                                                      "end_byte": 879,
                                                      "text": "x",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "++",
                                                      "start_byte": 880,
                                                      "end_byte": 882,
                                                      "text": "++",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 883,
                                                  "end_byte": 884,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 885,
                                              "end_byte": 901,
                                              "text": "a [ x ] = temp ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 885,
                                                  "end_byte": 899,
                                                  "text": "a [ x ] = temp",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 885,
                                                      "end_byte": 892,
                                                      "text": "a [ x ]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 885,
                                                          "end_byte": 886,
                                                          "text": "a",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 887,
                                                          "end_byte": 892,
                                                          "text": "[ x ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 887,
                                                              "end_byte": 888,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 889,
                                                              "end_byte": 890,
                                                              "text": "x",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 891,
                                                              "end_byte": 892,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 893,
                                                      "end_byte": 894,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 895,
                                                      "end_byte": 899,
                                                      "text": "temp",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 900,
                                                  "end_byte": 901,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 902,
                                              "end_byte": 912,
                                              "text": "temp = 0 ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 902,
                                                  "end_byte": 910,
                                                  "text": "temp = 0",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 902,
                                                      "end_byte": 906,
                                                      "text": "temp",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 907,
                                                      "end_byte": 908,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 909,
                                                      "end_byte": 910,
                                                      "text": "0",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 911,
                                                  "end_byte": 912,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "if_statement",
                                              "start_byte": 913,
                                              "end_byte": 1106,
                                              "text": "if ( ( x + 1 ) == q ) { innerC ++ ; inputN = 1 ; lowerBound = ( n - 1 ) * n / 2 ; upperBound = ( n + 1 ) * n / 2 - 1 ; printf ( \"%d\\n\" , max ( 0 , 1 ) ) ; x = - 1 ; if ( innerC == t ) break ; }",
                                              "children": [
                                                {
                                                  "type": "if",
                                                  "start_byte": 913,
                                                  "end_byte": 915,
                                                  "text": "if",
                                                  "children": []
                                                },
                                                {
                                                  "type": "condition_clause",
                                                  "start_byte": 916,
                                                  "end_byte": 934,
                                                  "text": "( ( x + 1 ) == q )",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start_byte": 916,
                                                      "end_byte": 917,
                                                      "text": "(",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 918,
                                                      "end_byte": 932,
                                                      "text": "( x + 1 ) == q",
                                                      "children": [
                                                        {
                                                          "type": "parenthesized_expression",
                                                          "start_byte": 918,
                                                          "end_byte": 927,
                                                          "text": "( x + 1 )",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start_byte": 918,
                                                              "end_byte": 919,
                                                              "text": "(",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 920,
                                                              "end_byte": 925,
                                                              "text": "x + 1",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 920,
                                                                  "end_byte": 921,
                                                                  "text": "x",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "+",
                                                                  "start_byte": 922,
                                                                  "end_byte": 923,
                                                                  "text": "+",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "number_literal",
                                                                  "start_byte": 924,
                                                                  "end_byte": 925,
                                                                  "text": "1",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start_byte": 926,
                                                              "end_byte": 927,
                                                              "text": ")",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "==",
                                                          "start_byte": 928,
                                                          "end_byte": 930,
                                                          "text": "==",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 931,
                                                          "end_byte": 932,
                                                          "text": "q",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start_byte": 933,
                                                      "end_byte": 934,
                                                      "text": ")",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "compound_statement",
                                                  "start_byte": 935,
                                                  "end_byte": 1106,
                                                  "text": "{ innerC ++ ; inputN = 1 ; lowerBound = ( n - 1 ) * n / 2 ; upperBound = ( n + 1 ) * n / 2 - 1 ; printf ( \"%d\\n\" , max ( 0 , 1 ) ) ; x = - 1 ; if ( innerC == t ) break ; }",
                                                  "children": [
                                                    {
                                                      "type": "{",
                                                      "start_byte": 935,
                                                      "end_byte": 936,
                                                      "text": "{",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "expression_statement",
                                                      "start_byte": 937,
                                                      "end_byte": 948,
                                                      "text": "innerC ++ ;",
                                                      "children": [
                                                        {
                                                          "type": "update_expression",
                                                          "start_byte": 937,
                                                          "end_byte": 946,
                                                          "text": "innerC ++",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 937,
                                                              "end_byte": 943,
                                                              "text": "innerC",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "++",
                                                              "start_byte": 944,
                                                              "end_byte": 946,
                                                              "text": "++",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ";",
                                                          "start_byte": 947,
                                                          "end_byte": 948,
                                                          "text": ";",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "expression_statement",
                                                      "start_byte": 949,
                                                      "end_byte": 961,
                                                      "text": "inputN = 1 ;",
                                                      "children": [
                                                        {
                                                          "type": "assignment_expression",
                                                          "start_byte": 949,
                                                          "end_byte": 959,
                                                          "text": "inputN = 1",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 949,
                                                              "end_byte": 955,
                                                              "text": "inputN",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "=",
                                                              "start_byte": 956,
                                                              "end_byte": 957,
                                                              "text": "=",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "number_literal",
                                                              "start_byte": 958,
                                                              "end_byte": 959,
                                                              "text": "1",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ";",
                                                          "start_byte": 960,
                                                          "end_byte": 961,
                                                          "text": ";",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "expression_statement",
                                                      "start_byte": 962,
                                                      "end_byte": 994,
                                                      "text": "lowerBound = ( n - 1 ) * n / 2 ;",
                                                      "children": [
                                                        {
                                                          "type": "assignment_expression",
                                                          "start_byte": 962,
                                                          "end_byte": 992,
                                                          "text": "lowerBound = ( n - 1 ) * n / 2",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 962,
                                                              "end_byte": 972,
                                                              "text": "lowerBound",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "=",
                                                              "start_byte": 973,
                                                              "end_byte": 974,
                                                              "text": "=",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 975,
                                                              "end_byte": 992,
                                                              "text": "( n - 1 ) * n / 2",
                                                              "children": [
                                                                {
                                                                  "type": "binary_expression",
                                                                  "start_byte": 975,
                                                                  "end_byte": 988,
                                                                  "text": "( n - 1 ) * n",
                                                                  "children": [
                                                                    {
                                                                      "type": "parenthesized_expression",
                                                                      "start_byte": 975,
                                                                      "end_byte": 984,
                                                                      "text": "( n - 1 )",
                                                                      "children": [
                                                                        {
                                                                          "type": "(",
                                                                          "start_byte": 975,
                                                                          "end_byte": 976,
                                                                          "text": "(",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "binary_expression",
                                                                          "start_byte": 977,
                                                                          "end_byte": 982,
                                                                          "text": "n - 1",
                                                                          "children": [
                                                                            {
                                                                              "type": "identifier",
                                                                              "start_byte": 977,
                                                                              "end_byte": 978,
                                                                              "text": "n",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "-",
                                                                              "start_byte": 979,
                                                                              "end_byte": 980,
                                                                              "text": "-",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "number_literal",
                                                                              "start_byte": 981,
                                                                              "end_byte": 982,
                                                                              "text": "1",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": ")",
                                                                          "start_byte": 983,
                                                                          "end_byte": 984,
                                                                          "text": ")",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "*",
                                                                      "start_byte": 985,
                                                                      "end_byte": 986,
                                                                      "text": "*",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 987,
                                                                      "end_byte": 988,
                                                                      "text": "n",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "/",
                                                                  "start_byte": 989,
                                                                  "end_byte": 990,
                                                                  "text": "/",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "number_literal",
                                                                  "start_byte": 991,
                                                                  "end_byte": 992,
                                                                  "text": "2",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ";",
                                                          "start_byte": 993,
                                                          "end_byte": 994,
                                                          "text": ";",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "expression_statement",
                                                      "start_byte": 995,
                                                      "end_byte": 1031,
                                                      "text": "upperBound = ( n + 1 ) * n / 2 - 1 ;",
                                                      "children": [
                                                        {
                                                          "type": "assignment_expression",
                                                          "start_byte": 995,
                                                          "end_byte": 1029,
                                                          "text": "upperBound = ( n + 1 ) * n / 2 - 1",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 995,
                                                              "end_byte": 1005,
                                                              "text": "upperBound",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "=",
                                                              "start_byte": 1006,
                                                              "end_byte": 1007,
                                                              "text": "=",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 1008,
                                                              "end_byte": 1029,
                                                              "text": "( n + 1 ) * n / 2 - 1",
                                                              "children": [
                                                                {
                                                                  "type": "binary_expression",
                                                                  "start_byte": 1008,
                                                                  "end_byte": 1025,
                                                                  "text": "( n + 1 ) * n / 2",
                                                                  "children": [
                                                                    {
                                                                      "type": "binary_expression",
                                                                      "start_byte": 1008,
                                                                      "end_byte": 1021,
                                                                      "text": "( n + 1 ) * n",
                                                                      "children": [
                                                                        {
                                                                          "type": "parenthesized_expression",
                                                                          "start_byte": 1008,
                                                                          "end_byte": 1017,
                                                                          "text": "( n + 1 )",
                                                                          "children": [
                                                                            {
                                                                              "type": "(",
                                                                              "start_byte": 1008,
                                                                              "end_byte": 1009,
                                                                              "text": "(",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "binary_expression",
                                                                              "start_byte": 1010,
                                                                              "end_byte": 1015,
                                                                              "text": "n + 1",
                                                                              "children": [
                                                                                {
                                                                                  "type": "identifier",
                                                                                  "start_byte": 1010,
                                                                                  "end_byte": 1011,
                                                                                  "text": "n",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "+",
                                                                                  "start_byte": 1012,
                                                                                  "end_byte": 1013,
                                                                                  "text": "+",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "number_literal",
                                                                                  "start_byte": 1014,
                                                                                  "end_byte": 1015,
                                                                                  "text": "1",
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": ")",
                                                                              "start_byte": 1016,
                                                                              "end_byte": 1017,
                                                                              "text": ")",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "*",
                                                                          "start_byte": 1018,
                                                                          "end_byte": 1019,
                                                                          "text": "*",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 1020,
                                                                          "end_byte": 1021,
                                                                          "text": "n",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "/",
                                                                      "start_byte": 1022,
                                                                      "end_byte": 1023,
                                                                      "text": "/",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "number_literal",
                                                                      "start_byte": 1024,
                                                                      "end_byte": 1025,
                                                                      "text": "2",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "-",
                                                                  "start_byte": 1026,
                                                                  "end_byte": 1027,
                                                                  "text": "-",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "number_literal",
                                                                  "start_byte": 1028,
                                                                  "end_byte": 1029,
                                                                  "text": "1",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ";",
                                                          "start_byte": 1030,
                                                          "end_byte": 1031,
                                                          "text": ";",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "expression_statement",
                                                      "start_byte": 1032,
                                                      "end_byte": 1067,
                                                      "text": "printf ( \"%d\\n\" , max ( 0 , 1 ) ) ;",
                                                      "children": [
                                                        {
                                                          "type": "call_expression",
                                                          "start_byte": 1032,
                                                          "end_byte": 1065,
                                                          "text": "printf ( \"%d\\n\" , max ( 0 , 1 ) )",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 1032,
                                                              "end_byte": 1038,
                                                              "text": "printf",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "argument_list",
                                                              "start_byte": 1039,
                                                              "end_byte": 1065,
                                                              "text": "( \"%d\\n\" , max ( 0 , 1 ) )",
                                                              "children": [
                                                                {
                                                                  "type": "(",
                                                                  "start_byte": 1039,
                                                                  "end_byte": 1040,
                                                                  "text": "(",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "string_literal",
                                                                  "start_byte": 1041,
                                                                  "end_byte": 1047,
                                                                  "text": "\"%d\\n\"",
                                                                  "children": [
                                                                    {
                                                                      "type": "\"",
                                                                      "start_byte": 1041,
                                                                      "end_byte": 1042,
                                                                      "text": "\"",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "string_content",
                                                                      "start_byte": 1042,
                                                                      "end_byte": 1044,
                                                                      "text": "%d",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "escape_sequence",
                                                                      "start_byte": 1044,
                                                                      "end_byte": 1046,
                                                                      "text": "\\n",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "\"",
                                                                      "start_byte": 1046,
                                                                      "end_byte": 1047,
                                                                      "text": "\"",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": ",",
                                                                  "start_byte": 1048,
                                                                  "end_byte": 1049,
                                                                  "text": ",",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "call_expression",
                                                                  "start_byte": 1050,
                                                                  "end_byte": 1063,
                                                                  "text": "max ( 0 , 1 )",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 1050,
                                                                      "end_byte": 1053,
                                                                      "text": "max",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "argument_list",
                                                                      "start_byte": 1054,
                                                                      "end_byte": 1063,
                                                                      "text": "( 0 , 1 )",
                                                                      "children": [
                                                                        {
                                                                          "type": "(",
                                                                          "start_byte": 1054,
                                                                          "end_byte": 1055,
                                                                          "text": "(",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "number_literal",
                                                                          "start_byte": 1056,
                                                                          "end_byte": 1057,
                                                                          "text": "0",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": ",",
                                                                          "start_byte": 1058,
                                                                          "end_byte": 1059,
                                                                          "text": ",",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "number_literal",
                                                                          "start_byte": 1060,
                                                                          "end_byte": 1061,
                                                                          "text": "1",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": ")",
                                                                          "start_byte": 1062,
                                                                          "end_byte": 1063,
                                                                          "text": ")",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": ")",
                                                                  "start_byte": 1064,
                                                                  "end_byte": 1065,
                                                                  "text": ")",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ";",
                                                          "start_byte": 1066,
                                                          "end_byte": 1067,
                                                          "text": ";",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "expression_statement",
                                                      "start_byte": 1068,
                                                      "end_byte": 1077,
                                                      "text": "x = - 1 ;",
                                                      "children": [
                                                        {
                                                          "type": "assignment_expression",
                                                          "start_byte": 1068,
                                                          "end_byte": 1075,
                                                          "text": "x = - 1",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 1068,
                                                              "end_byte": 1069,
                                                              "text": "x",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "=",
                                                              "start_byte": 1070,
                                                              "end_byte": 1071,
                                                              "text": "=",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "unary_expression",
                                                              "start_byte": 1072,
                                                              "end_byte": 1075,
                                                              "text": "- 1",
                                                              "children": [
                                                                {
                                                                  "type": "-",
                                                                  "start_byte": 1072,
                                                                  "end_byte": 1073,
                                                                  "text": "-",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "number_literal",
                                                                  "start_byte": 1074,
                                                                  "end_byte": 1075,
                                                                  "text": "1",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ";",
                                                          "start_byte": 1076,
                                                          "end_byte": 1077,
                                                          "text": ";",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "if_statement",
                                                      "start_byte": 1078,
                                                      "end_byte": 1104,
                                                      "text": "if ( innerC == t ) break ;",
                                                      "children": [
                                                        {
                                                          "type": "if",
                                                          "start_byte": 1078,
                                                          "end_byte": 1080,
                                                          "text": "if",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "condition_clause",
                                                          "start_byte": 1081,
                                                          "end_byte": 1096,
                                                          "text": "( innerC == t )",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start_byte": 1081,
                                                              "end_byte": 1082,
                                                              "text": "(",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 1083,
                                                              "end_byte": 1094,
                                                              "text": "innerC == t",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 1083,
                                                                  "end_byte": 1089,
                                                                  "text": "innerC",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "==",
                                                                  "start_byte": 1090,
                                                                  "end_byte": 1092,
                                                                  "text": "==",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 1093,
                                                                  "end_byte": 1094,
                                                                  "text": "t",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start_byte": 1095,
                                                              "end_byte": 1096,
                                                              "text": ")",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "break_statement",
                                                          "start_byte": 1097,
                                                          "end_byte": 1104,
                                                          "text": "break ;",
                                                          "children": [
                                                            {
                                                              "type": "break",
                                                              "start_byte": 1097,
                                                              "end_byte": 1102,
                                                              "text": "break",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": ";",
                                                              "start_byte": 1103,
                                                              "end_byte": 1104,
                                                              "text": ";",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "}",
                                                      "start_byte": 1105,
                                                      "end_byte": 1106,
                                                      "text": "}",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start_byte": 1107,
                                              "end_byte": 1108,
                                              "text": "}",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "else_clause",
                                          "start_byte": 1109,
                                          "end_byte": 1157,
                                          "text": "else { temp = temp * 10 + buffer [ j ] - '0' ; }",
                                          "children": [
                                            {
                                              "type": "else",
                                              "start_byte": 1109,
                                              "end_byte": 1113,
                                              "text": "else",
                                              "children": []
                                            },
                                            {
                                              "type": "compound_statement",
                                              "start_byte": 1114,
                                              "end_byte": 1157,
                                              "text": "{ temp = temp * 10 + buffer [ j ] - '0' ; }",
                                              "children": [
                                                {
                                                  "type": "{",
                                                  "start_byte": 1114,
                                                  "end_byte": 1115,
                                                  "text": "{",
                                                  "children": []
                                                },
                                                {
                                                  "type": "expression_statement",
                                                  "start_byte": 1116,
                                                  "end_byte": 1155,
                                                  "text": "temp = temp * 10 + buffer [ j ] - '0' ;",
                                                  "children": [
                                                    {
                                                      "type": "assignment_expression",
                                                      "start_byte": 1116,
                                                      "end_byte": 1153,
                                                      "text": "temp = temp * 10 + buffer [ j ] - '0'",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 1116,
                                                          "end_byte": 1120,
                                                          "text": "temp",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "=",
                                                          "start_byte": 1121,
                                                          "end_byte": 1122,
                                                          "text": "=",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 1123,
                                                          "end_byte": 1153,
                                                          "text": "temp * 10 + buffer [ j ] - '0'",
                                                          "children": [
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 1123,
                                                              "end_byte": 1147,
                                                              "text": "temp * 10 + buffer [ j ]",
                                                              "children": [
                                                                {
                                                                  "type": "binary_expression",
                                                                  "start_byte": 1123,
                                                                  "end_byte": 1132,
                                                                  "text": "temp * 10",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 1123,
                                                                      "end_byte": 1127,
                                                                      "text": "temp",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "*",
                                                                      "start_byte": 1128,
                                                                      "end_byte": 1129,
                                                                      "text": "*",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "number_literal",
                                                                      "start_byte": 1130,
                                                                      "end_byte": 1132,
                                                                      "text": "10",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "+",
                                                                  "start_byte": 1133,
                                                                  "end_byte": 1134,
                                                                  "text": "+",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "subscript_expression",
                                                                  "start_byte": 1135,
                                                                  "end_byte": 1147,
                                                                  "text": "buffer [ j ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 1135,
                                                                      "end_byte": 1141,
                                                                      "text": "buffer",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "subscript_argument_list",
                                                                      "start_byte": 1142,
                                                                      "end_byte": 1147,
                                                                      "text": "[ j ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "[",
                                                                          "start_byte": 1142,
                                                                          "end_byte": 1143,
                                                                          "text": "[",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 1144,
                                                                          "end_byte": 1145,
                                                                          "text": "j",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "]",
                                                                          "start_byte": 1146,
                                                                          "end_byte": 1147,
                                                                          "text": "]",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "-",
                                                              "start_byte": 1148,
                                                              "end_byte": 1149,
                                                              "text": "-",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "char_literal",
                                                              "start_byte": 1150,
                                                              "end_byte": 1153,
                                                              "text": "'0'",
                                                              "children": [
                                                                {
                                                                  "type": "'",
                                                                  "start_byte": 1150,
                                                                  "end_byte": 1151,
                                                                  "text": "'",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "character",
                                                                  "start_byte": 1151,
                                                                  "end_byte": 1152,
                                                                  "text": "0",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "'",
                                                                  "start_byte": 1152,
                                                                  "end_byte": 1153,
                                                                  "text": "'",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ";",
                                                      "start_byte": 1154,
                                                      "end_byte": 1155,
                                                      "text": ";",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "}",
                                                  "start_byte": 1156,
                                                  "end_byte": 1157,
                                                  "text": "}",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 1158,
                              "end_byte": 1159,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 1160,
                      "end_byte": 1161,
                      "text": "}",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "while",
                  "start_byte": 1162,
                  "end_byte": 1167,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "parenthesized_expression",
                  "start_byte": 1168,
                  "end_byte": 1183,
                  "text": "( innerC != t )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 1168,
                      "end_byte": 1169,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 1170,
                      "end_byte": 1181,
                      "text": "innerC != t",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 1170,
                          "end_byte": 1176,
                          "text": "innerC",
                          "children": []
                        },
                        {
                          "type": "!=",
                          "start_byte": 1177,
                          "end_byte": 1179,
                          "text": "!=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 1180,
                          "end_byte": 1181,
                          "text": "t",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 1182,
                      "end_byte": 1183,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1184,
                  "end_byte": 1185,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 1186,
              "end_byte": 1196,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 1186,
                  "end_byte": 1192,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 1193,
                  "end_byte": 1194,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 1195,
                  "end_byte": 1196,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 1197,
              "end_byte": 1198,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}