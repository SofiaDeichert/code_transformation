int gcd ( int , int ) ; int lcm ( int , int ) ; int main ( ) { int i , j , g , l ; long int * p , * q , y ; scanf ( "%d" , & i ) ; for ( y = 0 ; y < 1000000 ; y ++ ) { } for ( y = 0 ; y < 1000000 ; y ++ ) { } for ( y = 0 ; y < 1000000 ; y ++ ) { } p = ( long int * ) malloc ( i * sizeof ( int ) ) ; q = ( long int * ) malloc ( i * sizeof ( int ) ) ; for ( j = 0 ; j < i ; j ++ ) { scanf ( "%d %d" , & p [ j ] , & q [ j ] ) ; } for ( j = 0 ; j < i ; j ++ ) { g = gcd ( p [ j ] , q [ j ] ) ; l = lcm ( p [ j ] , q [ j ] ) ; printf ( "%d %d\n" , g , l ) ; } } int gcd ( int a , int b ) { if ( a > b ) { if ( b == 0 ) return a ; else return gcd ( b , a % b ) ; } else { { if ( a == 0 ) return b ; else return gcd ( a , b % a ) ; } } } int lcm ( int a , int b ) { return ( ( a * b ) / gcd ( a , b ) ) ; }