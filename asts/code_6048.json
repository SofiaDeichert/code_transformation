{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 613,
  "text": "int main ( void ) { int ipMat [ 100 ] , iTest , iRowLen , iItr , iItr1 , indx , iItr2 , max , iPivotIndx ; fscanf ( stdin , \"%d\" , & iTest ) ; for ( iItr = 0 ; iItr < iTest ; iItr ++ ) { fscanf ( stdin , \"%d\" , & iRowLen ) ; for ( iItr1 = 0 ; iItr1 < iRowLen ; iItr1 ++ ) { for ( iItr2 = 0 ; iItr2 <= iItr1 ; iItr2 ++ ) { fscanf ( stdin , \"%d\" , & ipMat [ iItr2 ] ) ; } if ( iItr1 == 0 ) { max = ipMat [ 0 ] ; iPivotIndx = 0 ; } else { iPivotIndx = ipMat [ iPivotIndx ] > ipMat [ iPivotIndx + 1 ] ? iPivotIndx : iPivotIndx + 1 ; max += ipMat [ iPivotIndx ] ; } } fprintf ( stdout , \"%d\\n\" , max ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 613,
      "text": "int main ( void ) { int ipMat [ 100 ] , iTest , iRowLen , iItr , iItr1 , indx , iItr2 , max , iPivotIndx ; fscanf ( stdin , \"%d\" , & iTest ) ; for ( iItr = 0 ; iItr < iTest ; iItr ++ ) { fscanf ( stdin , \"%d\" , & iRowLen ) ; for ( iItr1 = 0 ; iItr1 < iRowLen ; iItr1 ++ ) { for ( iItr2 = 0 ; iItr2 <= iItr1 ; iItr2 ++ ) { fscanf ( stdin , \"%d\" , & ipMat [ iItr2 ] ) ; } if ( iItr1 == 0 ) { max = ipMat [ 0 ] ; iPivotIndx = 0 ; } else { iPivotIndx = ipMat [ iPivotIndx ] > ipMat [ iPivotIndx + 1 ] ? iPivotIndx : iPivotIndx + 1 ; max += ipMat [ iPivotIndx ] ; } } fprintf ( stdout , \"%d\\n\" , max ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 17,
          "text": "main ( void )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 17,
              "text": "( void )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 11,
                  "end_byte": 15,
                  "text": "void",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 11,
                      "end_byte": 15,
                      "text": "void",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 16,
                  "end_byte": 17,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 18,
          "end_byte": 613,
          "text": "{ int ipMat [ 100 ] , iTest , iRowLen , iItr , iItr1 , indx , iItr2 , max , iPivotIndx ; fscanf ( stdin , \"%d\" , & iTest ) ; for ( iItr = 0 ; iItr < iTest ; iItr ++ ) { fscanf ( stdin , \"%d\" , & iRowLen ) ; for ( iItr1 = 0 ; iItr1 < iRowLen ; iItr1 ++ ) { for ( iItr2 = 0 ; iItr2 <= iItr1 ; iItr2 ++ ) { fscanf ( stdin , \"%d\" , & ipMat [ iItr2 ] ) ; } if ( iItr1 == 0 ) { max = ipMat [ 0 ] ; iPivotIndx = 0 ; } else { iPivotIndx = ipMat [ iPivotIndx ] > ipMat [ iPivotIndx + 1 ] ? iPivotIndx : iPivotIndx + 1 ; max += ipMat [ iPivotIndx ] ; } } fprintf ( stdout , \"%d\\n\" , max ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 18,
              "end_byte": 19,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 20,
              "end_byte": 106,
              "text": "int ipMat [ 100 ] , iTest , iRowLen , iItr , iItr1 , indx , iItr2 , max , iPivotIndx ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 20,
                  "end_byte": 23,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 24,
                  "end_byte": 37,
                  "text": "ipMat [ 100 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 24,
                      "end_byte": 29,
                      "text": "ipMat",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 30,
                      "end_byte": 31,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 32,
                      "end_byte": 35,
                      "text": "100",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 36,
                      "end_byte": 37,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 38,
                  "end_byte": 39,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 40,
                  "end_byte": 45,
                  "text": "iTest",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 46,
                  "end_byte": 47,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 48,
                  "end_byte": 55,
                  "text": "iRowLen",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 56,
                  "end_byte": 57,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 58,
                  "end_byte": 62,
                  "text": "iItr",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 63,
                  "end_byte": 64,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 65,
                  "end_byte": 70,
                  "text": "iItr1",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 71,
                  "end_byte": 72,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 73,
                  "end_byte": 77,
                  "text": "indx",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 78,
                  "end_byte": 79,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 80,
                  "end_byte": 85,
                  "text": "iItr2",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 86,
                  "end_byte": 87,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 88,
                  "end_byte": 91,
                  "text": "max",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 92,
                  "end_byte": 93,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 94,
                  "end_byte": 104,
                  "text": "iPivotIndx",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 105,
                  "end_byte": 106,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 107,
              "end_byte": 142,
              "text": "fscanf ( stdin , \"%d\" , & iTest ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 107,
                  "end_byte": 140,
                  "text": "fscanf ( stdin , \"%d\" , & iTest )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 107,
                      "end_byte": 113,
                      "text": "fscanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 114,
                      "end_byte": 140,
                      "text": "( stdin , \"%d\" , & iTest )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 114,
                          "end_byte": 115,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 116,
                          "end_byte": 121,
                          "text": "stdin",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 122,
                          "end_byte": 123,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 124,
                          "end_byte": 128,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 124,
                              "end_byte": 125,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 125,
                              "end_byte": 127,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 127,
                              "end_byte": 128,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 129,
                          "end_byte": 130,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 131,
                          "end_byte": 138,
                          "text": "& iTest",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 131,
                              "end_byte": 132,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 133,
                              "end_byte": 138,
                              "text": "iTest",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 139,
                          "end_byte": 140,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 141,
                  "end_byte": 142,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 143,
              "end_byte": 600,
              "text": "for ( iItr = 0 ; iItr < iTest ; iItr ++ ) { fscanf ( stdin , \"%d\" , & iRowLen ) ; for ( iItr1 = 0 ; iItr1 < iRowLen ; iItr1 ++ ) { for ( iItr2 = 0 ; iItr2 <= iItr1 ; iItr2 ++ ) { fscanf ( stdin , \"%d\" , & ipMat [ iItr2 ] ) ; } if ( iItr1 == 0 ) { max = ipMat [ 0 ] ; iPivotIndx = 0 ; } else { iPivotIndx = ipMat [ iPivotIndx ] > ipMat [ iPivotIndx + 1 ] ? iPivotIndx : iPivotIndx + 1 ; max += ipMat [ iPivotIndx ] ; } } fprintf ( stdout , \"%d\\n\" , max ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 143,
                  "end_byte": 146,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 147,
                  "end_byte": 148,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 149,
                  "end_byte": 157,
                  "text": "iItr = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 149,
                      "end_byte": 153,
                      "text": "iItr",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 154,
                      "end_byte": 155,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 156,
                      "end_byte": 157,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 158,
                  "end_byte": 159,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 160,
                  "end_byte": 172,
                  "text": "iItr < iTest",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 160,
                      "end_byte": 164,
                      "text": "iItr",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 165,
                      "end_byte": 166,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 167,
                      "end_byte": 172,
                      "text": "iTest",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 173,
                  "end_byte": 174,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 175,
                  "end_byte": 182,
                  "text": "iItr ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 175,
                      "end_byte": 179,
                      "text": "iItr",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 180,
                      "end_byte": 182,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 183,
                  "end_byte": 184,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 185,
                  "end_byte": 600,
                  "text": "{ fscanf ( stdin , \"%d\" , & iRowLen ) ; for ( iItr1 = 0 ; iItr1 < iRowLen ; iItr1 ++ ) { for ( iItr2 = 0 ; iItr2 <= iItr1 ; iItr2 ++ ) { fscanf ( stdin , \"%d\" , & ipMat [ iItr2 ] ) ; } if ( iItr1 == 0 ) { max = ipMat [ 0 ] ; iPivotIndx = 0 ; } else { iPivotIndx = ipMat [ iPivotIndx ] > ipMat [ iPivotIndx + 1 ] ? iPivotIndx : iPivotIndx + 1 ; max += ipMat [ iPivotIndx ] ; } } fprintf ( stdout , \"%d\\n\" , max ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 185,
                      "end_byte": 186,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 187,
                      "end_byte": 224,
                      "text": "fscanf ( stdin , \"%d\" , & iRowLen ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 187,
                          "end_byte": 222,
                          "text": "fscanf ( stdin , \"%d\" , & iRowLen )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 187,
                              "end_byte": 193,
                              "text": "fscanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 194,
                              "end_byte": 222,
                              "text": "( stdin , \"%d\" , & iRowLen )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 194,
                                  "end_byte": 195,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 196,
                                  "end_byte": 201,
                                  "text": "stdin",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 202,
                                  "end_byte": 203,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 204,
                                  "end_byte": 208,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 204,
                                      "end_byte": 205,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 205,
                                      "end_byte": 207,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 207,
                                      "end_byte": 208,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 209,
                                  "end_byte": 210,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 211,
                                  "end_byte": 220,
                                  "text": "& iRowLen",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 211,
                                      "end_byte": 212,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 213,
                                      "end_byte": 220,
                                      "text": "iRowLen",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 221,
                                  "end_byte": 222,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 223,
                          "end_byte": 224,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 225,
                      "end_byte": 562,
                      "text": "for ( iItr1 = 0 ; iItr1 < iRowLen ; iItr1 ++ ) { for ( iItr2 = 0 ; iItr2 <= iItr1 ; iItr2 ++ ) { fscanf ( stdin , \"%d\" , & ipMat [ iItr2 ] ) ; } if ( iItr1 == 0 ) { max = ipMat [ 0 ] ; iPivotIndx = 0 ; } else { iPivotIndx = ipMat [ iPivotIndx ] > ipMat [ iPivotIndx + 1 ] ? iPivotIndx : iPivotIndx + 1 ; max += ipMat [ iPivotIndx ] ; } }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 225,
                          "end_byte": 228,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 229,
                          "end_byte": 230,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 231,
                          "end_byte": 240,
                          "text": "iItr1 = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 231,
                              "end_byte": 236,
                              "text": "iItr1",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 237,
                              "end_byte": 238,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 239,
                              "end_byte": 240,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 241,
                          "end_byte": 242,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 243,
                          "end_byte": 258,
                          "text": "iItr1 < iRowLen",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 243,
                              "end_byte": 248,
                              "text": "iItr1",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 249,
                              "end_byte": 250,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 251,
                              "end_byte": 258,
                              "text": "iRowLen",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 259,
                          "end_byte": 260,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 261,
                          "end_byte": 269,
                          "text": "iItr1 ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 261,
                              "end_byte": 266,
                              "text": "iItr1",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 267,
                              "end_byte": 269,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 270,
                          "end_byte": 271,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 272,
                          "end_byte": 562,
                          "text": "{ for ( iItr2 = 0 ; iItr2 <= iItr1 ; iItr2 ++ ) { fscanf ( stdin , \"%d\" , & ipMat [ iItr2 ] ) ; } if ( iItr1 == 0 ) { max = ipMat [ 0 ] ; iPivotIndx = 0 ; } else { iPivotIndx = ipMat [ iPivotIndx ] > ipMat [ iPivotIndx + 1 ] ? iPivotIndx : iPivotIndx + 1 ; max += ipMat [ iPivotIndx ] ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 272,
                              "end_byte": 273,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 274,
                              "end_byte": 369,
                              "text": "for ( iItr2 = 0 ; iItr2 <= iItr1 ; iItr2 ++ ) { fscanf ( stdin , \"%d\" , & ipMat [ iItr2 ] ) ; }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 274,
                                  "end_byte": 277,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 278,
                                  "end_byte": 279,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 280,
                                  "end_byte": 289,
                                  "text": "iItr2 = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 280,
                                      "end_byte": 285,
                                      "text": "iItr2",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 286,
                                      "end_byte": 287,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 288,
                                      "end_byte": 289,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 290,
                                  "end_byte": 291,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 292,
                                  "end_byte": 306,
                                  "text": "iItr2 <= iItr1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 292,
                                      "end_byte": 297,
                                      "text": "iItr2",
                                      "children": []
                                    },
                                    {
                                      "type": "<=",
                                      "start_byte": 298,
                                      "end_byte": 300,
                                      "text": "<=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 301,
                                      "end_byte": 306,
                                      "text": "iItr1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 307,
                                  "end_byte": 308,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 309,
                                  "end_byte": 317,
                                  "text": "iItr2 ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 309,
                                      "end_byte": 314,
                                      "text": "iItr2",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 315,
                                      "end_byte": 317,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 318,
                                  "end_byte": 319,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 320,
                                  "end_byte": 369,
                                  "text": "{ fscanf ( stdin , \"%d\" , & ipMat [ iItr2 ] ) ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 320,
                                      "end_byte": 321,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 322,
                                      "end_byte": 367,
                                      "text": "fscanf ( stdin , \"%d\" , & ipMat [ iItr2 ] ) ;",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start_byte": 322,
                                          "end_byte": 365,
                                          "text": "fscanf ( stdin , \"%d\" , & ipMat [ iItr2 ] )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 322,
                                              "end_byte": 328,
                                              "text": "fscanf",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 329,
                                              "end_byte": 365,
                                              "text": "( stdin , \"%d\" , & ipMat [ iItr2 ] )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 329,
                                                  "end_byte": 330,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 331,
                                                  "end_byte": 336,
                                                  "text": "stdin",
                                                  "children": []
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 337,
                                                  "end_byte": 338,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_literal",
                                                  "start_byte": 339,
                                                  "end_byte": 343,
                                                  "text": "\"%d\"",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 339,
                                                      "end_byte": 340,
                                                      "text": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start_byte": 340,
                                                      "end_byte": 342,
                                                      "text": "%d",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 342,
                                                      "end_byte": 343,
                                                      "text": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 344,
                                                  "end_byte": 345,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "pointer_expression",
                                                  "start_byte": 346,
                                                  "end_byte": 363,
                                                  "text": "& ipMat [ iItr2 ]",
                                                  "children": [
                                                    {
                                                      "type": "&",
                                                      "start_byte": 346,
                                                      "end_byte": 347,
                                                      "text": "&",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 348,
                                                      "end_byte": 363,
                                                      "text": "ipMat [ iItr2 ]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 348,
                                                          "end_byte": 353,
                                                          "text": "ipMat",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 354,
                                                          "end_byte": 363,
                                                          "text": "[ iItr2 ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 354,
                                                              "end_byte": 355,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 356,
                                                              "end_byte": 361,
                                                              "text": "iItr2",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 362,
                                                              "end_byte": 363,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 364,
                                                  "end_byte": 365,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 366,
                                          "end_byte": 367,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 368,
                                      "end_byte": 369,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 370,
                              "end_byte": 560,
                              "text": "if ( iItr1 == 0 ) { max = ipMat [ 0 ] ; iPivotIndx = 0 ; } else { iPivotIndx = ipMat [ iPivotIndx ] > ipMat [ iPivotIndx + 1 ] ? iPivotIndx : iPivotIndx + 1 ; max += ipMat [ iPivotIndx ] ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 370,
                                  "end_byte": 372,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 373,
                                  "end_byte": 387,
                                  "text": "( iItr1 == 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 373,
                                      "end_byte": 374,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 375,
                                      "end_byte": 385,
                                      "text": "iItr1 == 0",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 375,
                                          "end_byte": 380,
                                          "text": "iItr1",
                                          "children": []
                                        },
                                        {
                                          "type": "==",
                                          "start_byte": 381,
                                          "end_byte": 383,
                                          "text": "==",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 384,
                                          "end_byte": 385,
                                          "text": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 386,
                                      "end_byte": 387,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 388,
                                  "end_byte": 428,
                                  "text": "{ max = ipMat [ 0 ] ; iPivotIndx = 0 ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 388,
                                      "end_byte": 389,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 390,
                                      "end_byte": 409,
                                      "text": "max = ipMat [ 0 ] ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 390,
                                          "end_byte": 407,
                                          "text": "max = ipMat [ 0 ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 390,
                                              "end_byte": 393,
                                              "text": "max",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 394,
                                              "end_byte": 395,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 396,
                                              "end_byte": 407,
                                              "text": "ipMat [ 0 ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 396,
                                                  "end_byte": 401,
                                                  "text": "ipMat",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 402,
                                                  "end_byte": 407,
                                                  "text": "[ 0 ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 402,
                                                      "end_byte": 403,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 404,
                                                      "end_byte": 405,
                                                      "text": "0",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 406,
                                                      "end_byte": 407,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 408,
                                          "end_byte": 409,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 410,
                                      "end_byte": 426,
                                      "text": "iPivotIndx = 0 ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 410,
                                          "end_byte": 424,
                                          "text": "iPivotIndx = 0",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 410,
                                              "end_byte": 420,
                                              "text": "iPivotIndx",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 421,
                                              "end_byte": 422,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 423,
                                              "end_byte": 424,
                                              "text": "0",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 425,
                                          "end_byte": 426,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 427,
                                      "end_byte": 428,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start_byte": 429,
                                  "end_byte": 560,
                                  "text": "else { iPivotIndx = ipMat [ iPivotIndx ] > ipMat [ iPivotIndx + 1 ] ? iPivotIndx : iPivotIndx + 1 ; max += ipMat [ iPivotIndx ] ; }",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start_byte": 429,
                                      "end_byte": 433,
                                      "text": "else",
                                      "children": []
                                    },
                                    {
                                      "type": "compound_statement",
                                      "start_byte": 434,
                                      "end_byte": 560,
                                      "text": "{ iPivotIndx = ipMat [ iPivotIndx ] > ipMat [ iPivotIndx + 1 ] ? iPivotIndx : iPivotIndx + 1 ; max += ipMat [ iPivotIndx ] ; }",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start_byte": 434,
                                          "end_byte": 435,
                                          "text": "{",
                                          "children": []
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 436,
                                          "end_byte": 528,
                                          "text": "iPivotIndx = ipMat [ iPivotIndx ] > ipMat [ iPivotIndx + 1 ] ? iPivotIndx : iPivotIndx + 1 ;",
                                          "children": [
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 436,
                                              "end_byte": 526,
                                              "text": "iPivotIndx = ipMat [ iPivotIndx ] > ipMat [ iPivotIndx + 1 ] ? iPivotIndx : iPivotIndx + 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 436,
                                                  "end_byte": 446,
                                                  "text": "iPivotIndx",
                                                  "children": []
                                                },
                                                {
                                                  "type": "=",
                                                  "start_byte": 447,
                                                  "end_byte": 448,
                                                  "text": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "conditional_expression",
                                                  "start_byte": 449,
                                                  "end_byte": 526,
                                                  "text": "ipMat [ iPivotIndx ] > ipMat [ iPivotIndx + 1 ] ? iPivotIndx : iPivotIndx + 1",
                                                  "children": [
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 449,
                                                      "end_byte": 496,
                                                      "text": "ipMat [ iPivotIndx ] > ipMat [ iPivotIndx + 1 ]",
                                                      "children": [
                                                        {
                                                          "type": "subscript_expression",
                                                          "start_byte": 449,
                                                          "end_byte": 469,
                                                          "text": "ipMat [ iPivotIndx ]",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 449,
                                                              "end_byte": 454,
                                                              "text": "ipMat",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "subscript_argument_list",
                                                              "start_byte": 455,
                                                              "end_byte": 469,
                                                              "text": "[ iPivotIndx ]",
                                                              "children": [
                                                                {
                                                                  "type": "[",
                                                                  "start_byte": 455,
                                                                  "end_byte": 456,
                                                                  "text": "[",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 457,
                                                                  "end_byte": 467,
                                                                  "text": "iPivotIndx",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "]",
                                                                  "start_byte": 468,
                                                                  "end_byte": 469,
                                                                  "text": "]",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ">",
                                                          "start_byte": 470,
                                                          "end_byte": 471,
                                                          "text": ">",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "subscript_expression",
                                                          "start_byte": 472,
                                                          "end_byte": 496,
                                                          "text": "ipMat [ iPivotIndx + 1 ]",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 472,
                                                              "end_byte": 477,
                                                              "text": "ipMat",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "subscript_argument_list",
                                                              "start_byte": 478,
                                                              "end_byte": 496,
                                                              "text": "[ iPivotIndx + 1 ]",
                                                              "children": [
                                                                {
                                                                  "type": "[",
                                                                  "start_byte": 478,
                                                                  "end_byte": 479,
                                                                  "text": "[",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "binary_expression",
                                                                  "start_byte": 480,
                                                                  "end_byte": 494,
                                                                  "text": "iPivotIndx + 1",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 480,
                                                                      "end_byte": 490,
                                                                      "text": "iPivotIndx",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "+",
                                                                      "start_byte": 491,
                                                                      "end_byte": 492,
                                                                      "text": "+",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "number_literal",
                                                                      "start_byte": 493,
                                                                      "end_byte": 494,
                                                                      "text": "1",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "]",
                                                                  "start_byte": 495,
                                                                  "end_byte": 496,
                                                                  "text": "]",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "?",
                                                      "start_byte": 497,
                                                      "end_byte": 498,
                                                      "text": "?",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 499,
                                                      "end_byte": 509,
                                                      "text": "iPivotIndx",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": ":",
                                                      "start_byte": 510,
                                                      "end_byte": 511,
                                                      "text": ":",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 512,
                                                      "end_byte": 526,
                                                      "text": "iPivotIndx + 1",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 512,
                                                          "end_byte": 522,
                                                          "text": "iPivotIndx",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "+",
                                                          "start_byte": 523,
                                                          "end_byte": 524,
                                                          "text": "+",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "number_literal",
                                                          "start_byte": 525,
                                                          "end_byte": 526,
                                                          "text": "1",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 527,
                                              "end_byte": 528,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 529,
                                          "end_byte": 558,
                                          "text": "max += ipMat [ iPivotIndx ] ;",
                                          "children": [
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 529,
                                              "end_byte": 556,
                                              "text": "max += ipMat [ iPivotIndx ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 529,
                                                  "end_byte": 532,
                                                  "text": "max",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+=",
                                                  "start_byte": 533,
                                                  "end_byte": 535,
                                                  "text": "+=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 536,
                                                  "end_byte": 556,
                                                  "text": "ipMat [ iPivotIndx ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 536,
                                                      "end_byte": 541,
                                                      "text": "ipMat",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 542,
                                                      "end_byte": 556,
                                                      "text": "[ iPivotIndx ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 542,
                                                          "end_byte": 543,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 544,
                                                          "end_byte": 554,
                                                          "text": "iPivotIndx",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 555,
                                                          "end_byte": 556,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 557,
                                              "end_byte": 558,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start_byte": 559,
                                          "end_byte": 560,
                                          "text": "}",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 561,
                              "end_byte": 562,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 563,
                      "end_byte": 598,
                      "text": "fprintf ( stdout , \"%d\\n\" , max ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 563,
                          "end_byte": 596,
                          "text": "fprintf ( stdout , \"%d\\n\" , max )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 563,
                              "end_byte": 570,
                              "text": "fprintf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 571,
                              "end_byte": 596,
                              "text": "( stdout , \"%d\\n\" , max )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 571,
                                  "end_byte": 572,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 573,
                                  "end_byte": 579,
                                  "text": "stdout",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 580,
                                  "end_byte": 581,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 582,
                                  "end_byte": 588,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 582,
                                      "end_byte": 583,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 583,
                                      "end_byte": 585,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 585,
                                      "end_byte": 587,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 587,
                                      "end_byte": 588,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 589,
                                  "end_byte": 590,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 591,
                                  "end_byte": 594,
                                  "text": "max",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 595,
                                  "end_byte": 596,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 597,
                          "end_byte": 598,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 599,
                      "end_byte": 600,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 601,
              "end_byte": 611,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 601,
                  "end_byte": 607,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 608,
                  "end_byte": 609,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 610,
                  "end_byte": 611,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 612,
              "end_byte": 613,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}