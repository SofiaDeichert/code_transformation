{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 1001,
  "text": "int triangle [ 100 ] [ 100 ] ; int lines , level , offset ; int indices [ 128 ] ; int sumtrian ( ) ; int bump ( ) ; int main ( ) { int testcases , i , j , k ; int sum , temp ; scanf ( \"%d\" , & testcases ) ; for ( i = 0 ; i < testcases ; i ++ ) { scanf ( \"%d\" , & lines ) ; for ( j = 0 ; j < lines ; j ++ ) { indices [ j ] = 0 ; for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d\" , & triangle [ j ] [ k ] ) ; } } if ( lines == 1 ) { printf ( \"%d\\n\" , triangle [ 0 ] [ 0 ] ) ; continue ; } sum = 0 ; offset = 1 ; level = lines - 1 ; while ( 1 ) { temp = sumtrian ( ) ; if ( temp > sum ) sum = temp ; if ( bump ( ) ) break ; } printf ( \"%d\\n\" , sum ) ; } return 1 ; } int sumtrian ( ) { register int i ; int sum = 0 ; for ( i = 0 ; i < lines ; i ++ ) { sum += triangle [ i ] [ indices [ i ] ] ; } return sum ; } int bump ( ) { if ( level == 0 || offset > level ) { level = lines - 2 ; offset ++ ; indices [ lines - 1 ] = offset ; return offset == lines ; } else { indices [ level -- ] = offset ; return 0 ; } }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 30,
      "text": "int triangle [ 100 ] [ 100 ] ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "array_declarator",
          "start_byte": 4,
          "end_byte": 28,
          "text": "triangle [ 100 ] [ 100 ]",
          "children": [
            {
              "type": "array_declarator",
              "start_byte": 4,
              "end_byte": 20,
              "text": "triangle [ 100 ]",
              "children": [
                {
                  "type": "identifier",
                  "start_byte": 4,
                  "end_byte": 12,
                  "text": "triangle",
                  "children": []
                },
                {
                  "type": "[",
                  "start_byte": 13,
                  "end_byte": 14,
                  "text": "[",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "100",
                  "children": []
                },
                {
                  "type": "]",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": "]",
                  "children": []
                }
              ]
            },
            {
              "type": "[",
              "start_byte": 21,
              "end_byte": 22,
              "text": "[",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 23,
              "end_byte": 26,
              "text": "100",
              "children": []
            },
            {
              "type": "]",
              "start_byte": 27,
              "end_byte": 28,
              "text": "]",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 29,
          "end_byte": 30,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 31,
      "end_byte": 59,
      "text": "int lines , level , offset ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 31,
          "end_byte": 34,
          "text": "int",
          "children": []
        },
        {
          "type": "identifier",
          "start_byte": 35,
          "end_byte": 40,
          "text": "lines",
          "children": []
        },
        {
          "type": ",",
          "start_byte": 41,
          "end_byte": 42,
          "text": ",",
          "children": []
        },
        {
          "type": "identifier",
          "start_byte": 43,
          "end_byte": 48,
          "text": "level",
          "children": []
        },
        {
          "type": ",",
          "start_byte": 49,
          "end_byte": 50,
          "text": ",",
          "children": []
        },
        {
          "type": "identifier",
          "start_byte": 51,
          "end_byte": 57,
          "text": "offset",
          "children": []
        },
        {
          "type": ";",
          "start_byte": 58,
          "end_byte": 59,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 60,
      "end_byte": 81,
      "text": "int indices [ 128 ] ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 60,
          "end_byte": 63,
          "text": "int",
          "children": []
        },
        {
          "type": "array_declarator",
          "start_byte": 64,
          "end_byte": 79,
          "text": "indices [ 128 ]",
          "children": [
            {
              "type": "identifier",
              "start_byte": 64,
              "end_byte": 71,
              "text": "indices",
              "children": []
            },
            {
              "type": "[",
              "start_byte": 72,
              "end_byte": 73,
              "text": "[",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 74,
              "end_byte": 77,
              "text": "128",
              "children": []
            },
            {
              "type": "]",
              "start_byte": 78,
              "end_byte": 79,
              "text": "]",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 80,
          "end_byte": 81,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 82,
      "end_byte": 100,
      "text": "int sumtrian ( ) ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 82,
          "end_byte": 85,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 86,
          "end_byte": 98,
          "text": "sumtrian ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 86,
              "end_byte": 94,
              "text": "sumtrian",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 95,
              "end_byte": 98,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 95,
                  "end_byte": 96,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 97,
                  "end_byte": 98,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 99,
          "end_byte": 100,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 101,
      "end_byte": 115,
      "text": "int bump ( ) ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 101,
          "end_byte": 104,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 105,
          "end_byte": 113,
          "text": "bump ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 105,
              "end_byte": 109,
              "text": "bump",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 110,
              "end_byte": 113,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 110,
                  "end_byte": 111,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 112,
                  "end_byte": 113,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 114,
          "end_byte": 115,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 116,
      "end_byte": 658,
      "text": "int main ( ) { int testcases , i , j , k ; int sum , temp ; scanf ( \"%d\" , & testcases ) ; for ( i = 0 ; i < testcases ; i ++ ) { scanf ( \"%d\" , & lines ) ; for ( j = 0 ; j < lines ; j ++ ) { indices [ j ] = 0 ; for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d\" , & triangle [ j ] [ k ] ) ; } } if ( lines == 1 ) { printf ( \"%d\\n\" , triangle [ 0 ] [ 0 ] ) ; continue ; } sum = 0 ; offset = 1 ; level = lines - 1 ; while ( 1 ) { temp = sumtrian ( ) ; if ( temp > sum ) sum = temp ; if ( bump ( ) ) break ; } printf ( \"%d\\n\" , sum ) ; } return 1 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 116,
          "end_byte": 119,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 120,
          "end_byte": 128,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 120,
              "end_byte": 124,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 125,
              "end_byte": 128,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 125,
                  "end_byte": 126,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 127,
                  "end_byte": 128,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 129,
          "end_byte": 658,
          "text": "{ int testcases , i , j , k ; int sum , temp ; scanf ( \"%d\" , & testcases ) ; for ( i = 0 ; i < testcases ; i ++ ) { scanf ( \"%d\" , & lines ) ; for ( j = 0 ; j < lines ; j ++ ) { indices [ j ] = 0 ; for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d\" , & triangle [ j ] [ k ] ) ; } } if ( lines == 1 ) { printf ( \"%d\\n\" , triangle [ 0 ] [ 0 ] ) ; continue ; } sum = 0 ; offset = 1 ; level = lines - 1 ; while ( 1 ) { temp = sumtrian ( ) ; if ( temp > sum ) sum = temp ; if ( bump ( ) ) break ; } printf ( \"%d\\n\" , sum ) ; } return 1 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 129,
              "end_byte": 130,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 131,
              "end_byte": 158,
              "text": "int testcases , i , j , k ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 131,
                  "end_byte": 134,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 135,
                  "end_byte": 144,
                  "text": "testcases",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 145,
                  "end_byte": 146,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 147,
                  "end_byte": 148,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 149,
                  "end_byte": 150,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 151,
                  "end_byte": 152,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 153,
                  "end_byte": 154,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 155,
                  "end_byte": 156,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 157,
                  "end_byte": 158,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 159,
              "end_byte": 175,
              "text": "int sum , temp ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 159,
                  "end_byte": 162,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 163,
                  "end_byte": 166,
                  "text": "sum",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 167,
                  "end_byte": 168,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 169,
                  "end_byte": 173,
                  "text": "temp",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 174,
                  "end_byte": 175,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 176,
              "end_byte": 206,
              "text": "scanf ( \"%d\" , & testcases ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 176,
                  "end_byte": 204,
                  "text": "scanf ( \"%d\" , & testcases )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 176,
                      "end_byte": 181,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 182,
                      "end_byte": 204,
                      "text": "( \"%d\" , & testcases )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 182,
                          "end_byte": 183,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 184,
                          "end_byte": 188,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 184,
                              "end_byte": 185,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 185,
                              "end_byte": 187,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 187,
                              "end_byte": 188,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 189,
                          "end_byte": 190,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 191,
                          "end_byte": 202,
                          "text": "& testcases",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 191,
                              "end_byte": 192,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 193,
                              "end_byte": 202,
                              "text": "testcases",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 203,
                          "end_byte": 204,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 205,
                  "end_byte": 206,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 207,
              "end_byte": 645,
              "text": "for ( i = 0 ; i < testcases ; i ++ ) { scanf ( \"%d\" , & lines ) ; for ( j = 0 ; j < lines ; j ++ ) { indices [ j ] = 0 ; for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d\" , & triangle [ j ] [ k ] ) ; } } if ( lines == 1 ) { printf ( \"%d\\n\" , triangle [ 0 ] [ 0 ] ) ; continue ; } sum = 0 ; offset = 1 ; level = lines - 1 ; while ( 1 ) { temp = sumtrian ( ) ; if ( temp > sum ) sum = temp ; if ( bump ( ) ) break ; } printf ( \"%d\\n\" , sum ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 207,
                  "end_byte": 210,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 211,
                  "end_byte": 212,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 213,
                  "end_byte": 218,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 213,
                      "end_byte": 214,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 215,
                      "end_byte": 216,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 217,
                      "end_byte": 218,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 219,
                  "end_byte": 220,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 221,
                  "end_byte": 234,
                  "text": "i < testcases",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 221,
                      "end_byte": 222,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 223,
                      "end_byte": 224,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 225,
                      "end_byte": 234,
                      "text": "testcases",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 235,
                  "end_byte": 236,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 237,
                  "end_byte": 241,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 237,
                      "end_byte": 238,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 239,
                      "end_byte": 241,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 242,
                  "end_byte": 243,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 244,
                  "end_byte": 645,
                  "text": "{ scanf ( \"%d\" , & lines ) ; for ( j = 0 ; j < lines ; j ++ ) { indices [ j ] = 0 ; for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d\" , & triangle [ j ] [ k ] ) ; } } if ( lines == 1 ) { printf ( \"%d\\n\" , triangle [ 0 ] [ 0 ] ) ; continue ; } sum = 0 ; offset = 1 ; level = lines - 1 ; while ( 1 ) { temp = sumtrian ( ) ; if ( temp > sum ) sum = temp ; if ( bump ( ) ) break ; } printf ( \"%d\\n\" , sum ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 244,
                      "end_byte": 245,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 246,
                      "end_byte": 272,
                      "text": "scanf ( \"%d\" , & lines ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 246,
                          "end_byte": 270,
                          "text": "scanf ( \"%d\" , & lines )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 246,
                              "end_byte": 251,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 252,
                              "end_byte": 270,
                              "text": "( \"%d\" , & lines )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 252,
                                  "end_byte": 253,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 254,
                                  "end_byte": 258,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 254,
                                      "end_byte": 255,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 255,
                                      "end_byte": 257,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 257,
                                      "end_byte": 258,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 259,
                                  "end_byte": 260,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 261,
                                  "end_byte": 268,
                                  "text": "& lines",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 261,
                                      "end_byte": 262,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 263,
                                      "end_byte": 268,
                                      "text": "lines",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 269,
                                  "end_byte": 270,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 271,
                          "end_byte": 272,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 273,
                      "end_byte": 405,
                      "text": "for ( j = 0 ; j < lines ; j ++ ) { indices [ j ] = 0 ; for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d\" , & triangle [ j ] [ k ] ) ; } }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 273,
                          "end_byte": 276,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 277,
                          "end_byte": 278,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 279,
                          "end_byte": 284,
                          "text": "j = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 279,
                              "end_byte": 280,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 281,
                              "end_byte": 282,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 283,
                              "end_byte": 284,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 285,
                          "end_byte": 286,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 287,
                          "end_byte": 296,
                          "text": "j < lines",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 287,
                              "end_byte": 288,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 289,
                              "end_byte": 290,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 291,
                              "end_byte": 296,
                              "text": "lines",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 297,
                          "end_byte": 298,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 299,
                          "end_byte": 303,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 299,
                              "end_byte": 300,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 301,
                              "end_byte": 303,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 304,
                          "end_byte": 305,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 306,
                          "end_byte": 405,
                          "text": "{ indices [ j ] = 0 ; for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d\" , & triangle [ j ] [ k ] ) ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 306,
                              "end_byte": 307,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 308,
                              "end_byte": 327,
                              "text": "indices [ j ] = 0 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 308,
                                  "end_byte": 325,
                                  "text": "indices [ j ] = 0",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 308,
                                      "end_byte": 321,
                                      "text": "indices [ j ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 308,
                                          "end_byte": 315,
                                          "text": "indices",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 316,
                                          "end_byte": 321,
                                          "text": "[ j ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 316,
                                              "end_byte": 317,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 318,
                                              "end_byte": 319,
                                              "text": "j",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 320,
                                              "end_byte": 321,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 322,
                                      "end_byte": 323,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 324,
                                      "end_byte": 325,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 326,
                                  "end_byte": 327,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 328,
                              "end_byte": 403,
                              "text": "for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d\" , & triangle [ j ] [ k ] ) ; }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 328,
                                  "end_byte": 331,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 332,
                                  "end_byte": 333,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 334,
                                  "end_byte": 339,
                                  "text": "k = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 334,
                                      "end_byte": 335,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 336,
                                      "end_byte": 337,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 338,
                                      "end_byte": 339,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 340,
                                  "end_byte": 341,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 342,
                                  "end_byte": 348,
                                  "text": "k <= j",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 342,
                                      "end_byte": 343,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "<=",
                                      "start_byte": 344,
                                      "end_byte": 346,
                                      "text": "<=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 347,
                                      "end_byte": 348,
                                      "text": "j",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 349,
                                  "end_byte": 350,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 351,
                                  "end_byte": 355,
                                  "text": "k ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 351,
                                      "end_byte": 352,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 353,
                                      "end_byte": 355,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 356,
                                  "end_byte": 357,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 358,
                                  "end_byte": 403,
                                  "text": "{ scanf ( \"%d\" , & triangle [ j ] [ k ] ) ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 358,
                                      "end_byte": 359,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 360,
                                      "end_byte": 401,
                                      "text": "scanf ( \"%d\" , & triangle [ j ] [ k ] ) ;",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start_byte": 360,
                                          "end_byte": 399,
                                          "text": "scanf ( \"%d\" , & triangle [ j ] [ k ] )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 360,
                                              "end_byte": 365,
                                              "text": "scanf",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 366,
                                              "end_byte": 399,
                                              "text": "( \"%d\" , & triangle [ j ] [ k ] )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 366,
                                                  "end_byte": 367,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_literal",
                                                  "start_byte": 368,
                                                  "end_byte": 372,
                                                  "text": "\"%d\"",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 368,
                                                      "end_byte": 369,
                                                      "text": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start_byte": 369,
                                                      "end_byte": 371,
                                                      "text": "%d",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 371,
                                                      "end_byte": 372,
                                                      "text": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 373,
                                                  "end_byte": 374,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "pointer_expression",
                                                  "start_byte": 375,
                                                  "end_byte": 397,
                                                  "text": "& triangle [ j ] [ k ]",
                                                  "children": [
                                                    {
                                                      "type": "&",
                                                      "start_byte": 375,
                                                      "end_byte": 376,
                                                      "text": "&",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 377,
                                                      "end_byte": 397,
                                                      "text": "triangle [ j ] [ k ]",
                                                      "children": [
                                                        {
                                                          "type": "subscript_expression",
                                                          "start_byte": 377,
                                                          "end_byte": 391,
                                                          "text": "triangle [ j ]",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 377,
                                                              "end_byte": 385,
                                                              "text": "triangle",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "subscript_argument_list",
                                                              "start_byte": 386,
                                                              "end_byte": 391,
                                                              "text": "[ j ]",
                                                              "children": [
                                                                {
                                                                  "type": "[",
                                                                  "start_byte": 386,
                                                                  "end_byte": 387,
                                                                  "text": "[",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 388,
                                                                  "end_byte": 389,
                                                                  "text": "j",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "]",
                                                                  "start_byte": 390,
                                                                  "end_byte": 391,
                                                                  "text": "]",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 392,
                                                          "end_byte": 397,
                                                          "text": "[ k ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 392,
                                                              "end_byte": 393,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 394,
                                                              "end_byte": 395,
                                                              "text": "k",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 396,
                                                              "end_byte": 397,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 398,
                                                  "end_byte": 399,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 400,
                                          "end_byte": 401,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 402,
                                      "end_byte": 403,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 404,
                              "end_byte": 405,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 406,
                      "end_byte": 481,
                      "text": "if ( lines == 1 ) { printf ( \"%d\\n\" , triangle [ 0 ] [ 0 ] ) ; continue ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 406,
                          "end_byte": 408,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 409,
                          "end_byte": 423,
                          "text": "( lines == 1 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 409,
                              "end_byte": 410,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 411,
                              "end_byte": 421,
                              "text": "lines == 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 411,
                                  "end_byte": 416,
                                  "text": "lines",
                                  "children": []
                                },
                                {
                                  "type": "==",
                                  "start_byte": 417,
                                  "end_byte": 419,
                                  "text": "==",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 420,
                                  "end_byte": 421,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 422,
                              "end_byte": 423,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 424,
                          "end_byte": 481,
                          "text": "{ printf ( \"%d\\n\" , triangle [ 0 ] [ 0 ] ) ; continue ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 424,
                              "end_byte": 425,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 426,
                              "end_byte": 468,
                              "text": "printf ( \"%d\\n\" , triangle [ 0 ] [ 0 ] ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 426,
                                  "end_byte": 466,
                                  "text": "printf ( \"%d\\n\" , triangle [ 0 ] [ 0 ] )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 426,
                                      "end_byte": 432,
                                      "text": "printf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 433,
                                      "end_byte": 466,
                                      "text": "( \"%d\\n\" , triangle [ 0 ] [ 0 ] )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 433,
                                          "end_byte": 434,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 435,
                                          "end_byte": 441,
                                          "text": "\"%d\\n\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 435,
                                              "end_byte": 436,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 436,
                                              "end_byte": 438,
                                              "text": "%d",
                                              "children": []
                                            },
                                            {
                                              "type": "escape_sequence",
                                              "start_byte": 438,
                                              "end_byte": 440,
                                              "text": "\\n",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 440,
                                              "end_byte": 441,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 442,
                                          "end_byte": 443,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 444,
                                          "end_byte": 464,
                                          "text": "triangle [ 0 ] [ 0 ]",
                                          "children": [
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 444,
                                              "end_byte": 458,
                                              "text": "triangle [ 0 ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 444,
                                                  "end_byte": 452,
                                                  "text": "triangle",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 453,
                                                  "end_byte": 458,
                                                  "text": "[ 0 ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 453,
                                                      "end_byte": 454,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 455,
                                                      "end_byte": 456,
                                                      "text": "0",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 457,
                                                      "end_byte": 458,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 459,
                                              "end_byte": 464,
                                              "text": "[ 0 ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 459,
                                                  "end_byte": 460,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 461,
                                                  "end_byte": 462,
                                                  "text": "0",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 463,
                                                  "end_byte": 464,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 465,
                                          "end_byte": 466,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 467,
                                  "end_byte": 468,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "continue_statement",
                              "start_byte": 469,
                              "end_byte": 479,
                              "text": "continue ;",
                              "children": [
                                {
                                  "type": "continue",
                                  "start_byte": 469,
                                  "end_byte": 477,
                                  "text": "continue",
                                  "children": []
                                },
                                {
                                  "type": ";",
                                  "start_byte": 478,
                                  "end_byte": 479,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 480,
                              "end_byte": 481,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 482,
                      "end_byte": 491,
                      "text": "sum = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 482,
                          "end_byte": 489,
                          "text": "sum = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 482,
                              "end_byte": 485,
                              "text": "sum",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 486,
                              "end_byte": 487,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 488,
                              "end_byte": 489,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 490,
                          "end_byte": 491,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 492,
                      "end_byte": 504,
                      "text": "offset = 1 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 492,
                          "end_byte": 502,
                          "text": "offset = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 492,
                              "end_byte": 498,
                              "text": "offset",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 499,
                              "end_byte": 500,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 501,
                              "end_byte": 502,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 503,
                          "end_byte": 504,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 505,
                      "end_byte": 524,
                      "text": "level = lines - 1 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 505,
                          "end_byte": 522,
                          "text": "level = lines - 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 505,
                              "end_byte": 510,
                              "text": "level",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 511,
                              "end_byte": 512,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 513,
                              "end_byte": 522,
                              "text": "lines - 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 513,
                                  "end_byte": 518,
                                  "text": "lines",
                                  "children": []
                                },
                                {
                                  "type": "-",
                                  "start_byte": 519,
                                  "end_byte": 520,
                                  "text": "-",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 521,
                                  "end_byte": 522,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 523,
                          "end_byte": 524,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 525,
                      "end_byte": 617,
                      "text": "while ( 1 ) { temp = sumtrian ( ) ; if ( temp > sum ) sum = temp ; if ( bump ( ) ) break ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 525,
                          "end_byte": 530,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 531,
                          "end_byte": 536,
                          "text": "( 1 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 531,
                              "end_byte": 532,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 533,
                              "end_byte": 534,
                              "text": "1",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 535,
                              "end_byte": 536,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 537,
                          "end_byte": 617,
                          "text": "{ temp = sumtrian ( ) ; if ( temp > sum ) sum = temp ; if ( bump ( ) ) break ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 537,
                              "end_byte": 538,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 539,
                              "end_byte": 560,
                              "text": "temp = sumtrian ( ) ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 539,
                                  "end_byte": 558,
                                  "text": "temp = sumtrian ( )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 539,
                                      "end_byte": 543,
                                      "text": "temp",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 544,
                                      "end_byte": 545,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 546,
                                      "end_byte": 558,
                                      "text": "sumtrian ( )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 546,
                                          "end_byte": 554,
                                          "text": "sumtrian",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 555,
                                          "end_byte": 558,
                                          "text": "( )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 555,
                                              "end_byte": 556,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 557,
                                              "end_byte": 558,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 559,
                                  "end_byte": 560,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 561,
                              "end_byte": 591,
                              "text": "if ( temp > sum ) sum = temp ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 561,
                                  "end_byte": 563,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 564,
                                  "end_byte": 578,
                                  "text": "( temp > sum )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 564,
                                      "end_byte": 565,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 566,
                                      "end_byte": 576,
                                      "text": "temp > sum",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 566,
                                          "end_byte": 570,
                                          "text": "temp",
                                          "children": []
                                        },
                                        {
                                          "type": ">",
                                          "start_byte": 571,
                                          "end_byte": 572,
                                          "text": ">",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 573,
                                          "end_byte": 576,
                                          "text": "sum",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 577,
                                      "end_byte": 578,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 579,
                                  "end_byte": 591,
                                  "text": "sum = temp ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 579,
                                      "end_byte": 589,
                                      "text": "sum = temp",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 579,
                                          "end_byte": 582,
                                          "text": "sum",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 583,
                                          "end_byte": 584,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 585,
                                          "end_byte": 589,
                                          "text": "temp",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 590,
                                      "end_byte": 591,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 592,
                              "end_byte": 615,
                              "text": "if ( bump ( ) ) break ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 592,
                                  "end_byte": 594,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 595,
                                  "end_byte": 607,
                                  "text": "( bump ( ) )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 595,
                                      "end_byte": 596,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 597,
                                      "end_byte": 605,
                                      "text": "bump ( )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 597,
                                          "end_byte": 601,
                                          "text": "bump",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 602,
                                          "end_byte": 605,
                                          "text": "( )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 602,
                                              "end_byte": 603,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 604,
                                              "end_byte": 605,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 606,
                                      "end_byte": 607,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "break_statement",
                                  "start_byte": 608,
                                  "end_byte": 615,
                                  "text": "break ;",
                                  "children": [
                                    {
                                      "type": "break",
                                      "start_byte": 608,
                                      "end_byte": 613,
                                      "text": "break",
                                      "children": []
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 614,
                                      "end_byte": 615,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 616,
                              "end_byte": 617,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 618,
                      "end_byte": 643,
                      "text": "printf ( \"%d\\n\" , sum ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 618,
                          "end_byte": 641,
                          "text": "printf ( \"%d\\n\" , sum )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 618,
                              "end_byte": 624,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 625,
                              "end_byte": 641,
                              "text": "( \"%d\\n\" , sum )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 625,
                                  "end_byte": 626,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 627,
                                  "end_byte": 633,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 627,
                                      "end_byte": 628,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 628,
                                      "end_byte": 630,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 630,
                                      "end_byte": 632,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 632,
                                      "end_byte": 633,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 634,
                                  "end_byte": 635,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 636,
                                  "end_byte": 639,
                                  "text": "sum",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 640,
                                  "end_byte": 641,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 642,
                          "end_byte": 643,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 644,
                      "end_byte": 645,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 646,
              "end_byte": 656,
              "text": "return 1 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 646,
                  "end_byte": 652,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 653,
                  "end_byte": 654,
                  "text": "1",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 655,
                  "end_byte": 656,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 657,
              "end_byte": 658,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 659,
      "end_byte": 802,
      "text": "int sumtrian ( ) { register int i ; int sum = 0 ; for ( i = 0 ; i < lines ; i ++ ) { sum += triangle [ i ] [ indices [ i ] ] ; } return sum ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 659,
          "end_byte": 662,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 663,
          "end_byte": 675,
          "text": "sumtrian ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 663,
              "end_byte": 671,
              "text": "sumtrian",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 672,
              "end_byte": 675,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 672,
                  "end_byte": 673,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 674,
                  "end_byte": 675,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 676,
          "end_byte": 802,
          "text": "{ register int i ; int sum = 0 ; for ( i = 0 ; i < lines ; i ++ ) { sum += triangle [ i ] [ indices [ i ] ] ; } return sum ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 676,
              "end_byte": 677,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 678,
              "end_byte": 694,
              "text": "register int i ;",
              "children": [
                {
                  "type": "storage_class_specifier",
                  "start_byte": 678,
                  "end_byte": 686,
                  "text": "register",
                  "children": [
                    {
                      "type": "register",
                      "start_byte": 678,
                      "end_byte": 686,
                      "text": "register",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "primitive_type",
                  "start_byte": 687,
                  "end_byte": 690,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 691,
                  "end_byte": 692,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 693,
                  "end_byte": 694,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 695,
              "end_byte": 708,
              "text": "int sum = 0 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 695,
                  "end_byte": 698,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 699,
                  "end_byte": 706,
                  "text": "sum = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 699,
                      "end_byte": 702,
                      "text": "sum",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 703,
                      "end_byte": 704,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 705,
                      "end_byte": 706,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 707,
                  "end_byte": 708,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 709,
              "end_byte": 787,
              "text": "for ( i = 0 ; i < lines ; i ++ ) { sum += triangle [ i ] [ indices [ i ] ] ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 709,
                  "end_byte": 712,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 713,
                  "end_byte": 714,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 715,
                  "end_byte": 720,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 715,
                      "end_byte": 716,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 717,
                      "end_byte": 718,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 719,
                      "end_byte": 720,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 721,
                  "end_byte": 722,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 723,
                  "end_byte": 732,
                  "text": "i < lines",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 723,
                      "end_byte": 724,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 725,
                      "end_byte": 726,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 727,
                      "end_byte": 732,
                      "text": "lines",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 733,
                  "end_byte": 734,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 735,
                  "end_byte": 739,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 735,
                      "end_byte": 736,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 737,
                      "end_byte": 739,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 740,
                  "end_byte": 741,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 742,
                  "end_byte": 787,
                  "text": "{ sum += triangle [ i ] [ indices [ i ] ] ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 742,
                      "end_byte": 743,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 744,
                      "end_byte": 785,
                      "text": "sum += triangle [ i ] [ indices [ i ] ] ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 744,
                          "end_byte": 783,
                          "text": "sum += triangle [ i ] [ indices [ i ] ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 744,
                              "end_byte": 747,
                              "text": "sum",
                              "children": []
                            },
                            {
                              "type": "+=",
                              "start_byte": 748,
                              "end_byte": 750,
                              "text": "+=",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 751,
                              "end_byte": 783,
                              "text": "triangle [ i ] [ indices [ i ] ]",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 751,
                                  "end_byte": 765,
                                  "text": "triangle [ i ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 751,
                                      "end_byte": 759,
                                      "text": "triangle",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 760,
                                      "end_byte": 765,
                                      "text": "[ i ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 760,
                                          "end_byte": 761,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 762,
                                          "end_byte": 763,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 764,
                                          "end_byte": 765,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 766,
                                  "end_byte": 783,
                                  "text": "[ indices [ i ] ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 766,
                                      "end_byte": 767,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 768,
                                      "end_byte": 781,
                                      "text": "indices [ i ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 768,
                                          "end_byte": 775,
                                          "text": "indices",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 776,
                                          "end_byte": 781,
                                          "text": "[ i ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 776,
                                              "end_byte": 777,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 778,
                                              "end_byte": 779,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 780,
                                              "end_byte": 781,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 782,
                                      "end_byte": 783,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 784,
                          "end_byte": 785,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 786,
                      "end_byte": 787,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 788,
              "end_byte": 800,
              "text": "return sum ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 788,
                  "end_byte": 794,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 795,
                  "end_byte": 798,
                  "text": "sum",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 799,
                  "end_byte": 800,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 801,
              "end_byte": 802,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 803,
      "end_byte": 1001,
      "text": "int bump ( ) { if ( level == 0 || offset > level ) { level = lines - 2 ; offset ++ ; indices [ lines - 1 ] = offset ; return offset == lines ; } else { indices [ level -- ] = offset ; return 0 ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 803,
          "end_byte": 806,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 807,
          "end_byte": 815,
          "text": "bump ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 807,
              "end_byte": 811,
              "text": "bump",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 812,
              "end_byte": 815,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 812,
                  "end_byte": 813,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 814,
                  "end_byte": 815,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 816,
          "end_byte": 1001,
          "text": "{ if ( level == 0 || offset > level ) { level = lines - 2 ; offset ++ ; indices [ lines - 1 ] = offset ; return offset == lines ; } else { indices [ level -- ] = offset ; return 0 ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 816,
              "end_byte": 817,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 818,
              "end_byte": 999,
              "text": "if ( level == 0 || offset > level ) { level = lines - 2 ; offset ++ ; indices [ lines - 1 ] = offset ; return offset == lines ; } else { indices [ level -- ] = offset ; return 0 ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 818,
                  "end_byte": 820,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 821,
                  "end_byte": 853,
                  "text": "( level == 0 || offset > level )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 821,
                      "end_byte": 822,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 823,
                      "end_byte": 851,
                      "text": "level == 0 || offset > level",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 823,
                          "end_byte": 833,
                          "text": "level == 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 823,
                              "end_byte": 828,
                              "text": "level",
                              "children": []
                            },
                            {
                              "type": "==",
                              "start_byte": 829,
                              "end_byte": 831,
                              "text": "==",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 832,
                              "end_byte": 833,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "||",
                          "start_byte": 834,
                          "end_byte": 836,
                          "text": "||",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 837,
                          "end_byte": 851,
                          "text": "offset > level",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 837,
                              "end_byte": 843,
                              "text": "offset",
                              "children": []
                            },
                            {
                              "type": ">",
                              "start_byte": 844,
                              "end_byte": 845,
                              "text": ">",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 846,
                              "end_byte": 851,
                              "text": "level",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 852,
                      "end_byte": 853,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 854,
                  "end_byte": 947,
                  "text": "{ level = lines - 2 ; offset ++ ; indices [ lines - 1 ] = offset ; return offset == lines ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 854,
                      "end_byte": 855,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 856,
                      "end_byte": 875,
                      "text": "level = lines - 2 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 856,
                          "end_byte": 873,
                          "text": "level = lines - 2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 856,
                              "end_byte": 861,
                              "text": "level",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 862,
                              "end_byte": 863,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 864,
                              "end_byte": 873,
                              "text": "lines - 2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 864,
                                  "end_byte": 869,
                                  "text": "lines",
                                  "children": []
                                },
                                {
                                  "type": "-",
                                  "start_byte": 870,
                                  "end_byte": 871,
                                  "text": "-",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 872,
                                  "end_byte": 873,
                                  "text": "2",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 874,
                          "end_byte": 875,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 876,
                      "end_byte": 887,
                      "text": "offset ++ ;",
                      "children": [
                        {
                          "type": "update_expression",
                          "start_byte": 876,
                          "end_byte": 885,
                          "text": "offset ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 876,
                              "end_byte": 882,
                              "text": "offset",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 883,
                              "end_byte": 885,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 886,
                          "end_byte": 887,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 888,
                      "end_byte": 920,
                      "text": "indices [ lines - 1 ] = offset ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 888,
                          "end_byte": 918,
                          "text": "indices [ lines - 1 ] = offset",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 888,
                              "end_byte": 909,
                              "text": "indices [ lines - 1 ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 888,
                                  "end_byte": 895,
                                  "text": "indices",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 896,
                                  "end_byte": 909,
                                  "text": "[ lines - 1 ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 896,
                                      "end_byte": 897,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 898,
                                      "end_byte": 907,
                                      "text": "lines - 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 898,
                                          "end_byte": 903,
                                          "text": "lines",
                                          "children": []
                                        },
                                        {
                                          "type": "-",
                                          "start_byte": 904,
                                          "end_byte": 905,
                                          "text": "-",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 906,
                                          "end_byte": 907,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 908,
                                      "end_byte": 909,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 910,
                              "end_byte": 911,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 912,
                              "end_byte": 918,
                              "text": "offset",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 919,
                          "end_byte": 920,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 921,
                      "end_byte": 945,
                      "text": "return offset == lines ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 921,
                          "end_byte": 927,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 928,
                          "end_byte": 943,
                          "text": "offset == lines",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 928,
                              "end_byte": 934,
                              "text": "offset",
                              "children": []
                            },
                            {
                              "type": "==",
                              "start_byte": 935,
                              "end_byte": 937,
                              "text": "==",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 938,
                              "end_byte": 943,
                              "text": "lines",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 944,
                          "end_byte": 945,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 946,
                      "end_byte": 947,
                      "text": "}",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 948,
                  "end_byte": 999,
                  "text": "else { indices [ level -- ] = offset ; return 0 ; }",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 948,
                      "end_byte": 952,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "compound_statement",
                      "start_byte": 953,
                      "end_byte": 999,
                      "text": "{ indices [ level -- ] = offset ; return 0 ; }",
                      "children": [
                        {
                          "type": "{",
                          "start_byte": 953,
                          "end_byte": 954,
                          "text": "{",
                          "children": []
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 955,
                          "end_byte": 986,
                          "text": "indices [ level -- ] = offset ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 955,
                              "end_byte": 984,
                              "text": "indices [ level -- ] = offset",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 955,
                                  "end_byte": 975,
                                  "text": "indices [ level -- ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 955,
                                      "end_byte": 962,
                                      "text": "indices",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 963,
                                      "end_byte": 975,
                                      "text": "[ level -- ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 963,
                                          "end_byte": 964,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "update_expression",
                                          "start_byte": 965,
                                          "end_byte": 973,
                                          "text": "level --",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 965,
                                              "end_byte": 970,
                                              "text": "level",
                                              "children": []
                                            },
                                            {
                                              "type": "--",
                                              "start_byte": 971,
                                              "end_byte": 973,
                                              "text": "--",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 974,
                                          "end_byte": 975,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "=",
                                  "start_byte": 976,
                                  "end_byte": 977,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 978,
                                  "end_byte": 984,
                                  "text": "offset",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 985,
                              "end_byte": 986,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "return_statement",
                          "start_byte": 987,
                          "end_byte": 997,
                          "text": "return 0 ;",
                          "children": [
                            {
                              "type": "return",
                              "start_byte": 987,
                              "end_byte": 993,
                              "text": "return",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 994,
                              "end_byte": 995,
                              "text": "0",
                              "children": []
                            },
                            {
                              "type": ";",
                              "start_byte": 996,
                              "end_byte": 997,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start_byte": 998,
                          "end_byte": 999,
                          "text": "}",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 1000,
              "end_byte": 1001,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}