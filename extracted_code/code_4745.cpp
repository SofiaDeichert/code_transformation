int mat [ 100 ] [ 100 ] ; void calculatePath ( int i , int j , int n , int sum , int * max ) { if ( j >= n ) return ; if ( i >= n ) { if ( * max < sum ) * max = sum ; return ; } sum = sum + mat [ i ] [ j ] ; calculatePath ( i + 1 , j , n , sum , max ) ; calculatePath ( i + 1 , j + 1 , n , sum , max ) ; } int main ( ) { int testcase , n , i , sum = 0 , max = 0 , j , k ; scanf ( "%d" , & testcase ) ; for ( i = 0 ; i < testcase ; i ++ ) { sum = 0 ; max = 0 ; scanf ( "%d" , & n ) ; for ( j = 0 ; j < n ; j ++ ) { for ( k = 0 ; k < n ; k ++ ) { if ( k <= j ) scanf ( "%d" , & mat [ j ] [ k ] ) ; else mat [ j ] [ k ] = 0 ; } } calculatePath ( 0 , 0 , n , sum , & max ) ; printf ( "%d" , max ) ; } return 0 ; }