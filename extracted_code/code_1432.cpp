int main ( int argc , char * * argv ) { int times , nRows , a , i , row , elements , TRIndex , elmCount , nr ; int iRows [ MAX ] [ MAX ] , rTemp [ MAX ] , lRow [ MAX ] ; scanf ( "%d" , & times ) ; while ( times > 0 ) { scanf ( "%d" , & nRows ) ; nr = nRows ; row = 0 ; elements = 1 ; for ( i = 0 ; i < MAX ; i ++ ) for ( a = 0 ; a < MAX ; a ++ ) iRows [ i ] [ a ] = - 1 ; while ( nRows > 0 ) { for ( i = 0 ; i < elements ; i ++ ) scanf ( "%d" , & iRows [ row ] [ i ] ) ; row ++ ; elements ++ ; nRows -- ; } elements = 0 ; TRIndex = 0 ; for ( a = 0 ; a < MAX ; a ++ ) rTemp [ a ] = - 1 , lRow [ a ] = iRows [ row - 1 ] [ a ] ; if ( nr == 1 ) { printf ( "%d\n" , lRow [ 0 ] ) ; times -- ; continue ; } for ( i = row - 2 ; i > 0 ; i -- ) { elmCount = i + 2 ; for ( a = 0 ; a < elmCount - 1 ; a ++ ) rTemp [ a ] = iRows [ i ] [ a ] + lRow [ a ] >= iRows [ i ] [ a ] + lRow [ a + 1 ] ? iRows [ i ] [ a ] + lRow [ a ] : iRows [ i ] [ a ] + lRow [ a + 1 ] ; for ( a = 0 ; a < MAX ; a ++ ) lRow [ a ] = rTemp [ a ] , rTemp [ a ] = - 1 ; } printf ( "%d\n" , lRow [ 0 ] + iRows [ 0 ] [ 0 ] > lRow [ 1 ] + iRows [ 0 ] [ 0 ] ? lRow [ 0 ] + iRows [ 0 ] [ 0 ] : lRow [ 1 ] + iRows [ 0 ] [ 0 ] ) ; times -- ; } return 0 ; }