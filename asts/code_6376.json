{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 616,
  "text": "int a [ 101 ] [ 101 ] , i , k ; int sum ( int a [ i ] [ k ] , int m ) { int i , k , j = 0 , c = i , d = k , l ; l = a [ c ] [ k ] ; for ( i ; i < m ; i ++ ) { j += a [ i ] [ k ] ; } for ( k ; k < m ; k ++ ) { l += a [ c + 1 ] [ k + 1 ] ; } if ( l > j ) { return a [ c + 1 ] [ d + 1 ] ; } else if ( j > l ) { return a [ c ] [ k + 1 ] ; } } int main ( void ) { int cas , line , i , j , k , l ; scanf ( \"%d\" , & cas ) ; for ( i = 0 ; i < cas ; i ++ ) { scanf ( \"%d\" , & line ) ; for ( j = 0 ; j < line ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { printf ( \"%c\" , '*' ) ; } printf ( \"\\n\" ) ; } } for ( ; ; ) ; return 0 ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 31,
      "text": "int a [ 101 ] [ 101 ] , i , k ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "array_declarator",
          "start_byte": 4,
          "end_byte": 21,
          "text": "a [ 101 ] [ 101 ]",
          "children": [
            {
              "type": "array_declarator",
              "start_byte": 4,
              "end_byte": 13,
              "text": "a [ 101 ]",
              "children": [
                {
                  "type": "identifier",
                  "start_byte": 4,
                  "end_byte": 5,
                  "text": "a",
                  "children": []
                },
                {
                  "type": "[",
                  "start_byte": 6,
                  "end_byte": 7,
                  "text": "[",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 8,
                  "end_byte": 11,
                  "text": "101",
                  "children": []
                },
                {
                  "type": "]",
                  "start_byte": 12,
                  "end_byte": 13,
                  "text": "]",
                  "children": []
                }
              ]
            },
            {
              "type": "[",
              "start_byte": 14,
              "end_byte": 15,
              "text": "[",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 16,
              "end_byte": 19,
              "text": "101",
              "children": []
            },
            {
              "type": "]",
              "start_byte": 20,
              "end_byte": 21,
              "text": "]",
              "children": []
            }
          ]
        },
        {
          "type": ",",
          "start_byte": 22,
          "end_byte": 23,
          "text": ",",
          "children": []
        },
        {
          "type": "identifier",
          "start_byte": 24,
          "end_byte": 25,
          "text": "i",
          "children": []
        },
        {
          "type": ",",
          "start_byte": 26,
          "end_byte": 27,
          "text": ",",
          "children": []
        },
        {
          "type": "identifier",
          "start_byte": 28,
          "end_byte": 29,
          "text": "k",
          "children": []
        },
        {
          "type": ";",
          "start_byte": 30,
          "end_byte": 31,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 32,
      "end_byte": 338,
      "text": "int sum ( int a [ i ] [ k ] , int m ) { int i , k , j = 0 , c = i , d = k , l ; l = a [ c ] [ k ] ; for ( i ; i < m ; i ++ ) { j += a [ i ] [ k ] ; } for ( k ; k < m ; k ++ ) { l += a [ c + 1 ] [ k + 1 ] ; } if ( l > j ) { return a [ c + 1 ] [ d + 1 ] ; } else if ( j > l ) { return a [ c ] [ k + 1 ] ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 32,
          "end_byte": 35,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 36,
          "end_byte": 69,
          "text": "sum ( int a [ i ] [ k ] , int m )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 36,
              "end_byte": 39,
              "text": "sum",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 40,
              "end_byte": 69,
              "text": "( int a [ i ] [ k ] , int m )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 40,
                  "end_byte": 41,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 42,
                  "end_byte": 59,
                  "text": "int a [ i ] [ k ]",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 42,
                      "end_byte": 45,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "array_declarator",
                      "start_byte": 46,
                      "end_byte": 59,
                      "text": "a [ i ] [ k ]",
                      "children": [
                        {
                          "type": "array_declarator",
                          "start_byte": 46,
                          "end_byte": 53,
                          "text": "a [ i ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 46,
                              "end_byte": 47,
                              "text": "a",
                              "children": []
                            },
                            {
                              "type": "[",
                              "start_byte": 48,
                              "end_byte": 49,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 50,
                              "end_byte": 51,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 52,
                              "end_byte": 53,
                              "text": "]",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "[",
                          "start_byte": 54,
                          "end_byte": 55,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 56,
                          "end_byte": 57,
                          "text": "k",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 58,
                          "end_byte": 59,
                          "text": "]",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 60,
                  "end_byte": 61,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 62,
                  "end_byte": 67,
                  "text": "int m",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 62,
                      "end_byte": 65,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 66,
                      "end_byte": 67,
                      "text": "m",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 68,
                  "end_byte": 69,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 70,
          "end_byte": 338,
          "text": "{ int i , k , j = 0 , c = i , d = k , l ; l = a [ c ] [ k ] ; for ( i ; i < m ; i ++ ) { j += a [ i ] [ k ] ; } for ( k ; k < m ; k ++ ) { l += a [ c + 1 ] [ k + 1 ] ; } if ( l > j ) { return a [ c + 1 ] [ d + 1 ] ; } else if ( j > l ) { return a [ c ] [ k + 1 ] ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 70,
              "end_byte": 71,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 72,
              "end_byte": 111,
              "text": "int i , k , j = 0 , c = i , d = k , l ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 72,
                  "end_byte": 75,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 76,
                  "end_byte": 77,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 78,
                  "end_byte": 79,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 80,
                  "end_byte": 81,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 82,
                  "end_byte": 83,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 84,
                  "end_byte": 89,
                  "text": "j = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 84,
                      "end_byte": 85,
                      "text": "j",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 86,
                      "end_byte": 87,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 88,
                      "end_byte": 89,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 90,
                  "end_byte": 91,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 92,
                  "end_byte": 97,
                  "text": "c = i",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 92,
                      "end_byte": 93,
                      "text": "c",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 94,
                      "end_byte": 95,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 96,
                      "end_byte": 97,
                      "text": "i",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 98,
                  "end_byte": 99,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 100,
                  "end_byte": 105,
                  "text": "d = k",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 100,
                      "end_byte": 101,
                      "text": "d",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 102,
                      "end_byte": 103,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 104,
                      "end_byte": 105,
                      "text": "k",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 106,
                  "end_byte": 107,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 108,
                  "end_byte": 109,
                  "text": "l",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 110,
                  "end_byte": 111,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 112,
              "end_byte": 131,
              "text": "l = a [ c ] [ k ] ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 112,
                  "end_byte": 129,
                  "text": "l = a [ c ] [ k ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 112,
                      "end_byte": 113,
                      "text": "l",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 114,
                      "end_byte": 115,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "subscript_expression",
                      "start_byte": 116,
                      "end_byte": 129,
                      "text": "a [ c ] [ k ]",
                      "children": [
                        {
                          "type": "subscript_expression",
                          "start_byte": 116,
                          "end_byte": 123,
                          "text": "a [ c ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 116,
                              "end_byte": 117,
                              "text": "a",
                              "children": []
                            },
                            {
                              "type": "subscript_argument_list",
                              "start_byte": 118,
                              "end_byte": 123,
                              "text": "[ c ]",
                              "children": [
                                {
                                  "type": "[",
                                  "start_byte": 118,
                                  "end_byte": 119,
                                  "text": "[",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 120,
                                  "end_byte": 121,
                                  "text": "c",
                                  "children": []
                                },
                                {
                                  "type": "]",
                                  "start_byte": 122,
                                  "end_byte": 123,
                                  "text": "]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "subscript_argument_list",
                          "start_byte": 124,
                          "end_byte": 129,
                          "text": "[ k ]",
                          "children": [
                            {
                              "type": "[",
                              "start_byte": 124,
                              "end_byte": 125,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 126,
                              "end_byte": 127,
                              "text": "k",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 128,
                              "end_byte": 129,
                              "text": "]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 130,
                  "end_byte": 131,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 132,
              "end_byte": 181,
              "text": "for ( i ; i < m ; i ++ ) { j += a [ i ] [ k ] ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 132,
                  "end_byte": 135,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 136,
                  "end_byte": 137,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 138,
                  "end_byte": 139,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 140,
                  "end_byte": 141,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 142,
                  "end_byte": 147,
                  "text": "i < m",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 142,
                      "end_byte": 143,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 144,
                      "end_byte": 145,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 146,
                      "end_byte": 147,
                      "text": "m",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 148,
                  "end_byte": 149,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 150,
                  "end_byte": 154,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 150,
                      "end_byte": 151,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 152,
                      "end_byte": 154,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 155,
                  "end_byte": 156,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 157,
                  "end_byte": 181,
                  "text": "{ j += a [ i ] [ k ] ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 157,
                      "end_byte": 158,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 159,
                      "end_byte": 179,
                      "text": "j += a [ i ] [ k ] ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 159,
                          "end_byte": 177,
                          "text": "j += a [ i ] [ k ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 159,
                              "end_byte": 160,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "+=",
                              "start_byte": 161,
                              "end_byte": 163,
                              "text": "+=",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 164,
                              "end_byte": 177,
                              "text": "a [ i ] [ k ]",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 164,
                                  "end_byte": 171,
                                  "text": "a [ i ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 164,
                                      "end_byte": 165,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 166,
                                      "end_byte": 171,
                                      "text": "[ i ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 166,
                                          "end_byte": 167,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 168,
                                          "end_byte": 169,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 170,
                                          "end_byte": 171,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 172,
                                  "end_byte": 177,
                                  "text": "[ k ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 172,
                                      "end_byte": 173,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 174,
                                      "end_byte": 175,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 176,
                                      "end_byte": 177,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 178,
                          "end_byte": 179,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 180,
                      "end_byte": 181,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 182,
              "end_byte": 239,
              "text": "for ( k ; k < m ; k ++ ) { l += a [ c + 1 ] [ k + 1 ] ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 182,
                  "end_byte": 185,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 186,
                  "end_byte": 187,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 188,
                  "end_byte": 189,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 190,
                  "end_byte": 191,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 192,
                  "end_byte": 197,
                  "text": "k < m",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 192,
                      "end_byte": 193,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 194,
                      "end_byte": 195,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 196,
                      "end_byte": 197,
                      "text": "m",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 198,
                  "end_byte": 199,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 200,
                  "end_byte": 204,
                  "text": "k ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 200,
                      "end_byte": 201,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 202,
                      "end_byte": 204,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 205,
                  "end_byte": 206,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 207,
                  "end_byte": 239,
                  "text": "{ l += a [ c + 1 ] [ k + 1 ] ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 207,
                      "end_byte": 208,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 209,
                      "end_byte": 237,
                      "text": "l += a [ c + 1 ] [ k + 1 ] ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 209,
                          "end_byte": 235,
                          "text": "l += a [ c + 1 ] [ k + 1 ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 209,
                              "end_byte": 210,
                              "text": "l",
                              "children": []
                            },
                            {
                              "type": "+=",
                              "start_byte": 211,
                              "end_byte": 213,
                              "text": "+=",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 214,
                              "end_byte": 235,
                              "text": "a [ c + 1 ] [ k + 1 ]",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 214,
                                  "end_byte": 225,
                                  "text": "a [ c + 1 ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 214,
                                      "end_byte": 215,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 216,
                                      "end_byte": 225,
                                      "text": "[ c + 1 ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 216,
                                          "end_byte": 217,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 218,
                                          "end_byte": 223,
                                          "text": "c + 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 218,
                                              "end_byte": 219,
                                              "text": "c",
                                              "children": []
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 220,
                                              "end_byte": 221,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 222,
                                              "end_byte": 223,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 224,
                                          "end_byte": 225,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 226,
                                  "end_byte": 235,
                                  "text": "[ k + 1 ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 226,
                                      "end_byte": 227,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 228,
                                      "end_byte": 233,
                                      "text": "k + 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 228,
                                          "end_byte": 229,
                                          "text": "k",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 230,
                                          "end_byte": 231,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 232,
                                          "end_byte": 233,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 234,
                                      "end_byte": 235,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 236,
                          "end_byte": 237,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 238,
                      "end_byte": 239,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 240,
              "end_byte": 336,
              "text": "if ( l > j ) { return a [ c + 1 ] [ d + 1 ] ; } else if ( j > l ) { return a [ c ] [ k + 1 ] ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 240,
                  "end_byte": 242,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 243,
                  "end_byte": 252,
                  "text": "( l > j )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 243,
                      "end_byte": 244,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 245,
                      "end_byte": 250,
                      "text": "l > j",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 245,
                          "end_byte": 246,
                          "text": "l",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 247,
                          "end_byte": 248,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 249,
                          "end_byte": 250,
                          "text": "j",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 251,
                      "end_byte": 252,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 253,
                  "end_byte": 287,
                  "text": "{ return a [ c + 1 ] [ d + 1 ] ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 253,
                      "end_byte": 254,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 255,
                      "end_byte": 285,
                      "text": "return a [ c + 1 ] [ d + 1 ] ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 255,
                          "end_byte": 261,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "subscript_expression",
                          "start_byte": 262,
                          "end_byte": 283,
                          "text": "a [ c + 1 ] [ d + 1 ]",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 262,
                              "end_byte": 273,
                              "text": "a [ c + 1 ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 262,
                                  "end_byte": 263,
                                  "text": "a",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 264,
                                  "end_byte": 273,
                                  "text": "[ c + 1 ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 264,
                                      "end_byte": 265,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 266,
                                      "end_byte": 271,
                                      "text": "c + 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 266,
                                          "end_byte": 267,
                                          "text": "c",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 268,
                                          "end_byte": 269,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 270,
                                          "end_byte": 271,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 272,
                                      "end_byte": 273,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "subscript_argument_list",
                              "start_byte": 274,
                              "end_byte": 283,
                              "text": "[ d + 1 ]",
                              "children": [
                                {
                                  "type": "[",
                                  "start_byte": 274,
                                  "end_byte": 275,
                                  "text": "[",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 276,
                                  "end_byte": 281,
                                  "text": "d + 1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 276,
                                      "end_byte": 277,
                                      "text": "d",
                                      "children": []
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 278,
                                      "end_byte": 279,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 280,
                                      "end_byte": 281,
                                      "text": "1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "]",
                                  "start_byte": 282,
                                  "end_byte": 283,
                                  "text": "]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 284,
                          "end_byte": 285,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 286,
                      "end_byte": 287,
                      "text": "}",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 288,
                  "end_byte": 336,
                  "text": "else if ( j > l ) { return a [ c ] [ k + 1 ] ; }",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 288,
                      "end_byte": 292,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 293,
                      "end_byte": 336,
                      "text": "if ( j > l ) { return a [ c ] [ k + 1 ] ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 293,
                          "end_byte": 295,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 296,
                          "end_byte": 305,
                          "text": "( j > l )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 296,
                              "end_byte": 297,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 298,
                              "end_byte": 303,
                              "text": "j > l",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 298,
                                  "end_byte": 299,
                                  "text": "j",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 300,
                                  "end_byte": 301,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 302,
                                  "end_byte": 303,
                                  "text": "l",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 304,
                              "end_byte": 305,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 306,
                          "end_byte": 336,
                          "text": "{ return a [ c ] [ k + 1 ] ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 306,
                              "end_byte": 307,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "return_statement",
                              "start_byte": 308,
                              "end_byte": 334,
                              "text": "return a [ c ] [ k + 1 ] ;",
                              "children": [
                                {
                                  "type": "return",
                                  "start_byte": 308,
                                  "end_byte": 314,
                                  "text": "return",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 315,
                                  "end_byte": 332,
                                  "text": "a [ c ] [ k + 1 ]",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 315,
                                      "end_byte": 322,
                                      "text": "a [ c ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 315,
                                          "end_byte": 316,
                                          "text": "a",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 317,
                                          "end_byte": 322,
                                          "text": "[ c ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 317,
                                              "end_byte": 318,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 319,
                                              "end_byte": 320,
                                              "text": "c",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 321,
                                              "end_byte": 322,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 323,
                                      "end_byte": 332,
                                      "text": "[ k + 1 ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 323,
                                          "end_byte": 324,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 325,
                                          "end_byte": 330,
                                          "text": "k + 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 325,
                                              "end_byte": 326,
                                              "text": "k",
                                              "children": []
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 327,
                                              "end_byte": 328,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 329,
                                              "end_byte": 330,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 331,
                                          "end_byte": 332,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 333,
                                  "end_byte": 334,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 335,
                              "end_byte": 336,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 337,
              "end_byte": 338,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 339,
      "end_byte": 616,
      "text": "int main ( void ) { int cas , line , i , j , k , l ; scanf ( \"%d\" , & cas ) ; for ( i = 0 ; i < cas ; i ++ ) { scanf ( \"%d\" , & line ) ; for ( j = 0 ; j < line ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { printf ( \"%c\" , '*' ) ; } printf ( \"\\n\" ) ; } } for ( ; ; ) ; return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 339,
          "end_byte": 342,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 343,
          "end_byte": 356,
          "text": "main ( void )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 343,
              "end_byte": 347,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 348,
              "end_byte": 356,
              "text": "( void )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 348,
                  "end_byte": 349,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 350,
                  "end_byte": 354,
                  "text": "void",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 350,
                      "end_byte": 354,
                      "text": "void",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 355,
                  "end_byte": 356,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 357,
          "end_byte": 616,
          "text": "{ int cas , line , i , j , k , l ; scanf ( \"%d\" , & cas ) ; for ( i = 0 ; i < cas ; i ++ ) { scanf ( \"%d\" , & line ) ; for ( j = 0 ; j < line ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { printf ( \"%c\" , '*' ) ; } printf ( \"\\n\" ) ; } } for ( ; ; ) ; return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 357,
              "end_byte": 358,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 359,
              "end_byte": 391,
              "text": "int cas , line , i , j , k , l ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 359,
                  "end_byte": 362,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 363,
                  "end_byte": 366,
                  "text": "cas",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 367,
                  "end_byte": 368,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 369,
                  "end_byte": 373,
                  "text": "line",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 374,
                  "end_byte": 375,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 376,
                  "end_byte": 377,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 378,
                  "end_byte": 379,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 380,
                  "end_byte": 381,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 382,
                  "end_byte": 383,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 384,
                  "end_byte": 385,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 386,
                  "end_byte": 387,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 388,
                  "end_byte": 389,
                  "text": "l",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 390,
                  "end_byte": 391,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 392,
              "end_byte": 416,
              "text": "scanf ( \"%d\" , & cas ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 392,
                  "end_byte": 414,
                  "text": "scanf ( \"%d\" , & cas )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 392,
                      "end_byte": 397,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 398,
                      "end_byte": 414,
                      "text": "( \"%d\" , & cas )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 398,
                          "end_byte": 399,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 400,
                          "end_byte": 404,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 400,
                              "end_byte": 401,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 401,
                              "end_byte": 403,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 403,
                              "end_byte": 404,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 405,
                          "end_byte": 406,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 407,
                          "end_byte": 412,
                          "text": "& cas",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 407,
                              "end_byte": 408,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 409,
                              "end_byte": 412,
                              "text": "cas",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 413,
                          "end_byte": 414,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 415,
                  "end_byte": 416,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 417,
              "end_byte": 589,
              "text": "for ( i = 0 ; i < cas ; i ++ ) { scanf ( \"%d\" , & line ) ; for ( j = 0 ; j < line ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { printf ( \"%c\" , '*' ) ; } printf ( \"\\n\" ) ; } }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 417,
                  "end_byte": 420,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 421,
                  "end_byte": 422,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 423,
                  "end_byte": 428,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 423,
                      "end_byte": 424,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 425,
                      "end_byte": 426,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 427,
                      "end_byte": 428,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 429,
                  "end_byte": 430,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 431,
                  "end_byte": 438,
                  "text": "i < cas",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 431,
                      "end_byte": 432,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 433,
                      "end_byte": 434,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 435,
                      "end_byte": 438,
                      "text": "cas",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 439,
                  "end_byte": 440,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 441,
                  "end_byte": 445,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 441,
                      "end_byte": 442,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 443,
                      "end_byte": 445,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 446,
                  "end_byte": 447,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 448,
                  "end_byte": 589,
                  "text": "{ scanf ( \"%d\" , & line ) ; for ( j = 0 ; j < line ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { printf ( \"%c\" , '*' ) ; } printf ( \"\\n\" ) ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 448,
                      "end_byte": 449,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 450,
                      "end_byte": 475,
                      "text": "scanf ( \"%d\" , & line ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 450,
                          "end_byte": 473,
                          "text": "scanf ( \"%d\" , & line )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 450,
                              "end_byte": 455,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 456,
                              "end_byte": 473,
                              "text": "( \"%d\" , & line )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 456,
                                  "end_byte": 457,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 458,
                                  "end_byte": 462,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 458,
                                      "end_byte": 459,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 459,
                                      "end_byte": 461,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 461,
                                      "end_byte": 462,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 463,
                                  "end_byte": 464,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 465,
                                  "end_byte": 471,
                                  "text": "& line",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 465,
                                      "end_byte": 466,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 467,
                                      "end_byte": 471,
                                      "text": "line",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 472,
                                  "end_byte": 473,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 474,
                          "end_byte": 475,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 476,
                      "end_byte": 587,
                      "text": "for ( j = 0 ; j < line ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { printf ( \"%c\" , '*' ) ; } printf ( \"\\n\" ) ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 476,
                          "end_byte": 479,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 480,
                          "end_byte": 481,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 482,
                          "end_byte": 487,
                          "text": "j = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 482,
                              "end_byte": 483,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 484,
                              "end_byte": 485,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 486,
                              "end_byte": 487,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 488,
                          "end_byte": 489,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 490,
                          "end_byte": 498,
                          "text": "j < line",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 490,
                              "end_byte": 491,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 492,
                              "end_byte": 493,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 494,
                              "end_byte": 498,
                              "text": "line",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 499,
                          "end_byte": 500,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 501,
                          "end_byte": 505,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 501,
                              "end_byte": 502,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 503,
                              "end_byte": 505,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 506,
                          "end_byte": 507,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 508,
                          "end_byte": 587,
                          "text": "{ for ( k = 0 ; k <= j ; k ++ ) { printf ( \"%c\" , '*' ) ; } printf ( \"\\n\" ) ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 508,
                              "end_byte": 509,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 510,
                              "end_byte": 567,
                              "text": "for ( k = 0 ; k <= j ; k ++ ) { printf ( \"%c\" , '*' ) ; }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 510,
                                  "end_byte": 513,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 514,
                                  "end_byte": 515,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 516,
                                  "end_byte": 521,
                                  "text": "k = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 516,
                                      "end_byte": 517,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 518,
                                      "end_byte": 519,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 520,
                                      "end_byte": 521,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 522,
                                  "end_byte": 523,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 524,
                                  "end_byte": 530,
                                  "text": "k <= j",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 524,
                                      "end_byte": 525,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "<=",
                                      "start_byte": 526,
                                      "end_byte": 528,
                                      "text": "<=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 529,
                                      "end_byte": 530,
                                      "text": "j",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 531,
                                  "end_byte": 532,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 533,
                                  "end_byte": 537,
                                  "text": "k ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 533,
                                      "end_byte": 534,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 535,
                                      "end_byte": 537,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 538,
                                  "end_byte": 539,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 540,
                                  "end_byte": 567,
                                  "text": "{ printf ( \"%c\" , '*' ) ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 540,
                                      "end_byte": 541,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 542,
                                      "end_byte": 565,
                                      "text": "printf ( \"%c\" , '*' ) ;",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start_byte": 542,
                                          "end_byte": 563,
                                          "text": "printf ( \"%c\" , '*' )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 542,
                                              "end_byte": 548,
                                              "text": "printf",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 549,
                                              "end_byte": 563,
                                              "text": "( \"%c\" , '*' )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 549,
                                                  "end_byte": 550,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_literal",
                                                  "start_byte": 551,
                                                  "end_byte": 555,
                                                  "text": "\"%c\"",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 551,
                                                      "end_byte": 552,
                                                      "text": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start_byte": 552,
                                                      "end_byte": 554,
                                                      "text": "%c",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 554,
                                                      "end_byte": 555,
                                                      "text": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 556,
                                                  "end_byte": 557,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "char_literal",
                                                  "start_byte": 558,
                                                  "end_byte": 561,
                                                  "text": "'*'",
                                                  "children": [
                                                    {
                                                      "type": "'",
                                                      "start_byte": 558,
                                                      "end_byte": 559,
                                                      "text": "'",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "character",
                                                      "start_byte": 559,
                                                      "end_byte": 560,
                                                      "text": "*",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "'",
                                                      "start_byte": 560,
                                                      "end_byte": 561,
                                                      "text": "'",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 562,
                                                  "end_byte": 563,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 564,
                                          "end_byte": 565,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 566,
                                      "end_byte": 567,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 568,
                              "end_byte": 585,
                              "text": "printf ( \"\\n\" ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 568,
                                  "end_byte": 583,
                                  "text": "printf ( \"\\n\" )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 568,
                                      "end_byte": 574,
                                      "text": "printf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 575,
                                      "end_byte": 583,
                                      "text": "( \"\\n\" )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 575,
                                          "end_byte": 576,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 577,
                                          "end_byte": 581,
                                          "text": "\"\\n\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 577,
                                              "end_byte": 578,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "escape_sequence",
                                              "start_byte": 578,
                                              "end_byte": 580,
                                              "text": "\\n",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 580,
                                              "end_byte": 581,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 582,
                                          "end_byte": 583,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 584,
                                  "end_byte": 585,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 586,
                              "end_byte": 587,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 588,
                      "end_byte": 589,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 590,
              "end_byte": 603,
              "text": "for ( ; ; ) ;",
              "children": [
                {
                  "type": "for",
                  "start_byte": 590,
                  "end_byte": 593,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 594,
                  "end_byte": 595,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 596,
                  "end_byte": 597,
                  "text": ";",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 598,
                  "end_byte": 599,
                  "text": ";",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 600,
                  "end_byte": 601,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "expression_statement",
                  "start_byte": 602,
                  "end_byte": 603,
                  "text": ";",
                  "children": [
                    {
                      "type": ";",
                      "start_byte": 602,
                      "end_byte": 603,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 604,
              "end_byte": 614,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 604,
                  "end_byte": 610,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 611,
                  "end_byte": 612,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 613,
                  "end_byte": 614,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 615,
              "end_byte": 616,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}