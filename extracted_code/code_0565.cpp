int maxsum = 0 ; int * * arr ; int no_of_rows ; int main ( ) { int t , i , j , k ; scanf ( "%d" , & t ) ; int result [ t ] ; i = 0 ; while ( i < t ) { scanf ( "%d" , & no_of_rows ) ; arr = ( int * * ) malloc ( no_of_rows * sizeof ( int * ) ) ; j = 0 ; while ( j < no_of_rows ) { arr [ j ] = ( int * ) calloc ( j + 1 , sizeof ( int ) ) ; k = 0 ; while ( k <= j ) { scanf ( "%d" , & arr [ j ] [ k ] ) ; k ++ ; } j ++ ; } func ( 0 , 0 , 0 ) ; result [ i ] = maxsum ; maxsum = 0 ; i ++ ; } for ( i = 0 ; i < t ; i ++ ) printf ( "%d\n" , result [ i ] ) ; return 0 ; } int func ( int row , int col , int sum ) { if ( row < no_of_rows - 1 ) { sum = sum + arr [ row ] [ col ] ; func ( row + 1 , col , sum ) ; func ( row + 1 , col + 1 , sum ) ; } if ( row == no_of_rows - 1 ) { sum = sum + arr [ row ] [ col ] ; if ( sum >= maxsum ) maxsum = sum ; } }