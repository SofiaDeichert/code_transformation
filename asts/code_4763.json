{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 1132,
  "text": "int solution [ 100 ] [ 100 ] ; int findpathsum ( int triangle [ ] [ 101 ] , int i , int j ) { int val1 , val2 ; if ( triangle [ i ] [ j ] == - 1 ) return 0 ; if ( solution [ i + 1 ] [ j ] == - 1 ) { val1 = findpathsum ( triangle , i + 1 , j ) ; solution [ i + 1 ] [ j ] = val1 ; } else { val1 = solution [ i + 1 ] [ j ] ; } if ( solution [ i + 1 ] [ j + 1 ] == - 1 ) { val2 = findpathsum ( triangle , i + 1 , j + 1 ) ; solution [ i + 1 ] [ j + 1 ] = val2 ; } else { val2 = solution [ i + 1 ] [ j + 1 ] ; } if ( val1 > val2 ) return triangle [ i ] [ j ] + val1 ; else return triangle [ i ] [ j ] + val2 ; } int main ( ) { int nt , nr ; int i , j , k ; int triangle [ 101 ] [ 101 ] ; int sol [ 1000 ] , sol_i ; sol_i = 0 ; scanf ( \"%d\" , & nt ) ; for ( i = 0 ; i < nt ; i ++ ) { scanf ( \"%d\" , & nr ) ; for ( j = 0 ; j < nr ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d\" , & triangle [ j ] [ k ] ) ; solution [ j ] [ k ] = - 1 ; } } for ( k = 0 ; k <= j ; k ++ ) triangle [ j ] [ k ] = - 1 ; sol [ sol_i ++ ] = findpathsum ( triangle , 0 , 0 ) ; } for ( i = 0 ; i < sol_i ; i ++ ) printf ( \"%d\\n\" , sol [ i ] ) ; return 0 ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 30,
      "text": "int solution [ 100 ] [ 100 ] ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "array_declarator",
          "start_byte": 4,
          "end_byte": 28,
          "text": "solution [ 100 ] [ 100 ]",
          "children": [
            {
              "type": "array_declarator",
              "start_byte": 4,
              "end_byte": 20,
              "text": "solution [ 100 ]",
              "children": [
                {
                  "type": "identifier",
                  "start_byte": 4,
                  "end_byte": 12,
                  "text": "solution",
                  "children": []
                },
                {
                  "type": "[",
                  "start_byte": 13,
                  "end_byte": 14,
                  "text": "[",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "100",
                  "children": []
                },
                {
                  "type": "]",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": "]",
                  "children": []
                }
              ]
            },
            {
              "type": "[",
              "start_byte": 21,
              "end_byte": 22,
              "text": "[",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 23,
              "end_byte": 26,
              "text": "100",
              "children": []
            },
            {
              "type": "]",
              "start_byte": 27,
              "end_byte": 28,
              "text": "]",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 29,
          "end_byte": 30,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 31,
      "end_byte": 605,
      "text": "int findpathsum ( int triangle [ ] [ 101 ] , int i , int j ) { int val1 , val2 ; if ( triangle [ i ] [ j ] == - 1 ) return 0 ; if ( solution [ i + 1 ] [ j ] == - 1 ) { val1 = findpathsum ( triangle , i + 1 , j ) ; solution [ i + 1 ] [ j ] = val1 ; } else { val1 = solution [ i + 1 ] [ j ] ; } if ( solution [ i + 1 ] [ j + 1 ] == - 1 ) { val2 = findpathsum ( triangle , i + 1 , j + 1 ) ; solution [ i + 1 ] [ j + 1 ] = val2 ; } else { val2 = solution [ i + 1 ] [ j + 1 ] ; } if ( val1 > val2 ) return triangle [ i ] [ j ] + val1 ; else return triangle [ i ] [ j ] + val2 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 31,
          "end_byte": 34,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 35,
          "end_byte": 91,
          "text": "findpathsum ( int triangle [ ] [ 101 ] , int i , int j )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 35,
              "end_byte": 46,
              "text": "findpathsum",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 47,
              "end_byte": 91,
              "text": "( int triangle [ ] [ 101 ] , int i , int j )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 47,
                  "end_byte": 48,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 49,
                  "end_byte": 73,
                  "text": "int triangle [ ] [ 101 ]",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 49,
                      "end_byte": 52,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "array_declarator",
                      "start_byte": 53,
                      "end_byte": 73,
                      "text": "triangle [ ] [ 101 ]",
                      "children": [
                        {
                          "type": "array_declarator",
                          "start_byte": 53,
                          "end_byte": 65,
                          "text": "triangle [ ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 53,
                              "end_byte": 61,
                              "text": "triangle",
                              "children": []
                            },
                            {
                              "type": "[",
                              "start_byte": 62,
                              "end_byte": 63,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 64,
                              "end_byte": 65,
                              "text": "]",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "[",
                          "start_byte": 66,
                          "end_byte": 67,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 68,
                          "end_byte": 71,
                          "text": "101",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 72,
                          "end_byte": 73,
                          "text": "]",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 74,
                  "end_byte": 75,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 76,
                  "end_byte": 81,
                  "text": "int i",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 76,
                      "end_byte": 79,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 80,
                      "end_byte": 81,
                      "text": "i",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 82,
                  "end_byte": 83,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 84,
                  "end_byte": 89,
                  "text": "int j",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 84,
                      "end_byte": 87,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 88,
                      "end_byte": 89,
                      "text": "j",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 90,
                  "end_byte": 91,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 92,
          "end_byte": 605,
          "text": "{ int val1 , val2 ; if ( triangle [ i ] [ j ] == - 1 ) return 0 ; if ( solution [ i + 1 ] [ j ] == - 1 ) { val1 = findpathsum ( triangle , i + 1 , j ) ; solution [ i + 1 ] [ j ] = val1 ; } else { val1 = solution [ i + 1 ] [ j ] ; } if ( solution [ i + 1 ] [ j + 1 ] == - 1 ) { val2 = findpathsum ( triangle , i + 1 , j + 1 ) ; solution [ i + 1 ] [ j + 1 ] = val2 ; } else { val2 = solution [ i + 1 ] [ j + 1 ] ; } if ( val1 > val2 ) return triangle [ i ] [ j ] + val1 ; else return triangle [ i ] [ j ] + val2 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 92,
              "end_byte": 93,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 94,
              "end_byte": 111,
              "text": "int val1 , val2 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 94,
                  "end_byte": 97,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 98,
                  "end_byte": 102,
                  "text": "val1",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 103,
                  "end_byte": 104,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 105,
                  "end_byte": 109,
                  "text": "val2",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 110,
                  "end_byte": 111,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 112,
              "end_byte": 157,
              "text": "if ( triangle [ i ] [ j ] == - 1 ) return 0 ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 112,
                  "end_byte": 114,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 115,
                  "end_byte": 146,
                  "text": "( triangle [ i ] [ j ] == - 1 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 115,
                      "end_byte": 116,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 117,
                      "end_byte": 144,
                      "text": "triangle [ i ] [ j ] == - 1",
                      "children": [
                        {
                          "type": "subscript_expression",
                          "start_byte": 117,
                          "end_byte": 137,
                          "text": "triangle [ i ] [ j ]",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 117,
                              "end_byte": 131,
                              "text": "triangle [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 117,
                                  "end_byte": 125,
                                  "text": "triangle",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 126,
                                  "end_byte": 131,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 126,
                                      "end_byte": 127,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 128,
                                      "end_byte": 129,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 130,
                                      "end_byte": 131,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "subscript_argument_list",
                              "start_byte": 132,
                              "end_byte": 137,
                              "text": "[ j ]",
                              "children": [
                                {
                                  "type": "[",
                                  "start_byte": 132,
                                  "end_byte": 133,
                                  "text": "[",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 134,
                                  "end_byte": 135,
                                  "text": "j",
                                  "children": []
                                },
                                {
                                  "type": "]",
                                  "start_byte": 136,
                                  "end_byte": 137,
                                  "text": "]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "==",
                          "start_byte": 138,
                          "end_byte": 140,
                          "text": "==",
                          "children": []
                        },
                        {
                          "type": "unary_expression",
                          "start_byte": 141,
                          "end_byte": 144,
                          "text": "- 1",
                          "children": [
                            {
                              "type": "-",
                              "start_byte": 141,
                              "end_byte": 142,
                              "text": "-",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 143,
                              "end_byte": 144,
                              "text": "1",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 145,
                      "end_byte": 146,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 147,
                  "end_byte": 157,
                  "text": "return 0 ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 147,
                      "end_byte": 153,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 154,
                      "end_byte": 155,
                      "text": "0",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 156,
                      "end_byte": 157,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 158,
              "end_byte": 323,
              "text": "if ( solution [ i + 1 ] [ j ] == - 1 ) { val1 = findpathsum ( triangle , i + 1 , j ) ; solution [ i + 1 ] [ j ] = val1 ; } else { val1 = solution [ i + 1 ] [ j ] ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 158,
                  "end_byte": 160,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 161,
                  "end_byte": 196,
                  "text": "( solution [ i + 1 ] [ j ] == - 1 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 161,
                      "end_byte": 162,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 163,
                      "end_byte": 194,
                      "text": "solution [ i + 1 ] [ j ] == - 1",
                      "children": [
                        {
                          "type": "subscript_expression",
                          "start_byte": 163,
                          "end_byte": 187,
                          "text": "solution [ i + 1 ] [ j ]",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 163,
                              "end_byte": 181,
                              "text": "solution [ i + 1 ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 163,
                                  "end_byte": 171,
                                  "text": "solution",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 172,
                                  "end_byte": 181,
                                  "text": "[ i + 1 ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 172,
                                      "end_byte": 173,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 174,
                                      "end_byte": 179,
                                      "text": "i + 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 174,
                                          "end_byte": 175,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 176,
                                          "end_byte": 177,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 178,
                                          "end_byte": 179,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 180,
                                      "end_byte": 181,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "subscript_argument_list",
                              "start_byte": 182,
                              "end_byte": 187,
                              "text": "[ j ]",
                              "children": [
                                {
                                  "type": "[",
                                  "start_byte": 182,
                                  "end_byte": 183,
                                  "text": "[",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 184,
                                  "end_byte": 185,
                                  "text": "j",
                                  "children": []
                                },
                                {
                                  "type": "]",
                                  "start_byte": 186,
                                  "end_byte": 187,
                                  "text": "]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "==",
                          "start_byte": 188,
                          "end_byte": 190,
                          "text": "==",
                          "children": []
                        },
                        {
                          "type": "unary_expression",
                          "start_byte": 191,
                          "end_byte": 194,
                          "text": "- 1",
                          "children": [
                            {
                              "type": "-",
                              "start_byte": 191,
                              "end_byte": 192,
                              "text": "-",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 193,
                              "end_byte": 194,
                              "text": "1",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 195,
                      "end_byte": 196,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 197,
                  "end_byte": 280,
                  "text": "{ val1 = findpathsum ( triangle , i + 1 , j ) ; solution [ i + 1 ] [ j ] = val1 ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 197,
                      "end_byte": 198,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 199,
                      "end_byte": 244,
                      "text": "val1 = findpathsum ( triangle , i + 1 , j ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 199,
                          "end_byte": 242,
                          "text": "val1 = findpathsum ( triangle , i + 1 , j )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 199,
                              "end_byte": 203,
                              "text": "val1",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 204,
                              "end_byte": 205,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 206,
                              "end_byte": 242,
                              "text": "findpathsum ( triangle , i + 1 , j )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 206,
                                  "end_byte": 217,
                                  "text": "findpathsum",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 218,
                                  "end_byte": 242,
                                  "text": "( triangle , i + 1 , j )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 218,
                                      "end_byte": 219,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 220,
                                      "end_byte": 228,
                                      "text": "triangle",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 229,
                                      "end_byte": 230,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 231,
                                      "end_byte": 236,
                                      "text": "i + 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 231,
                                          "end_byte": 232,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 233,
                                          "end_byte": 234,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 235,
                                          "end_byte": 236,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 237,
                                      "end_byte": 238,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 239,
                                      "end_byte": 240,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 241,
                                      "end_byte": 242,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 243,
                          "end_byte": 244,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 245,
                      "end_byte": 278,
                      "text": "solution [ i + 1 ] [ j ] = val1 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 245,
                          "end_byte": 276,
                          "text": "solution [ i + 1 ] [ j ] = val1",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 245,
                              "end_byte": 269,
                              "text": "solution [ i + 1 ] [ j ]",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 245,
                                  "end_byte": 263,
                                  "text": "solution [ i + 1 ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 245,
                                      "end_byte": 253,
                                      "text": "solution",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 254,
                                      "end_byte": 263,
                                      "text": "[ i + 1 ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 254,
                                          "end_byte": 255,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 256,
                                          "end_byte": 261,
                                          "text": "i + 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 256,
                                              "end_byte": 257,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 258,
                                              "end_byte": 259,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 260,
                                              "end_byte": 261,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 262,
                                          "end_byte": 263,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 264,
                                  "end_byte": 269,
                                  "text": "[ j ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 264,
                                      "end_byte": 265,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 266,
                                      "end_byte": 267,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 268,
                                      "end_byte": 269,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 270,
                              "end_byte": 271,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 272,
                              "end_byte": 276,
                              "text": "val1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 277,
                          "end_byte": 278,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 279,
                      "end_byte": 280,
                      "text": "}",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 281,
                  "end_byte": 323,
                  "text": "else { val1 = solution [ i + 1 ] [ j ] ; }",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 281,
                      "end_byte": 285,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "compound_statement",
                      "start_byte": 286,
                      "end_byte": 323,
                      "text": "{ val1 = solution [ i + 1 ] [ j ] ; }",
                      "children": [
                        {
                          "type": "{",
                          "start_byte": 286,
                          "end_byte": 287,
                          "text": "{",
                          "children": []
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 288,
                          "end_byte": 321,
                          "text": "val1 = solution [ i + 1 ] [ j ] ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 288,
                              "end_byte": 319,
                              "text": "val1 = solution [ i + 1 ] [ j ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 288,
                                  "end_byte": 292,
                                  "text": "val1",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 293,
                                  "end_byte": 294,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 295,
                                  "end_byte": 319,
                                  "text": "solution [ i + 1 ] [ j ]",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 295,
                                      "end_byte": 313,
                                      "text": "solution [ i + 1 ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 295,
                                          "end_byte": 303,
                                          "text": "solution",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 304,
                                          "end_byte": 313,
                                          "text": "[ i + 1 ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 304,
                                              "end_byte": 305,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 306,
                                              "end_byte": 311,
                                              "text": "i + 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 306,
                                                  "end_byte": 307,
                                                  "text": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 308,
                                                  "end_byte": 309,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 310,
                                                  "end_byte": 311,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 312,
                                              "end_byte": 313,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 314,
                                      "end_byte": 319,
                                      "text": "[ j ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 314,
                                          "end_byte": 315,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 316,
                                          "end_byte": 317,
                                          "text": "j",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 318,
                                          "end_byte": 319,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 320,
                              "end_byte": 321,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start_byte": 322,
                          "end_byte": 323,
                          "text": "}",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 324,
              "end_byte": 505,
              "text": "if ( solution [ i + 1 ] [ j + 1 ] == - 1 ) { val2 = findpathsum ( triangle , i + 1 , j + 1 ) ; solution [ i + 1 ] [ j + 1 ] = val2 ; } else { val2 = solution [ i + 1 ] [ j + 1 ] ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 324,
                  "end_byte": 326,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 327,
                  "end_byte": 366,
                  "text": "( solution [ i + 1 ] [ j + 1 ] == - 1 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 327,
                      "end_byte": 328,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 329,
                      "end_byte": 364,
                      "text": "solution [ i + 1 ] [ j + 1 ] == - 1",
                      "children": [
                        {
                          "type": "subscript_expression",
                          "start_byte": 329,
                          "end_byte": 357,
                          "text": "solution [ i + 1 ] [ j + 1 ]",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 329,
                              "end_byte": 347,
                              "text": "solution [ i + 1 ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 329,
                                  "end_byte": 337,
                                  "text": "solution",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 338,
                                  "end_byte": 347,
                                  "text": "[ i + 1 ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 338,
                                      "end_byte": 339,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 340,
                                      "end_byte": 345,
                                      "text": "i + 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 340,
                                          "end_byte": 341,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 342,
                                          "end_byte": 343,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 344,
                                          "end_byte": 345,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 346,
                                      "end_byte": 347,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "subscript_argument_list",
                              "start_byte": 348,
                              "end_byte": 357,
                              "text": "[ j + 1 ]",
                              "children": [
                                {
                                  "type": "[",
                                  "start_byte": 348,
                                  "end_byte": 349,
                                  "text": "[",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 350,
                                  "end_byte": 355,
                                  "text": "j + 1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 350,
                                      "end_byte": 351,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 352,
                                      "end_byte": 353,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 354,
                                      "end_byte": 355,
                                      "text": "1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "]",
                                  "start_byte": 356,
                                  "end_byte": 357,
                                  "text": "]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "==",
                          "start_byte": 358,
                          "end_byte": 360,
                          "text": "==",
                          "children": []
                        },
                        {
                          "type": "unary_expression",
                          "start_byte": 361,
                          "end_byte": 364,
                          "text": "- 1",
                          "children": [
                            {
                              "type": "-",
                              "start_byte": 361,
                              "end_byte": 362,
                              "text": "-",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 363,
                              "end_byte": 364,
                              "text": "1",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 365,
                      "end_byte": 366,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 367,
                  "end_byte": 458,
                  "text": "{ val2 = findpathsum ( triangle , i + 1 , j + 1 ) ; solution [ i + 1 ] [ j + 1 ] = val2 ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 367,
                      "end_byte": 368,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 369,
                      "end_byte": 418,
                      "text": "val2 = findpathsum ( triangle , i + 1 , j + 1 ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 369,
                          "end_byte": 416,
                          "text": "val2 = findpathsum ( triangle , i + 1 , j + 1 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 369,
                              "end_byte": 373,
                              "text": "val2",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 374,
                              "end_byte": 375,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 376,
                              "end_byte": 416,
                              "text": "findpathsum ( triangle , i + 1 , j + 1 )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 376,
                                  "end_byte": 387,
                                  "text": "findpathsum",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 388,
                                  "end_byte": 416,
                                  "text": "( triangle , i + 1 , j + 1 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 388,
                                      "end_byte": 389,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 390,
                                      "end_byte": 398,
                                      "text": "triangle",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 399,
                                      "end_byte": 400,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 401,
                                      "end_byte": 406,
                                      "text": "i + 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 401,
                                          "end_byte": 402,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 403,
                                          "end_byte": 404,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 405,
                                          "end_byte": 406,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 407,
                                      "end_byte": 408,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 409,
                                      "end_byte": 414,
                                      "text": "j + 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 409,
                                          "end_byte": 410,
                                          "text": "j",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 411,
                                          "end_byte": 412,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 413,
                                          "end_byte": 414,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 415,
                                      "end_byte": 416,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 417,
                          "end_byte": 418,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 419,
                      "end_byte": 456,
                      "text": "solution [ i + 1 ] [ j + 1 ] = val2 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 419,
                          "end_byte": 454,
                          "text": "solution [ i + 1 ] [ j + 1 ] = val2",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 419,
                              "end_byte": 447,
                              "text": "solution [ i + 1 ] [ j + 1 ]",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 419,
                                  "end_byte": 437,
                                  "text": "solution [ i + 1 ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 419,
                                      "end_byte": 427,
                                      "text": "solution",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 428,
                                      "end_byte": 437,
                                      "text": "[ i + 1 ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 428,
                                          "end_byte": 429,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 430,
                                          "end_byte": 435,
                                          "text": "i + 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 430,
                                              "end_byte": 431,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 432,
                                              "end_byte": 433,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 434,
                                              "end_byte": 435,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 436,
                                          "end_byte": 437,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 438,
                                  "end_byte": 447,
                                  "text": "[ j + 1 ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 438,
                                      "end_byte": 439,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 440,
                                      "end_byte": 445,
                                      "text": "j + 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 440,
                                          "end_byte": 441,
                                          "text": "j",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 442,
                                          "end_byte": 443,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 444,
                                          "end_byte": 445,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 446,
                                      "end_byte": 447,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 448,
                              "end_byte": 449,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 450,
                              "end_byte": 454,
                              "text": "val2",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 455,
                          "end_byte": 456,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 457,
                      "end_byte": 458,
                      "text": "}",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 459,
                  "end_byte": 505,
                  "text": "else { val2 = solution [ i + 1 ] [ j + 1 ] ; }",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 459,
                      "end_byte": 463,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "compound_statement",
                      "start_byte": 464,
                      "end_byte": 505,
                      "text": "{ val2 = solution [ i + 1 ] [ j + 1 ] ; }",
                      "children": [
                        {
                          "type": "{",
                          "start_byte": 464,
                          "end_byte": 465,
                          "text": "{",
                          "children": []
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 466,
                          "end_byte": 503,
                          "text": "val2 = solution [ i + 1 ] [ j + 1 ] ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 466,
                              "end_byte": 501,
                              "text": "val2 = solution [ i + 1 ] [ j + 1 ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 466,
                                  "end_byte": 470,
                                  "text": "val2",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 471,
                                  "end_byte": 472,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 473,
                                  "end_byte": 501,
                                  "text": "solution [ i + 1 ] [ j + 1 ]",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 473,
                                      "end_byte": 491,
                                      "text": "solution [ i + 1 ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 473,
                                          "end_byte": 481,
                                          "text": "solution",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 482,
                                          "end_byte": 491,
                                          "text": "[ i + 1 ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 482,
                                              "end_byte": 483,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 484,
                                              "end_byte": 489,
                                              "text": "i + 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 484,
                                                  "end_byte": 485,
                                                  "text": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 486,
                                                  "end_byte": 487,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 488,
                                                  "end_byte": 489,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 490,
                                              "end_byte": 491,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 492,
                                      "end_byte": 501,
                                      "text": "[ j + 1 ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 492,
                                          "end_byte": 493,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 494,
                                          "end_byte": 499,
                                          "text": "j + 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 494,
                                              "end_byte": 495,
                                              "text": "j",
                                              "children": []
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 496,
                                              "end_byte": 497,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 498,
                                              "end_byte": 499,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 500,
                                          "end_byte": 501,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 502,
                              "end_byte": 503,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start_byte": 504,
                          "end_byte": 505,
                          "text": "}",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 506,
              "end_byte": 603,
              "text": "if ( val1 > val2 ) return triangle [ i ] [ j ] + val1 ; else return triangle [ i ] [ j ] + val2 ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 506,
                  "end_byte": 508,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 509,
                  "end_byte": 524,
                  "text": "( val1 > val2 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 509,
                      "end_byte": 510,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 511,
                      "end_byte": 522,
                      "text": "val1 > val2",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 511,
                          "end_byte": 515,
                          "text": "val1",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 516,
                          "end_byte": 517,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 518,
                          "end_byte": 522,
                          "text": "val2",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 523,
                      "end_byte": 524,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 525,
                  "end_byte": 561,
                  "text": "return triangle [ i ] [ j ] + val1 ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 525,
                      "end_byte": 531,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 532,
                      "end_byte": 559,
                      "text": "triangle [ i ] [ j ] + val1",
                      "children": [
                        {
                          "type": "subscript_expression",
                          "start_byte": 532,
                          "end_byte": 552,
                          "text": "triangle [ i ] [ j ]",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 532,
                              "end_byte": 546,
                              "text": "triangle [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 532,
                                  "end_byte": 540,
                                  "text": "triangle",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 541,
                                  "end_byte": 546,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 541,
                                      "end_byte": 542,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 543,
                                      "end_byte": 544,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 545,
                                      "end_byte": 546,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "subscript_argument_list",
                              "start_byte": 547,
                              "end_byte": 552,
                              "text": "[ j ]",
                              "children": [
                                {
                                  "type": "[",
                                  "start_byte": 547,
                                  "end_byte": 548,
                                  "text": "[",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 549,
                                  "end_byte": 550,
                                  "text": "j",
                                  "children": []
                                },
                                {
                                  "type": "]",
                                  "start_byte": 551,
                                  "end_byte": 552,
                                  "text": "]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "+",
                          "start_byte": 553,
                          "end_byte": 554,
                          "text": "+",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 555,
                          "end_byte": 559,
                          "text": "val1",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 560,
                      "end_byte": 561,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 562,
                  "end_byte": 603,
                  "text": "else return triangle [ i ] [ j ] + val2 ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 562,
                      "end_byte": 566,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 567,
                      "end_byte": 603,
                      "text": "return triangle [ i ] [ j ] + val2 ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 567,
                          "end_byte": 573,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 574,
                          "end_byte": 601,
                          "text": "triangle [ i ] [ j ] + val2",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 574,
                              "end_byte": 594,
                              "text": "triangle [ i ] [ j ]",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 574,
                                  "end_byte": 588,
                                  "text": "triangle [ i ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 574,
                                      "end_byte": 582,
                                      "text": "triangle",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 583,
                                      "end_byte": 588,
                                      "text": "[ i ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 583,
                                          "end_byte": 584,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 585,
                                          "end_byte": 586,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 587,
                                          "end_byte": 588,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 589,
                                  "end_byte": 594,
                                  "text": "[ j ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 589,
                                      "end_byte": 590,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 591,
                                      "end_byte": 592,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 593,
                                      "end_byte": 594,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "+",
                              "start_byte": 595,
                              "end_byte": 596,
                              "text": "+",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 597,
                              "end_byte": 601,
                              "text": "val2",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 602,
                          "end_byte": 603,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 604,
              "end_byte": 605,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 606,
      "end_byte": 1132,
      "text": "int main ( ) { int nt , nr ; int i , j , k ; int triangle [ 101 ] [ 101 ] ; int sol [ 1000 ] , sol_i ; sol_i = 0 ; scanf ( \"%d\" , & nt ) ; for ( i = 0 ; i < nt ; i ++ ) { scanf ( \"%d\" , & nr ) ; for ( j = 0 ; j < nr ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d\" , & triangle [ j ] [ k ] ) ; solution [ j ] [ k ] = - 1 ; } } for ( k = 0 ; k <= j ; k ++ ) triangle [ j ] [ k ] = - 1 ; sol [ sol_i ++ ] = findpathsum ( triangle , 0 , 0 ) ; } for ( i = 0 ; i < sol_i ; i ++ ) printf ( \"%d\\n\" , sol [ i ] ) ; return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 606,
          "end_byte": 609,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 610,
          "end_byte": 618,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 610,
              "end_byte": 614,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 615,
              "end_byte": 618,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 615,
                  "end_byte": 616,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 617,
                  "end_byte": 618,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 619,
          "end_byte": 1132,
          "text": "{ int nt , nr ; int i , j , k ; int triangle [ 101 ] [ 101 ] ; int sol [ 1000 ] , sol_i ; sol_i = 0 ; scanf ( \"%d\" , & nt ) ; for ( i = 0 ; i < nt ; i ++ ) { scanf ( \"%d\" , & nr ) ; for ( j = 0 ; j < nr ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d\" , & triangle [ j ] [ k ] ) ; solution [ j ] [ k ] = - 1 ; } } for ( k = 0 ; k <= j ; k ++ ) triangle [ j ] [ k ] = - 1 ; sol [ sol_i ++ ] = findpathsum ( triangle , 0 , 0 ) ; } for ( i = 0 ; i < sol_i ; i ++ ) printf ( \"%d\\n\" , sol [ i ] ) ; return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 619,
              "end_byte": 620,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 621,
              "end_byte": 634,
              "text": "int nt , nr ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 621,
                  "end_byte": 624,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 625,
                  "end_byte": 627,
                  "text": "nt",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 628,
                  "end_byte": 629,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 630,
                  "end_byte": 632,
                  "text": "nr",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 633,
                  "end_byte": 634,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 635,
              "end_byte": 650,
              "text": "int i , j , k ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 635,
                  "end_byte": 638,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 639,
                  "end_byte": 640,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 641,
                  "end_byte": 642,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 643,
                  "end_byte": 644,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 645,
                  "end_byte": 646,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 647,
                  "end_byte": 648,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 649,
                  "end_byte": 650,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 651,
              "end_byte": 681,
              "text": "int triangle [ 101 ] [ 101 ] ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 651,
                  "end_byte": 654,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 655,
                  "end_byte": 679,
                  "text": "triangle [ 101 ] [ 101 ]",
                  "children": [
                    {
                      "type": "array_declarator",
                      "start_byte": 655,
                      "end_byte": 671,
                      "text": "triangle [ 101 ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 655,
                          "end_byte": 663,
                          "text": "triangle",
                          "children": []
                        },
                        {
                          "type": "[",
                          "start_byte": 664,
                          "end_byte": 665,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 666,
                          "end_byte": 669,
                          "text": "101",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 670,
                          "end_byte": 671,
                          "text": "]",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "[",
                      "start_byte": 672,
                      "end_byte": 673,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 674,
                      "end_byte": 677,
                      "text": "101",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 678,
                      "end_byte": 679,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 680,
                  "end_byte": 681,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 682,
              "end_byte": 708,
              "text": "int sol [ 1000 ] , sol_i ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 682,
                  "end_byte": 685,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 686,
                  "end_byte": 698,
                  "text": "sol [ 1000 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 686,
                      "end_byte": 689,
                      "text": "sol",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 690,
                      "end_byte": 691,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 692,
                      "end_byte": 696,
                      "text": "1000",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 697,
                      "end_byte": 698,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 699,
                  "end_byte": 700,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 701,
                  "end_byte": 706,
                  "text": "sol_i",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 707,
                  "end_byte": 708,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 709,
              "end_byte": 720,
              "text": "sol_i = 0 ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 709,
                  "end_byte": 718,
                  "text": "sol_i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 709,
                      "end_byte": 714,
                      "text": "sol_i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 715,
                      "end_byte": 716,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 717,
                      "end_byte": 718,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 719,
                  "end_byte": 720,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 721,
              "end_byte": 744,
              "text": "scanf ( \"%d\" , & nt ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 721,
                  "end_byte": 742,
                  "text": "scanf ( \"%d\" , & nt )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 721,
                      "end_byte": 726,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 727,
                      "end_byte": 742,
                      "text": "( \"%d\" , & nt )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 727,
                          "end_byte": 728,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 729,
                          "end_byte": 733,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 729,
                              "end_byte": 730,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 730,
                              "end_byte": 732,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 732,
                              "end_byte": 733,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 734,
                          "end_byte": 735,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 736,
                          "end_byte": 740,
                          "text": "& nt",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 736,
                              "end_byte": 737,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 738,
                              "end_byte": 740,
                              "text": "nt",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 741,
                          "end_byte": 742,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 743,
                  "end_byte": 744,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 745,
              "end_byte": 1054,
              "text": "for ( i = 0 ; i < nt ; i ++ ) { scanf ( \"%d\" , & nr ) ; for ( j = 0 ; j < nr ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d\" , & triangle [ j ] [ k ] ) ; solution [ j ] [ k ] = - 1 ; } } for ( k = 0 ; k <= j ; k ++ ) triangle [ j ] [ k ] = - 1 ; sol [ sol_i ++ ] = findpathsum ( triangle , 0 , 0 ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 745,
                  "end_byte": 748,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 749,
                  "end_byte": 750,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 751,
                  "end_byte": 756,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 751,
                      "end_byte": 752,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 753,
                      "end_byte": 754,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 755,
                      "end_byte": 756,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 757,
                  "end_byte": 758,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 759,
                  "end_byte": 765,
                  "text": "i < nt",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 759,
                      "end_byte": 760,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 761,
                      "end_byte": 762,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 763,
                      "end_byte": 765,
                      "text": "nt",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 766,
                  "end_byte": 767,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 768,
                  "end_byte": 772,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 768,
                      "end_byte": 769,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 770,
                      "end_byte": 772,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 773,
                  "end_byte": 774,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 775,
                  "end_byte": 1054,
                  "text": "{ scanf ( \"%d\" , & nr ) ; for ( j = 0 ; j < nr ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d\" , & triangle [ j ] [ k ] ) ; solution [ j ] [ k ] = - 1 ; } } for ( k = 0 ; k <= j ; k ++ ) triangle [ j ] [ k ] = - 1 ; sol [ sol_i ++ ] = findpathsum ( triangle , 0 , 0 ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 775,
                      "end_byte": 776,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 777,
                      "end_byte": 800,
                      "text": "scanf ( \"%d\" , & nr ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 777,
                          "end_byte": 798,
                          "text": "scanf ( \"%d\" , & nr )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 777,
                              "end_byte": 782,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 783,
                              "end_byte": 798,
                              "text": "( \"%d\" , & nr )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 783,
                                  "end_byte": 784,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 785,
                                  "end_byte": 789,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 785,
                                      "end_byte": 786,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 786,
                                      "end_byte": 788,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 788,
                                      "end_byte": 789,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 790,
                                  "end_byte": 791,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 792,
                                  "end_byte": 796,
                                  "text": "& nr",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 792,
                                      "end_byte": 793,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 794,
                                      "end_byte": 796,
                                      "text": "nr",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 797,
                                  "end_byte": 798,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 799,
                          "end_byte": 800,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 801,
                      "end_byte": 939,
                      "text": "for ( j = 0 ; j < nr ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d\" , & triangle [ j ] [ k ] ) ; solution [ j ] [ k ] = - 1 ; } }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 801,
                          "end_byte": 804,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 805,
                          "end_byte": 806,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 807,
                          "end_byte": 812,
                          "text": "j = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 807,
                              "end_byte": 808,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 809,
                              "end_byte": 810,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 811,
                              "end_byte": 812,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 813,
                          "end_byte": 814,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 815,
                          "end_byte": 821,
                          "text": "j < nr",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 815,
                              "end_byte": 816,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 817,
                              "end_byte": 818,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 819,
                              "end_byte": 821,
                              "text": "nr",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 822,
                          "end_byte": 823,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 824,
                          "end_byte": 828,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 824,
                              "end_byte": 825,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 826,
                              "end_byte": 828,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 829,
                          "end_byte": 830,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 831,
                          "end_byte": 939,
                          "text": "{ for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d\" , & triangle [ j ] [ k ] ) ; solution [ j ] [ k ] = - 1 ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 831,
                              "end_byte": 832,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 833,
                              "end_byte": 937,
                              "text": "for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d\" , & triangle [ j ] [ k ] ) ; solution [ j ] [ k ] = - 1 ; }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 833,
                                  "end_byte": 836,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 837,
                                  "end_byte": 838,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 839,
                                  "end_byte": 844,
                                  "text": "k = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 839,
                                      "end_byte": 840,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 841,
                                      "end_byte": 842,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 843,
                                      "end_byte": 844,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 845,
                                  "end_byte": 846,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 847,
                                  "end_byte": 853,
                                  "text": "k <= j",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 847,
                                      "end_byte": 848,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "<=",
                                      "start_byte": 849,
                                      "end_byte": 851,
                                      "text": "<=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 852,
                                      "end_byte": 853,
                                      "text": "j",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 854,
                                  "end_byte": 855,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 856,
                                  "end_byte": 860,
                                  "text": "k ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 856,
                                      "end_byte": 857,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 858,
                                      "end_byte": 860,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 861,
                                  "end_byte": 862,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 863,
                                  "end_byte": 937,
                                  "text": "{ scanf ( \"%d\" , & triangle [ j ] [ k ] ) ; solution [ j ] [ k ] = - 1 ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 863,
                                      "end_byte": 864,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 865,
                                      "end_byte": 906,
                                      "text": "scanf ( \"%d\" , & triangle [ j ] [ k ] ) ;",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start_byte": 865,
                                          "end_byte": 904,
                                          "text": "scanf ( \"%d\" , & triangle [ j ] [ k ] )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 865,
                                              "end_byte": 870,
                                              "text": "scanf",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 871,
                                              "end_byte": 904,
                                              "text": "( \"%d\" , & triangle [ j ] [ k ] )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 871,
                                                  "end_byte": 872,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_literal",
                                                  "start_byte": 873,
                                                  "end_byte": 877,
                                                  "text": "\"%d\"",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 873,
                                                      "end_byte": 874,
                                                      "text": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start_byte": 874,
                                                      "end_byte": 876,
                                                      "text": "%d",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 876,
                                                      "end_byte": 877,
                                                      "text": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 878,
                                                  "end_byte": 879,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "pointer_expression",
                                                  "start_byte": 880,
                                                  "end_byte": 902,
                                                  "text": "& triangle [ j ] [ k ]",
                                                  "children": [
                                                    {
                                                      "type": "&",
                                                      "start_byte": 880,
                                                      "end_byte": 881,
                                                      "text": "&",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 882,
                                                      "end_byte": 902,
                                                      "text": "triangle [ j ] [ k ]",
                                                      "children": [
                                                        {
                                                          "type": "subscript_expression",
                                                          "start_byte": 882,
                                                          "end_byte": 896,
                                                          "text": "triangle [ j ]",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 882,
                                                              "end_byte": 890,
                                                              "text": "triangle",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "subscript_argument_list",
                                                              "start_byte": 891,
                                                              "end_byte": 896,
                                                              "text": "[ j ]",
                                                              "children": [
                                                                {
                                                                  "type": "[",
                                                                  "start_byte": 891,
                                                                  "end_byte": 892,
                                                                  "text": "[",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 893,
                                                                  "end_byte": 894,
                                                                  "text": "j",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "]",
                                                                  "start_byte": 895,
                                                                  "end_byte": 896,
                                                                  "text": "]",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 897,
                                                          "end_byte": 902,
                                                          "text": "[ k ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 897,
                                                              "end_byte": 898,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 899,
                                                              "end_byte": 900,
                                                              "text": "k",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 901,
                                                              "end_byte": 902,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 903,
                                                  "end_byte": 904,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 905,
                                          "end_byte": 906,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 907,
                                      "end_byte": 935,
                                      "text": "solution [ j ] [ k ] = - 1 ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 907,
                                          "end_byte": 933,
                                          "text": "solution [ j ] [ k ] = - 1",
                                          "children": [
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 907,
                                              "end_byte": 927,
                                              "text": "solution [ j ] [ k ]",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 907,
                                                  "end_byte": 921,
                                                  "text": "solution [ j ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 907,
                                                      "end_byte": 915,
                                                      "text": "solution",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 916,
                                                      "end_byte": 921,
                                                      "text": "[ j ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 916,
                                                          "end_byte": 917,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 918,
                                                          "end_byte": 919,
                                                          "text": "j",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 920,
                                                          "end_byte": 921,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 922,
                                                  "end_byte": 927,
                                                  "text": "[ k ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 922,
                                                      "end_byte": 923,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 924,
                                                      "end_byte": 925,
                                                      "text": "k",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 926,
                                                      "end_byte": 927,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 928,
                                              "end_byte": 929,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "unary_expression",
                                              "start_byte": 930,
                                              "end_byte": 933,
                                              "text": "- 1",
                                              "children": [
                                                {
                                                  "type": "-",
                                                  "start_byte": 930,
                                                  "end_byte": 931,
                                                  "text": "-",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 932,
                                                  "end_byte": 933,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 934,
                                          "end_byte": 935,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 936,
                                      "end_byte": 937,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 938,
                              "end_byte": 939,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 940,
                      "end_byte": 998,
                      "text": "for ( k = 0 ; k <= j ; k ++ ) triangle [ j ] [ k ] = - 1 ;",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 940,
                          "end_byte": 943,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 944,
                          "end_byte": 945,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 946,
                          "end_byte": 951,
                          "text": "k = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 946,
                              "end_byte": 947,
                              "text": "k",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 948,
                              "end_byte": 949,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 950,
                              "end_byte": 951,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 952,
                          "end_byte": 953,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 954,
                          "end_byte": 960,
                          "text": "k <= j",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 954,
                              "end_byte": 955,
                              "text": "k",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 956,
                              "end_byte": 958,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 959,
                              "end_byte": 960,
                              "text": "j",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 961,
                          "end_byte": 962,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 963,
                          "end_byte": 967,
                          "text": "k ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 963,
                              "end_byte": 964,
                              "text": "k",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 965,
                              "end_byte": 967,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 968,
                          "end_byte": 969,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 970,
                          "end_byte": 998,
                          "text": "triangle [ j ] [ k ] = - 1 ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 970,
                              "end_byte": 996,
                              "text": "triangle [ j ] [ k ] = - 1",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 970,
                                  "end_byte": 990,
                                  "text": "triangle [ j ] [ k ]",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 970,
                                      "end_byte": 984,
                                      "text": "triangle [ j ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 970,
                                          "end_byte": 978,
                                          "text": "triangle",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 979,
                                          "end_byte": 984,
                                          "text": "[ j ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 979,
                                              "end_byte": 980,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 981,
                                              "end_byte": 982,
                                              "text": "j",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 983,
                                              "end_byte": 984,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 985,
                                      "end_byte": 990,
                                      "text": "[ k ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 985,
                                          "end_byte": 986,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 987,
                                          "end_byte": 988,
                                          "text": "k",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 989,
                                          "end_byte": 990,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "=",
                                  "start_byte": 991,
                                  "end_byte": 992,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "unary_expression",
                                  "start_byte": 993,
                                  "end_byte": 996,
                                  "text": "- 1",
                                  "children": [
                                    {
                                      "type": "-",
                                      "start_byte": 993,
                                      "end_byte": 994,
                                      "text": "-",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 995,
                                      "end_byte": 996,
                                      "text": "1",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 997,
                              "end_byte": 998,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 999,
                      "end_byte": 1052,
                      "text": "sol [ sol_i ++ ] = findpathsum ( triangle , 0 , 0 ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 999,
                          "end_byte": 1050,
                          "text": "sol [ sol_i ++ ] = findpathsum ( triangle , 0 , 0 )",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 999,
                              "end_byte": 1015,
                              "text": "sol [ sol_i ++ ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 999,
                                  "end_byte": 1002,
                                  "text": "sol",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 1003,
                                  "end_byte": 1015,
                                  "text": "[ sol_i ++ ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 1003,
                                      "end_byte": 1004,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "update_expression",
                                      "start_byte": 1005,
                                      "end_byte": 1013,
                                      "text": "sol_i ++",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1005,
                                          "end_byte": 1010,
                                          "text": "sol_i",
                                          "children": []
                                        },
                                        {
                                          "type": "++",
                                          "start_byte": 1011,
                                          "end_byte": 1013,
                                          "text": "++",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 1014,
                                      "end_byte": 1015,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 1016,
                              "end_byte": 1017,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 1018,
                              "end_byte": 1050,
                              "text": "findpathsum ( triangle , 0 , 0 )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 1018,
                                  "end_byte": 1029,
                                  "text": "findpathsum",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 1030,
                                  "end_byte": 1050,
                                  "text": "( triangle , 0 , 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 1030,
                                      "end_byte": 1031,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 1032,
                                      "end_byte": 1040,
                                      "text": "triangle",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 1041,
                                      "end_byte": 1042,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 1043,
                                      "end_byte": 1044,
                                      "text": "0",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 1045,
                                      "end_byte": 1046,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 1047,
                                      "end_byte": 1048,
                                      "text": "0",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 1049,
                                      "end_byte": 1050,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1051,
                          "end_byte": 1052,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 1053,
                      "end_byte": 1054,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 1055,
              "end_byte": 1119,
              "text": "for ( i = 0 ; i < sol_i ; i ++ ) printf ( \"%d\\n\" , sol [ i ] ) ;",
              "children": [
                {
                  "type": "for",
                  "start_byte": 1055,
                  "end_byte": 1058,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 1059,
                  "end_byte": 1060,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 1061,
                  "end_byte": 1066,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1061,
                      "end_byte": 1062,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 1063,
                      "end_byte": 1064,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 1065,
                      "end_byte": 1066,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1067,
                  "end_byte": 1068,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 1069,
                  "end_byte": 1078,
                  "text": "i < sol_i",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1069,
                      "end_byte": 1070,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 1071,
                      "end_byte": 1072,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 1073,
                      "end_byte": 1078,
                      "text": "sol_i",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1079,
                  "end_byte": 1080,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 1081,
                  "end_byte": 1085,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1081,
                      "end_byte": 1082,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 1083,
                      "end_byte": 1085,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 1086,
                  "end_byte": 1087,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "expression_statement",
                  "start_byte": 1088,
                  "end_byte": 1119,
                  "text": "printf ( \"%d\\n\" , sol [ i ] ) ;",
                  "children": [
                    {
                      "type": "call_expression",
                      "start_byte": 1088,
                      "end_byte": 1117,
                      "text": "printf ( \"%d\\n\" , sol [ i ] )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 1088,
                          "end_byte": 1094,
                          "text": "printf",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 1095,
                          "end_byte": 1117,
                          "text": "( \"%d\\n\" , sol [ i ] )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 1095,
                              "end_byte": 1096,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "string_literal",
                              "start_byte": 1097,
                              "end_byte": 1103,
                              "text": "\"%d\\n\"",
                              "children": [
                                {
                                  "type": "\"",
                                  "start_byte": 1097,
                                  "end_byte": 1098,
                                  "text": "\"",
                                  "children": []
                                },
                                {
                                  "type": "string_content",
                                  "start_byte": 1098,
                                  "end_byte": 1100,
                                  "text": "%d",
                                  "children": []
                                },
                                {
                                  "type": "escape_sequence",
                                  "start_byte": 1100,
                                  "end_byte": 1102,
                                  "text": "\\n",
                                  "children": []
                                },
                                {
                                  "type": "\"",
                                  "start_byte": 1102,
                                  "end_byte": 1103,
                                  "text": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 1104,
                              "end_byte": 1105,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 1106,
                              "end_byte": 1115,
                              "text": "sol [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 1106,
                                  "end_byte": 1109,
                                  "text": "sol",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 1110,
                                  "end_byte": 1115,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 1110,
                                      "end_byte": 1111,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 1112,
                                      "end_byte": 1113,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 1114,
                                      "end_byte": 1115,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 1116,
                              "end_byte": 1117,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 1118,
                      "end_byte": 1119,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 1120,
              "end_byte": 1130,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 1120,
                  "end_byte": 1126,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 1127,
                  "end_byte": 1128,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 1129,
                  "end_byte": 1130,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 1131,
              "end_byte": 1132,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}