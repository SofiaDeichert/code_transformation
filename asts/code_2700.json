{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 415,
  "text": "long int fastret ( ) { long int ret = 0 ; char ch = getchar ( ) ; while ( ch >= '0' && ch <= '9' ) { ret = 10 * ret + ( ch - '0' ) ; ch = getchar ( ) ; } return ret ; } int main ( ) { long int t , j , min = 99999999 , m , k ; t = fastret ( ) ; while ( t -- ) { min = 99999999 ; k = j = fastret ( ) ; while ( j -- ) { m = fastret ( ) ; if ( m < min ) min = m ; } printf ( \"%ld\\n\" , min * ( k - 1 ) ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 168,
      "text": "long int fastret ( ) { long int ret = 0 ; char ch = getchar ( ) ; while ( ch >= '0' && ch <= '9' ) { ret = 10 * ret + ( ch - '0' ) ; ch = getchar ( ) ; } return ret ; }",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 0,
          "end_byte": 8,
          "text": "long int",
          "children": [
            {
              "type": "long",
              "start_byte": 0,
              "end_byte": 4,
              "text": "long",
              "children": []
            },
            {
              "type": "primitive_type",
              "start_byte": 5,
              "end_byte": 8,
              "text": "int",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 9,
          "end_byte": 20,
          "text": "fastret ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 9,
              "end_byte": 16,
              "text": "fastret",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 17,
              "end_byte": 20,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 17,
                  "end_byte": 18,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 21,
          "end_byte": 168,
          "text": "{ long int ret = 0 ; char ch = getchar ( ) ; while ( ch >= '0' && ch <= '9' ) { ret = 10 * ret + ( ch - '0' ) ; ch = getchar ( ) ; } return ret ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 21,
              "end_byte": 22,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 23,
              "end_byte": 41,
              "text": "long int ret = 0 ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 23,
                  "end_byte": 31,
                  "text": "long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 23,
                      "end_byte": 27,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 28,
                      "end_byte": 31,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "init_declarator",
                  "start_byte": 32,
                  "end_byte": 39,
                  "text": "ret = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 32,
                      "end_byte": 35,
                      "text": "ret",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 36,
                      "end_byte": 37,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 38,
                      "end_byte": 39,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 40,
                  "end_byte": 41,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 42,
              "end_byte": 65,
              "text": "char ch = getchar ( ) ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 42,
                  "end_byte": 46,
                  "text": "char",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 47,
                  "end_byte": 63,
                  "text": "ch = getchar ( )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 47,
                      "end_byte": 49,
                      "text": "ch",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 50,
                      "end_byte": 51,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 52,
                      "end_byte": 63,
                      "text": "getchar ( )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 52,
                          "end_byte": 59,
                          "text": "getchar",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 60,
                          "end_byte": 63,
                          "text": "( )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 60,
                              "end_byte": 61,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 62,
                              "end_byte": 63,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 64,
                  "end_byte": 65,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 66,
              "end_byte": 153,
              "text": "while ( ch >= '0' && ch <= '9' ) { ret = 10 * ret + ( ch - '0' ) ; ch = getchar ( ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 66,
                  "end_byte": 71,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 72,
                  "end_byte": 98,
                  "text": "( ch >= '0' && ch <= '9' )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 72,
                      "end_byte": 73,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 74,
                      "end_byte": 96,
                      "text": "ch >= '0' && ch <= '9'",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 74,
                          "end_byte": 83,
                          "text": "ch >= '0'",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 74,
                              "end_byte": 76,
                              "text": "ch",
                              "children": []
                            },
                            {
                              "type": ">=",
                              "start_byte": 77,
                              "end_byte": 79,
                              "text": ">=",
                              "children": []
                            },
                            {
                              "type": "char_literal",
                              "start_byte": 80,
                              "end_byte": 83,
                              "text": "'0'",
                              "children": [
                                {
                                  "type": "'",
                                  "start_byte": 80,
                                  "end_byte": 81,
                                  "text": "'",
                                  "children": []
                                },
                                {
                                  "type": "character",
                                  "start_byte": 81,
                                  "end_byte": 82,
                                  "text": "0",
                                  "children": []
                                },
                                {
                                  "type": "'",
                                  "start_byte": 82,
                                  "end_byte": 83,
                                  "text": "'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "&&",
                          "start_byte": 84,
                          "end_byte": 86,
                          "text": "&&",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 87,
                          "end_byte": 96,
                          "text": "ch <= '9'",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 87,
                              "end_byte": 89,
                              "text": "ch",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 90,
                              "end_byte": 92,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "char_literal",
                              "start_byte": 93,
                              "end_byte": 96,
                              "text": "'9'",
                              "children": [
                                {
                                  "type": "'",
                                  "start_byte": 93,
                                  "end_byte": 94,
                                  "text": "'",
                                  "children": []
                                },
                                {
                                  "type": "character",
                                  "start_byte": 94,
                                  "end_byte": 95,
                                  "text": "9",
                                  "children": []
                                },
                                {
                                  "type": "'",
                                  "start_byte": 95,
                                  "end_byte": 96,
                                  "text": "'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 97,
                      "end_byte": 98,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 99,
                  "end_byte": 153,
                  "text": "{ ret = 10 * ret + ( ch - '0' ) ; ch = getchar ( ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 99,
                      "end_byte": 100,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 101,
                      "end_byte": 132,
                      "text": "ret = 10 * ret + ( ch - '0' ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 101,
                          "end_byte": 130,
                          "text": "ret = 10 * ret + ( ch - '0' )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 101,
                              "end_byte": 104,
                              "text": "ret",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 105,
                              "end_byte": 106,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 107,
                              "end_byte": 130,
                              "text": "10 * ret + ( ch - '0' )",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 107,
                                  "end_byte": 115,
                                  "text": "10 * ret",
                                  "children": [
                                    {
                                      "type": "number_literal",
                                      "start_byte": 107,
                                      "end_byte": 109,
                                      "text": "10",
                                      "children": []
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 110,
                                      "end_byte": 111,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 112,
                                      "end_byte": 115,
                                      "text": "ret",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "+",
                                  "start_byte": 116,
                                  "end_byte": 117,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 118,
                                  "end_byte": 130,
                                  "text": "( ch - '0' )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 118,
                                      "end_byte": 119,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 120,
                                      "end_byte": 128,
                                      "text": "ch - '0'",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 120,
                                          "end_byte": 122,
                                          "text": "ch",
                                          "children": []
                                        },
                                        {
                                          "type": "-",
                                          "start_byte": 123,
                                          "end_byte": 124,
                                          "text": "-",
                                          "children": []
                                        },
                                        {
                                          "type": "char_literal",
                                          "start_byte": 125,
                                          "end_byte": 128,
                                          "text": "'0'",
                                          "children": [
                                            {
                                              "type": "'",
                                              "start_byte": 125,
                                              "end_byte": 126,
                                              "text": "'",
                                              "children": []
                                            },
                                            {
                                              "type": "character",
                                              "start_byte": 126,
                                              "end_byte": 127,
                                              "text": "0",
                                              "children": []
                                            },
                                            {
                                              "type": "'",
                                              "start_byte": 127,
                                              "end_byte": 128,
                                              "text": "'",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 129,
                                      "end_byte": 130,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 131,
                          "end_byte": 132,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 133,
                      "end_byte": 151,
                      "text": "ch = getchar ( ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 133,
                          "end_byte": 149,
                          "text": "ch = getchar ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 133,
                              "end_byte": 135,
                              "text": "ch",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 136,
                              "end_byte": 137,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 138,
                              "end_byte": 149,
                              "text": "getchar ( )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 138,
                                  "end_byte": 145,
                                  "text": "getchar",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 146,
                                  "end_byte": 149,
                                  "text": "( )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 146,
                                      "end_byte": 147,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 148,
                                      "end_byte": 149,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 150,
                          "end_byte": 151,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 152,
                      "end_byte": 153,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 154,
              "end_byte": 166,
              "text": "return ret ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 154,
                  "end_byte": 160,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 161,
                  "end_byte": 164,
                  "text": "ret",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 165,
                  "end_byte": 166,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 167,
              "end_byte": 168,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 169,
      "end_byte": 415,
      "text": "int main ( ) { long int t , j , min = 99999999 , m , k ; t = fastret ( ) ; while ( t -- ) { min = 99999999 ; k = j = fastret ( ) ; while ( j -- ) { m = fastret ( ) ; if ( m < min ) min = m ; } printf ( \"%ld\\n\" , min * ( k - 1 ) ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 169,
          "end_byte": 172,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 173,
          "end_byte": 181,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 173,
              "end_byte": 177,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 178,
              "end_byte": 181,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 178,
                  "end_byte": 179,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 180,
                  "end_byte": 181,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 182,
          "end_byte": 415,
          "text": "{ long int t , j , min = 99999999 , m , k ; t = fastret ( ) ; while ( t -- ) { min = 99999999 ; k = j = fastret ( ) ; while ( j -- ) { m = fastret ( ) ; if ( m < min ) min = m ; } printf ( \"%ld\\n\" , min * ( k - 1 ) ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 182,
              "end_byte": 183,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 184,
              "end_byte": 225,
              "text": "long int t , j , min = 99999999 , m , k ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 184,
                  "end_byte": 192,
                  "text": "long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 184,
                      "end_byte": 188,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 189,
                      "end_byte": 192,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 193,
                  "end_byte": 194,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 195,
                  "end_byte": 196,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 197,
                  "end_byte": 198,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 199,
                  "end_byte": 200,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 201,
                  "end_byte": 215,
                  "text": "min = 99999999",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 201,
                      "end_byte": 204,
                      "text": "min",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 205,
                      "end_byte": 206,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 207,
                      "end_byte": 215,
                      "text": "99999999",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 216,
                  "end_byte": 217,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 218,
                  "end_byte": 219,
                  "text": "m",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 220,
                  "end_byte": 221,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 222,
                  "end_byte": 223,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 224,
                  "end_byte": 225,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 226,
              "end_byte": 243,
              "text": "t = fastret ( ) ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 226,
                  "end_byte": 241,
                  "text": "t = fastret ( )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 226,
                      "end_byte": 227,
                      "text": "t",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 228,
                      "end_byte": 229,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 230,
                      "end_byte": 241,
                      "text": "fastret ( )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 230,
                          "end_byte": 237,
                          "text": "fastret",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 238,
                          "end_byte": 241,
                          "text": "( )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 238,
                              "end_byte": 239,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 240,
                              "end_byte": 241,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 242,
                  "end_byte": 243,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 244,
              "end_byte": 402,
              "text": "while ( t -- ) { min = 99999999 ; k = j = fastret ( ) ; while ( j -- ) { m = fastret ( ) ; if ( m < min ) min = m ; } printf ( \"%ld\\n\" , min * ( k - 1 ) ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 244,
                  "end_byte": 249,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 250,
                  "end_byte": 258,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 250,
                      "end_byte": 251,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 252,
                      "end_byte": 256,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 252,
                          "end_byte": 253,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 254,
                          "end_byte": 256,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 257,
                      "end_byte": 258,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 259,
                  "end_byte": 402,
                  "text": "{ min = 99999999 ; k = j = fastret ( ) ; while ( j -- ) { m = fastret ( ) ; if ( m < min ) min = m ; } printf ( \"%ld\\n\" , min * ( k - 1 ) ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 259,
                      "end_byte": 260,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 261,
                      "end_byte": 277,
                      "text": "min = 99999999 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 261,
                          "end_byte": 275,
                          "text": "min = 99999999",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 261,
                              "end_byte": 264,
                              "text": "min",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 265,
                              "end_byte": 266,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 267,
                              "end_byte": 275,
                              "text": "99999999",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 276,
                          "end_byte": 277,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 278,
                      "end_byte": 299,
                      "text": "k = j = fastret ( ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 278,
                          "end_byte": 297,
                          "text": "k = j = fastret ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 278,
                              "end_byte": 279,
                              "text": "k",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 280,
                              "end_byte": 281,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "assignment_expression",
                              "start_byte": 282,
                              "end_byte": 297,
                              "text": "j = fastret ( )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 282,
                                  "end_byte": 283,
                                  "text": "j",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 284,
                                  "end_byte": 285,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 286,
                                  "end_byte": 297,
                                  "text": "fastret ( )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 286,
                                      "end_byte": 293,
                                      "text": "fastret",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 294,
                                      "end_byte": 297,
                                      "text": "( )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 294,
                                          "end_byte": 295,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 296,
                                          "end_byte": 297,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 298,
                          "end_byte": 299,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 300,
                      "end_byte": 361,
                      "text": "while ( j -- ) { m = fastret ( ) ; if ( m < min ) min = m ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 300,
                          "end_byte": 305,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 306,
                          "end_byte": 314,
                          "text": "( j -- )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 306,
                              "end_byte": 307,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "update_expression",
                              "start_byte": 308,
                              "end_byte": 312,
                              "text": "j --",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 308,
                                  "end_byte": 309,
                                  "text": "j",
                                  "children": []
                                },
                                {
                                  "type": "--",
                                  "start_byte": 310,
                                  "end_byte": 312,
                                  "text": "--",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 313,
                              "end_byte": 314,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 315,
                          "end_byte": 361,
                          "text": "{ m = fastret ( ) ; if ( m < min ) min = m ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 315,
                              "end_byte": 316,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 317,
                              "end_byte": 334,
                              "text": "m = fastret ( ) ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 317,
                                  "end_byte": 332,
                                  "text": "m = fastret ( )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 317,
                                      "end_byte": 318,
                                      "text": "m",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 319,
                                      "end_byte": 320,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 321,
                                      "end_byte": 332,
                                      "text": "fastret ( )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 321,
                                          "end_byte": 328,
                                          "text": "fastret",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 329,
                                          "end_byte": 332,
                                          "text": "( )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 329,
                                              "end_byte": 330,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 331,
                                              "end_byte": 332,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 333,
                                  "end_byte": 334,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 335,
                              "end_byte": 359,
                              "text": "if ( m < min ) min = m ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 335,
                                  "end_byte": 337,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 338,
                                  "end_byte": 349,
                                  "text": "( m < min )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 338,
                                      "end_byte": 339,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 340,
                                      "end_byte": 347,
                                      "text": "m < min",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 340,
                                          "end_byte": 341,
                                          "text": "m",
                                          "children": []
                                        },
                                        {
                                          "type": "<",
                                          "start_byte": 342,
                                          "end_byte": 343,
                                          "text": "<",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 344,
                                          "end_byte": 347,
                                          "text": "min",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 348,
                                      "end_byte": 349,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 350,
                                  "end_byte": 359,
                                  "text": "min = m ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 350,
                                      "end_byte": 357,
                                      "text": "min = m",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 350,
                                          "end_byte": 353,
                                          "text": "min",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 354,
                                          "end_byte": 355,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 356,
                                          "end_byte": 357,
                                          "text": "m",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 358,
                                      "end_byte": 359,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 360,
                              "end_byte": 361,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 362,
                      "end_byte": 400,
                      "text": "printf ( \"%ld\\n\" , min * ( k - 1 ) ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 362,
                          "end_byte": 398,
                          "text": "printf ( \"%ld\\n\" , min * ( k - 1 ) )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 362,
                              "end_byte": 368,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 369,
                              "end_byte": 398,
                              "text": "( \"%ld\\n\" , min * ( k - 1 ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 369,
                                  "end_byte": 370,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 371,
                                  "end_byte": 378,
                                  "text": "\"%ld\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 371,
                                      "end_byte": 372,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 372,
                                      "end_byte": 375,
                                      "text": "%ld",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 375,
                                      "end_byte": 377,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 377,
                                      "end_byte": 378,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 379,
                                  "end_byte": 380,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 381,
                                  "end_byte": 396,
                                  "text": "min * ( k - 1 )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 381,
                                      "end_byte": 384,
                                      "text": "min",
                                      "children": []
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 385,
                                      "end_byte": 386,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "parenthesized_expression",
                                      "start_byte": 387,
                                      "end_byte": 396,
                                      "text": "( k - 1 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 387,
                                          "end_byte": 388,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 389,
                                          "end_byte": 394,
                                          "text": "k - 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 389,
                                              "end_byte": 390,
                                              "text": "k",
                                              "children": []
                                            },
                                            {
                                              "type": "-",
                                              "start_byte": 391,
                                              "end_byte": 392,
                                              "text": "-",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 393,
                                              "end_byte": 394,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 395,
                                          "end_byte": 396,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 397,
                                  "end_byte": 398,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 399,
                          "end_byte": 400,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 401,
                      "end_byte": 402,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 403,
              "end_byte": 413,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 403,
                  "end_byte": 409,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 410,
                  "end_byte": 411,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 412,
                  "end_byte": 413,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 414,
              "end_byte": 415,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}