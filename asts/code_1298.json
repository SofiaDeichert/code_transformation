{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 440,
  "text": "int main ( ) { int t ; scanf ( \"%d\" , & t ) ; int i , k ; long long int n1 , n2 , small , big , lcm , gcd , temp = 1 ; for ( k = 1 ; k <= t ; k ++ ) { temp = 1 ; scanf ( \"%lld %lld\" , & n1 , & n2 ) ; if ( n1 > n2 ) { small = n2 ; big = n1 ; } else { small = n1 ; big = n2 ; } while ( temp > 0 ) { temp = big % small ; big = small ; small = temp ; } gcd = big ; lcm = ( n1 * n2 ) / gcd ; printf ( \"%lld %lld\\n\" , gcd , lcm ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 440,
      "text": "int main ( ) { int t ; scanf ( \"%d\" , & t ) ; int i , k ; long long int n1 , n2 , small , big , lcm , gcd , temp = 1 ; for ( k = 1 ; k <= t ; k ++ ) { temp = 1 ; scanf ( \"%lld %lld\" , & n1 , & n2 ) ; if ( n1 > n2 ) { small = n2 ; big = n1 ; } else { small = n1 ; big = n2 ; } while ( temp > 0 ) { temp = big % small ; big = small ; small = temp ; } gcd = big ; lcm = ( n1 * n2 ) / gcd ; printf ( \"%lld %lld\\n\" , gcd , lcm ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 440,
          "text": "{ int t ; scanf ( \"%d\" , & t ) ; int i , k ; long long int n1 , n2 , small , big , lcm , gcd , temp = 1 ; for ( k = 1 ; k <= t ; k ++ ) { temp = 1 ; scanf ( \"%lld %lld\" , & n1 , & n2 ) ; if ( n1 > n2 ) { small = n2 ; big = n1 ; } else { small = n1 ; big = n2 ; } while ( temp > 0 ) { temp = big % small ; big = small ; small = temp ; } gcd = big ; lcm = ( n1 * n2 ) / gcd ; printf ( \"%lld %lld\\n\" , gcd , lcm ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 22,
              "text": "int t ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 23,
              "end_byte": 45,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 23,
                  "end_byte": 43,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 23,
                      "end_byte": 28,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 29,
                      "end_byte": 43,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 29,
                          "end_byte": 30,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 31,
                          "end_byte": 35,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 31,
                              "end_byte": 32,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 32,
                              "end_byte": 34,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 34,
                              "end_byte": 35,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 36,
                          "end_byte": 37,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 38,
                          "end_byte": 41,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 38,
                              "end_byte": 39,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 40,
                              "end_byte": 41,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 42,
                          "end_byte": 43,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 44,
                  "end_byte": 45,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 46,
              "end_byte": 57,
              "text": "int i , k ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 46,
                  "end_byte": 49,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 50,
                  "end_byte": 51,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 52,
                  "end_byte": 53,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 54,
                  "end_byte": 55,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 56,
                  "end_byte": 57,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 58,
              "end_byte": 118,
              "text": "long long int n1 , n2 , small , big , lcm , gcd , temp = 1 ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 58,
                  "end_byte": 71,
                  "text": "long long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 58,
                      "end_byte": 62,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "long",
                      "start_byte": 63,
                      "end_byte": 67,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 68,
                      "end_byte": 71,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 72,
                  "end_byte": 74,
                  "text": "n1",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 75,
                  "end_byte": 76,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 77,
                  "end_byte": 79,
                  "text": "n2",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 80,
                  "end_byte": 81,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 82,
                  "end_byte": 87,
                  "text": "small",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 88,
                  "end_byte": 89,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 90,
                  "end_byte": 93,
                  "text": "big",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 94,
                  "end_byte": 95,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 96,
                  "end_byte": 99,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 100,
                  "end_byte": 101,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 102,
                  "end_byte": 105,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 106,
                  "end_byte": 107,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 108,
                  "end_byte": 116,
                  "text": "temp = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 108,
                      "end_byte": 112,
                      "text": "temp",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 113,
                      "end_byte": 114,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 115,
                      "end_byte": 116,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 117,
                  "end_byte": 118,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 119,
              "end_byte": 427,
              "text": "for ( k = 1 ; k <= t ; k ++ ) { temp = 1 ; scanf ( \"%lld %lld\" , & n1 , & n2 ) ; if ( n1 > n2 ) { small = n2 ; big = n1 ; } else { small = n1 ; big = n2 ; } while ( temp > 0 ) { temp = big % small ; big = small ; small = temp ; } gcd = big ; lcm = ( n1 * n2 ) / gcd ; printf ( \"%lld %lld\\n\" , gcd , lcm ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 119,
                  "end_byte": 122,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 123,
                  "end_byte": 124,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 125,
                  "end_byte": 130,
                  "text": "k = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 125,
                      "end_byte": 126,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 127,
                      "end_byte": 128,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 129,
                      "end_byte": 130,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 131,
                  "end_byte": 132,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 133,
                  "end_byte": 139,
                  "text": "k <= t",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 133,
                      "end_byte": 134,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "<=",
                      "start_byte": 135,
                      "end_byte": 137,
                      "text": "<=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 138,
                      "end_byte": 139,
                      "text": "t",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 140,
                  "end_byte": 141,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 142,
                  "end_byte": 146,
                  "text": "k ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 142,
                      "end_byte": 143,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 144,
                      "end_byte": 146,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 147,
                  "end_byte": 148,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 149,
                  "end_byte": 427,
                  "text": "{ temp = 1 ; scanf ( \"%lld %lld\" , & n1 , & n2 ) ; if ( n1 > n2 ) { small = n2 ; big = n1 ; } else { small = n1 ; big = n2 ; } while ( temp > 0 ) { temp = big % small ; big = small ; small = temp ; } gcd = big ; lcm = ( n1 * n2 ) / gcd ; printf ( \"%lld %lld\\n\" , gcd , lcm ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 149,
                      "end_byte": 150,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 151,
                      "end_byte": 161,
                      "text": "temp = 1 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 151,
                          "end_byte": 159,
                          "text": "temp = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 151,
                              "end_byte": 155,
                              "text": "temp",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 156,
                              "end_byte": 157,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 158,
                              "end_byte": 159,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 160,
                          "end_byte": 161,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 162,
                      "end_byte": 199,
                      "text": "scanf ( \"%lld %lld\" , & n1 , & n2 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 162,
                          "end_byte": 197,
                          "text": "scanf ( \"%lld %lld\" , & n1 , & n2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 162,
                              "end_byte": 167,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 168,
                              "end_byte": 197,
                              "text": "( \"%lld %lld\" , & n1 , & n2 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 168,
                                  "end_byte": 169,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 170,
                                  "end_byte": 181,
                                  "text": "\"%lld %lld\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 170,
                                      "end_byte": 171,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 171,
                                      "end_byte": 180,
                                      "text": "%lld %lld",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 180,
                                      "end_byte": 181,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 182,
                                  "end_byte": 183,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 184,
                                  "end_byte": 188,
                                  "text": "& n1",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 184,
                                      "end_byte": 185,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 186,
                                      "end_byte": 188,
                                      "text": "n1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 189,
                                  "end_byte": 190,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 191,
                                  "end_byte": 195,
                                  "text": "& n2",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 191,
                                      "end_byte": 192,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 193,
                                      "end_byte": 195,
                                      "text": "n2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 196,
                                  "end_byte": 197,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 198,
                          "end_byte": 199,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 200,
                      "end_byte": 275,
                      "text": "if ( n1 > n2 ) { small = n2 ; big = n1 ; } else { small = n1 ; big = n2 ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 200,
                          "end_byte": 202,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 203,
                          "end_byte": 214,
                          "text": "( n1 > n2 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 203,
                              "end_byte": 204,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 205,
                              "end_byte": 212,
                              "text": "n1 > n2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 205,
                                  "end_byte": 207,
                                  "text": "n1",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 208,
                                  "end_byte": 209,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 210,
                                  "end_byte": 212,
                                  "text": "n2",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 213,
                              "end_byte": 214,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 215,
                          "end_byte": 242,
                          "text": "{ small = n2 ; big = n1 ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 215,
                              "end_byte": 216,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 217,
                              "end_byte": 229,
                              "text": "small = n2 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 217,
                                  "end_byte": 227,
                                  "text": "small = n2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 217,
                                      "end_byte": 222,
                                      "text": "small",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 223,
                                      "end_byte": 224,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 225,
                                      "end_byte": 227,
                                      "text": "n2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 228,
                                  "end_byte": 229,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 230,
                              "end_byte": 240,
                              "text": "big = n1 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 230,
                                  "end_byte": 238,
                                  "text": "big = n1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 230,
                                      "end_byte": 233,
                                      "text": "big",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 234,
                                      "end_byte": 235,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 236,
                                      "end_byte": 238,
                                      "text": "n1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 239,
                                  "end_byte": 240,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 241,
                              "end_byte": 242,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 243,
                          "end_byte": 275,
                          "text": "else { small = n1 ; big = n2 ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 243,
                              "end_byte": 247,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 248,
                              "end_byte": 275,
                              "text": "{ small = n1 ; big = n2 ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 248,
                                  "end_byte": 249,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 250,
                                  "end_byte": 262,
                                  "text": "small = n1 ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 250,
                                      "end_byte": 260,
                                      "text": "small = n1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 250,
                                          "end_byte": 255,
                                          "text": "small",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 256,
                                          "end_byte": 257,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 258,
                                          "end_byte": 260,
                                          "text": "n1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 261,
                                      "end_byte": 262,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 263,
                                  "end_byte": 273,
                                  "text": "big = n2 ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 263,
                                      "end_byte": 271,
                                      "text": "big = n2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 263,
                                          "end_byte": 266,
                                          "text": "big",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 267,
                                          "end_byte": 268,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 269,
                                          "end_byte": 271,
                                          "text": "n2",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 272,
                                      "end_byte": 273,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 274,
                                  "end_byte": 275,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 276,
                      "end_byte": 348,
                      "text": "while ( temp > 0 ) { temp = big % small ; big = small ; small = temp ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 276,
                          "end_byte": 281,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 282,
                          "end_byte": 294,
                          "text": "( temp > 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 282,
                              "end_byte": 283,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 284,
                              "end_byte": 292,
                              "text": "temp > 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 284,
                                  "end_byte": 288,
                                  "text": "temp",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 289,
                                  "end_byte": 290,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 291,
                                  "end_byte": 292,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 293,
                              "end_byte": 294,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 295,
                          "end_byte": 348,
                          "text": "{ temp = big % small ; big = small ; small = temp ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 295,
                              "end_byte": 296,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 297,
                              "end_byte": 317,
                              "text": "temp = big % small ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 297,
                                  "end_byte": 315,
                                  "text": "temp = big % small",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 297,
                                      "end_byte": 301,
                                      "text": "temp",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 302,
                                      "end_byte": 303,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 304,
                                      "end_byte": 315,
                                      "text": "big % small",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 304,
                                          "end_byte": 307,
                                          "text": "big",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 308,
                                          "end_byte": 309,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 310,
                                          "end_byte": 315,
                                          "text": "small",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 316,
                                  "end_byte": 317,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 318,
                              "end_byte": 331,
                              "text": "big = small ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 318,
                                  "end_byte": 329,
                                  "text": "big = small",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 318,
                                      "end_byte": 321,
                                      "text": "big",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 322,
                                      "end_byte": 323,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 324,
                                      "end_byte": 329,
                                      "text": "small",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 330,
                                  "end_byte": 331,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 332,
                              "end_byte": 346,
                              "text": "small = temp ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 332,
                                  "end_byte": 344,
                                  "text": "small = temp",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 332,
                                      "end_byte": 337,
                                      "text": "small",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 338,
                                      "end_byte": 339,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 340,
                                      "end_byte": 344,
                                      "text": "temp",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 345,
                                  "end_byte": 346,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 347,
                              "end_byte": 348,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 349,
                      "end_byte": 360,
                      "text": "gcd = big ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 349,
                          "end_byte": 358,
                          "text": "gcd = big",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 349,
                              "end_byte": 352,
                              "text": "gcd",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 353,
                              "end_byte": 354,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 355,
                              "end_byte": 358,
                              "text": "big",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 359,
                          "end_byte": 360,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 361,
                      "end_byte": 386,
                      "text": "lcm = ( n1 * n2 ) / gcd ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 361,
                          "end_byte": 384,
                          "text": "lcm = ( n1 * n2 ) / gcd",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 361,
                              "end_byte": 364,
                              "text": "lcm",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 365,
                              "end_byte": 366,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 367,
                              "end_byte": 384,
                              "text": "( n1 * n2 ) / gcd",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 367,
                                  "end_byte": 378,
                                  "text": "( n1 * n2 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 367,
                                      "end_byte": 368,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 369,
                                      "end_byte": 376,
                                      "text": "n1 * n2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 369,
                                          "end_byte": 371,
                                          "text": "n1",
                                          "children": []
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 372,
                                          "end_byte": 373,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 374,
                                          "end_byte": 376,
                                          "text": "n2",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 377,
                                      "end_byte": 378,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 379,
                                  "end_byte": 380,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 381,
                                  "end_byte": 384,
                                  "text": "gcd",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 385,
                          "end_byte": 386,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 387,
                      "end_byte": 425,
                      "text": "printf ( \"%lld %lld\\n\" , gcd , lcm ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 387,
                          "end_byte": 423,
                          "text": "printf ( \"%lld %lld\\n\" , gcd , lcm )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 387,
                              "end_byte": 393,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 394,
                              "end_byte": 423,
                              "text": "( \"%lld %lld\\n\" , gcd , lcm )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 394,
                                  "end_byte": 395,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 396,
                                  "end_byte": 409,
                                  "text": "\"%lld %lld\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 396,
                                      "end_byte": 397,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 397,
                                      "end_byte": 406,
                                      "text": "%lld %lld",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 406,
                                      "end_byte": 408,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 408,
                                      "end_byte": 409,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 410,
                                  "end_byte": 411,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 412,
                                  "end_byte": 415,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 416,
                                  "end_byte": 417,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 418,
                                  "end_byte": 421,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 422,
                                  "end_byte": 423,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 424,
                          "end_byte": 425,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 426,
                      "end_byte": 427,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 428,
              "end_byte": 438,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 428,
                  "end_byte": 434,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 435,
                  "end_byte": 436,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 437,
                  "end_byte": 438,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 439,
              "end_byte": 440,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}