int a [ 100 ] [ 100 ] ; static int memsum [ 100 ] [ 100 ] ; int max ( int , int ) ; int sum ( int , int , int ) ; int main ( ) { int i , j , t , n ; scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & n ) ; for ( i = 0 ; i <= n - 1 ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { memsum [ i ] [ j ] = - 1 ; scanf ( "%d" , & a [ i ] [ j ] ) ; } } printf ( "%d\n" , sum ( 0 , 0 , n ) ) ; } return 0 ; } int max ( int x , int y ) { int max = 0 ; if ( x > y ) max = x ; else max = y ; return max ; } int sum ( int r , int c , int num ) { if ( r < num ) { if ( memsum [ r ] [ c ] == - 1 ) { memsum [ r ] [ c ] = a [ r ] [ c ] + max ( sum ( r + 1 , c , num ) , sum ( r + 1 , c + 1 , num ) ) ; } } return memsum [ r ] [ c ] ; }