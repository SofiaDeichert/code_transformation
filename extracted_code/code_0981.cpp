int arr [ 5500 ] ; int a2 [ 5500 ] ; int max ( int a , int b ) { if ( a > b ) return a ; else return b ; } int sums ( int sum , int i , int rows ) { int k , row , ch1 , ch2 ; for ( k = 0 ; k <= rows ; k ++ ) { int temp = k * ( k + 1 ) / 2 ; if ( i == 2 ) { row = 2 ; break ; } if ( i < temp ) { row = k ; break ; } if ( i == temp ) { row = k + 1 ; break ; } } ch1 = i + row ; ch2 = i + row + 1 ; if ( arr [ ch1 ] != - 1 ) { if ( a2 [ i ] == - 1 ) { a2 [ i ] = max ( sums ( sum + arr [ ch1 ] , ch1 , rows ) , sums ( sum + arr [ ch2 ] , ch2 , rows ) ) ; } return a2 [ i ] ; } else return sum ; } int main ( ) { int num_cases , i ; scanf ( "%d" , & num_cases ) ; for ( i = 0 ; i < num_cases ; i ++ ) { int iter , j , elements , l ; scanf ( "%d" , & iter ) ; for ( j = 0 ; j < 4950 ; j ++ ) { arr [ j ] = - 1 ; a2 [ j ] = - 1 ; } elements = iter * ( iter + 1 ) / 2 ; for ( j = 0 ; j < elements ; j ++ ) { scanf ( "%d" , & arr [ j ] ) ; } j = sums ( arr [ 0 ] , 0 , iter ) ; printf ( "%d\n" , j ) ; } }