{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 323,
  "text": "int main ( ) { int test ; long int a , b , c , d , hcf ; printf ( \"enter number of test cases\\n\" ) ; scanf ( \"%d\" , & test ) ; while ( test -- ) { scanf ( \"%ld%ld\" , & a , & b ) ; c = a ; d = b ; while ( a != b ) { if ( a < b ) { b = b - a ; } else a = a - b ; } printf ( \"%ld  %ld\\n\" , a , ( c * d ) / a ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 323,
      "text": "int main ( ) { int test ; long int a , b , c , d , hcf ; printf ( \"enter number of test cases\\n\" ) ; scanf ( \"%d\" , & test ) ; while ( test -- ) { scanf ( \"%ld%ld\" , & a , & b ) ; c = a ; d = b ; while ( a != b ) { if ( a < b ) { b = b - a ; } else a = a - b ; } printf ( \"%ld  %ld\\n\" , a , ( c * d ) / a ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 323,
          "text": "{ int test ; long int a , b , c , d , hcf ; printf ( \"enter number of test cases\\n\" ) ; scanf ( \"%d\" , & test ) ; while ( test -- ) { scanf ( \"%ld%ld\" , & a , & b ) ; c = a ; d = b ; while ( a != b ) { if ( a < b ) { b = b - a ; } else a = a - b ; } printf ( \"%ld  %ld\\n\" , a , ( c * d ) / a ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 25,
              "text": "int test ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 23,
                  "text": "test",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 24,
                  "end_byte": 25,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 26,
              "end_byte": 56,
              "text": "long int a , b , c , d , hcf ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 26,
                  "end_byte": 34,
                  "text": "long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 26,
                      "end_byte": 30,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 31,
                      "end_byte": 34,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 35,
                  "end_byte": 36,
                  "text": "a",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 37,
                  "end_byte": 38,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 39,
                  "end_byte": 40,
                  "text": "b",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 41,
                  "end_byte": 42,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 43,
                  "end_byte": 44,
                  "text": "c",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 45,
                  "end_byte": 46,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 47,
                  "end_byte": 48,
                  "text": "d",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 49,
                  "end_byte": 50,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 51,
                  "end_byte": 54,
                  "text": "hcf",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 55,
                  "end_byte": 56,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 57,
              "end_byte": 100,
              "text": "printf ( \"enter number of test cases\\n\" ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 57,
                  "end_byte": 98,
                  "text": "printf ( \"enter number of test cases\\n\" )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 57,
                      "end_byte": 63,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 64,
                      "end_byte": 98,
                      "text": "( \"enter number of test cases\\n\" )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 64,
                          "end_byte": 65,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 66,
                          "end_byte": 96,
                          "text": "\"enter number of test cases\\n\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 66,
                              "end_byte": 67,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 67,
                              "end_byte": 93,
                              "text": "enter number of test cases",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 93,
                              "end_byte": 95,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 95,
                              "end_byte": 96,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 97,
                          "end_byte": 98,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 99,
                  "end_byte": 100,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 101,
              "end_byte": 126,
              "text": "scanf ( \"%d\" , & test ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 101,
                  "end_byte": 124,
                  "text": "scanf ( \"%d\" , & test )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 101,
                      "end_byte": 106,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 107,
                      "end_byte": 124,
                      "text": "( \"%d\" , & test )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 107,
                          "end_byte": 108,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 109,
                          "end_byte": 113,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 109,
                              "end_byte": 110,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 110,
                              "end_byte": 112,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 112,
                              "end_byte": 113,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 114,
                          "end_byte": 115,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 116,
                          "end_byte": 122,
                          "text": "& test",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 116,
                              "end_byte": 117,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 118,
                              "end_byte": 122,
                              "text": "test",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 123,
                          "end_byte": 124,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 125,
                  "end_byte": 126,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 127,
              "end_byte": 310,
              "text": "while ( test -- ) { scanf ( \"%ld%ld\" , & a , & b ) ; c = a ; d = b ; while ( a != b ) { if ( a < b ) { b = b - a ; } else a = a - b ; } printf ( \"%ld  %ld\\n\" , a , ( c * d ) / a ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 127,
                  "end_byte": 132,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 133,
                  "end_byte": 144,
                  "text": "( test -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 133,
                      "end_byte": 134,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 135,
                      "end_byte": 142,
                      "text": "test --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 135,
                          "end_byte": 139,
                          "text": "test",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 140,
                          "end_byte": 142,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 143,
                      "end_byte": 144,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 145,
                  "end_byte": 310,
                  "text": "{ scanf ( \"%ld%ld\" , & a , & b ) ; c = a ; d = b ; while ( a != b ) { if ( a < b ) { b = b - a ; } else a = a - b ; } printf ( \"%ld  %ld\\n\" , a , ( c * d ) / a ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 145,
                      "end_byte": 146,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 147,
                      "end_byte": 179,
                      "text": "scanf ( \"%ld%ld\" , & a , & b ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 147,
                          "end_byte": 177,
                          "text": "scanf ( \"%ld%ld\" , & a , & b )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 147,
                              "end_byte": 152,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 153,
                              "end_byte": 177,
                              "text": "( \"%ld%ld\" , & a , & b )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 153,
                                  "end_byte": 154,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 155,
                                  "end_byte": 163,
                                  "text": "\"%ld%ld\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 155,
                                      "end_byte": 156,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 156,
                                      "end_byte": 162,
                                      "text": "%ld%ld",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 162,
                                      "end_byte": 163,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 164,
                                  "end_byte": 165,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 166,
                                  "end_byte": 169,
                                  "text": "& a",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 166,
                                      "end_byte": 167,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 168,
                                      "end_byte": 169,
                                      "text": "a",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 170,
                                  "end_byte": 171,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 172,
                                  "end_byte": 175,
                                  "text": "& b",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 172,
                                      "end_byte": 173,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 174,
                                      "end_byte": 175,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 176,
                                  "end_byte": 177,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 178,
                          "end_byte": 179,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 180,
                      "end_byte": 187,
                      "text": "c = a ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 180,
                          "end_byte": 185,
                          "text": "c = a",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 180,
                              "end_byte": 181,
                              "text": "c",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 182,
                              "end_byte": 183,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 184,
                              "end_byte": 185,
                              "text": "a",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 186,
                          "end_byte": 187,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 188,
                      "end_byte": 195,
                      "text": "d = b ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 188,
                          "end_byte": 193,
                          "text": "d = b",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 188,
                              "end_byte": 189,
                              "text": "d",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 190,
                              "end_byte": 191,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 192,
                              "end_byte": 193,
                              "text": "b",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 194,
                          "end_byte": 195,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 196,
                      "end_byte": 262,
                      "text": "while ( a != b ) { if ( a < b ) { b = b - a ; } else a = a - b ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 196,
                          "end_byte": 201,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 202,
                          "end_byte": 212,
                          "text": "( a != b )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 202,
                              "end_byte": 203,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 204,
                              "end_byte": 210,
                              "text": "a != b",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 204,
                                  "end_byte": 205,
                                  "text": "a",
                                  "children": []
                                },
                                {
                                  "type": "!=",
                                  "start_byte": 206,
                                  "end_byte": 208,
                                  "text": "!=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 209,
                                  "end_byte": 210,
                                  "text": "b",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 211,
                              "end_byte": 212,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 213,
                          "end_byte": 262,
                          "text": "{ if ( a < b ) { b = b - a ; } else a = a - b ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 213,
                              "end_byte": 214,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 215,
                              "end_byte": 260,
                              "text": "if ( a < b ) { b = b - a ; } else a = a - b ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 215,
                                  "end_byte": 217,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 218,
                                  "end_byte": 227,
                                  "text": "( a < b )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 218,
                                      "end_byte": 219,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 220,
                                      "end_byte": 225,
                                      "text": "a < b",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 220,
                                          "end_byte": 221,
                                          "text": "a",
                                          "children": []
                                        },
                                        {
                                          "type": "<",
                                          "start_byte": 222,
                                          "end_byte": 223,
                                          "text": "<",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 224,
                                          "end_byte": 225,
                                          "text": "b",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 226,
                                      "end_byte": 227,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 228,
                                  "end_byte": 243,
                                  "text": "{ b = b - a ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 228,
                                      "end_byte": 229,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 230,
                                      "end_byte": 241,
                                      "text": "b = b - a ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 230,
                                          "end_byte": 239,
                                          "text": "b = b - a",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 230,
                                              "end_byte": 231,
                                              "text": "b",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 232,
                                              "end_byte": 233,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 234,
                                              "end_byte": 239,
                                              "text": "b - a",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 234,
                                                  "end_byte": 235,
                                                  "text": "b",
                                                  "children": []
                                                },
                                                {
                                                  "type": "-",
                                                  "start_byte": 236,
                                                  "end_byte": 237,
                                                  "text": "-",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 238,
                                                  "end_byte": 239,
                                                  "text": "a",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 240,
                                          "end_byte": 241,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 242,
                                      "end_byte": 243,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start_byte": 244,
                                  "end_byte": 260,
                                  "text": "else a = a - b ;",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start_byte": 244,
                                      "end_byte": 248,
                                      "text": "else",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 249,
                                      "end_byte": 260,
                                      "text": "a = a - b ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 249,
                                          "end_byte": 258,
                                          "text": "a = a - b",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 249,
                                              "end_byte": 250,
                                              "text": "a",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 251,
                                              "end_byte": 252,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 253,
                                              "end_byte": 258,
                                              "text": "a - b",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 253,
                                                  "end_byte": 254,
                                                  "text": "a",
                                                  "children": []
                                                },
                                                {
                                                  "type": "-",
                                                  "start_byte": 255,
                                                  "end_byte": 256,
                                                  "text": "-",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 257,
                                                  "end_byte": 258,
                                                  "text": "b",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 259,
                                          "end_byte": 260,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 261,
                              "end_byte": 262,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 263,
                      "end_byte": 308,
                      "text": "printf ( \"%ld  %ld\\n\" , a , ( c * d ) / a ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 263,
                          "end_byte": 306,
                          "text": "printf ( \"%ld  %ld\\n\" , a , ( c * d ) / a )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 263,
                              "end_byte": 269,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 270,
                              "end_byte": 306,
                              "text": "( \"%ld  %ld\\n\" , a , ( c * d ) / a )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 270,
                                  "end_byte": 271,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 272,
                                  "end_byte": 284,
                                  "text": "\"%ld  %ld\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 272,
                                      "end_byte": 273,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 273,
                                      "end_byte": 281,
                                      "text": "%ld  %ld",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 281,
                                      "end_byte": 283,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 283,
                                      "end_byte": 284,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 285,
                                  "end_byte": 286,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 287,
                                  "end_byte": 288,
                                  "text": "a",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 289,
                                  "end_byte": 290,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 291,
                                  "end_byte": 304,
                                  "text": "( c * d ) / a",
                                  "children": [
                                    {
                                      "type": "parenthesized_expression",
                                      "start_byte": 291,
                                      "end_byte": 300,
                                      "text": "( c * d )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 291,
                                          "end_byte": 292,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 293,
                                          "end_byte": 298,
                                          "text": "c * d",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 293,
                                              "end_byte": 294,
                                              "text": "c",
                                              "children": []
                                            },
                                            {
                                              "type": "*",
                                              "start_byte": 295,
                                              "end_byte": 296,
                                              "text": "*",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 297,
                                              "end_byte": 298,
                                              "text": "d",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 299,
                                          "end_byte": 300,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "/",
                                      "start_byte": 301,
                                      "end_byte": 302,
                                      "text": "/",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 303,
                                      "end_byte": 304,
                                      "text": "a",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 305,
                                  "end_byte": 306,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 307,
                          "end_byte": 308,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 309,
                      "end_byte": 310,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 311,
              "end_byte": 321,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 311,
                  "end_byte": 317,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 318,
                  "end_byte": 319,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 320,
                  "end_byte": 321,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 322,
              "end_byte": 323,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}