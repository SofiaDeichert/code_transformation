{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 357,
  "text": "int main ( ) { int num1 , num2 , temp1 , temp2 , t , l ; float lcm ; int n ; scanf ( \"%d\" , & n ) ; while ( n -- ) { scanf ( \"%d %d\" , & num1 , & num2 ) ; temp1 = num1 ; temp2 = num2 ; while ( num1 != num2 ) { if ( num1 > num2 ) num1 = num1 - num2 ; else num2 = num2 - num1 ; } l = ( temp1 * temp2 ) / num1 ; printf ( \"%d %d\\n\" , num1 , l ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 357,
      "text": "int main ( ) { int num1 , num2 , temp1 , temp2 , t , l ; float lcm ; int n ; scanf ( \"%d\" , & n ) ; while ( n -- ) { scanf ( \"%d %d\" , & num1 , & num2 ) ; temp1 = num1 ; temp2 = num2 ; while ( num1 != num2 ) { if ( num1 > num2 ) num1 = num1 - num2 ; else num2 = num2 - num1 ; } l = ( temp1 * temp2 ) / num1 ; printf ( \"%d %d\\n\" , num1 , l ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 357,
          "text": "{ int num1 , num2 , temp1 , temp2 , t , l ; float lcm ; int n ; scanf ( \"%d\" , & n ) ; while ( n -- ) { scanf ( \"%d %d\" , & num1 , & num2 ) ; temp1 = num1 ; temp2 = num2 ; while ( num1 != num2 ) { if ( num1 > num2 ) num1 = num1 - num2 ; else num2 = num2 - num1 ; } l = ( temp1 * temp2 ) / num1 ; printf ( \"%d %d\\n\" , num1 , l ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 56,
              "text": "int num1 , num2 , temp1 , temp2 , t , l ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 23,
                  "text": "num1",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 24,
                  "end_byte": 25,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 26,
                  "end_byte": 30,
                  "text": "num2",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 31,
                  "end_byte": 32,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 33,
                  "end_byte": 38,
                  "text": "temp1",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 39,
                  "end_byte": 40,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 41,
                  "end_byte": 46,
                  "text": "temp2",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 47,
                  "end_byte": 48,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 49,
                  "end_byte": 50,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 51,
                  "end_byte": 52,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 53,
                  "end_byte": 54,
                  "text": "l",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 55,
                  "end_byte": 56,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 57,
              "end_byte": 68,
              "text": "float lcm ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 57,
                  "end_byte": 62,
                  "text": "float",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 63,
                  "end_byte": 66,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 67,
                  "end_byte": 68,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 69,
              "end_byte": 76,
              "text": "int n ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 69,
                  "end_byte": 72,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 73,
                  "end_byte": 74,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 75,
                  "end_byte": 76,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 77,
              "end_byte": 99,
              "text": "scanf ( \"%d\" , & n ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 77,
                  "end_byte": 97,
                  "text": "scanf ( \"%d\" , & n )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 77,
                      "end_byte": 82,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 83,
                      "end_byte": 97,
                      "text": "( \"%d\" , & n )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 83,
                          "end_byte": 84,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 85,
                          "end_byte": 89,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 85,
                              "end_byte": 86,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 86,
                              "end_byte": 88,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 88,
                              "end_byte": 89,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 90,
                          "end_byte": 91,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 92,
                          "end_byte": 95,
                          "text": "& n",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 92,
                              "end_byte": 93,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 94,
                              "end_byte": 95,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 96,
                          "end_byte": 97,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 98,
                  "end_byte": 99,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 100,
              "end_byte": 344,
              "text": "while ( n -- ) { scanf ( \"%d %d\" , & num1 , & num2 ) ; temp1 = num1 ; temp2 = num2 ; while ( num1 != num2 ) { if ( num1 > num2 ) num1 = num1 - num2 ; else num2 = num2 - num1 ; } l = ( temp1 * temp2 ) / num1 ; printf ( \"%d %d\\n\" , num1 , l ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 100,
                  "end_byte": 105,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 106,
                  "end_byte": 114,
                  "text": "( n -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 106,
                      "end_byte": 107,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 108,
                      "end_byte": 112,
                      "text": "n --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 108,
                          "end_byte": 109,
                          "text": "n",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 110,
                          "end_byte": 112,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 113,
                      "end_byte": 114,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 115,
                  "end_byte": 344,
                  "text": "{ scanf ( \"%d %d\" , & num1 , & num2 ) ; temp1 = num1 ; temp2 = num2 ; while ( num1 != num2 ) { if ( num1 > num2 ) num1 = num1 - num2 ; else num2 = num2 - num1 ; } l = ( temp1 * temp2 ) / num1 ; printf ( \"%d %d\\n\" , num1 , l ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 115,
                      "end_byte": 116,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 117,
                      "end_byte": 154,
                      "text": "scanf ( \"%d %d\" , & num1 , & num2 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 117,
                          "end_byte": 152,
                          "text": "scanf ( \"%d %d\" , & num1 , & num2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 117,
                              "end_byte": 122,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 123,
                              "end_byte": 152,
                              "text": "( \"%d %d\" , & num1 , & num2 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 123,
                                  "end_byte": 124,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 125,
                                  "end_byte": 132,
                                  "text": "\"%d %d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 125,
                                      "end_byte": 126,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 126,
                                      "end_byte": 131,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 131,
                                      "end_byte": 132,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 133,
                                  "end_byte": 134,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 135,
                                  "end_byte": 141,
                                  "text": "& num1",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 135,
                                      "end_byte": 136,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 137,
                                      "end_byte": 141,
                                      "text": "num1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 142,
                                  "end_byte": 143,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 144,
                                  "end_byte": 150,
                                  "text": "& num2",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 144,
                                      "end_byte": 145,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 146,
                                      "end_byte": 150,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 151,
                                  "end_byte": 152,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 153,
                          "end_byte": 154,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 155,
                      "end_byte": 169,
                      "text": "temp1 = num1 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 155,
                          "end_byte": 167,
                          "text": "temp1 = num1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 155,
                              "end_byte": 160,
                              "text": "temp1",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 161,
                              "end_byte": 162,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 163,
                              "end_byte": 167,
                              "text": "num1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 168,
                          "end_byte": 169,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 170,
                      "end_byte": 184,
                      "text": "temp2 = num2 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 170,
                          "end_byte": 182,
                          "text": "temp2 = num2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 170,
                              "end_byte": 175,
                              "text": "temp2",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 176,
                              "end_byte": 177,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 178,
                              "end_byte": 182,
                              "text": "num2",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 183,
                          "end_byte": 184,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 185,
                      "end_byte": 277,
                      "text": "while ( num1 != num2 ) { if ( num1 > num2 ) num1 = num1 - num2 ; else num2 = num2 - num1 ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 185,
                          "end_byte": 190,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 191,
                          "end_byte": 207,
                          "text": "( num1 != num2 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 191,
                              "end_byte": 192,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 193,
                              "end_byte": 205,
                              "text": "num1 != num2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 193,
                                  "end_byte": 197,
                                  "text": "num1",
                                  "children": []
                                },
                                {
                                  "type": "!=",
                                  "start_byte": 198,
                                  "end_byte": 200,
                                  "text": "!=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 201,
                                  "end_byte": 205,
                                  "text": "num2",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 206,
                              "end_byte": 207,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 208,
                          "end_byte": 277,
                          "text": "{ if ( num1 > num2 ) num1 = num1 - num2 ; else num2 = num2 - num1 ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 208,
                              "end_byte": 209,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 210,
                              "end_byte": 275,
                              "text": "if ( num1 > num2 ) num1 = num1 - num2 ; else num2 = num2 - num1 ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 210,
                                  "end_byte": 212,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 213,
                                  "end_byte": 228,
                                  "text": "( num1 > num2 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 213,
                                      "end_byte": 214,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 215,
                                      "end_byte": 226,
                                      "text": "num1 > num2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 215,
                                          "end_byte": 219,
                                          "text": "num1",
                                          "children": []
                                        },
                                        {
                                          "type": ">",
                                          "start_byte": 220,
                                          "end_byte": 221,
                                          "text": ">",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 222,
                                          "end_byte": 226,
                                          "text": "num2",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 227,
                                      "end_byte": 228,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 229,
                                  "end_byte": 249,
                                  "text": "num1 = num1 - num2 ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 229,
                                      "end_byte": 247,
                                      "text": "num1 = num1 - num2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 229,
                                          "end_byte": 233,
                                          "text": "num1",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 234,
                                          "end_byte": 235,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 236,
                                          "end_byte": 247,
                                          "text": "num1 - num2",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 236,
                                              "end_byte": 240,
                                              "text": "num1",
                                              "children": []
                                            },
                                            {
                                              "type": "-",
                                              "start_byte": 241,
                                              "end_byte": 242,
                                              "text": "-",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 243,
                                              "end_byte": 247,
                                              "text": "num2",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 248,
                                      "end_byte": 249,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start_byte": 250,
                                  "end_byte": 275,
                                  "text": "else num2 = num2 - num1 ;",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start_byte": 250,
                                      "end_byte": 254,
                                      "text": "else",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 255,
                                      "end_byte": 275,
                                      "text": "num2 = num2 - num1 ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 255,
                                          "end_byte": 273,
                                          "text": "num2 = num2 - num1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 255,
                                              "end_byte": 259,
                                              "text": "num2",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 260,
                                              "end_byte": 261,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 262,
                                              "end_byte": 273,
                                              "text": "num2 - num1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 262,
                                                  "end_byte": 266,
                                                  "text": "num2",
                                                  "children": []
                                                },
                                                {
                                                  "type": "-",
                                                  "start_byte": 267,
                                                  "end_byte": 268,
                                                  "text": "-",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 269,
                                                  "end_byte": 273,
                                                  "text": "num1",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 274,
                                          "end_byte": 275,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 276,
                              "end_byte": 277,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 278,
                      "end_byte": 308,
                      "text": "l = ( temp1 * temp2 ) / num1 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 278,
                          "end_byte": 306,
                          "text": "l = ( temp1 * temp2 ) / num1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 278,
                              "end_byte": 279,
                              "text": "l",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 280,
                              "end_byte": 281,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 282,
                              "end_byte": 306,
                              "text": "( temp1 * temp2 ) / num1",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 282,
                                  "end_byte": 299,
                                  "text": "( temp1 * temp2 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 282,
                                      "end_byte": 283,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 284,
                                      "end_byte": 297,
                                      "text": "temp1 * temp2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 284,
                                          "end_byte": 289,
                                          "text": "temp1",
                                          "children": []
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 290,
                                          "end_byte": 291,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 292,
                                          "end_byte": 297,
                                          "text": "temp2",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 298,
                                      "end_byte": 299,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 300,
                                  "end_byte": 301,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 302,
                                  "end_byte": 306,
                                  "text": "num1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 307,
                          "end_byte": 308,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 309,
                      "end_byte": 342,
                      "text": "printf ( \"%d %d\\n\" , num1 , l ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 309,
                          "end_byte": 340,
                          "text": "printf ( \"%d %d\\n\" , num1 , l )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 309,
                              "end_byte": 315,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 316,
                              "end_byte": 340,
                              "text": "( \"%d %d\\n\" , num1 , l )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 316,
                                  "end_byte": 317,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 318,
                                  "end_byte": 327,
                                  "text": "\"%d %d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 318,
                                      "end_byte": 319,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 319,
                                      "end_byte": 324,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 324,
                                      "end_byte": 326,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 326,
                                      "end_byte": 327,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 328,
                                  "end_byte": 329,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 330,
                                  "end_byte": 334,
                                  "text": "num1",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 335,
                                  "end_byte": 336,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 337,
                                  "end_byte": 338,
                                  "text": "l",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 339,
                                  "end_byte": 340,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 341,
                          "end_byte": 342,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 343,
                      "end_byte": 344,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 345,
              "end_byte": 355,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 345,
                  "end_byte": 351,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 352,
                  "end_byte": 353,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 354,
                  "end_byte": 355,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 356,
              "end_byte": 357,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}