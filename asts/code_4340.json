{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 1085,
  "text": "int main ( ) { int test ; scanf ( \"%d\" , & test ) ; while ( test > 0 ) { int i = 0 ; int rows ; scanf ( \"%d\" , & rows ) ; int triangle [ rows ] [ 100 ] ; for ( i = 0 ; i < rows ; i ++ ) { int j = 1 ; for ( j = 1 ; j < 100 ; j ++ ) { triangle [ i ] [ j ] = 0 ; } } for ( i = 0 ; i < rows ; i ++ ) { int j = 1 ; for ( j = 1 ; j <= i + 1 ; j ++ ) { int num ; scanf ( \"%d\" , & num ) ; triangle [ i ] [ j ] = num ; } } int sum = 0 , k = rows - 1 ; int index = k + 1 ; int flag = 0 ; while ( k >= 0 ) { int max = triangle [ k ] [ 1 ] ; if ( flag == 0 ) { int l = 1 ; for ( l = 1 ; l <= index ; l ++ ) { if ( triangle [ k ] [ l ] > max ) { max = triangle [ k ] [ l ] ; index = l ; } } flag = 1 ; if ( index == k + 1 ) { index = index - 1 ; } sum = sum + max ; } else { if ( index == 1 ) { sum = sum + triangle [ k ] [ 1 ] ; } else if ( triangle [ k ] [ index - 1 ] > triangle [ k ] [ index ] ) { max = triangle [ k ] [ index - 1 ] ; sum = sum + max ; index = index - 1 ; } else { max = triangle [ k ] [ index ] ; sum = sum + max ; } } k -- ; } printf ( \"%d\" , sum ) ; test -- ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 1085,
      "text": "int main ( ) { int test ; scanf ( \"%d\" , & test ) ; while ( test > 0 ) { int i = 0 ; int rows ; scanf ( \"%d\" , & rows ) ; int triangle [ rows ] [ 100 ] ; for ( i = 0 ; i < rows ; i ++ ) { int j = 1 ; for ( j = 1 ; j < 100 ; j ++ ) { triangle [ i ] [ j ] = 0 ; } } for ( i = 0 ; i < rows ; i ++ ) { int j = 1 ; for ( j = 1 ; j <= i + 1 ; j ++ ) { int num ; scanf ( \"%d\" , & num ) ; triangle [ i ] [ j ] = num ; } } int sum = 0 , k = rows - 1 ; int index = k + 1 ; int flag = 0 ; while ( k >= 0 ) { int max = triangle [ k ] [ 1 ] ; if ( flag == 0 ) { int l = 1 ; for ( l = 1 ; l <= index ; l ++ ) { if ( triangle [ k ] [ l ] > max ) { max = triangle [ k ] [ l ] ; index = l ; } } flag = 1 ; if ( index == k + 1 ) { index = index - 1 ; } sum = sum + max ; } else { if ( index == 1 ) { sum = sum + triangle [ k ] [ 1 ] ; } else if ( triangle [ k ] [ index - 1 ] > triangle [ k ] [ index ] ) { max = triangle [ k ] [ index - 1 ] ; sum = sum + max ; index = index - 1 ; } else { max = triangle [ k ] [ index ] ; sum = sum + max ; } } k -- ; } printf ( \"%d\" , sum ) ; test -- ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 1085,
          "text": "{ int test ; scanf ( \"%d\" , & test ) ; while ( test > 0 ) { int i = 0 ; int rows ; scanf ( \"%d\" , & rows ) ; int triangle [ rows ] [ 100 ] ; for ( i = 0 ; i < rows ; i ++ ) { int j = 1 ; for ( j = 1 ; j < 100 ; j ++ ) { triangle [ i ] [ j ] = 0 ; } } for ( i = 0 ; i < rows ; i ++ ) { int j = 1 ; for ( j = 1 ; j <= i + 1 ; j ++ ) { int num ; scanf ( \"%d\" , & num ) ; triangle [ i ] [ j ] = num ; } } int sum = 0 , k = rows - 1 ; int index = k + 1 ; int flag = 0 ; while ( k >= 0 ) { int max = triangle [ k ] [ 1 ] ; if ( flag == 0 ) { int l = 1 ; for ( l = 1 ; l <= index ; l ++ ) { if ( triangle [ k ] [ l ] > max ) { max = triangle [ k ] [ l ] ; index = l ; } } flag = 1 ; if ( index == k + 1 ) { index = index - 1 ; } sum = sum + max ; } else { if ( index == 1 ) { sum = sum + triangle [ k ] [ 1 ] ; } else if ( triangle [ k ] [ index - 1 ] > triangle [ k ] [ index ] ) { max = triangle [ k ] [ index - 1 ] ; sum = sum + max ; index = index - 1 ; } else { max = triangle [ k ] [ index ] ; sum = sum + max ; } } k -- ; } printf ( \"%d\" , sum ) ; test -- ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 25,
              "text": "int test ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 23,
                  "text": "test",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 24,
                  "end_byte": 25,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 26,
              "end_byte": 51,
              "text": "scanf ( \"%d\" , & test ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 26,
                  "end_byte": 49,
                  "text": "scanf ( \"%d\" , & test )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 26,
                      "end_byte": 31,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 32,
                      "end_byte": 49,
                      "text": "( \"%d\" , & test )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 32,
                          "end_byte": 33,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 34,
                          "end_byte": 38,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 34,
                              "end_byte": 35,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 35,
                              "end_byte": 37,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 37,
                              "end_byte": 38,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 39,
                          "end_byte": 40,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 41,
                          "end_byte": 47,
                          "text": "& test",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 41,
                              "end_byte": 42,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 43,
                              "end_byte": 47,
                              "text": "test",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 48,
                          "end_byte": 49,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 50,
                  "end_byte": 51,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 52,
              "end_byte": 1072,
              "text": "while ( test > 0 ) { int i = 0 ; int rows ; scanf ( \"%d\" , & rows ) ; int triangle [ rows ] [ 100 ] ; for ( i = 0 ; i < rows ; i ++ ) { int j = 1 ; for ( j = 1 ; j < 100 ; j ++ ) { triangle [ i ] [ j ] = 0 ; } } for ( i = 0 ; i < rows ; i ++ ) { int j = 1 ; for ( j = 1 ; j <= i + 1 ; j ++ ) { int num ; scanf ( \"%d\" , & num ) ; triangle [ i ] [ j ] = num ; } } int sum = 0 , k = rows - 1 ; int index = k + 1 ; int flag = 0 ; while ( k >= 0 ) { int max = triangle [ k ] [ 1 ] ; if ( flag == 0 ) { int l = 1 ; for ( l = 1 ; l <= index ; l ++ ) { if ( triangle [ k ] [ l ] > max ) { max = triangle [ k ] [ l ] ; index = l ; } } flag = 1 ; if ( index == k + 1 ) { index = index - 1 ; } sum = sum + max ; } else { if ( index == 1 ) { sum = sum + triangle [ k ] [ 1 ] ; } else if ( triangle [ k ] [ index - 1 ] > triangle [ k ] [ index ] ) { max = triangle [ k ] [ index - 1 ] ; sum = sum + max ; index = index - 1 ; } else { max = triangle [ k ] [ index ] ; sum = sum + max ; } } k -- ; } printf ( \"%d\" , sum ) ; test -- ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 52,
                  "end_byte": 57,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 58,
                  "end_byte": 70,
                  "text": "( test > 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 58,
                      "end_byte": 59,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 60,
                      "end_byte": 68,
                      "text": "test > 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 60,
                          "end_byte": 64,
                          "text": "test",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 65,
                          "end_byte": 66,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 67,
                          "end_byte": 68,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 69,
                      "end_byte": 70,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 71,
                  "end_byte": 1072,
                  "text": "{ int i = 0 ; int rows ; scanf ( \"%d\" , & rows ) ; int triangle [ rows ] [ 100 ] ; for ( i = 0 ; i < rows ; i ++ ) { int j = 1 ; for ( j = 1 ; j < 100 ; j ++ ) { triangle [ i ] [ j ] = 0 ; } } for ( i = 0 ; i < rows ; i ++ ) { int j = 1 ; for ( j = 1 ; j <= i + 1 ; j ++ ) { int num ; scanf ( \"%d\" , & num ) ; triangle [ i ] [ j ] = num ; } } int sum = 0 , k = rows - 1 ; int index = k + 1 ; int flag = 0 ; while ( k >= 0 ) { int max = triangle [ k ] [ 1 ] ; if ( flag == 0 ) { int l = 1 ; for ( l = 1 ; l <= index ; l ++ ) { if ( triangle [ k ] [ l ] > max ) { max = triangle [ k ] [ l ] ; index = l ; } } flag = 1 ; if ( index == k + 1 ) { index = index - 1 ; } sum = sum + max ; } else { if ( index == 1 ) { sum = sum + triangle [ k ] [ 1 ] ; } else if ( triangle [ k ] [ index - 1 ] > triangle [ k ] [ index ] ) { max = triangle [ k ] [ index - 1 ] ; sum = sum + max ; index = index - 1 ; } else { max = triangle [ k ] [ index ] ; sum = sum + max ; } } k -- ; } printf ( \"%d\" , sum ) ; test -- ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 71,
                      "end_byte": 72,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "declaration",
                      "start_byte": 73,
                      "end_byte": 84,
                      "text": "int i = 0 ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 73,
                          "end_byte": 76,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "init_declarator",
                          "start_byte": 77,
                          "end_byte": 82,
                          "text": "i = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 77,
                              "end_byte": 78,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 79,
                              "end_byte": 80,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 81,
                              "end_byte": 82,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 83,
                          "end_byte": 84,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 85,
                      "end_byte": 95,
                      "text": "int rows ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 85,
                          "end_byte": 88,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 89,
                          "end_byte": 93,
                          "text": "rows",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 94,
                          "end_byte": 95,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 96,
                      "end_byte": 121,
                      "text": "scanf ( \"%d\" , & rows ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 96,
                          "end_byte": 119,
                          "text": "scanf ( \"%d\" , & rows )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 96,
                              "end_byte": 101,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 102,
                              "end_byte": 119,
                              "text": "( \"%d\" , & rows )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 102,
                                  "end_byte": 103,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 104,
                                  "end_byte": 108,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 104,
                                      "end_byte": 105,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 105,
                                      "end_byte": 107,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 107,
                                      "end_byte": 108,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 109,
                                  "end_byte": 110,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 111,
                                  "end_byte": 117,
                                  "text": "& rows",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 111,
                                      "end_byte": 112,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 113,
                                      "end_byte": 117,
                                      "text": "rows",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 118,
                                  "end_byte": 119,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 120,
                          "end_byte": 121,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 122,
                      "end_byte": 153,
                      "text": "int triangle [ rows ] [ 100 ] ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 122,
                          "end_byte": 125,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "array_declarator",
                          "start_byte": 126,
                          "end_byte": 151,
                          "text": "triangle [ rows ] [ 100 ]",
                          "children": [
                            {
                              "type": "array_declarator",
                              "start_byte": 126,
                              "end_byte": 143,
                              "text": "triangle [ rows ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 126,
                                  "end_byte": 134,
                                  "text": "triangle",
                                  "children": []
                                },
                                {
                                  "type": "[",
                                  "start_byte": 135,
                                  "end_byte": 136,
                                  "text": "[",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 137,
                                  "end_byte": 141,
                                  "text": "rows",
                                  "children": []
                                },
                                {
                                  "type": "]",
                                  "start_byte": 142,
                                  "end_byte": 143,
                                  "text": "]",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "[",
                              "start_byte": 144,
                              "end_byte": 145,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 146,
                              "end_byte": 149,
                              "text": "100",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 150,
                              "end_byte": 151,
                              "text": "]",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 152,
                          "end_byte": 153,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 154,
                      "end_byte": 263,
                      "text": "for ( i = 0 ; i < rows ; i ++ ) { int j = 1 ; for ( j = 1 ; j < 100 ; j ++ ) { triangle [ i ] [ j ] = 0 ; } }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 154,
                          "end_byte": 157,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 158,
                          "end_byte": 159,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 160,
                          "end_byte": 165,
                          "text": "i = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 160,
                              "end_byte": 161,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 162,
                              "end_byte": 163,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 164,
                              "end_byte": 165,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 166,
                          "end_byte": 167,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 168,
                          "end_byte": 176,
                          "text": "i < rows",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 168,
                              "end_byte": 169,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 170,
                              "end_byte": 171,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 172,
                              "end_byte": 176,
                              "text": "rows",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 177,
                          "end_byte": 178,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 179,
                          "end_byte": 183,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 179,
                              "end_byte": 180,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 181,
                              "end_byte": 183,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 184,
                          "end_byte": 185,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 186,
                          "end_byte": 263,
                          "text": "{ int j = 1 ; for ( j = 1 ; j < 100 ; j ++ ) { triangle [ i ] [ j ] = 0 ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 186,
                              "end_byte": 187,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "declaration",
                              "start_byte": 188,
                              "end_byte": 199,
                              "text": "int j = 1 ;",
                              "children": [
                                {
                                  "type": "primitive_type",
                                  "start_byte": 188,
                                  "end_byte": 191,
                                  "text": "int",
                                  "children": []
                                },
                                {
                                  "type": "init_declarator",
                                  "start_byte": 192,
                                  "end_byte": 197,
                                  "text": "j = 1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 192,
                                      "end_byte": 193,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 194,
                                      "end_byte": 195,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 196,
                                      "end_byte": 197,
                                      "text": "1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 198,
                                  "end_byte": 199,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 200,
                              "end_byte": 261,
                              "text": "for ( j = 1 ; j < 100 ; j ++ ) { triangle [ i ] [ j ] = 0 ; }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 200,
                                  "end_byte": 203,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 204,
                                  "end_byte": 205,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 206,
                                  "end_byte": 211,
                                  "text": "j = 1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 206,
                                      "end_byte": 207,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 208,
                                      "end_byte": 209,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 210,
                                      "end_byte": 211,
                                      "text": "1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 212,
                                  "end_byte": 213,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 214,
                                  "end_byte": 221,
                                  "text": "j < 100",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 214,
                                      "end_byte": 215,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "<",
                                      "start_byte": 216,
                                      "end_byte": 217,
                                      "text": "<",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 218,
                                      "end_byte": 221,
                                      "text": "100",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 222,
                                  "end_byte": 223,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 224,
                                  "end_byte": 228,
                                  "text": "j ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 224,
                                      "end_byte": 225,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 226,
                                      "end_byte": 228,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 229,
                                  "end_byte": 230,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 231,
                                  "end_byte": 261,
                                  "text": "{ triangle [ i ] [ j ] = 0 ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 231,
                                      "end_byte": 232,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 233,
                                      "end_byte": 259,
                                      "text": "triangle [ i ] [ j ] = 0 ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 233,
                                          "end_byte": 257,
                                          "text": "triangle [ i ] [ j ] = 0",
                                          "children": [
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 233,
                                              "end_byte": 253,
                                              "text": "triangle [ i ] [ j ]",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 233,
                                                  "end_byte": 247,
                                                  "text": "triangle [ i ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 233,
                                                      "end_byte": 241,
                                                      "text": "triangle",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 242,
                                                      "end_byte": 247,
                                                      "text": "[ i ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 242,
                                                          "end_byte": 243,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 244,
                                                          "end_byte": 245,
                                                          "text": "i",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 246,
                                                          "end_byte": 247,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 248,
                                                  "end_byte": 253,
                                                  "text": "[ j ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 248,
                                                      "end_byte": 249,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 250,
                                                      "end_byte": 251,
                                                      "text": "j",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 252,
                                                      "end_byte": 253,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 254,
                                              "end_byte": 255,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 256,
                                              "end_byte": 257,
                                              "text": "0",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 258,
                                          "end_byte": 259,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 260,
                                      "end_byte": 261,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 262,
                              "end_byte": 263,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 264,
                      "end_byte": 413,
                      "text": "for ( i = 0 ; i < rows ; i ++ ) { int j = 1 ; for ( j = 1 ; j <= i + 1 ; j ++ ) { int num ; scanf ( \"%d\" , & num ) ; triangle [ i ] [ j ] = num ; } }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 264,
                          "end_byte": 267,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 268,
                          "end_byte": 269,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 270,
                          "end_byte": 275,
                          "text": "i = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 270,
                              "end_byte": 271,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 272,
                              "end_byte": 273,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 274,
                              "end_byte": 275,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 276,
                          "end_byte": 277,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 278,
                          "end_byte": 286,
                          "text": "i < rows",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 278,
                              "end_byte": 279,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 280,
                              "end_byte": 281,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 282,
                              "end_byte": 286,
                              "text": "rows",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 287,
                          "end_byte": 288,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 289,
                          "end_byte": 293,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 289,
                              "end_byte": 290,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 291,
                              "end_byte": 293,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 294,
                          "end_byte": 295,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 296,
                          "end_byte": 413,
                          "text": "{ int j = 1 ; for ( j = 1 ; j <= i + 1 ; j ++ ) { int num ; scanf ( \"%d\" , & num ) ; triangle [ i ] [ j ] = num ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 296,
                              "end_byte": 297,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "declaration",
                              "start_byte": 298,
                              "end_byte": 309,
                              "text": "int j = 1 ;",
                              "children": [
                                {
                                  "type": "primitive_type",
                                  "start_byte": 298,
                                  "end_byte": 301,
                                  "text": "int",
                                  "children": []
                                },
                                {
                                  "type": "init_declarator",
                                  "start_byte": 302,
                                  "end_byte": 307,
                                  "text": "j = 1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 302,
                                      "end_byte": 303,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 304,
                                      "end_byte": 305,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 306,
                                      "end_byte": 307,
                                      "text": "1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 308,
                                  "end_byte": 309,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 310,
                              "end_byte": 411,
                              "text": "for ( j = 1 ; j <= i + 1 ; j ++ ) { int num ; scanf ( \"%d\" , & num ) ; triangle [ i ] [ j ] = num ; }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 310,
                                  "end_byte": 313,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 314,
                                  "end_byte": 315,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 316,
                                  "end_byte": 321,
                                  "text": "j = 1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 316,
                                      "end_byte": 317,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 318,
                                      "end_byte": 319,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 320,
                                      "end_byte": 321,
                                      "text": "1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 322,
                                  "end_byte": 323,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 324,
                                  "end_byte": 334,
                                  "text": "j <= i + 1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 324,
                                      "end_byte": 325,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "<=",
                                      "start_byte": 326,
                                      "end_byte": 328,
                                      "text": "<=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 329,
                                      "end_byte": 334,
                                      "text": "i + 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 329,
                                          "end_byte": 330,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 331,
                                          "end_byte": 332,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 333,
                                          "end_byte": 334,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 335,
                                  "end_byte": 336,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 337,
                                  "end_byte": 341,
                                  "text": "j ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 337,
                                      "end_byte": 338,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 339,
                                      "end_byte": 341,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 342,
                                  "end_byte": 343,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 344,
                                  "end_byte": 411,
                                  "text": "{ int num ; scanf ( \"%d\" , & num ) ; triangle [ i ] [ j ] = num ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 344,
                                      "end_byte": 345,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "declaration",
                                      "start_byte": 346,
                                      "end_byte": 355,
                                      "text": "int num ;",
                                      "children": [
                                        {
                                          "type": "primitive_type",
                                          "start_byte": 346,
                                          "end_byte": 349,
                                          "text": "int",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 350,
                                          "end_byte": 353,
                                          "text": "num",
                                          "children": []
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 354,
                                          "end_byte": 355,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 356,
                                      "end_byte": 380,
                                      "text": "scanf ( \"%d\" , & num ) ;",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start_byte": 356,
                                          "end_byte": 378,
                                          "text": "scanf ( \"%d\" , & num )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 356,
                                              "end_byte": 361,
                                              "text": "scanf",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 362,
                                              "end_byte": 378,
                                              "text": "( \"%d\" , & num )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 362,
                                                  "end_byte": 363,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_literal",
                                                  "start_byte": 364,
                                                  "end_byte": 368,
                                                  "text": "\"%d\"",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 364,
                                                      "end_byte": 365,
                                                      "text": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start_byte": 365,
                                                      "end_byte": 367,
                                                      "text": "%d",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 367,
                                                      "end_byte": 368,
                                                      "text": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 369,
                                                  "end_byte": 370,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "pointer_expression",
                                                  "start_byte": 371,
                                                  "end_byte": 376,
                                                  "text": "& num",
                                                  "children": [
                                                    {
                                                      "type": "&",
                                                      "start_byte": 371,
                                                      "end_byte": 372,
                                                      "text": "&",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 373,
                                                      "end_byte": 376,
                                                      "text": "num",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 377,
                                                  "end_byte": 378,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 379,
                                          "end_byte": 380,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 381,
                                      "end_byte": 409,
                                      "text": "triangle [ i ] [ j ] = num ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 381,
                                          "end_byte": 407,
                                          "text": "triangle [ i ] [ j ] = num",
                                          "children": [
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 381,
                                              "end_byte": 401,
                                              "text": "triangle [ i ] [ j ]",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 381,
                                                  "end_byte": 395,
                                                  "text": "triangle [ i ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 381,
                                                      "end_byte": 389,
                                                      "text": "triangle",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 390,
                                                      "end_byte": 395,
                                                      "text": "[ i ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 390,
                                                          "end_byte": 391,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 392,
                                                          "end_byte": 393,
                                                          "text": "i",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 394,
                                                          "end_byte": 395,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 396,
                                                  "end_byte": 401,
                                                  "text": "[ j ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 396,
                                                      "end_byte": 397,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 398,
                                                      "end_byte": 399,
                                                      "text": "j",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 400,
                                                      "end_byte": 401,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 402,
                                              "end_byte": 403,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 404,
                                              "end_byte": 407,
                                              "text": "num",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 408,
                                          "end_byte": 409,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 410,
                                      "end_byte": 411,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 412,
                              "end_byte": 413,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 414,
                      "end_byte": 442,
                      "text": "int sum = 0 , k = rows - 1 ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 414,
                          "end_byte": 417,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "init_declarator",
                          "start_byte": 418,
                          "end_byte": 425,
                          "text": "sum = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 418,
                              "end_byte": 421,
                              "text": "sum",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 422,
                              "end_byte": 423,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 424,
                              "end_byte": 425,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 426,
                          "end_byte": 427,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "init_declarator",
                          "start_byte": 428,
                          "end_byte": 440,
                          "text": "k = rows - 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 428,
                              "end_byte": 429,
                              "text": "k",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 430,
                              "end_byte": 431,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 432,
                              "end_byte": 440,
                              "text": "rows - 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 432,
                                  "end_byte": 436,
                                  "text": "rows",
                                  "children": []
                                },
                                {
                                  "type": "-",
                                  "start_byte": 437,
                                  "end_byte": 438,
                                  "text": "-",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 439,
                                  "end_byte": 440,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 441,
                          "end_byte": 442,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 443,
                      "end_byte": 462,
                      "text": "int index = k + 1 ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 443,
                          "end_byte": 446,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "init_declarator",
                          "start_byte": 447,
                          "end_byte": 460,
                          "text": "index = k + 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 447,
                              "end_byte": 452,
                              "text": "index",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 453,
                              "end_byte": 454,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 455,
                              "end_byte": 460,
                              "text": "k + 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 455,
                                  "end_byte": 456,
                                  "text": "k",
                                  "children": []
                                },
                                {
                                  "type": "+",
                                  "start_byte": 457,
                                  "end_byte": 458,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 459,
                                  "end_byte": 460,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 461,
                          "end_byte": 462,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 463,
                      "end_byte": 477,
                      "text": "int flag = 0 ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 463,
                          "end_byte": 466,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "init_declarator",
                          "start_byte": 467,
                          "end_byte": 475,
                          "text": "flag = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 467,
                              "end_byte": 471,
                              "text": "flag",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 472,
                              "end_byte": 473,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 474,
                              "end_byte": 475,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 476,
                          "end_byte": 477,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 478,
                      "end_byte": 1036,
                      "text": "while ( k >= 0 ) { int max = triangle [ k ] [ 1 ] ; if ( flag == 0 ) { int l = 1 ; for ( l = 1 ; l <= index ; l ++ ) { if ( triangle [ k ] [ l ] > max ) { max = triangle [ k ] [ l ] ; index = l ; } } flag = 1 ; if ( index == k + 1 ) { index = index - 1 ; } sum = sum + max ; } else { if ( index == 1 ) { sum = sum + triangle [ k ] [ 1 ] ; } else if ( triangle [ k ] [ index - 1 ] > triangle [ k ] [ index ] ) { max = triangle [ k ] [ index - 1 ] ; sum = sum + max ; index = index - 1 ; } else { max = triangle [ k ] [ index ] ; sum = sum + max ; } } k -- ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 478,
                          "end_byte": 483,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 484,
                          "end_byte": 494,
                          "text": "( k >= 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 484,
                              "end_byte": 485,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 486,
                              "end_byte": 492,
                              "text": "k >= 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 486,
                                  "end_byte": 487,
                                  "text": "k",
                                  "children": []
                                },
                                {
                                  "type": ">=",
                                  "start_byte": 488,
                                  "end_byte": 490,
                                  "text": ">=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 491,
                                  "end_byte": 492,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 493,
                              "end_byte": 494,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 495,
                          "end_byte": 1036,
                          "text": "{ int max = triangle [ k ] [ 1 ] ; if ( flag == 0 ) { int l = 1 ; for ( l = 1 ; l <= index ; l ++ ) { if ( triangle [ k ] [ l ] > max ) { max = triangle [ k ] [ l ] ; index = l ; } } flag = 1 ; if ( index == k + 1 ) { index = index - 1 ; } sum = sum + max ; } else { if ( index == 1 ) { sum = sum + triangle [ k ] [ 1 ] ; } else if ( triangle [ k ] [ index - 1 ] > triangle [ k ] [ index ] ) { max = triangle [ k ] [ index - 1 ] ; sum = sum + max ; index = index - 1 ; } else { max = triangle [ k ] [ index ] ; sum = sum + max ; } } k -- ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 495,
                              "end_byte": 496,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "declaration",
                              "start_byte": 497,
                              "end_byte": 529,
                              "text": "int max = triangle [ k ] [ 1 ] ;",
                              "children": [
                                {
                                  "type": "primitive_type",
                                  "start_byte": 497,
                                  "end_byte": 500,
                                  "text": "int",
                                  "children": []
                                },
                                {
                                  "type": "init_declarator",
                                  "start_byte": 501,
                                  "end_byte": 527,
                                  "text": "max = triangle [ k ] [ 1 ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 501,
                                      "end_byte": 504,
                                      "text": "max",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 505,
                                      "end_byte": 506,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 507,
                                      "end_byte": 527,
                                      "text": "triangle [ k ] [ 1 ]",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 507,
                                          "end_byte": 521,
                                          "text": "triangle [ k ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 507,
                                              "end_byte": 515,
                                              "text": "triangle",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 516,
                                              "end_byte": 521,
                                              "text": "[ k ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 516,
                                                  "end_byte": 517,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 518,
                                                  "end_byte": 519,
                                                  "text": "k",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 520,
                                                  "end_byte": 521,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 522,
                                          "end_byte": 527,
                                          "text": "[ 1 ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 522,
                                              "end_byte": 523,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 524,
                                              "end_byte": 525,
                                              "text": "1",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 526,
                                              "end_byte": 527,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 528,
                                  "end_byte": 529,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 530,
                              "end_byte": 1027,
                              "text": "if ( flag == 0 ) { int l = 1 ; for ( l = 1 ; l <= index ; l ++ ) { if ( triangle [ k ] [ l ] > max ) { max = triangle [ k ] [ l ] ; index = l ; } } flag = 1 ; if ( index == k + 1 ) { index = index - 1 ; } sum = sum + max ; } else { if ( index == 1 ) { sum = sum + triangle [ k ] [ 1 ] ; } else if ( triangle [ k ] [ index - 1 ] > triangle [ k ] [ index ] ) { max = triangle [ k ] [ index - 1 ] ; sum = sum + max ; index = index - 1 ; } else { max = triangle [ k ] [ index ] ; sum = sum + max ; } }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 530,
                                  "end_byte": 532,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 533,
                                  "end_byte": 546,
                                  "text": "( flag == 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 533,
                                      "end_byte": 534,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 535,
                                      "end_byte": 544,
                                      "text": "flag == 0",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 535,
                                          "end_byte": 539,
                                          "text": "flag",
                                          "children": []
                                        },
                                        {
                                          "type": "==",
                                          "start_byte": 540,
                                          "end_byte": 542,
                                          "text": "==",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 543,
                                          "end_byte": 544,
                                          "text": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 545,
                                      "end_byte": 546,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 547,
                                  "end_byte": 754,
                                  "text": "{ int l = 1 ; for ( l = 1 ; l <= index ; l ++ ) { if ( triangle [ k ] [ l ] > max ) { max = triangle [ k ] [ l ] ; index = l ; } } flag = 1 ; if ( index == k + 1 ) { index = index - 1 ; } sum = sum + max ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 547,
                                      "end_byte": 548,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "declaration",
                                      "start_byte": 549,
                                      "end_byte": 560,
                                      "text": "int l = 1 ;",
                                      "children": [
                                        {
                                          "type": "primitive_type",
                                          "start_byte": 549,
                                          "end_byte": 552,
                                          "text": "int",
                                          "children": []
                                        },
                                        {
                                          "type": "init_declarator",
                                          "start_byte": 553,
                                          "end_byte": 558,
                                          "text": "l = 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 553,
                                              "end_byte": 554,
                                              "text": "l",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 555,
                                              "end_byte": 556,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 557,
                                              "end_byte": 558,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 559,
                                          "end_byte": 560,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "for_statement",
                                      "start_byte": 561,
                                      "end_byte": 677,
                                      "text": "for ( l = 1 ; l <= index ; l ++ ) { if ( triangle [ k ] [ l ] > max ) { max = triangle [ k ] [ l ] ; index = l ; } }",
                                      "children": [
                                        {
                                          "type": "for",
                                          "start_byte": 561,
                                          "end_byte": 564,
                                          "text": "for",
                                          "children": []
                                        },
                                        {
                                          "type": "(",
                                          "start_byte": 565,
                                          "end_byte": 566,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 567,
                                          "end_byte": 572,
                                          "text": "l = 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 567,
                                              "end_byte": 568,
                                              "text": "l",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 569,
                                              "end_byte": 570,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 571,
                                              "end_byte": 572,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 573,
                                          "end_byte": 574,
                                          "text": ";",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 575,
                                          "end_byte": 585,
                                          "text": "l <= index",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 575,
                                              "end_byte": 576,
                                              "text": "l",
                                              "children": []
                                            },
                                            {
                                              "type": "<=",
                                              "start_byte": 577,
                                              "end_byte": 579,
                                              "text": "<=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 580,
                                              "end_byte": 585,
                                              "text": "index",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 586,
                                          "end_byte": 587,
                                          "text": ";",
                                          "children": []
                                        },
                                        {
                                          "type": "update_expression",
                                          "start_byte": 588,
                                          "end_byte": 592,
                                          "text": "l ++",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 588,
                                              "end_byte": 589,
                                              "text": "l",
                                              "children": []
                                            },
                                            {
                                              "type": "++",
                                              "start_byte": 590,
                                              "end_byte": 592,
                                              "text": "++",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 593,
                                          "end_byte": 594,
                                          "text": ")",
                                          "children": []
                                        },
                                        {
                                          "type": "compound_statement",
                                          "start_byte": 595,
                                          "end_byte": 677,
                                          "text": "{ if ( triangle [ k ] [ l ] > max ) { max = triangle [ k ] [ l ] ; index = l ; } }",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start_byte": 595,
                                              "end_byte": 596,
                                              "text": "{",
                                              "children": []
                                            },
                                            {
                                              "type": "if_statement",
                                              "start_byte": 597,
                                              "end_byte": 675,
                                              "text": "if ( triangle [ k ] [ l ] > max ) { max = triangle [ k ] [ l ] ; index = l ; }",
                                              "children": [
                                                {
                                                  "type": "if",
                                                  "start_byte": 597,
                                                  "end_byte": 599,
                                                  "text": "if",
                                                  "children": []
                                                },
                                                {
                                                  "type": "condition_clause",
                                                  "start_byte": 600,
                                                  "end_byte": 630,
                                                  "text": "( triangle [ k ] [ l ] > max )",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start_byte": 600,
                                                      "end_byte": 601,
                                                      "text": "(",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 602,
                                                      "end_byte": 628,
                                                      "text": "triangle [ k ] [ l ] > max",
                                                      "children": [
                                                        {
                                                          "type": "subscript_expression",
                                                          "start_byte": 602,
                                                          "end_byte": 622,
                                                          "text": "triangle [ k ] [ l ]",
                                                          "children": [
                                                            {
                                                              "type": "subscript_expression",
                                                              "start_byte": 602,
                                                              "end_byte": 616,
                                                              "text": "triangle [ k ]",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 602,
                                                                  "end_byte": 610,
                                                                  "text": "triangle",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "subscript_argument_list",
                                                                  "start_byte": 611,
                                                                  "end_byte": 616,
                                                                  "text": "[ k ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "[",
                                                                      "start_byte": 611,
                                                                      "end_byte": 612,
                                                                      "text": "[",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 613,
                                                                      "end_byte": 614,
                                                                      "text": "k",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "]",
                                                                      "start_byte": 615,
                                                                      "end_byte": 616,
                                                                      "text": "]",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "subscript_argument_list",
                                                              "start_byte": 617,
                                                              "end_byte": 622,
                                                              "text": "[ l ]",
                                                              "children": [
                                                                {
                                                                  "type": "[",
                                                                  "start_byte": 617,
                                                                  "end_byte": 618,
                                                                  "text": "[",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 619,
                                                                  "end_byte": 620,
                                                                  "text": "l",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "]",
                                                                  "start_byte": 621,
                                                                  "end_byte": 622,
                                                                  "text": "]",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ">",
                                                          "start_byte": 623,
                                                          "end_byte": 624,
                                                          "text": ">",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 625,
                                                          "end_byte": 628,
                                                          "text": "max",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start_byte": 629,
                                                      "end_byte": 630,
                                                      "text": ")",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "compound_statement",
                                                  "start_byte": 631,
                                                  "end_byte": 675,
                                                  "text": "{ max = triangle [ k ] [ l ] ; index = l ; }",
                                                  "children": [
                                                    {
                                                      "type": "{",
                                                      "start_byte": 631,
                                                      "end_byte": 632,
                                                      "text": "{",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "expression_statement",
                                                      "start_byte": 633,
                                                      "end_byte": 661,
                                                      "text": "max = triangle [ k ] [ l ] ;",
                                                      "children": [
                                                        {
                                                          "type": "assignment_expression",
                                                          "start_byte": 633,
                                                          "end_byte": 659,
                                                          "text": "max = triangle [ k ] [ l ]",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 633,
                                                              "end_byte": 636,
                                                              "text": "max",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "=",
                                                              "start_byte": 637,
                                                              "end_byte": 638,
                                                              "text": "=",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "subscript_expression",
                                                              "start_byte": 639,
                                                              "end_byte": 659,
                                                              "text": "triangle [ k ] [ l ]",
                                                              "children": [
                                                                {
                                                                  "type": "subscript_expression",
                                                                  "start_byte": 639,
                                                                  "end_byte": 653,
                                                                  "text": "triangle [ k ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 639,
                                                                      "end_byte": 647,
                                                                      "text": "triangle",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "subscript_argument_list",
                                                                      "start_byte": 648,
                                                                      "end_byte": 653,
                                                                      "text": "[ k ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "[",
                                                                          "start_byte": 648,
                                                                          "end_byte": 649,
                                                                          "text": "[",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 650,
                                                                          "end_byte": 651,
                                                                          "text": "k",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "]",
                                                                          "start_byte": 652,
                                                                          "end_byte": 653,
                                                                          "text": "]",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "subscript_argument_list",
                                                                  "start_byte": 654,
                                                                  "end_byte": 659,
                                                                  "text": "[ l ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "[",
                                                                      "start_byte": 654,
                                                                      "end_byte": 655,
                                                                      "text": "[",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 656,
                                                                      "end_byte": 657,
                                                                      "text": "l",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "]",
                                                                      "start_byte": 658,
                                                                      "end_byte": 659,
                                                                      "text": "]",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ";",
                                                          "start_byte": 660,
                                                          "end_byte": 661,
                                                          "text": ";",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "expression_statement",
                                                      "start_byte": 662,
                                                      "end_byte": 673,
                                                      "text": "index = l ;",
                                                      "children": [
                                                        {
                                                          "type": "assignment_expression",
                                                          "start_byte": 662,
                                                          "end_byte": 671,
                                                          "text": "index = l",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 662,
                                                              "end_byte": 667,
                                                              "text": "index",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "=",
                                                              "start_byte": 668,
                                                              "end_byte": 669,
                                                              "text": "=",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 670,
                                                              "end_byte": 671,
                                                              "text": "l",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ";",
                                                          "start_byte": 672,
                                                          "end_byte": 673,
                                                          "text": ";",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "}",
                                                      "start_byte": 674,
                                                      "end_byte": 675,
                                                      "text": "}",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start_byte": 676,
                                              "end_byte": 677,
                                              "text": "}",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 678,
                                      "end_byte": 688,
                                      "text": "flag = 1 ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 678,
                                          "end_byte": 686,
                                          "text": "flag = 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 678,
                                              "end_byte": 682,
                                              "text": "flag",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 683,
                                              "end_byte": 684,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 685,
                                              "end_byte": 686,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 687,
                                          "end_byte": 688,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 689,
                                      "end_byte": 734,
                                      "text": "if ( index == k + 1 ) { index = index - 1 ; }",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 689,
                                          "end_byte": 691,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 692,
                                          "end_byte": 710,
                                          "text": "( index == k + 1 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 692,
                                              "end_byte": 693,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 694,
                                              "end_byte": 708,
                                              "text": "index == k + 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 694,
                                                  "end_byte": 699,
                                                  "text": "index",
                                                  "children": []
                                                },
                                                {
                                                  "type": "==",
                                                  "start_byte": 700,
                                                  "end_byte": 702,
                                                  "text": "==",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 703,
                                                  "end_byte": 708,
                                                  "text": "k + 1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 703,
                                                      "end_byte": 704,
                                                      "text": "k",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "+",
                                                      "start_byte": 705,
                                                      "end_byte": 706,
                                                      "text": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 707,
                                                      "end_byte": 708,
                                                      "text": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 709,
                                              "end_byte": 710,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "compound_statement",
                                          "start_byte": 711,
                                          "end_byte": 734,
                                          "text": "{ index = index - 1 ; }",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start_byte": 711,
                                              "end_byte": 712,
                                              "text": "{",
                                              "children": []
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 713,
                                              "end_byte": 732,
                                              "text": "index = index - 1 ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 713,
                                                  "end_byte": 730,
                                                  "text": "index = index - 1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 713,
                                                      "end_byte": 718,
                                                      "text": "index",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 719,
                                                      "end_byte": 720,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 721,
                                                      "end_byte": 730,
                                                      "text": "index - 1",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 721,
                                                          "end_byte": 726,
                                                          "text": "index",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "-",
                                                          "start_byte": 727,
                                                          "end_byte": 728,
                                                          "text": "-",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "number_literal",
                                                          "start_byte": 729,
                                                          "end_byte": 730,
                                                          "text": "1",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 731,
                                                  "end_byte": 732,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start_byte": 733,
                                              "end_byte": 734,
                                              "text": "}",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 735,
                                      "end_byte": 752,
                                      "text": "sum = sum + max ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 735,
                                          "end_byte": 750,
                                          "text": "sum = sum + max",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 735,
                                              "end_byte": 738,
                                              "text": "sum",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 739,
                                              "end_byte": 740,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 741,
                                              "end_byte": 750,
                                              "text": "sum + max",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 741,
                                                  "end_byte": 744,
                                                  "text": "sum",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 745,
                                                  "end_byte": 746,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 747,
                                                  "end_byte": 750,
                                                  "text": "max",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 751,
                                          "end_byte": 752,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 753,
                                      "end_byte": 754,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start_byte": 755,
                                  "end_byte": 1027,
                                  "text": "else { if ( index == 1 ) { sum = sum + triangle [ k ] [ 1 ] ; } else if ( triangle [ k ] [ index - 1 ] > triangle [ k ] [ index ] ) { max = triangle [ k ] [ index - 1 ] ; sum = sum + max ; index = index - 1 ; } else { max = triangle [ k ] [ index ] ; sum = sum + max ; } }",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start_byte": 755,
                                      "end_byte": 759,
                                      "text": "else",
                                      "children": []
                                    },
                                    {
                                      "type": "compound_statement",
                                      "start_byte": 760,
                                      "end_byte": 1027,
                                      "text": "{ if ( index == 1 ) { sum = sum + triangle [ k ] [ 1 ] ; } else if ( triangle [ k ] [ index - 1 ] > triangle [ k ] [ index ] ) { max = triangle [ k ] [ index - 1 ] ; sum = sum + max ; index = index - 1 ; } else { max = triangle [ k ] [ index ] ; sum = sum + max ; } }",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start_byte": 760,
                                          "end_byte": 761,
                                          "text": "{",
                                          "children": []
                                        },
                                        {
                                          "type": "if_statement",
                                          "start_byte": 762,
                                          "end_byte": 1025,
                                          "text": "if ( index == 1 ) { sum = sum + triangle [ k ] [ 1 ] ; } else if ( triangle [ k ] [ index - 1 ] > triangle [ k ] [ index ] ) { max = triangle [ k ] [ index - 1 ] ; sum = sum + max ; index = index - 1 ; } else { max = triangle [ k ] [ index ] ; sum = sum + max ; }",
                                          "children": [
                                            {
                                              "type": "if",
                                              "start_byte": 762,
                                              "end_byte": 764,
                                              "text": "if",
                                              "children": []
                                            },
                                            {
                                              "type": "condition_clause",
                                              "start_byte": 765,
                                              "end_byte": 779,
                                              "text": "( index == 1 )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 765,
                                                  "end_byte": 766,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 767,
                                                  "end_byte": 777,
                                                  "text": "index == 1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 767,
                                                      "end_byte": 772,
                                                      "text": "index",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "==",
                                                      "start_byte": 773,
                                                      "end_byte": 775,
                                                      "text": "==",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 776,
                                                      "end_byte": 777,
                                                      "text": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 778,
                                                  "end_byte": 779,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "compound_statement",
                                              "start_byte": 780,
                                              "end_byte": 818,
                                              "text": "{ sum = sum + triangle [ k ] [ 1 ] ; }",
                                              "children": [
                                                {
                                                  "type": "{",
                                                  "start_byte": 780,
                                                  "end_byte": 781,
                                                  "text": "{",
                                                  "children": []
                                                },
                                                {
                                                  "type": "expression_statement",
                                                  "start_byte": 782,
                                                  "end_byte": 816,
                                                  "text": "sum = sum + triangle [ k ] [ 1 ] ;",
                                                  "children": [
                                                    {
                                                      "type": "assignment_expression",
                                                      "start_byte": 782,
                                                      "end_byte": 814,
                                                      "text": "sum = sum + triangle [ k ] [ 1 ]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 782,
                                                          "end_byte": 785,
                                                          "text": "sum",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "=",
                                                          "start_byte": 786,
                                                          "end_byte": 787,
                                                          "text": "=",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 788,
                                                          "end_byte": 814,
                                                          "text": "sum + triangle [ k ] [ 1 ]",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 788,
                                                              "end_byte": 791,
                                                              "text": "sum",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "+",
                                                              "start_byte": 792,
                                                              "end_byte": 793,
                                                              "text": "+",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "subscript_expression",
                                                              "start_byte": 794,
                                                              "end_byte": 814,
                                                              "text": "triangle [ k ] [ 1 ]",
                                                              "children": [
                                                                {
                                                                  "type": "subscript_expression",
                                                                  "start_byte": 794,
                                                                  "end_byte": 808,
                                                                  "text": "triangle [ k ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 794,
                                                                      "end_byte": 802,
                                                                      "text": "triangle",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "subscript_argument_list",
                                                                      "start_byte": 803,
                                                                      "end_byte": 808,
                                                                      "text": "[ k ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "[",
                                                                          "start_byte": 803,
                                                                          "end_byte": 804,
                                                                          "text": "[",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 805,
                                                                          "end_byte": 806,
                                                                          "text": "k",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "]",
                                                                          "start_byte": 807,
                                                                          "end_byte": 808,
                                                                          "text": "]",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "subscript_argument_list",
                                                                  "start_byte": 809,
                                                                  "end_byte": 814,
                                                                  "text": "[ 1 ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "[",
                                                                      "start_byte": 809,
                                                                      "end_byte": 810,
                                                                      "text": "[",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "number_literal",
                                                                      "start_byte": 811,
                                                                      "end_byte": 812,
                                                                      "text": "1",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "]",
                                                                      "start_byte": 813,
                                                                      "end_byte": 814,
                                                                      "text": "]",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ";",
                                                      "start_byte": 815,
                                                      "end_byte": 816,
                                                      "text": ";",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "}",
                                                  "start_byte": 817,
                                                  "end_byte": 818,
                                                  "text": "}",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "else_clause",
                                              "start_byte": 819,
                                              "end_byte": 1025,
                                              "text": "else if ( triangle [ k ] [ index - 1 ] > triangle [ k ] [ index ] ) { max = triangle [ k ] [ index - 1 ] ; sum = sum + max ; index = index - 1 ; } else { max = triangle [ k ] [ index ] ; sum = sum + max ; }",
                                              "children": [
                                                {
                                                  "type": "else",
                                                  "start_byte": 819,
                                                  "end_byte": 823,
                                                  "text": "else",
                                                  "children": []
                                                },
                                                {
                                                  "type": "if_statement",
                                                  "start_byte": 824,
                                                  "end_byte": 1025,
                                                  "text": "if ( triangle [ k ] [ index - 1 ] > triangle [ k ] [ index ] ) { max = triangle [ k ] [ index - 1 ] ; sum = sum + max ; index = index - 1 ; } else { max = triangle [ k ] [ index ] ; sum = sum + max ; }",
                                                  "children": [
                                                    {
                                                      "type": "if",
                                                      "start_byte": 824,
                                                      "end_byte": 826,
                                                      "text": "if",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "condition_clause",
                                                      "start_byte": 827,
                                                      "end_byte": 886,
                                                      "text": "( triangle [ k ] [ index - 1 ] > triangle [ k ] [ index ] )",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start_byte": 827,
                                                          "end_byte": 828,
                                                          "text": "(",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 829,
                                                          "end_byte": 884,
                                                          "text": "triangle [ k ] [ index - 1 ] > triangle [ k ] [ index ]",
                                                          "children": [
                                                            {
                                                              "type": "subscript_expression",
                                                              "start_byte": 829,
                                                              "end_byte": 857,
                                                              "text": "triangle [ k ] [ index - 1 ]",
                                                              "children": [
                                                                {
                                                                  "type": "subscript_expression",
                                                                  "start_byte": 829,
                                                                  "end_byte": 843,
                                                                  "text": "triangle [ k ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 829,
                                                                      "end_byte": 837,
                                                                      "text": "triangle",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "subscript_argument_list",
                                                                      "start_byte": 838,
                                                                      "end_byte": 843,
                                                                      "text": "[ k ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "[",
                                                                          "start_byte": 838,
                                                                          "end_byte": 839,
                                                                          "text": "[",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 840,
                                                                          "end_byte": 841,
                                                                          "text": "k",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "]",
                                                                          "start_byte": 842,
                                                                          "end_byte": 843,
                                                                          "text": "]",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "subscript_argument_list",
                                                                  "start_byte": 844,
                                                                  "end_byte": 857,
                                                                  "text": "[ index - 1 ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "[",
                                                                      "start_byte": 844,
                                                                      "end_byte": 845,
                                                                      "text": "[",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "binary_expression",
                                                                      "start_byte": 846,
                                                                      "end_byte": 855,
                                                                      "text": "index - 1",
                                                                      "children": [
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 846,
                                                                          "end_byte": 851,
                                                                          "text": "index",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "-",
                                                                          "start_byte": 852,
                                                                          "end_byte": 853,
                                                                          "text": "-",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "number_literal",
                                                                          "start_byte": 854,
                                                                          "end_byte": 855,
                                                                          "text": "1",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "]",
                                                                      "start_byte": 856,
                                                                      "end_byte": 857,
                                                                      "text": "]",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ">",
                                                              "start_byte": 858,
                                                              "end_byte": 859,
                                                              "text": ">",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "subscript_expression",
                                                              "start_byte": 860,
                                                              "end_byte": 884,
                                                              "text": "triangle [ k ] [ index ]",
                                                              "children": [
                                                                {
                                                                  "type": "subscript_expression",
                                                                  "start_byte": 860,
                                                                  "end_byte": 874,
                                                                  "text": "triangle [ k ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 860,
                                                                      "end_byte": 868,
                                                                      "text": "triangle",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "subscript_argument_list",
                                                                      "start_byte": 869,
                                                                      "end_byte": 874,
                                                                      "text": "[ k ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "[",
                                                                          "start_byte": 869,
                                                                          "end_byte": 870,
                                                                          "text": "[",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 871,
                                                                          "end_byte": 872,
                                                                          "text": "k",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "]",
                                                                          "start_byte": 873,
                                                                          "end_byte": 874,
                                                                          "text": "]",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "subscript_argument_list",
                                                                  "start_byte": 875,
                                                                  "end_byte": 884,
                                                                  "text": "[ index ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "[",
                                                                      "start_byte": 875,
                                                                      "end_byte": 876,
                                                                      "text": "[",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 877,
                                                                      "end_byte": 882,
                                                                      "text": "index",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "]",
                                                                      "start_byte": 883,
                                                                      "end_byte": 884,
                                                                      "text": "]",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start_byte": 885,
                                                          "end_byte": 886,
                                                          "text": ")",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "compound_statement",
                                                      "start_byte": 887,
                                                      "end_byte": 965,
                                                      "text": "{ max = triangle [ k ] [ index - 1 ] ; sum = sum + max ; index = index - 1 ; }",
                                                      "children": [
                                                        {
                                                          "type": "{",
                                                          "start_byte": 887,
                                                          "end_byte": 888,
                                                          "text": "{",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "expression_statement",
                                                          "start_byte": 889,
                                                          "end_byte": 925,
                                                          "text": "max = triangle [ k ] [ index - 1 ] ;",
                                                          "children": [
                                                            {
                                                              "type": "assignment_expression",
                                                              "start_byte": 889,
                                                              "end_byte": 923,
                                                              "text": "max = triangle [ k ] [ index - 1 ]",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 889,
                                                                  "end_byte": 892,
                                                                  "text": "max",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "=",
                                                                  "start_byte": 893,
                                                                  "end_byte": 894,
                                                                  "text": "=",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "subscript_expression",
                                                                  "start_byte": 895,
                                                                  "end_byte": 923,
                                                                  "text": "triangle [ k ] [ index - 1 ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "subscript_expression",
                                                                      "start_byte": 895,
                                                                      "end_byte": 909,
                                                                      "text": "triangle [ k ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 895,
                                                                          "end_byte": 903,
                                                                          "text": "triangle",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "subscript_argument_list",
                                                                          "start_byte": 904,
                                                                          "end_byte": 909,
                                                                          "text": "[ k ]",
                                                                          "children": [
                                                                            {
                                                                              "type": "[",
                                                                              "start_byte": 904,
                                                                              "end_byte": 905,
                                                                              "text": "[",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "identifier",
                                                                              "start_byte": 906,
                                                                              "end_byte": 907,
                                                                              "text": "k",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "]",
                                                                              "start_byte": 908,
                                                                              "end_byte": 909,
                                                                              "text": "]",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "subscript_argument_list",
                                                                      "start_byte": 910,
                                                                      "end_byte": 923,
                                                                      "text": "[ index - 1 ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "[",
                                                                          "start_byte": 910,
                                                                          "end_byte": 911,
                                                                          "text": "[",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "binary_expression",
                                                                          "start_byte": 912,
                                                                          "end_byte": 921,
                                                                          "text": "index - 1",
                                                                          "children": [
                                                                            {
                                                                              "type": "identifier",
                                                                              "start_byte": 912,
                                                                              "end_byte": 917,
                                                                              "text": "index",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "-",
                                                                              "start_byte": 918,
                                                                              "end_byte": 919,
                                                                              "text": "-",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "number_literal",
                                                                              "start_byte": 920,
                                                                              "end_byte": 921,
                                                                              "text": "1",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "]",
                                                                          "start_byte": 922,
                                                                          "end_byte": 923,
                                                                          "text": "]",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ";",
                                                              "start_byte": 924,
                                                              "end_byte": 925,
                                                              "text": ";",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "expression_statement",
                                                          "start_byte": 926,
                                                          "end_byte": 943,
                                                          "text": "sum = sum + max ;",
                                                          "children": [
                                                            {
                                                              "type": "assignment_expression",
                                                              "start_byte": 926,
                                                              "end_byte": 941,
                                                              "text": "sum = sum + max",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 926,
                                                                  "end_byte": 929,
                                                                  "text": "sum",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "=",
                                                                  "start_byte": 930,
                                                                  "end_byte": 931,
                                                                  "text": "=",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "binary_expression",
                                                                  "start_byte": 932,
                                                                  "end_byte": 941,
                                                                  "text": "sum + max",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 932,
                                                                      "end_byte": 935,
                                                                      "text": "sum",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "+",
                                                                      "start_byte": 936,
                                                                      "end_byte": 937,
                                                                      "text": "+",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 938,
                                                                      "end_byte": 941,
                                                                      "text": "max",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ";",
                                                              "start_byte": 942,
                                                              "end_byte": 943,
                                                              "text": ";",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "expression_statement",
                                                          "start_byte": 944,
                                                          "end_byte": 963,
                                                          "text": "index = index - 1 ;",
                                                          "children": [
                                                            {
                                                              "type": "assignment_expression",
                                                              "start_byte": 944,
                                                              "end_byte": 961,
                                                              "text": "index = index - 1",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 944,
                                                                  "end_byte": 949,
                                                                  "text": "index",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "=",
                                                                  "start_byte": 950,
                                                                  "end_byte": 951,
                                                                  "text": "=",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "binary_expression",
                                                                  "start_byte": 952,
                                                                  "end_byte": 961,
                                                                  "text": "index - 1",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 952,
                                                                      "end_byte": 957,
                                                                      "text": "index",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "-",
                                                                      "start_byte": 958,
                                                                      "end_byte": 959,
                                                                      "text": "-",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "number_literal",
                                                                      "start_byte": 960,
                                                                      "end_byte": 961,
                                                                      "text": "1",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ";",
                                                              "start_byte": 962,
                                                              "end_byte": 963,
                                                              "text": ";",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "}",
                                                          "start_byte": 964,
                                                          "end_byte": 965,
                                                          "text": "}",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "else_clause",
                                                      "start_byte": 966,
                                                      "end_byte": 1025,
                                                      "text": "else { max = triangle [ k ] [ index ] ; sum = sum + max ; }",
                                                      "children": [
                                                        {
                                                          "type": "else",
                                                          "start_byte": 966,
                                                          "end_byte": 970,
                                                          "text": "else",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "compound_statement",
                                                          "start_byte": 971,
                                                          "end_byte": 1025,
                                                          "text": "{ max = triangle [ k ] [ index ] ; sum = sum + max ; }",
                                                          "children": [
                                                            {
                                                              "type": "{",
                                                              "start_byte": 971,
                                                              "end_byte": 972,
                                                              "text": "{",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "expression_statement",
                                                              "start_byte": 973,
                                                              "end_byte": 1005,
                                                              "text": "max = triangle [ k ] [ index ] ;",
                                                              "children": [
                                                                {
                                                                  "type": "assignment_expression",
                                                                  "start_byte": 973,
                                                                  "end_byte": 1003,
                                                                  "text": "max = triangle [ k ] [ index ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 973,
                                                                      "end_byte": 976,
                                                                      "text": "max",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "=",
                                                                      "start_byte": 977,
                                                                      "end_byte": 978,
                                                                      "text": "=",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "subscript_expression",
                                                                      "start_byte": 979,
                                                                      "end_byte": 1003,
                                                                      "text": "triangle [ k ] [ index ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "subscript_expression",
                                                                          "start_byte": 979,
                                                                          "end_byte": 993,
                                                                          "text": "triangle [ k ]",
                                                                          "children": [
                                                                            {
                                                                              "type": "identifier",
                                                                              "start_byte": 979,
                                                                              "end_byte": 987,
                                                                              "text": "triangle",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "subscript_argument_list",
                                                                              "start_byte": 988,
                                                                              "end_byte": 993,
                                                                              "text": "[ k ]",
                                                                              "children": [
                                                                                {
                                                                                  "type": "[",
                                                                                  "start_byte": 988,
                                                                                  "end_byte": 989,
                                                                                  "text": "[",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "identifier",
                                                                                  "start_byte": 990,
                                                                                  "end_byte": 991,
                                                                                  "text": "k",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "]",
                                                                                  "start_byte": 992,
                                                                                  "end_byte": 993,
                                                                                  "text": "]",
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "subscript_argument_list",
                                                                          "start_byte": 994,
                                                                          "end_byte": 1003,
                                                                          "text": "[ index ]",
                                                                          "children": [
                                                                            {
                                                                              "type": "[",
                                                                              "start_byte": 994,
                                                                              "end_byte": 995,
                                                                              "text": "[",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "identifier",
                                                                              "start_byte": 996,
                                                                              "end_byte": 1001,
                                                                              "text": "index",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "]",
                                                                              "start_byte": 1002,
                                                                              "end_byte": 1003,
                                                                              "text": "]",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": ";",
                                                                  "start_byte": 1004,
                                                                  "end_byte": 1005,
                                                                  "text": ";",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "expression_statement",
                                                              "start_byte": 1006,
                                                              "end_byte": 1023,
                                                              "text": "sum = sum + max ;",
                                                              "children": [
                                                                {
                                                                  "type": "assignment_expression",
                                                                  "start_byte": 1006,
                                                                  "end_byte": 1021,
                                                                  "text": "sum = sum + max",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 1006,
                                                                      "end_byte": 1009,
                                                                      "text": "sum",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "=",
                                                                      "start_byte": 1010,
                                                                      "end_byte": 1011,
                                                                      "text": "=",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "binary_expression",
                                                                      "start_byte": 1012,
                                                                      "end_byte": 1021,
                                                                      "text": "sum + max",
                                                                      "children": [
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 1012,
                                                                          "end_byte": 1015,
                                                                          "text": "sum",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "+",
                                                                          "start_byte": 1016,
                                                                          "end_byte": 1017,
                                                                          "text": "+",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 1018,
                                                                          "end_byte": 1021,
                                                                          "text": "max",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": ";",
                                                                  "start_byte": 1022,
                                                                  "end_byte": 1023,
                                                                  "text": ";",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "}",
                                                              "start_byte": 1024,
                                                              "end_byte": 1025,
                                                              "text": "}",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start_byte": 1026,
                                          "end_byte": 1027,
                                          "text": "}",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1028,
                              "end_byte": 1034,
                              "text": "k -- ;",
                              "children": [
                                {
                                  "type": "update_expression",
                                  "start_byte": 1028,
                                  "end_byte": 1032,
                                  "text": "k --",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1028,
                                      "end_byte": 1029,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "--",
                                      "start_byte": 1030,
                                      "end_byte": 1032,
                                      "text": "--",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1033,
                                  "end_byte": 1034,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 1035,
                              "end_byte": 1036,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1037,
                      "end_byte": 1060,
                      "text": "printf ( \"%d\" , sum ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 1037,
                          "end_byte": 1058,
                          "text": "printf ( \"%d\" , sum )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1037,
                              "end_byte": 1043,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 1044,
                              "end_byte": 1058,
                              "text": "( \"%d\" , sum )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 1044,
                                  "end_byte": 1045,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 1046,
                                  "end_byte": 1050,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 1046,
                                      "end_byte": 1047,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 1047,
                                      "end_byte": 1049,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 1049,
                                      "end_byte": 1050,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 1051,
                                  "end_byte": 1052,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 1053,
                                  "end_byte": 1056,
                                  "text": "sum",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1057,
                                  "end_byte": 1058,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1059,
                          "end_byte": 1060,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1061,
                      "end_byte": 1070,
                      "text": "test -- ;",
                      "children": [
                        {
                          "type": "update_expression",
                          "start_byte": 1061,
                          "end_byte": 1068,
                          "text": "test --",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1061,
                              "end_byte": 1065,
                              "text": "test",
                              "children": []
                            },
                            {
                              "type": "--",
                              "start_byte": 1066,
                              "end_byte": 1068,
                              "text": "--",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1069,
                          "end_byte": 1070,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 1071,
                      "end_byte": 1072,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 1073,
              "end_byte": 1083,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 1073,
                  "end_byte": 1079,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 1080,
                  "end_byte": 1081,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 1082,
                  "end_byte": 1083,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 1084,
              "end_byte": 1085,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}