int a [ MAXN ] [ MAXN ] ; int read_int ( void ) { int t = 0 , ch ; while ( ( ch = getchar ( ) ) == ' ' || ! isdigit ( ch ) ) ; do t = t * 10 + ( ch - '0' ) , ch = getchar ( ) ; while ( isdigit ( ch ) ) ; return t ; } void solve ( void ) { int n = read_int ( ) , r , c , t ; for ( r = 0 ; r < n ; ++ r ) for ( c = 0 ; c <= r ; ++ c ) t = a [ r ] [ c ] = read_int ( ) ; for ( r = 1 ; r < n ; ++ r ) { a [ r ] [ 0 ] += a [ r - 1 ] [ 0 ] ; for ( c = 1 ; c < r ; ++ c ) a [ r ] [ c ] += max_mcr ( a [ r - 1 ] [ c ] , a [ r - 1 ] [ c - 1 ] ) ; a [ r ] [ c ] += a [ r - 1 ] [ c - 1 ] ; } t = a [ n - 1 ] [ 0 ] ; for ( c = 1 ; c < n ; ++ c ) t = max_mcr ( t , a [ n - 1 ] [ c ] ) ; printf ( "%d\n" , t ) ; } int main ( int argc , char * argv [ ] ) { int t = read_int ( ) ; for ( ; t ; -- t ) solve ( ) ; return 0 ; }