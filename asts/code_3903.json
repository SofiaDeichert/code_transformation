{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 311,
  "text": "int main ( ) { long A , B , GCD , LCM ; int T ; scanf ( \"%d\" , & T ) ; while ( T -- ) { scanf ( \"%ld\" , & A ) ; scanf ( \"%ld\" , & B ) ; GCD = gcd ( A , B ) ; LCM = A * B / GCD ; printf ( \"%ld %ld\\n\" , GCD , LCM ) ; } return 0 ; } int gcd ( long A , long B ) { if ( B == 0 ) return A ; else gcd ( B , A % B ) ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 229,
      "text": "int main ( ) { long A , B , GCD , LCM ; int T ; scanf ( \"%d\" , & T ) ; while ( T -- ) { scanf ( \"%ld\" , & A ) ; scanf ( \"%ld\" , & B ) ; GCD = gcd ( A , B ) ; LCM = A * B / GCD ; printf ( \"%ld %ld\\n\" , GCD , LCM ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 229,
          "text": "{ long A , B , GCD , LCM ; int T ; scanf ( \"%d\" , & T ) ; while ( T -- ) { scanf ( \"%ld\" , & A ) ; scanf ( \"%ld\" , & B ) ; GCD = gcd ( A , B ) ; LCM = A * B / GCD ; printf ( \"%ld %ld\\n\" , GCD , LCM ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 39,
              "text": "long A , B , GCD , LCM ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 15,
                  "end_byte": 19,
                  "text": "long",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 15,
                      "end_byte": 19,
                      "text": "long",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 20,
                  "end_byte": 21,
                  "text": "A",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 22,
                  "end_byte": 23,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 24,
                  "end_byte": 25,
                  "text": "B",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 26,
                  "end_byte": 27,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 28,
                  "end_byte": 31,
                  "text": "GCD",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 32,
                  "end_byte": 33,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 34,
                  "end_byte": 37,
                  "text": "LCM",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 38,
                  "end_byte": 39,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 40,
              "end_byte": 47,
              "text": "int T ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 40,
                  "end_byte": 43,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 44,
                  "end_byte": 45,
                  "text": "T",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 46,
                  "end_byte": 47,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 48,
              "end_byte": 70,
              "text": "scanf ( \"%d\" , & T ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 48,
                  "end_byte": 68,
                  "text": "scanf ( \"%d\" , & T )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 48,
                      "end_byte": 53,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 54,
                      "end_byte": 68,
                      "text": "( \"%d\" , & T )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 54,
                          "end_byte": 55,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 56,
                          "end_byte": 60,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 56,
                              "end_byte": 57,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 57,
                              "end_byte": 59,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 59,
                              "end_byte": 60,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 61,
                          "end_byte": 62,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 63,
                          "end_byte": 66,
                          "text": "& T",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 63,
                              "end_byte": 64,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 65,
                              "end_byte": 66,
                              "text": "T",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 67,
                          "end_byte": 68,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 69,
                  "end_byte": 70,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 71,
              "end_byte": 216,
              "text": "while ( T -- ) { scanf ( \"%ld\" , & A ) ; scanf ( \"%ld\" , & B ) ; GCD = gcd ( A , B ) ; LCM = A * B / GCD ; printf ( \"%ld %ld\\n\" , GCD , LCM ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 71,
                  "end_byte": 76,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 77,
                  "end_byte": 85,
                  "text": "( T -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 77,
                      "end_byte": 78,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 79,
                      "end_byte": 83,
                      "text": "T --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 79,
                          "end_byte": 80,
                          "text": "T",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 81,
                          "end_byte": 83,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 84,
                      "end_byte": 85,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 86,
                  "end_byte": 216,
                  "text": "{ scanf ( \"%ld\" , & A ) ; scanf ( \"%ld\" , & B ) ; GCD = gcd ( A , B ) ; LCM = A * B / GCD ; printf ( \"%ld %ld\\n\" , GCD , LCM ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 86,
                      "end_byte": 87,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 88,
                      "end_byte": 111,
                      "text": "scanf ( \"%ld\" , & A ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 88,
                          "end_byte": 109,
                          "text": "scanf ( \"%ld\" , & A )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 88,
                              "end_byte": 93,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 94,
                              "end_byte": 109,
                              "text": "( \"%ld\" , & A )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 94,
                                  "end_byte": 95,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 96,
                                  "end_byte": 101,
                                  "text": "\"%ld\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 96,
                                      "end_byte": 97,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 97,
                                      "end_byte": 100,
                                      "text": "%ld",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 100,
                                      "end_byte": 101,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 102,
                                  "end_byte": 103,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 104,
                                  "end_byte": 107,
                                  "text": "& A",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 104,
                                      "end_byte": 105,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 106,
                                      "end_byte": 107,
                                      "text": "A",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 108,
                                  "end_byte": 109,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 110,
                          "end_byte": 111,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 112,
                      "end_byte": 135,
                      "text": "scanf ( \"%ld\" , & B ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 112,
                          "end_byte": 133,
                          "text": "scanf ( \"%ld\" , & B )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 112,
                              "end_byte": 117,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 118,
                              "end_byte": 133,
                              "text": "( \"%ld\" , & B )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 118,
                                  "end_byte": 119,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 120,
                                  "end_byte": 125,
                                  "text": "\"%ld\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 120,
                                      "end_byte": 121,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 121,
                                      "end_byte": 124,
                                      "text": "%ld",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 124,
                                      "end_byte": 125,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 126,
                                  "end_byte": 127,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 128,
                                  "end_byte": 131,
                                  "text": "& B",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 128,
                                      "end_byte": 129,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 130,
                                      "end_byte": 131,
                                      "text": "B",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 132,
                                  "end_byte": 133,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 134,
                          "end_byte": 135,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 136,
                      "end_byte": 157,
                      "text": "GCD = gcd ( A , B ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 136,
                          "end_byte": 155,
                          "text": "GCD = gcd ( A , B )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 136,
                              "end_byte": 139,
                              "text": "GCD",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 140,
                              "end_byte": 141,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 142,
                              "end_byte": 155,
                              "text": "gcd ( A , B )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 142,
                                  "end_byte": 145,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 146,
                                  "end_byte": 155,
                                  "text": "( A , B )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 146,
                                      "end_byte": 147,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 148,
                                      "end_byte": 149,
                                      "text": "A",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 150,
                                      "end_byte": 151,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 152,
                                      "end_byte": 153,
                                      "text": "B",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 154,
                                      "end_byte": 155,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 156,
                          "end_byte": 157,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 158,
                      "end_byte": 177,
                      "text": "LCM = A * B / GCD ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 158,
                          "end_byte": 175,
                          "text": "LCM = A * B / GCD",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 158,
                              "end_byte": 161,
                              "text": "LCM",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 162,
                              "end_byte": 163,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 164,
                              "end_byte": 175,
                              "text": "A * B / GCD",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 164,
                                  "end_byte": 169,
                                  "text": "A * B",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 164,
                                      "end_byte": 165,
                                      "text": "A",
                                      "children": []
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 166,
                                      "end_byte": 167,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 168,
                                      "end_byte": 169,
                                      "text": "B",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 170,
                                  "end_byte": 171,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 172,
                                  "end_byte": 175,
                                  "text": "GCD",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 176,
                          "end_byte": 177,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 178,
                      "end_byte": 214,
                      "text": "printf ( \"%ld %ld\\n\" , GCD , LCM ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 178,
                          "end_byte": 212,
                          "text": "printf ( \"%ld %ld\\n\" , GCD , LCM )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 178,
                              "end_byte": 184,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 185,
                              "end_byte": 212,
                              "text": "( \"%ld %ld\\n\" , GCD , LCM )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 185,
                                  "end_byte": 186,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 187,
                                  "end_byte": 198,
                                  "text": "\"%ld %ld\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 187,
                                      "end_byte": 188,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 188,
                                      "end_byte": 195,
                                      "text": "%ld %ld",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 195,
                                      "end_byte": 197,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 197,
                                      "end_byte": 198,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 199,
                                  "end_byte": 200,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 201,
                                  "end_byte": 204,
                                  "text": "GCD",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 205,
                                  "end_byte": 206,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 207,
                                  "end_byte": 210,
                                  "text": "LCM",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 211,
                                  "end_byte": 212,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 213,
                          "end_byte": 214,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 215,
                      "end_byte": 216,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 217,
              "end_byte": 227,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 217,
                  "end_byte": 223,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 224,
                  "end_byte": 225,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 226,
                  "end_byte": 227,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 228,
              "end_byte": 229,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 230,
      "end_byte": 311,
      "text": "int gcd ( long A , long B ) { if ( B == 0 ) return A ; else gcd ( B , A % B ) ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 230,
          "end_byte": 233,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 234,
          "end_byte": 257,
          "text": "gcd ( long A , long B )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 234,
              "end_byte": 237,
              "text": "gcd",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 238,
              "end_byte": 257,
              "text": "( long A , long B )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 238,
                  "end_byte": 239,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 240,
                  "end_byte": 246,
                  "text": "long A",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 240,
                      "end_byte": 244,
                      "text": "long",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 240,
                          "end_byte": 244,
                          "text": "long",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 245,
                      "end_byte": 246,
                      "text": "A",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 247,
                  "end_byte": 248,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 249,
                  "end_byte": 255,
                  "text": "long B",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 249,
                      "end_byte": 253,
                      "text": "long",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 249,
                          "end_byte": 253,
                          "text": "long",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 254,
                      "end_byte": 255,
                      "text": "B",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 256,
                  "end_byte": 257,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 258,
          "end_byte": 311,
          "text": "{ if ( B == 0 ) return A ; else gcd ( B , A % B ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 258,
              "end_byte": 259,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 260,
              "end_byte": 309,
              "text": "if ( B == 0 ) return A ; else gcd ( B , A % B ) ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 260,
                  "end_byte": 262,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 263,
                  "end_byte": 273,
                  "text": "( B == 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 263,
                      "end_byte": 264,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 265,
                      "end_byte": 271,
                      "text": "B == 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 265,
                          "end_byte": 266,
                          "text": "B",
                          "children": []
                        },
                        {
                          "type": "==",
                          "start_byte": 267,
                          "end_byte": 269,
                          "text": "==",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 270,
                          "end_byte": 271,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 272,
                      "end_byte": 273,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 274,
                  "end_byte": 284,
                  "text": "return A ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 274,
                      "end_byte": 280,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 281,
                      "end_byte": 282,
                      "text": "A",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 283,
                      "end_byte": 284,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 285,
                  "end_byte": 309,
                  "text": "else gcd ( B , A % B ) ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 285,
                      "end_byte": 289,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 290,
                      "end_byte": 309,
                      "text": "gcd ( B , A % B ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 290,
                          "end_byte": 307,
                          "text": "gcd ( B , A % B )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 290,
                              "end_byte": 293,
                              "text": "gcd",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 294,
                              "end_byte": 307,
                              "text": "( B , A % B )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 294,
                                  "end_byte": 295,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 296,
                                  "end_byte": 297,
                                  "text": "B",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 298,
                                  "end_byte": 299,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 300,
                                  "end_byte": 305,
                                  "text": "A % B",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 300,
                                      "end_byte": 301,
                                      "text": "A",
                                      "children": []
                                    },
                                    {
                                      "type": "%",
                                      "start_byte": 302,
                                      "end_byte": 303,
                                      "text": "%",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 304,
                                      "end_byte": 305,
                                      "text": "B",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 306,
                                  "end_byte": 307,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 308,
                          "end_byte": 309,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 310,
              "end_byte": 311,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}