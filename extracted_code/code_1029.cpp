int main ( int argc , char * argv [ ] ) { int rows , max , cases ; int psum [ 100 ] ; int nsum [ 100 ] ; scanf ( "%d" , & cases ) ; while ( cases -- ) { scanf ( "%d" , & rows ) ; if ( rows > 3 ) { int i , j , k , z ; scanf ( "%d" , & i ) ; scanf ( "%d" , & j ) ; scanf ( "%d" , & k ) ; nsum [ 0 ] = i + j ; nsum [ 1 ] = i + k ; for ( i = 2 ; i < rows - 1 ; i ++ ) { psum [ 0 ] = nsum [ 0 ] ; scanf ( "%d" , & z ) ; nsum [ 0 ] += z ; for ( j = 1 ; j < i ; j ++ ) { psum [ j ] = nsum [ j ] ; scanf ( "%d" , & z ) ; nsum [ j ] = psum [ j - 1 ] + z > psum [ j ] + z ? psum [ j - 1 ] + z : psum [ j ] + z ; } scanf ( "%d" , & z ) ; nsum [ i ] = psum [ i - 1 ] + z ; } psum [ 0 ] = nsum [ 0 ] ; scanf ( "%d" , & z ) ; nsum [ 0 ] += z ; max = nsum [ 0 ] ; for ( j = 1 ; j < rows - 1 ; j ++ ) { psum [ j ] = nsum [ j ] ; scanf ( "%d" , & z ) ; nsum [ j ] = psum [ j - 1 ] + z > psum [ j ] + z ? psum [ j - 1 ] + z : psum [ j ] + z ; max = max > nsum [ j ] ? max : nsum [ j ] ; } scanf ( "%d" , & z ) ; nsum [ rows - 1 ] = psum [ rows - 2 ] + z ; printf ( "%d\n" , ( max > nsum [ rows - 1 ] ? max : nsum [ rows - 1 ] ) ) ; } else if ( rows == 3 ) { int sum [ 3 ] ; int i , j , k ; scanf ( "%d" , & i ) ; scanf ( "%d" , & sum [ 0 ] ) ; scanf ( "%d" , & sum [ 1 ] ) ; sum [ 0 ] += i ; sum [ 1 ] += i ; j = sum [ 0 ] ; k = sum [ 1 ] ; scanf ( "%d" , & i ) ; sum [ 0 ] += i ; max = sum [ 0 ] ; scanf ( "%d" , & i ) ; sum [ 1 ] = i + j > i + k ? i + j : i + k ; max = max > sum [ 1 ] ? max : sum [ 1 ] ; scanf ( "%d" , & i ) ; sum [ 2 ] = i + k ; printf ( "%d\n" , ( max > sum [ 2 ] ? max : sum [ 2 ] ) ) ; } else if ( rows == 2 ) { int sum [ 2 ] , i ; scanf ( "%d" , & i ) ; scanf ( "%d" , & sum [ 0 ] ) ; scanf ( "%d" , & sum [ 1 ] ) ; sum [ 0 ] += i ; sum [ 1 ] += i ; printf ( "%d\n" , ( sum [ 0 ] > sum [ 1 ] ? sum [ 0 ] : sum [ 1 ] ) ) ; } else if ( rows == 1 ) { scanf ( "%d" , & max ) ; printf ( "%d\n" , max ) ; } } return 0 ; }