int sum ( int a [ 5055 ] , int i , int j , int n ) { int m = i * ( i - 1 ) / 2 + j , max = - 1 , k , v1 , v2 ; if ( i == n - 1 ) if ( a [ m + i ] > a [ m + i + 1 ] ) return a [ m ] + a [ m + i ] ; else return a [ m ] + a [ m + i + 1 ] ; v1 = a [ m ] + sum ( a , i + 1 , j , n ) ; v2 = a [ m ] + sum ( a , i + 1 , j + 1 , n ) ; if ( v1 > v2 ) return v1 ; else return v2 ; } int main ( void ) { int t , n , a [ 5055 ] , i ; scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & n ) ; for ( i = 1 ; i <= n * ( n + 1 ) / 2 ; i ++ ) scanf ( "%d" , & a [ i ] ) ; printf ( "%d\n" , sum ( a , 1 , 1 , n ) ) ; } return 0 ; }