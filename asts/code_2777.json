{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 389,
  "text": "int main ( ) { long long int T , num , ans , scratch , prev , change ; scanf ( \"%lld\" , & T ) ; while ( T -- ) { prev = - 1 ; change = 0 ; scanf ( \"%lld\" , & num ) ; ans = num ; while ( num -- ) { scanf ( \"%lld\" , & scratch ) ; if ( scratch < prev && change ) { change = 0 ; ans ++ ; } else { change ++ ; } prev = scratch ; } if ( change ) ans ++ ; printf ( \"%d\\n\" , ans ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 389,
      "text": "int main ( ) { long long int T , num , ans , scratch , prev , change ; scanf ( \"%lld\" , & T ) ; while ( T -- ) { prev = - 1 ; change = 0 ; scanf ( \"%lld\" , & num ) ; ans = num ; while ( num -- ) { scanf ( \"%lld\" , & scratch ) ; if ( scratch < prev && change ) { change = 0 ; ans ++ ; } else { change ++ ; } prev = scratch ; } if ( change ) ans ++ ; printf ( \"%d\\n\" , ans ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 389,
          "text": "{ long long int T , num , ans , scratch , prev , change ; scanf ( \"%lld\" , & T ) ; while ( T -- ) { prev = - 1 ; change = 0 ; scanf ( \"%lld\" , & num ) ; ans = num ; while ( num -- ) { scanf ( \"%lld\" , & scratch ) ; if ( scratch < prev && change ) { change = 0 ; ans ++ ; } else { change ++ ; } prev = scratch ; } if ( change ) ans ++ ; printf ( \"%d\\n\" , ans ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 70,
              "text": "long long int T , num , ans , scratch , prev , change ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 15,
                  "end_byte": 28,
                  "text": "long long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 15,
                      "end_byte": 19,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "long",
                      "start_byte": 20,
                      "end_byte": 24,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 25,
                      "end_byte": 28,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 29,
                  "end_byte": 30,
                  "text": "T",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 31,
                  "end_byte": 32,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 33,
                  "end_byte": 36,
                  "text": "num",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 37,
                  "end_byte": 38,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 39,
                  "end_byte": 42,
                  "text": "ans",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 43,
                  "end_byte": 44,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 45,
                  "end_byte": 52,
                  "text": "scratch",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 53,
                  "end_byte": 54,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 55,
                  "end_byte": 59,
                  "text": "prev",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 60,
                  "end_byte": 61,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 62,
                  "end_byte": 68,
                  "text": "change",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 69,
                  "end_byte": 70,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 71,
              "end_byte": 95,
              "text": "scanf ( \"%lld\" , & T ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 71,
                  "end_byte": 93,
                  "text": "scanf ( \"%lld\" , & T )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 71,
                      "end_byte": 76,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 77,
                      "end_byte": 93,
                      "text": "( \"%lld\" , & T )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 77,
                          "end_byte": 78,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 79,
                          "end_byte": 85,
                          "text": "\"%lld\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 79,
                              "end_byte": 80,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 80,
                              "end_byte": 84,
                              "text": "%lld",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 84,
                              "end_byte": 85,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 86,
                          "end_byte": 87,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 88,
                          "end_byte": 91,
                          "text": "& T",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 88,
                              "end_byte": 89,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 90,
                              "end_byte": 91,
                              "text": "T",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 92,
                          "end_byte": 93,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 94,
                  "end_byte": 95,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 96,
              "end_byte": 376,
              "text": "while ( T -- ) { prev = - 1 ; change = 0 ; scanf ( \"%lld\" , & num ) ; ans = num ; while ( num -- ) { scanf ( \"%lld\" , & scratch ) ; if ( scratch < prev && change ) { change = 0 ; ans ++ ; } else { change ++ ; } prev = scratch ; } if ( change ) ans ++ ; printf ( \"%d\\n\" , ans ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 96,
                  "end_byte": 101,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 102,
                  "end_byte": 110,
                  "text": "( T -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 102,
                      "end_byte": 103,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 104,
                      "end_byte": 108,
                      "text": "T --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 104,
                          "end_byte": 105,
                          "text": "T",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 106,
                          "end_byte": 108,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 109,
                      "end_byte": 110,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 111,
                  "end_byte": 376,
                  "text": "{ prev = - 1 ; change = 0 ; scanf ( \"%lld\" , & num ) ; ans = num ; while ( num -- ) { scanf ( \"%lld\" , & scratch ) ; if ( scratch < prev && change ) { change = 0 ; ans ++ ; } else { change ++ ; } prev = scratch ; } if ( change ) ans ++ ; printf ( \"%d\\n\" , ans ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 111,
                      "end_byte": 112,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 113,
                      "end_byte": 125,
                      "text": "prev = - 1 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 113,
                          "end_byte": 123,
                          "text": "prev = - 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 113,
                              "end_byte": 117,
                              "text": "prev",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 118,
                              "end_byte": 119,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "unary_expression",
                              "start_byte": 120,
                              "end_byte": 123,
                              "text": "- 1",
                              "children": [
                                {
                                  "type": "-",
                                  "start_byte": 120,
                                  "end_byte": 121,
                                  "text": "-",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 122,
                                  "end_byte": 123,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 124,
                          "end_byte": 125,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 126,
                      "end_byte": 138,
                      "text": "change = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 126,
                          "end_byte": 136,
                          "text": "change = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 126,
                              "end_byte": 132,
                              "text": "change",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 133,
                              "end_byte": 134,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 135,
                              "end_byte": 136,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 137,
                          "end_byte": 138,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 139,
                      "end_byte": 165,
                      "text": "scanf ( \"%lld\" , & num ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 139,
                          "end_byte": 163,
                          "text": "scanf ( \"%lld\" , & num )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 139,
                              "end_byte": 144,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 145,
                              "end_byte": 163,
                              "text": "( \"%lld\" , & num )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 145,
                                  "end_byte": 146,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 147,
                                  "end_byte": 153,
                                  "text": "\"%lld\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 147,
                                      "end_byte": 148,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 148,
                                      "end_byte": 152,
                                      "text": "%lld",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 152,
                                      "end_byte": 153,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 154,
                                  "end_byte": 155,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 156,
                                  "end_byte": 161,
                                  "text": "& num",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 156,
                                      "end_byte": 157,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 158,
                                      "end_byte": 161,
                                      "text": "num",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 162,
                                  "end_byte": 163,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 164,
                          "end_byte": 165,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 166,
                      "end_byte": 177,
                      "text": "ans = num ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 166,
                          "end_byte": 175,
                          "text": "ans = num",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 166,
                              "end_byte": 169,
                              "text": "ans",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 170,
                              "end_byte": 171,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 172,
                              "end_byte": 175,
                              "text": "num",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 176,
                          "end_byte": 177,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 178,
                      "end_byte": 325,
                      "text": "while ( num -- ) { scanf ( \"%lld\" , & scratch ) ; if ( scratch < prev && change ) { change = 0 ; ans ++ ; } else { change ++ ; } prev = scratch ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 178,
                          "end_byte": 183,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 184,
                          "end_byte": 194,
                          "text": "( num -- )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 184,
                              "end_byte": 185,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "update_expression",
                              "start_byte": 186,
                              "end_byte": 192,
                              "text": "num --",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 186,
                                  "end_byte": 189,
                                  "text": "num",
                                  "children": []
                                },
                                {
                                  "type": "--",
                                  "start_byte": 190,
                                  "end_byte": 192,
                                  "text": "--",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 193,
                              "end_byte": 194,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 195,
                          "end_byte": 325,
                          "text": "{ scanf ( \"%lld\" , & scratch ) ; if ( scratch < prev && change ) { change = 0 ; ans ++ ; } else { change ++ ; } prev = scratch ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 195,
                              "end_byte": 196,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 197,
                              "end_byte": 227,
                              "text": "scanf ( \"%lld\" , & scratch ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 197,
                                  "end_byte": 225,
                                  "text": "scanf ( \"%lld\" , & scratch )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 197,
                                      "end_byte": 202,
                                      "text": "scanf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 203,
                                      "end_byte": 225,
                                      "text": "( \"%lld\" , & scratch )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 203,
                                          "end_byte": 204,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 205,
                                          "end_byte": 211,
                                          "text": "\"%lld\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 205,
                                              "end_byte": 206,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 206,
                                              "end_byte": 210,
                                              "text": "%lld",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 210,
                                              "end_byte": 211,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 212,
                                          "end_byte": 213,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "pointer_expression",
                                          "start_byte": 214,
                                          "end_byte": 223,
                                          "text": "& scratch",
                                          "children": [
                                            {
                                              "type": "&",
                                              "start_byte": 214,
                                              "end_byte": 215,
                                              "text": "&",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 216,
                                              "end_byte": 223,
                                              "text": "scratch",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 224,
                                          "end_byte": 225,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 226,
                                  "end_byte": 227,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 228,
                              "end_byte": 306,
                              "text": "if ( scratch < prev && change ) { change = 0 ; ans ++ ; } else { change ++ ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 228,
                                  "end_byte": 230,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 231,
                                  "end_byte": 259,
                                  "text": "( scratch < prev && change )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 231,
                                      "end_byte": 232,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 233,
                                      "end_byte": 257,
                                      "text": "scratch < prev && change",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 233,
                                          "end_byte": 247,
                                          "text": "scratch < prev",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 233,
                                              "end_byte": 240,
                                              "text": "scratch",
                                              "children": []
                                            },
                                            {
                                              "type": "<",
                                              "start_byte": 241,
                                              "end_byte": 242,
                                              "text": "<",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 243,
                                              "end_byte": 247,
                                              "text": "prev",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "&&",
                                          "start_byte": 248,
                                          "end_byte": 250,
                                          "text": "&&",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 251,
                                          "end_byte": 257,
                                          "text": "change",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 258,
                                      "end_byte": 259,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 260,
                                  "end_byte": 285,
                                  "text": "{ change = 0 ; ans ++ ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 260,
                                      "end_byte": 261,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 262,
                                      "end_byte": 274,
                                      "text": "change = 0 ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 262,
                                          "end_byte": 272,
                                          "text": "change = 0",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 262,
                                              "end_byte": 268,
                                              "text": "change",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 269,
                                              "end_byte": 270,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 271,
                                              "end_byte": 272,
                                              "text": "0",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 273,
                                          "end_byte": 274,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 275,
                                      "end_byte": 283,
                                      "text": "ans ++ ;",
                                      "children": [
                                        {
                                          "type": "update_expression",
                                          "start_byte": 275,
                                          "end_byte": 281,
                                          "text": "ans ++",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 275,
                                              "end_byte": 278,
                                              "text": "ans",
                                              "children": []
                                            },
                                            {
                                              "type": "++",
                                              "start_byte": 279,
                                              "end_byte": 281,
                                              "text": "++",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 282,
                                          "end_byte": 283,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 284,
                                      "end_byte": 285,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start_byte": 286,
                                  "end_byte": 306,
                                  "text": "else { change ++ ; }",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start_byte": 286,
                                      "end_byte": 290,
                                      "text": "else",
                                      "children": []
                                    },
                                    {
                                      "type": "compound_statement",
                                      "start_byte": 291,
                                      "end_byte": 306,
                                      "text": "{ change ++ ; }",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start_byte": 291,
                                          "end_byte": 292,
                                          "text": "{",
                                          "children": []
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 293,
                                          "end_byte": 304,
                                          "text": "change ++ ;",
                                          "children": [
                                            {
                                              "type": "update_expression",
                                              "start_byte": 293,
                                              "end_byte": 302,
                                              "text": "change ++",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 293,
                                                  "end_byte": 299,
                                                  "text": "change",
                                                  "children": []
                                                },
                                                {
                                                  "type": "++",
                                                  "start_byte": 300,
                                                  "end_byte": 302,
                                                  "text": "++",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 303,
                                              "end_byte": 304,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start_byte": 305,
                                          "end_byte": 306,
                                          "text": "}",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 307,
                              "end_byte": 323,
                              "text": "prev = scratch ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 307,
                                  "end_byte": 321,
                                  "text": "prev = scratch",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 307,
                                      "end_byte": 311,
                                      "text": "prev",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 312,
                                      "end_byte": 313,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 314,
                                      "end_byte": 321,
                                      "text": "scratch",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 322,
                                  "end_byte": 323,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 324,
                              "end_byte": 325,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 326,
                      "end_byte": 348,
                      "text": "if ( change ) ans ++ ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 326,
                          "end_byte": 328,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 329,
                          "end_byte": 339,
                          "text": "( change )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 329,
                              "end_byte": 330,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 331,
                              "end_byte": 337,
                              "text": "change",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 338,
                              "end_byte": 339,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 340,
                          "end_byte": 348,
                          "text": "ans ++ ;",
                          "children": [
                            {
                              "type": "update_expression",
                              "start_byte": 340,
                              "end_byte": 346,
                              "text": "ans ++",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 340,
                                  "end_byte": 343,
                                  "text": "ans",
                                  "children": []
                                },
                                {
                                  "type": "++",
                                  "start_byte": 344,
                                  "end_byte": 346,
                                  "text": "++",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 347,
                              "end_byte": 348,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 349,
                      "end_byte": 374,
                      "text": "printf ( \"%d\\n\" , ans ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 349,
                          "end_byte": 372,
                          "text": "printf ( \"%d\\n\" , ans )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 349,
                              "end_byte": 355,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 356,
                              "end_byte": 372,
                              "text": "( \"%d\\n\" , ans )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 356,
                                  "end_byte": 357,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 358,
                                  "end_byte": 364,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 358,
                                      "end_byte": 359,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 359,
                                      "end_byte": 361,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 361,
                                      "end_byte": 363,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 363,
                                      "end_byte": 364,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 365,
                                  "end_byte": 366,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 367,
                                  "end_byte": 370,
                                  "text": "ans",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 371,
                                  "end_byte": 372,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 373,
                          "end_byte": 374,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 375,
                      "end_byte": 376,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 377,
              "end_byte": 387,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 377,
                  "end_byte": 383,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 384,
                  "end_byte": 385,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 386,
                  "end_byte": 387,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 388,
              "end_byte": 389,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}