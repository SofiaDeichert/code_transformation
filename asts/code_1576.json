{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 552,
  "text": "int main ( ) { int t ; int a , b ; int gcd ; long long int lcm ; scanf ( \"%d\" , & t ) ; while ( t > 0 ) { scanf ( \"%d%d\" , & a , & b ) ; long long int product = ( a * b ) ; int small = ( a < b ) ? a : b ; int big = ( a > b ) ? a : b ; if ( ( a % small ) == 0 && ( b % small ) == 0 ) gcd = small ; else { int remainder = big % small ; int keep = small ; int temp ; while ( remainder != 0 ) { temp = remainder ; remainder = keep % remainder ; keep = temp ; } gcd = keep ; } lcm = product / gcd ; printf ( \"%d %lld\\n\" , gcd , lcm ) ; t -- ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 552,
      "text": "int main ( ) { int t ; int a , b ; int gcd ; long long int lcm ; scanf ( \"%d\" , & t ) ; while ( t > 0 ) { scanf ( \"%d%d\" , & a , & b ) ; long long int product = ( a * b ) ; int small = ( a < b ) ? a : b ; int big = ( a > b ) ? a : b ; if ( ( a % small ) == 0 && ( b % small ) == 0 ) gcd = small ; else { int remainder = big % small ; int keep = small ; int temp ; while ( remainder != 0 ) { temp = remainder ; remainder = keep % remainder ; keep = temp ; } gcd = keep ; } lcm = product / gcd ; printf ( \"%d %lld\\n\" , gcd , lcm ) ; t -- ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 552,
          "text": "{ int t ; int a , b ; int gcd ; long long int lcm ; scanf ( \"%d\" , & t ) ; while ( t > 0 ) { scanf ( \"%d%d\" , & a , & b ) ; long long int product = ( a * b ) ; int small = ( a < b ) ? a : b ; int big = ( a > b ) ? a : b ; if ( ( a % small ) == 0 && ( b % small ) == 0 ) gcd = small ; else { int remainder = big % small ; int keep = small ; int temp ; while ( remainder != 0 ) { temp = remainder ; remainder = keep % remainder ; keep = temp ; } gcd = keep ; } lcm = product / gcd ; printf ( \"%d %lld\\n\" , gcd , lcm ) ; t -- ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 22,
              "text": "int t ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 23,
              "end_byte": 34,
              "text": "int a , b ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 23,
                  "end_byte": 26,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 27,
                  "end_byte": 28,
                  "text": "a",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 29,
                  "end_byte": 30,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 31,
                  "end_byte": 32,
                  "text": "b",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 33,
                  "end_byte": 34,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 35,
              "end_byte": 44,
              "text": "int gcd ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 35,
                  "end_byte": 38,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 39,
                  "end_byte": 42,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 43,
                  "end_byte": 44,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 45,
              "end_byte": 64,
              "text": "long long int lcm ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 45,
                  "end_byte": 58,
                  "text": "long long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 45,
                      "end_byte": 49,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "long",
                      "start_byte": 50,
                      "end_byte": 54,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 55,
                      "end_byte": 58,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 59,
                  "end_byte": 62,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 63,
                  "end_byte": 64,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 65,
              "end_byte": 87,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 65,
                  "end_byte": 85,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 65,
                      "end_byte": 70,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 71,
                      "end_byte": 85,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 71,
                          "end_byte": 72,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 73,
                          "end_byte": 77,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 73,
                              "end_byte": 74,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 74,
                              "end_byte": 76,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 76,
                              "end_byte": 77,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 78,
                          "end_byte": 79,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 80,
                          "end_byte": 83,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 80,
                              "end_byte": 81,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 82,
                              "end_byte": 83,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 84,
                          "end_byte": 85,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 86,
                  "end_byte": 87,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 88,
              "end_byte": 539,
              "text": "while ( t > 0 ) { scanf ( \"%d%d\" , & a , & b ) ; long long int product = ( a * b ) ; int small = ( a < b ) ? a : b ; int big = ( a > b ) ? a : b ; if ( ( a % small ) == 0 && ( b % small ) == 0 ) gcd = small ; else { int remainder = big % small ; int keep = small ; int temp ; while ( remainder != 0 ) { temp = remainder ; remainder = keep % remainder ; keep = temp ; } gcd = keep ; } lcm = product / gcd ; printf ( \"%d %lld\\n\" , gcd , lcm ) ; t -- ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 88,
                  "end_byte": 93,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 94,
                  "end_byte": 103,
                  "text": "( t > 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 94,
                      "end_byte": 95,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 96,
                      "end_byte": 101,
                      "text": "t > 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 96,
                          "end_byte": 97,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 98,
                          "end_byte": 99,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 100,
                          "end_byte": 101,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 102,
                      "end_byte": 103,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 104,
                  "end_byte": 539,
                  "text": "{ scanf ( \"%d%d\" , & a , & b ) ; long long int product = ( a * b ) ; int small = ( a < b ) ? a : b ; int big = ( a > b ) ? a : b ; if ( ( a % small ) == 0 && ( b % small ) == 0 ) gcd = small ; else { int remainder = big % small ; int keep = small ; int temp ; while ( remainder != 0 ) { temp = remainder ; remainder = keep % remainder ; keep = temp ; } gcd = keep ; } lcm = product / gcd ; printf ( \"%d %lld\\n\" , gcd , lcm ) ; t -- ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 104,
                      "end_byte": 105,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 106,
                      "end_byte": 136,
                      "text": "scanf ( \"%d%d\" , & a , & b ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 106,
                          "end_byte": 134,
                          "text": "scanf ( \"%d%d\" , & a , & b )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 106,
                              "end_byte": 111,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 112,
                              "end_byte": 134,
                              "text": "( \"%d%d\" , & a , & b )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 112,
                                  "end_byte": 113,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 114,
                                  "end_byte": 120,
                                  "text": "\"%d%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 114,
                                      "end_byte": 115,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 115,
                                      "end_byte": 119,
                                      "text": "%d%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 119,
                                      "end_byte": 120,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 121,
                                  "end_byte": 122,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 123,
                                  "end_byte": 126,
                                  "text": "& a",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 123,
                                      "end_byte": 124,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 125,
                                      "end_byte": 126,
                                      "text": "a",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 127,
                                  "end_byte": 128,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 129,
                                  "end_byte": 132,
                                  "text": "& b",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 129,
                                      "end_byte": 130,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 131,
                                      "end_byte": 132,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 133,
                                  "end_byte": 134,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 135,
                          "end_byte": 136,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 137,
                      "end_byte": 172,
                      "text": "long long int product = ( a * b ) ;",
                      "children": [
                        {
                          "type": "sized_type_specifier",
                          "start_byte": 137,
                          "end_byte": 150,
                          "text": "long long int",
                          "children": [
                            {
                              "type": "long",
                              "start_byte": 137,
                              "end_byte": 141,
                              "text": "long",
                              "children": []
                            },
                            {
                              "type": "long",
                              "start_byte": 142,
                              "end_byte": 146,
                              "text": "long",
                              "children": []
                            },
                            {
                              "type": "primitive_type",
                              "start_byte": 147,
                              "end_byte": 150,
                              "text": "int",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "init_declarator",
                          "start_byte": 151,
                          "end_byte": 170,
                          "text": "product = ( a * b )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 151,
                              "end_byte": 158,
                              "text": "product",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 159,
                              "end_byte": 160,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "parenthesized_expression",
                              "start_byte": 161,
                              "end_byte": 170,
                              "text": "( a * b )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 161,
                                  "end_byte": 162,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 163,
                                  "end_byte": 168,
                                  "text": "a * b",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 163,
                                      "end_byte": 164,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 165,
                                      "end_byte": 166,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 167,
                                      "end_byte": 168,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 169,
                                  "end_byte": 170,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 171,
                          "end_byte": 172,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 173,
                      "end_byte": 204,
                      "text": "int small = ( a < b ) ? a : b ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 173,
                          "end_byte": 176,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "init_declarator",
                          "start_byte": 177,
                          "end_byte": 202,
                          "text": "small = ( a < b ) ? a : b",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 177,
                              "end_byte": 182,
                              "text": "small",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 183,
                              "end_byte": 184,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "conditional_expression",
                              "start_byte": 185,
                              "end_byte": 202,
                              "text": "( a < b ) ? a : b",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 185,
                                  "end_byte": 194,
                                  "text": "( a < b )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 185,
                                      "end_byte": 186,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 187,
                                      "end_byte": 192,
                                      "text": "a < b",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 187,
                                          "end_byte": 188,
                                          "text": "a",
                                          "children": []
                                        },
                                        {
                                          "type": "<",
                                          "start_byte": 189,
                                          "end_byte": 190,
                                          "text": "<",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 191,
                                          "end_byte": 192,
                                          "text": "b",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 193,
                                      "end_byte": 194,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "?",
                                  "start_byte": 195,
                                  "end_byte": 196,
                                  "text": "?",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 197,
                                  "end_byte": 198,
                                  "text": "a",
                                  "children": []
                                },
                                {
                                  "type": ":",
                                  "start_byte": 199,
                                  "end_byte": 200,
                                  "text": ":",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 201,
                                  "end_byte": 202,
                                  "text": "b",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 203,
                          "end_byte": 204,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 205,
                      "end_byte": 234,
                      "text": "int big = ( a > b ) ? a : b ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 205,
                          "end_byte": 208,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "init_declarator",
                          "start_byte": 209,
                          "end_byte": 232,
                          "text": "big = ( a > b ) ? a : b",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 209,
                              "end_byte": 212,
                              "text": "big",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 213,
                              "end_byte": 214,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "conditional_expression",
                              "start_byte": 215,
                              "end_byte": 232,
                              "text": "( a > b ) ? a : b",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 215,
                                  "end_byte": 224,
                                  "text": "( a > b )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 215,
                                      "end_byte": 216,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 217,
                                      "end_byte": 222,
                                      "text": "a > b",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 217,
                                          "end_byte": 218,
                                          "text": "a",
                                          "children": []
                                        },
                                        {
                                          "type": ">",
                                          "start_byte": 219,
                                          "end_byte": 220,
                                          "text": ">",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 221,
                                          "end_byte": 222,
                                          "text": "b",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 223,
                                      "end_byte": 224,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "?",
                                  "start_byte": 225,
                                  "end_byte": 226,
                                  "text": "?",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 227,
                                  "end_byte": 228,
                                  "text": "a",
                                  "children": []
                                },
                                {
                                  "type": ":",
                                  "start_byte": 229,
                                  "end_byte": 230,
                                  "text": ":",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 231,
                                  "end_byte": 232,
                                  "text": "b",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 233,
                          "end_byte": 234,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 235,
                      "end_byte": 471,
                      "text": "if ( ( a % small ) == 0 && ( b % small ) == 0 ) gcd = small ; else { int remainder = big % small ; int keep = small ; int temp ; while ( remainder != 0 ) { temp = remainder ; remainder = keep % remainder ; keep = temp ; } gcd = keep ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 235,
                          "end_byte": 237,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 238,
                          "end_byte": 282,
                          "text": "( ( a % small ) == 0 && ( b % small ) == 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 238,
                              "end_byte": 239,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 240,
                              "end_byte": 280,
                              "text": "( a % small ) == 0 && ( b % small ) == 0",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 240,
                                  "end_byte": 258,
                                  "text": "( a % small ) == 0",
                                  "children": [
                                    {
                                      "type": "parenthesized_expression",
                                      "start_byte": 240,
                                      "end_byte": 253,
                                      "text": "( a % small )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 240,
                                          "end_byte": 241,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 242,
                                          "end_byte": 251,
                                          "text": "a % small",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 242,
                                              "end_byte": 243,
                                              "text": "a",
                                              "children": []
                                            },
                                            {
                                              "type": "%",
                                              "start_byte": 244,
                                              "end_byte": 245,
                                              "text": "%",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 246,
                                              "end_byte": 251,
                                              "text": "small",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 252,
                                          "end_byte": 253,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "==",
                                      "start_byte": 254,
                                      "end_byte": 256,
                                      "text": "==",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 257,
                                      "end_byte": 258,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "&&",
                                  "start_byte": 259,
                                  "end_byte": 261,
                                  "text": "&&",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 262,
                                  "end_byte": 280,
                                  "text": "( b % small ) == 0",
                                  "children": [
                                    {
                                      "type": "parenthesized_expression",
                                      "start_byte": 262,
                                      "end_byte": 275,
                                      "text": "( b % small )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 262,
                                          "end_byte": 263,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 264,
                                          "end_byte": 273,
                                          "text": "b % small",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 264,
                                              "end_byte": 265,
                                              "text": "b",
                                              "children": []
                                            },
                                            {
                                              "type": "%",
                                              "start_byte": 266,
                                              "end_byte": 267,
                                              "text": "%",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 268,
                                              "end_byte": 273,
                                              "text": "small",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 274,
                                          "end_byte": 275,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "==",
                                      "start_byte": 276,
                                      "end_byte": 278,
                                      "text": "==",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 279,
                                      "end_byte": 280,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 281,
                              "end_byte": 282,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 283,
                          "end_byte": 296,
                          "text": "gcd = small ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 283,
                              "end_byte": 294,
                              "text": "gcd = small",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 283,
                                  "end_byte": 286,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 287,
                                  "end_byte": 288,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 289,
                                  "end_byte": 294,
                                  "text": "small",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 295,
                              "end_byte": 296,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 297,
                          "end_byte": 471,
                          "text": "else { int remainder = big % small ; int keep = small ; int temp ; while ( remainder != 0 ) { temp = remainder ; remainder = keep % remainder ; keep = temp ; } gcd = keep ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 297,
                              "end_byte": 301,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 302,
                              "end_byte": 471,
                              "text": "{ int remainder = big % small ; int keep = small ; int temp ; while ( remainder != 0 ) { temp = remainder ; remainder = keep % remainder ; keep = temp ; } gcd = keep ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 302,
                                  "end_byte": 303,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "declaration",
                                  "start_byte": 304,
                                  "end_byte": 333,
                                  "text": "int remainder = big % small ;",
                                  "children": [
                                    {
                                      "type": "primitive_type",
                                      "start_byte": 304,
                                      "end_byte": 307,
                                      "text": "int",
                                      "children": []
                                    },
                                    {
                                      "type": "init_declarator",
                                      "start_byte": 308,
                                      "end_byte": 331,
                                      "text": "remainder = big % small",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 308,
                                          "end_byte": 317,
                                          "text": "remainder",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 318,
                                          "end_byte": 319,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 320,
                                          "end_byte": 331,
                                          "text": "big % small",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 320,
                                              "end_byte": 323,
                                              "text": "big",
                                              "children": []
                                            },
                                            {
                                              "type": "%",
                                              "start_byte": 324,
                                              "end_byte": 325,
                                              "text": "%",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 326,
                                              "end_byte": 331,
                                              "text": "small",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 332,
                                      "end_byte": 333,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "declaration",
                                  "start_byte": 334,
                                  "end_byte": 352,
                                  "text": "int keep = small ;",
                                  "children": [
                                    {
                                      "type": "primitive_type",
                                      "start_byte": 334,
                                      "end_byte": 337,
                                      "text": "int",
                                      "children": []
                                    },
                                    {
                                      "type": "init_declarator",
                                      "start_byte": 338,
                                      "end_byte": 350,
                                      "text": "keep = small",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 338,
                                          "end_byte": 342,
                                          "text": "keep",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 343,
                                          "end_byte": 344,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 345,
                                          "end_byte": 350,
                                          "text": "small",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 351,
                                      "end_byte": 352,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "declaration",
                                  "start_byte": 353,
                                  "end_byte": 363,
                                  "text": "int temp ;",
                                  "children": [
                                    {
                                      "type": "primitive_type",
                                      "start_byte": 353,
                                      "end_byte": 356,
                                      "text": "int",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 357,
                                      "end_byte": 361,
                                      "text": "temp",
                                      "children": []
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 362,
                                      "end_byte": 363,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "while_statement",
                                  "start_byte": 364,
                                  "end_byte": 456,
                                  "text": "while ( remainder != 0 ) { temp = remainder ; remainder = keep % remainder ; keep = temp ; }",
                                  "children": [
                                    {
                                      "type": "while",
                                      "start_byte": 364,
                                      "end_byte": 369,
                                      "text": "while",
                                      "children": []
                                    },
                                    {
                                      "type": "condition_clause",
                                      "start_byte": 370,
                                      "end_byte": 388,
                                      "text": "( remainder != 0 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 370,
                                          "end_byte": 371,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 372,
                                          "end_byte": 386,
                                          "text": "remainder != 0",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 372,
                                              "end_byte": 381,
                                              "text": "remainder",
                                              "children": []
                                            },
                                            {
                                              "type": "!=",
                                              "start_byte": 382,
                                              "end_byte": 384,
                                              "text": "!=",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 385,
                                              "end_byte": 386,
                                              "text": "0",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 387,
                                          "end_byte": 388,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "compound_statement",
                                      "start_byte": 389,
                                      "end_byte": 456,
                                      "text": "{ temp = remainder ; remainder = keep % remainder ; keep = temp ; }",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start_byte": 389,
                                          "end_byte": 390,
                                          "text": "{",
                                          "children": []
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 391,
                                          "end_byte": 409,
                                          "text": "temp = remainder ;",
                                          "children": [
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 391,
                                              "end_byte": 407,
                                              "text": "temp = remainder",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 391,
                                                  "end_byte": 395,
                                                  "text": "temp",
                                                  "children": []
                                                },
                                                {
                                                  "type": "=",
                                                  "start_byte": 396,
                                                  "end_byte": 397,
                                                  "text": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 398,
                                                  "end_byte": 407,
                                                  "text": "remainder",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 408,
                                              "end_byte": 409,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 410,
                                          "end_byte": 440,
                                          "text": "remainder = keep % remainder ;",
                                          "children": [
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 410,
                                              "end_byte": 438,
                                              "text": "remainder = keep % remainder",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 410,
                                                  "end_byte": 419,
                                                  "text": "remainder",
                                                  "children": []
                                                },
                                                {
                                                  "type": "=",
                                                  "start_byte": 420,
                                                  "end_byte": 421,
                                                  "text": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 422,
                                                  "end_byte": 438,
                                                  "text": "keep % remainder",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 422,
                                                      "end_byte": 426,
                                                      "text": "keep",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "%",
                                                      "start_byte": 427,
                                                      "end_byte": 428,
                                                      "text": "%",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 429,
                                                      "end_byte": 438,
                                                      "text": "remainder",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 439,
                                              "end_byte": 440,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 441,
                                          "end_byte": 454,
                                          "text": "keep = temp ;",
                                          "children": [
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 441,
                                              "end_byte": 452,
                                              "text": "keep = temp",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 441,
                                                  "end_byte": 445,
                                                  "text": "keep",
                                                  "children": []
                                                },
                                                {
                                                  "type": "=",
                                                  "start_byte": 446,
                                                  "end_byte": 447,
                                                  "text": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 448,
                                                  "end_byte": 452,
                                                  "text": "temp",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 453,
                                              "end_byte": 454,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start_byte": 455,
                                          "end_byte": 456,
                                          "text": "}",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 457,
                                  "end_byte": 469,
                                  "text": "gcd = keep ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 457,
                                      "end_byte": 467,
                                      "text": "gcd = keep",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 457,
                                          "end_byte": 460,
                                          "text": "gcd",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 461,
                                          "end_byte": 462,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 463,
                                          "end_byte": 467,
                                          "text": "keep",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 468,
                                      "end_byte": 469,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 470,
                                  "end_byte": 471,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 472,
                      "end_byte": 493,
                      "text": "lcm = product / gcd ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 472,
                          "end_byte": 491,
                          "text": "lcm = product / gcd",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 472,
                              "end_byte": 475,
                              "text": "lcm",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 476,
                              "end_byte": 477,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 478,
                              "end_byte": 491,
                              "text": "product / gcd",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 478,
                                  "end_byte": 485,
                                  "text": "product",
                                  "children": []
                                },
                                {
                                  "type": "/",
                                  "start_byte": 486,
                                  "end_byte": 487,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 488,
                                  "end_byte": 491,
                                  "text": "gcd",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 492,
                          "end_byte": 493,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 494,
                      "end_byte": 530,
                      "text": "printf ( \"%d %lld\\n\" , gcd , lcm ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 494,
                          "end_byte": 528,
                          "text": "printf ( \"%d %lld\\n\" , gcd , lcm )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 494,
                              "end_byte": 500,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 501,
                              "end_byte": 528,
                              "text": "( \"%d %lld\\n\" , gcd , lcm )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 501,
                                  "end_byte": 502,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 503,
                                  "end_byte": 514,
                                  "text": "\"%d %lld\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 503,
                                      "end_byte": 504,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 504,
                                      "end_byte": 511,
                                      "text": "%d %lld",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 511,
                                      "end_byte": 513,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 513,
                                      "end_byte": 514,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 515,
                                  "end_byte": 516,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 517,
                                  "end_byte": 520,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 521,
                                  "end_byte": 522,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 523,
                                  "end_byte": 526,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 527,
                                  "end_byte": 528,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 529,
                          "end_byte": 530,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 531,
                      "end_byte": 537,
                      "text": "t -- ;",
                      "children": [
                        {
                          "type": "update_expression",
                          "start_byte": 531,
                          "end_byte": 535,
                          "text": "t --",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 531,
                              "end_byte": 532,
                              "text": "t",
                              "children": []
                            },
                            {
                              "type": "--",
                              "start_byte": 533,
                              "end_byte": 535,
                              "text": "--",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 536,
                          "end_byte": 537,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 538,
                      "end_byte": 539,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 540,
              "end_byte": 550,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 540,
                  "end_byte": 546,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 547,
                  "end_byte": 548,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 549,
                  "end_byte": 550,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 551,
              "end_byte": 552,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}