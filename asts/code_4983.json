{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 199,
  "text": "int main ( ) { int i , j , k ; for ( i = 1 ; i <= 3 ; i ++ ) { k = 1 + i ; for ( j = 1 ; j <= 3 ; j ++ ) { if ( j <= i ) printf ( \"%i,k--\" ) ; else printf ( \" \" ) ; } printf ( \"\\n\" ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 199,
      "text": "int main ( ) { int i , j , k ; for ( i = 1 ; i <= 3 ; i ++ ) { k = 1 + i ; for ( j = 1 ; j <= 3 ; j ++ ) { if ( j <= i ) printf ( \"%i,k--\" ) ; else printf ( \" \" ) ; } printf ( \"\\n\" ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 199,
          "text": "{ int i , j , k ; for ( i = 1 ; i <= 3 ; i ++ ) { k = 1 + i ; for ( j = 1 ; j <= 3 ; j ++ ) { if ( j <= i ) printf ( \"%i,k--\" ) ; else printf ( \" \" ) ; } printf ( \"\\n\" ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 30,
              "text": "int i , j , k ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 23,
                  "end_byte": 24,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 27,
                  "end_byte": 28,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 29,
                  "end_byte": 30,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 31,
              "end_byte": 186,
              "text": "for ( i = 1 ; i <= 3 ; i ++ ) { k = 1 + i ; for ( j = 1 ; j <= 3 ; j ++ ) { if ( j <= i ) printf ( \"%i,k--\" ) ; else printf ( \" \" ) ; } printf ( \"\\n\" ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 31,
                  "end_byte": 34,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 35,
                  "end_byte": 36,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 37,
                  "end_byte": 42,
                  "text": "i = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 37,
                      "end_byte": 38,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 39,
                      "end_byte": 40,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 41,
                      "end_byte": 42,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 43,
                  "end_byte": 44,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 45,
                  "end_byte": 51,
                  "text": "i <= 3",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 45,
                      "end_byte": 46,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<=",
                      "start_byte": 47,
                      "end_byte": 49,
                      "text": "<=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 50,
                      "end_byte": 51,
                      "text": "3",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 52,
                  "end_byte": 53,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 54,
                  "end_byte": 58,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 54,
                      "end_byte": 55,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 56,
                      "end_byte": 58,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 59,
                  "end_byte": 60,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 61,
                  "end_byte": 186,
                  "text": "{ k = 1 + i ; for ( j = 1 ; j <= 3 ; j ++ ) { if ( j <= i ) printf ( \"%i,k--\" ) ; else printf ( \" \" ) ; } printf ( \"\\n\" ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 61,
                      "end_byte": 62,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 63,
                      "end_byte": 74,
                      "text": "k = 1 + i ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 63,
                          "end_byte": 72,
                          "text": "k = 1 + i",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 63,
                              "end_byte": 64,
                              "text": "k",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 65,
                              "end_byte": 66,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 67,
                              "end_byte": 72,
                              "text": "1 + i",
                              "children": [
                                {
                                  "type": "number_literal",
                                  "start_byte": 67,
                                  "end_byte": 68,
                                  "text": "1",
                                  "children": []
                                },
                                {
                                  "type": "+",
                                  "start_byte": 69,
                                  "end_byte": 70,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 71,
                                  "end_byte": 72,
                                  "text": "i",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 73,
                          "end_byte": 74,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 75,
                      "end_byte": 166,
                      "text": "for ( j = 1 ; j <= 3 ; j ++ ) { if ( j <= i ) printf ( \"%i,k--\" ) ; else printf ( \" \" ) ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 75,
                          "end_byte": 78,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 79,
                          "end_byte": 80,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 81,
                          "end_byte": 86,
                          "text": "j = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 81,
                              "end_byte": 82,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 83,
                              "end_byte": 84,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 85,
                              "end_byte": 86,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 87,
                          "end_byte": 88,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 89,
                          "end_byte": 95,
                          "text": "j <= 3",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 89,
                              "end_byte": 90,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 91,
                              "end_byte": 93,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 94,
                              "end_byte": 95,
                              "text": "3",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 96,
                          "end_byte": 97,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 98,
                          "end_byte": 102,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 98,
                              "end_byte": 99,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 100,
                              "end_byte": 102,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 103,
                          "end_byte": 104,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 105,
                          "end_byte": 166,
                          "text": "{ if ( j <= i ) printf ( \"%i,k--\" ) ; else printf ( \" \" ) ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 105,
                              "end_byte": 106,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 107,
                              "end_byte": 164,
                              "text": "if ( j <= i ) printf ( \"%i,k--\" ) ; else printf ( \" \" ) ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 107,
                                  "end_byte": 109,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 110,
                                  "end_byte": 120,
                                  "text": "( j <= i )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 110,
                                      "end_byte": 111,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 112,
                                      "end_byte": 118,
                                      "text": "j <= i",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 112,
                                          "end_byte": 113,
                                          "text": "j",
                                          "children": []
                                        },
                                        {
                                          "type": "<=",
                                          "start_byte": 114,
                                          "end_byte": 116,
                                          "text": "<=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 117,
                                          "end_byte": 118,
                                          "text": "i",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 119,
                                      "end_byte": 120,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 121,
                                  "end_byte": 142,
                                  "text": "printf ( \"%i,k--\" ) ;",
                                  "children": [
                                    {
                                      "type": "call_expression",
                                      "start_byte": 121,
                                      "end_byte": 140,
                                      "text": "printf ( \"%i,k--\" )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 121,
                                          "end_byte": 127,
                                          "text": "printf",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 128,
                                          "end_byte": 140,
                                          "text": "( \"%i,k--\" )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 128,
                                              "end_byte": 129,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "string_literal",
                                              "start_byte": 130,
                                              "end_byte": 138,
                                              "text": "\"%i,k--\"",
                                              "children": [
                                                {
                                                  "type": "\"",
                                                  "start_byte": 130,
                                                  "end_byte": 131,
                                                  "text": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_content",
                                                  "start_byte": 131,
                                                  "end_byte": 137,
                                                  "text": "%i,k--",
                                                  "children": []
                                                },
                                                {
                                                  "type": "\"",
                                                  "start_byte": 137,
                                                  "end_byte": 138,
                                                  "text": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 139,
                                              "end_byte": 140,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 141,
                                      "end_byte": 142,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start_byte": 143,
                                  "end_byte": 164,
                                  "text": "else printf ( \" \" ) ;",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start_byte": 143,
                                      "end_byte": 147,
                                      "text": "else",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 148,
                                      "end_byte": 164,
                                      "text": "printf ( \" \" ) ;",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start_byte": 148,
                                          "end_byte": 162,
                                          "text": "printf ( \" \" )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 148,
                                              "end_byte": 154,
                                              "text": "printf",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 155,
                                              "end_byte": 162,
                                              "text": "( \" \" )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 155,
                                                  "end_byte": 156,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_literal",
                                                  "start_byte": 157,
                                                  "end_byte": 160,
                                                  "text": "\" \"",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 157,
                                                      "end_byte": 158,
                                                      "text": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start_byte": 158,
                                                      "end_byte": 159,
                                                      "text": " ",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 159,
                                                      "end_byte": 160,
                                                      "text": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 161,
                                                  "end_byte": 162,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 163,
                                          "end_byte": 164,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 165,
                              "end_byte": 166,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 167,
                      "end_byte": 184,
                      "text": "printf ( \"\\n\" ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 167,
                          "end_byte": 182,
                          "text": "printf ( \"\\n\" )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 167,
                              "end_byte": 173,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 174,
                              "end_byte": 182,
                              "text": "( \"\\n\" )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 174,
                                  "end_byte": 175,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 176,
                                  "end_byte": 180,
                                  "text": "\"\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 176,
                                      "end_byte": 177,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 177,
                                      "end_byte": 179,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 179,
                                      "end_byte": 180,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 181,
                                  "end_byte": 182,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 183,
                          "end_byte": 184,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 185,
                      "end_byte": 186,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 187,
              "end_byte": 197,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 187,
                  "end_byte": 193,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 194,
                  "end_byte": 195,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 196,
                  "end_byte": 197,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 198,
              "end_byte": 199,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}