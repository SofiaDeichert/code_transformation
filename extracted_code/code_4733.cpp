int u , v [ 100 ] [ 100 ] , cache [ 100 ] [ 100 ] ; int solve ( int i , int j ) { if ( i > u ) return 0 ; if ( cache [ i ] [ j ] > 0 ) return cache [ i ] [ j ] ; int t1 = solve ( i + 1 , j ) ; int t2 = solve ( i + 1 , j + 1 ) ; int t = ( ( t1 ) > ( t2 ) ? ( t1 ) : ( t2 ) ) + v [ i ] [ j ] ; cache [ i ] [ j ] = t ; return t ; } int main ( ) { int n , i , j , w ; scanf ( "%d" , & n ) ; w = n ; int sum [ 1000 ] ; int k = 0 ; while ( n -- ) { scanf ( "%d" , & u ) ; for ( i = 0 ; i < u ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) scanf ( "%d" , & v [ i ] [ j ] ) ; } for ( i = 0 ; i < 100 ; i ++ ) for ( j = 0 ; j < 100 ; j ++ ) cache [ i ] [ j ] = 0 ; sum [ k ] += solve ( 0 , 0 ) ; k ++ ; } i = 0 ; while ( i < w ) { printf ( "%d\n" , sum [ i ] ) ; i ++ ; } return 0 ; }