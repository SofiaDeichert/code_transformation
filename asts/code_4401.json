{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 532,
  "text": "int calc ( int , int [ ] ) ; int main ( void ) { int T , N , q , i = 0 , p , a [ 10 ] ; scanf ( \"%d\\n\" , & T ) ; while ( i < T ) { scanf ( \"%d\\n\" , & N ) ; for ( p = 0 ; p < N ; p ++ ) { scanf ( \" %d\" , & a [ p ] ) ; } printf ( \"\\n\" ) ; if ( N == 1 ) printf ( \"%d\" , N ) ; else { q = calc ( N , a ) ; printf ( \"%d\" , q ) ; } i ++ ; } return 0 ; } int calc ( int N , int b [ ] ) { int c = N ; int k , l ; for ( k = 0 ; k < N ; k ++ ) { for ( l = k + 1 ; l < N ; l ++ ) { if ( b [ k ] <= b [ l ] ) c ++ ; else break ; } } return c ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 28,
      "text": "int calc ( int , int [ ] ) ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 26,
          "text": "calc ( int , int [ ] )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "calc",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 26,
              "text": "( int , int [ ] )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 11,
                  "end_byte": 14,
                  "text": "int",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 11,
                      "end_byte": 14,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 15,
                  "end_byte": 16,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 17,
                  "end_byte": 24,
                  "text": "int [ ]",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 17,
                      "end_byte": 20,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "abstract_array_declarator",
                      "start_byte": 21,
                      "end_byte": 24,
                      "text": "[ ]",
                      "children": [
                        {
                          "type": "[",
                          "start_byte": 21,
                          "end_byte": 22,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 23,
                          "end_byte": 24,
                          "text": "]",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 27,
          "end_byte": 28,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 29,
      "end_byte": 346,
      "text": "int main ( void ) { int T , N , q , i = 0 , p , a [ 10 ] ; scanf ( \"%d\\n\" , & T ) ; while ( i < T ) { scanf ( \"%d\\n\" , & N ) ; for ( p = 0 ; p < N ; p ++ ) { scanf ( \" %d\" , & a [ p ] ) ; } printf ( \"\\n\" ) ; if ( N == 1 ) printf ( \"%d\" , N ) ; else { q = calc ( N , a ) ; printf ( \"%d\" , q ) ; } i ++ ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 29,
          "end_byte": 32,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 33,
          "end_byte": 46,
          "text": "main ( void )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 33,
              "end_byte": 37,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 38,
              "end_byte": 46,
              "text": "( void )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 38,
                  "end_byte": 39,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 40,
                  "end_byte": 44,
                  "text": "void",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 40,
                      "end_byte": 44,
                      "text": "void",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 45,
                  "end_byte": 46,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 47,
          "end_byte": 346,
          "text": "{ int T , N , q , i = 0 , p , a [ 10 ] ; scanf ( \"%d\\n\" , & T ) ; while ( i < T ) { scanf ( \"%d\\n\" , & N ) ; for ( p = 0 ; p < N ; p ++ ) { scanf ( \" %d\" , & a [ p ] ) ; } printf ( \"\\n\" ) ; if ( N == 1 ) printf ( \"%d\" , N ) ; else { q = calc ( N , a ) ; printf ( \"%d\" , q ) ; } i ++ ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 47,
              "end_byte": 48,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 49,
              "end_byte": 87,
              "text": "int T , N , q , i = 0 , p , a [ 10 ] ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 49,
                  "end_byte": 52,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 53,
                  "end_byte": 54,
                  "text": "T",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 55,
                  "end_byte": 56,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 57,
                  "end_byte": 58,
                  "text": "N",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 59,
                  "end_byte": 60,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 61,
                  "end_byte": 62,
                  "text": "q",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 63,
                  "end_byte": 64,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 65,
                  "end_byte": 70,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 65,
                      "end_byte": 66,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 67,
                      "end_byte": 68,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 69,
                      "end_byte": 70,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 71,
                  "end_byte": 72,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 73,
                  "end_byte": 74,
                  "text": "p",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 75,
                  "end_byte": 76,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 77,
                  "end_byte": 85,
                  "text": "a [ 10 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 77,
                      "end_byte": 78,
                      "text": "a",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 79,
                      "end_byte": 80,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 81,
                      "end_byte": 83,
                      "text": "10",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 84,
                      "end_byte": 85,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 86,
                  "end_byte": 87,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 88,
              "end_byte": 112,
              "text": "scanf ( \"%d\\n\" , & T ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 88,
                  "end_byte": 110,
                  "text": "scanf ( \"%d\\n\" , & T )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 88,
                      "end_byte": 93,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 94,
                      "end_byte": 110,
                      "text": "( \"%d\\n\" , & T )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 94,
                          "end_byte": 95,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 96,
                          "end_byte": 102,
                          "text": "\"%d\\n\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 96,
                              "end_byte": 97,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 97,
                              "end_byte": 99,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 99,
                              "end_byte": 101,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 101,
                              "end_byte": 102,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 103,
                          "end_byte": 104,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 105,
                          "end_byte": 108,
                          "text": "& T",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 105,
                              "end_byte": 106,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 107,
                              "end_byte": 108,
                              "text": "T",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 109,
                          "end_byte": 110,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 111,
                  "end_byte": 112,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 113,
              "end_byte": 333,
              "text": "while ( i < T ) { scanf ( \"%d\\n\" , & N ) ; for ( p = 0 ; p < N ; p ++ ) { scanf ( \" %d\" , & a [ p ] ) ; } printf ( \"\\n\" ) ; if ( N == 1 ) printf ( \"%d\" , N ) ; else { q = calc ( N , a ) ; printf ( \"%d\" , q ) ; } i ++ ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 113,
                  "end_byte": 118,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 119,
                  "end_byte": 128,
                  "text": "( i < T )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 119,
                      "end_byte": 120,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 121,
                      "end_byte": 126,
                      "text": "i < T",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 121,
                          "end_byte": 122,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": "<",
                          "start_byte": 123,
                          "end_byte": 124,
                          "text": "<",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 125,
                          "end_byte": 126,
                          "text": "T",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 127,
                      "end_byte": 128,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 129,
                  "end_byte": 333,
                  "text": "{ scanf ( \"%d\\n\" , & N ) ; for ( p = 0 ; p < N ; p ++ ) { scanf ( \" %d\" , & a [ p ] ) ; } printf ( \"\\n\" ) ; if ( N == 1 ) printf ( \"%d\" , N ) ; else { q = calc ( N , a ) ; printf ( \"%d\" , q ) ; } i ++ ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 129,
                      "end_byte": 130,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 131,
                      "end_byte": 155,
                      "text": "scanf ( \"%d\\n\" , & N ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 131,
                          "end_byte": 153,
                          "text": "scanf ( \"%d\\n\" , & N )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 131,
                              "end_byte": 136,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 137,
                              "end_byte": 153,
                              "text": "( \"%d\\n\" , & N )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 137,
                                  "end_byte": 138,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 139,
                                  "end_byte": 145,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 139,
                                      "end_byte": 140,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 140,
                                      "end_byte": 142,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 142,
                                      "end_byte": 144,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 144,
                                      "end_byte": 145,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 146,
                                  "end_byte": 147,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 148,
                                  "end_byte": 151,
                                  "text": "& N",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 148,
                                      "end_byte": 149,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 150,
                                      "end_byte": 151,
                                      "text": "N",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 152,
                                  "end_byte": 153,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 154,
                          "end_byte": 155,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 156,
                      "end_byte": 218,
                      "text": "for ( p = 0 ; p < N ; p ++ ) { scanf ( \" %d\" , & a [ p ] ) ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 156,
                          "end_byte": 159,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 160,
                          "end_byte": 161,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 162,
                          "end_byte": 167,
                          "text": "p = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 162,
                              "end_byte": 163,
                              "text": "p",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 164,
                              "end_byte": 165,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 166,
                              "end_byte": 167,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 168,
                          "end_byte": 169,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 170,
                          "end_byte": 175,
                          "text": "p < N",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 170,
                              "end_byte": 171,
                              "text": "p",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 172,
                              "end_byte": 173,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 174,
                              "end_byte": 175,
                              "text": "N",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 176,
                          "end_byte": 177,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 178,
                          "end_byte": 182,
                          "text": "p ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 178,
                              "end_byte": 179,
                              "text": "p",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 180,
                              "end_byte": 182,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 183,
                          "end_byte": 184,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 185,
                          "end_byte": 218,
                          "text": "{ scanf ( \" %d\" , & a [ p ] ) ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 185,
                              "end_byte": 186,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 187,
                              "end_byte": 216,
                              "text": "scanf ( \" %d\" , & a [ p ] ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 187,
                                  "end_byte": 214,
                                  "text": "scanf ( \" %d\" , & a [ p ] )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 187,
                                      "end_byte": 192,
                                      "text": "scanf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 193,
                                      "end_byte": 214,
                                      "text": "( \" %d\" , & a [ p ] )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 193,
                                          "end_byte": 194,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 195,
                                          "end_byte": 200,
                                          "text": "\" %d\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 195,
                                              "end_byte": 196,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 196,
                                              "end_byte": 199,
                                              "text": " %d",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 199,
                                              "end_byte": 200,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 201,
                                          "end_byte": 202,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "pointer_expression",
                                          "start_byte": 203,
                                          "end_byte": 212,
                                          "text": "& a [ p ]",
                                          "children": [
                                            {
                                              "type": "&",
                                              "start_byte": 203,
                                              "end_byte": 204,
                                              "text": "&",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 205,
                                              "end_byte": 212,
                                              "text": "a [ p ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 205,
                                                  "end_byte": 206,
                                                  "text": "a",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 207,
                                                  "end_byte": 212,
                                                  "text": "[ p ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 207,
                                                      "end_byte": 208,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 209,
                                                      "end_byte": 210,
                                                      "text": "p",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 211,
                                                      "end_byte": 212,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 213,
                                          "end_byte": 214,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 215,
                                  "end_byte": 216,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 217,
                              "end_byte": 218,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 219,
                      "end_byte": 236,
                      "text": "printf ( \"\\n\" ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 219,
                          "end_byte": 234,
                          "text": "printf ( \"\\n\" )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 219,
                              "end_byte": 225,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 226,
                              "end_byte": 234,
                              "text": "( \"\\n\" )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 226,
                                  "end_byte": 227,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 228,
                                  "end_byte": 232,
                                  "text": "\"\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 228,
                                      "end_byte": 229,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 229,
                                      "end_byte": 231,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 231,
                                      "end_byte": 232,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 233,
                                  "end_byte": 234,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 235,
                          "end_byte": 236,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 237,
                      "end_byte": 324,
                      "text": "if ( N == 1 ) printf ( \"%d\" , N ) ; else { q = calc ( N , a ) ; printf ( \"%d\" , q ) ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 237,
                          "end_byte": 239,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 240,
                          "end_byte": 250,
                          "text": "( N == 1 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 240,
                              "end_byte": 241,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 242,
                              "end_byte": 248,
                              "text": "N == 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 242,
                                  "end_byte": 243,
                                  "text": "N",
                                  "children": []
                                },
                                {
                                  "type": "==",
                                  "start_byte": 244,
                                  "end_byte": 246,
                                  "text": "==",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 247,
                                  "end_byte": 248,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 249,
                              "end_byte": 250,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 251,
                          "end_byte": 272,
                          "text": "printf ( \"%d\" , N ) ;",
                          "children": [
                            {
                              "type": "call_expression",
                              "start_byte": 251,
                              "end_byte": 270,
                              "text": "printf ( \"%d\" , N )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 251,
                                  "end_byte": 257,
                                  "text": "printf",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 258,
                                  "end_byte": 270,
                                  "text": "( \"%d\" , N )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 258,
                                      "end_byte": 259,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "string_literal",
                                      "start_byte": 260,
                                      "end_byte": 264,
                                      "text": "\"%d\"",
                                      "children": [
                                        {
                                          "type": "\"",
                                          "start_byte": 260,
                                          "end_byte": 261,
                                          "text": "\"",
                                          "children": []
                                        },
                                        {
                                          "type": "string_content",
                                          "start_byte": 261,
                                          "end_byte": 263,
                                          "text": "%d",
                                          "children": []
                                        },
                                        {
                                          "type": "\"",
                                          "start_byte": 263,
                                          "end_byte": 264,
                                          "text": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 265,
                                      "end_byte": 266,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 267,
                                      "end_byte": 268,
                                      "text": "N",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 269,
                                      "end_byte": 270,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 271,
                              "end_byte": 272,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 273,
                          "end_byte": 324,
                          "text": "else { q = calc ( N , a ) ; printf ( \"%d\" , q ) ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 273,
                              "end_byte": 277,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 278,
                              "end_byte": 324,
                              "text": "{ q = calc ( N , a ) ; printf ( \"%d\" , q ) ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 278,
                                  "end_byte": 279,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 280,
                                  "end_byte": 300,
                                  "text": "q = calc ( N , a ) ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 280,
                                      "end_byte": 298,
                                      "text": "q = calc ( N , a )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 280,
                                          "end_byte": 281,
                                          "text": "q",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 282,
                                          "end_byte": 283,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "call_expression",
                                          "start_byte": 284,
                                          "end_byte": 298,
                                          "text": "calc ( N , a )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 284,
                                              "end_byte": 288,
                                              "text": "calc",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 289,
                                              "end_byte": 298,
                                              "text": "( N , a )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 289,
                                                  "end_byte": 290,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 291,
                                                  "end_byte": 292,
                                                  "text": "N",
                                                  "children": []
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 293,
                                                  "end_byte": 294,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 295,
                                                  "end_byte": 296,
                                                  "text": "a",
                                                  "children": []
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 297,
                                                  "end_byte": 298,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 299,
                                      "end_byte": 300,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 301,
                                  "end_byte": 322,
                                  "text": "printf ( \"%d\" , q ) ;",
                                  "children": [
                                    {
                                      "type": "call_expression",
                                      "start_byte": 301,
                                      "end_byte": 320,
                                      "text": "printf ( \"%d\" , q )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 301,
                                          "end_byte": 307,
                                          "text": "printf",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 308,
                                          "end_byte": 320,
                                          "text": "( \"%d\" , q )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 308,
                                              "end_byte": 309,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "string_literal",
                                              "start_byte": 310,
                                              "end_byte": 314,
                                              "text": "\"%d\"",
                                              "children": [
                                                {
                                                  "type": "\"",
                                                  "start_byte": 310,
                                                  "end_byte": 311,
                                                  "text": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_content",
                                                  "start_byte": 311,
                                                  "end_byte": 313,
                                                  "text": "%d",
                                                  "children": []
                                                },
                                                {
                                                  "type": "\"",
                                                  "start_byte": 313,
                                                  "end_byte": 314,
                                                  "text": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 315,
                                              "end_byte": 316,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 317,
                                              "end_byte": 318,
                                              "text": "q",
                                              "children": []
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 319,
                                              "end_byte": 320,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 321,
                                      "end_byte": 322,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 323,
                                  "end_byte": 324,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 325,
                      "end_byte": 331,
                      "text": "i ++ ;",
                      "children": [
                        {
                          "type": "update_expression",
                          "start_byte": 325,
                          "end_byte": 329,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 325,
                              "end_byte": 326,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 327,
                              "end_byte": 329,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 330,
                          "end_byte": 331,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 332,
                      "end_byte": 333,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 334,
              "end_byte": 344,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 334,
                  "end_byte": 340,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 341,
                  "end_byte": 342,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 343,
                  "end_byte": 344,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 345,
              "end_byte": 346,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 347,
      "end_byte": 532,
      "text": "int calc ( int N , int b [ ] ) { int c = N ; int k , l ; for ( k = 0 ; k < N ; k ++ ) { for ( l = k + 1 ; l < N ; l ++ ) { if ( b [ k ] <= b [ l ] ) c ++ ; else break ; } } return c ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 347,
          "end_byte": 350,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 351,
          "end_byte": 377,
          "text": "calc ( int N , int b [ ] )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 351,
              "end_byte": 355,
              "text": "calc",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 356,
              "end_byte": 377,
              "text": "( int N , int b [ ] )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 356,
                  "end_byte": 357,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 358,
                  "end_byte": 363,
                  "text": "int N",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 358,
                      "end_byte": 361,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 362,
                      "end_byte": 363,
                      "text": "N",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 364,
                  "end_byte": 365,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 366,
                  "end_byte": 375,
                  "text": "int b [ ]",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 366,
                      "end_byte": 369,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "array_declarator",
                      "start_byte": 370,
                      "end_byte": 375,
                      "text": "b [ ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 370,
                          "end_byte": 371,
                          "text": "b",
                          "children": []
                        },
                        {
                          "type": "[",
                          "start_byte": 372,
                          "end_byte": 373,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 374,
                          "end_byte": 375,
                          "text": "]",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 376,
                  "end_byte": 377,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 378,
          "end_byte": 532,
          "text": "{ int c = N ; int k , l ; for ( k = 0 ; k < N ; k ++ ) { for ( l = k + 1 ; l < N ; l ++ ) { if ( b [ k ] <= b [ l ] ) c ++ ; else break ; } } return c ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 378,
              "end_byte": 379,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 380,
              "end_byte": 391,
              "text": "int c = N ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 380,
                  "end_byte": 383,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 384,
                  "end_byte": 389,
                  "text": "c = N",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 384,
                      "end_byte": 385,
                      "text": "c",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 386,
                      "end_byte": 387,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 388,
                      "end_byte": 389,
                      "text": "N",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 390,
                  "end_byte": 391,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 392,
              "end_byte": 403,
              "text": "int k , l ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 392,
                  "end_byte": 395,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 396,
                  "end_byte": 397,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 398,
                  "end_byte": 399,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 400,
                  "end_byte": 401,
                  "text": "l",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 402,
                  "end_byte": 403,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 404,
              "end_byte": 519,
              "text": "for ( k = 0 ; k < N ; k ++ ) { for ( l = k + 1 ; l < N ; l ++ ) { if ( b [ k ] <= b [ l ] ) c ++ ; else break ; } }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 404,
                  "end_byte": 407,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 408,
                  "end_byte": 409,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 410,
                  "end_byte": 415,
                  "text": "k = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 410,
                      "end_byte": 411,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 412,
                      "end_byte": 413,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 414,
                      "end_byte": 415,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 416,
                  "end_byte": 417,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 418,
                  "end_byte": 423,
                  "text": "k < N",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 418,
                      "end_byte": 419,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 420,
                      "end_byte": 421,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 422,
                      "end_byte": 423,
                      "text": "N",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 424,
                  "end_byte": 425,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 426,
                  "end_byte": 430,
                  "text": "k ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 426,
                      "end_byte": 427,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 428,
                      "end_byte": 430,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 431,
                  "end_byte": 432,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 433,
                  "end_byte": 519,
                  "text": "{ for ( l = k + 1 ; l < N ; l ++ ) { if ( b [ k ] <= b [ l ] ) c ++ ; else break ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 433,
                      "end_byte": 434,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 435,
                      "end_byte": 517,
                      "text": "for ( l = k + 1 ; l < N ; l ++ ) { if ( b [ k ] <= b [ l ] ) c ++ ; else break ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 435,
                          "end_byte": 438,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 439,
                          "end_byte": 440,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 441,
                          "end_byte": 450,
                          "text": "l = k + 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 441,
                              "end_byte": 442,
                              "text": "l",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 443,
                              "end_byte": 444,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 445,
                              "end_byte": 450,
                              "text": "k + 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 445,
                                  "end_byte": 446,
                                  "text": "k",
                                  "children": []
                                },
                                {
                                  "type": "+",
                                  "start_byte": 447,
                                  "end_byte": 448,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 449,
                                  "end_byte": 450,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 451,
                          "end_byte": 452,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 453,
                          "end_byte": 458,
                          "text": "l < N",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 453,
                              "end_byte": 454,
                              "text": "l",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 455,
                              "end_byte": 456,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 457,
                              "end_byte": 458,
                              "text": "N",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 459,
                          "end_byte": 460,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 461,
                          "end_byte": 465,
                          "text": "l ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 461,
                              "end_byte": 462,
                              "text": "l",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 463,
                              "end_byte": 465,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 466,
                          "end_byte": 467,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 468,
                          "end_byte": 517,
                          "text": "{ if ( b [ k ] <= b [ l ] ) c ++ ; else break ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 468,
                              "end_byte": 469,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 470,
                              "end_byte": 515,
                              "text": "if ( b [ k ] <= b [ l ] ) c ++ ; else break ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 470,
                                  "end_byte": 472,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 473,
                                  "end_byte": 495,
                                  "text": "( b [ k ] <= b [ l ] )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 473,
                                      "end_byte": 474,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 475,
                                      "end_byte": 493,
                                      "text": "b [ k ] <= b [ l ]",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 475,
                                          "end_byte": 482,
                                          "text": "b [ k ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 475,
                                              "end_byte": 476,
                                              "text": "b",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 477,
                                              "end_byte": 482,
                                              "text": "[ k ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 477,
                                                  "end_byte": 478,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 479,
                                                  "end_byte": 480,
                                                  "text": "k",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 481,
                                                  "end_byte": 482,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "<=",
                                          "start_byte": 483,
                                          "end_byte": 485,
                                          "text": "<=",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 486,
                                          "end_byte": 493,
                                          "text": "b [ l ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 486,
                                              "end_byte": 487,
                                              "text": "b",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 488,
                                              "end_byte": 493,
                                              "text": "[ l ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 488,
                                                  "end_byte": 489,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 490,
                                                  "end_byte": 491,
                                                  "text": "l",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 492,
                                                  "end_byte": 493,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 494,
                                      "end_byte": 495,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 496,
                                  "end_byte": 502,
                                  "text": "c ++ ;",
                                  "children": [
                                    {
                                      "type": "update_expression",
                                      "start_byte": 496,
                                      "end_byte": 500,
                                      "text": "c ++",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 496,
                                          "end_byte": 497,
                                          "text": "c",
                                          "children": []
                                        },
                                        {
                                          "type": "++",
                                          "start_byte": 498,
                                          "end_byte": 500,
                                          "text": "++",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 501,
                                      "end_byte": 502,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start_byte": 503,
                                  "end_byte": 515,
                                  "text": "else break ;",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start_byte": 503,
                                      "end_byte": 507,
                                      "text": "else",
                                      "children": []
                                    },
                                    {
                                      "type": "break_statement",
                                      "start_byte": 508,
                                      "end_byte": 515,
                                      "text": "break ;",
                                      "children": [
                                        {
                                          "type": "break",
                                          "start_byte": 508,
                                          "end_byte": 513,
                                          "text": "break",
                                          "children": []
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 514,
                                          "end_byte": 515,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 516,
                              "end_byte": 517,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 518,
                      "end_byte": 519,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 520,
              "end_byte": 530,
              "text": "return c ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 520,
                  "end_byte": 526,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 527,
                  "end_byte": 528,
                  "text": "c",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 529,
                  "end_byte": 530,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 531,
              "end_byte": 532,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}