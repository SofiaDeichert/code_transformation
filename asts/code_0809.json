{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 1422,
  "text": "char * tri = 0 ; char rows ; int size [ ] = { 1 , 1 , 2 , 4 , 7 , 11 , 16 , 22 , 29 , 37 , 46 , 56 , 67 , 79 , 92 , 106 , 121 , 137 , 154 , 172 , 191 , 211 , 232 , 254 , 277 , 301 , 326 , 352 , 379 , 407 , 436 , 466 , 497 , 529 , 562 , 596 , 631 , 667 , 704 , 742 , 781 , 821 , 862 , 904 , 947 , 991 , 1036 , 1082 , 1129 , 1177 , 1226 , 1276 , 1327 , 1379 , 1432 , 1486 , 1541 , 1597 , 1654 , 1712 , 1771 , 1831 , 1892 , 1954 , 2017 , 2081 , 2146 , 2212 , 2279 , 2347 , 2416 , 2486 , 2557 , 2629 , 2702 , 2776 , 2851 , 2927 , 3004 , 3082 , 3161 , 3241 , 3322 , 3404 , 3487 , 3571 , 3656 , 3742 , 3829 , 3917 , 4006 , 4096 , 4187 , 4279 , 4372 , 4466 , 4561 , 4657 , 4754 , 4852 , 4951 , 5051 , 5152 } ; void create ( ) { scanf ( \"%d\" , & rows ) ; free ( tri ) ; tri = malloc ( size [ rows + 1 ] ) ; int i , j ; for ( i = 1 ; i < size [ rows + 1 ] ; i ++ ) { scanf ( \"%d\" , tri + i ) ; } } void max ( ) { int i , j ; for ( i = rows - 1 ; i >= 1 ; i -- ) { for ( j = size [ i ] ; j < size [ i + 1 ] ; j ++ ) { tri [ j ] += MAX ( tri [ size [ i ] - size [ i - 1 ] + j + 1 ] , tri [ size [ i ] - size [ i - 1 ] + j + 2 ] ) ; } } } void pr ( ) { int i , j ; for ( i = 1 ; i <= rows ; i ++ ) { for ( j = size [ i ] ; j < size [ i + 1 ] ; j ++ ) { printf ( \"%d \" , tri [ j ] ) ; } printf ( \"\\n\" ) ; } } main ( ) { int n ; scanf ( \"%d\" , & n ) ; for ( ; n >= 1 ; n -- ) { create ( ) ; max ( ) ; printf ( \"%d\\n\" , tri [ 1 ] ) ; } }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 16,
      "text": "char * tri = 0 ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 4,
          "text": "char",
          "children": []
        },
        {
          "type": "init_declarator",
          "start_byte": 5,
          "end_byte": 14,
          "text": "* tri = 0",
          "children": [
            {
              "type": "pointer_declarator",
              "start_byte": 5,
              "end_byte": 10,
              "text": "* tri",
              "children": [
                {
                  "type": "*",
                  "start_byte": 5,
                  "end_byte": 6,
                  "text": "*",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 7,
                  "end_byte": 10,
                  "text": "tri",
                  "children": []
                }
              ]
            },
            {
              "type": "=",
              "start_byte": 11,
              "end_byte": 12,
              "text": "=",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 13,
              "end_byte": 14,
              "text": "0",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 15,
          "end_byte": 16,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 17,
      "end_byte": 28,
      "text": "char rows ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 17,
          "end_byte": 21,
          "text": "char",
          "children": []
        },
        {
          "type": "identifier",
          "start_byte": 22,
          "end_byte": 26,
          "text": "rows",
          "children": []
        },
        {
          "type": ";",
          "start_byte": 27,
          "end_byte": 28,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 29,
      "end_byte": 702,
      "text": "int size [ ] = { 1 , 1 , 2 , 4 , 7 , 11 , 16 , 22 , 29 , 37 , 46 , 56 , 67 , 79 , 92 , 106 , 121 , 137 , 154 , 172 , 191 , 211 , 232 , 254 , 277 , 301 , 326 , 352 , 379 , 407 , 436 , 466 , 497 , 529 , 562 , 596 , 631 , 667 , 704 , 742 , 781 , 821 , 862 , 904 , 947 , 991 , 1036 , 1082 , 1129 , 1177 , 1226 , 1276 , 1327 , 1379 , 1432 , 1486 , 1541 , 1597 , 1654 , 1712 , 1771 , 1831 , 1892 , 1954 , 2017 , 2081 , 2146 , 2212 , 2279 , 2347 , 2416 , 2486 , 2557 , 2629 , 2702 , 2776 , 2851 , 2927 , 3004 , 3082 , 3161 , 3241 , 3322 , 3404 , 3487 , 3571 , 3656 , 3742 , 3829 , 3917 , 4006 , 4096 , 4187 , 4279 , 4372 , 4466 , 4561 , 4657 , 4754 , 4852 , 4951 , 5051 , 5152 } ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 29,
          "end_byte": 32,
          "text": "int",
          "children": []
        },
        {
          "type": "init_declarator",
          "start_byte": 33,
          "end_byte": 700,
          "text": "size [ ] = { 1 , 1 , 2 , 4 , 7 , 11 , 16 , 22 , 29 , 37 , 46 , 56 , 67 , 79 , 92 , 106 , 121 , 137 , 154 , 172 , 191 , 211 , 232 , 254 , 277 , 301 , 326 , 352 , 379 , 407 , 436 , 466 , 497 , 529 , 562 , 596 , 631 , 667 , 704 , 742 , 781 , 821 , 862 , 904 , 947 , 991 , 1036 , 1082 , 1129 , 1177 , 1226 , 1276 , 1327 , 1379 , 1432 , 1486 , 1541 , 1597 , 1654 , 1712 , 1771 , 1831 , 1892 , 1954 , 2017 , 2081 , 2146 , 2212 , 2279 , 2347 , 2416 , 2486 , 2557 , 2629 , 2702 , 2776 , 2851 , 2927 , 3004 , 3082 , 3161 , 3241 , 3322 , 3404 , 3487 , 3571 , 3656 , 3742 , 3829 , 3917 , 4006 , 4096 , 4187 , 4279 , 4372 , 4466 , 4561 , 4657 , 4754 , 4852 , 4951 , 5051 , 5152 }",
          "children": [
            {
              "type": "array_declarator",
              "start_byte": 33,
              "end_byte": 41,
              "text": "size [ ]",
              "children": [
                {
                  "type": "identifier",
                  "start_byte": 33,
                  "end_byte": 37,
                  "text": "size",
                  "children": []
                },
                {
                  "type": "[",
                  "start_byte": 38,
                  "end_byte": 39,
                  "text": "[",
                  "children": []
                },
                {
                  "type": "]",
                  "start_byte": 40,
                  "end_byte": 41,
                  "text": "]",
                  "children": []
                }
              ]
            },
            {
              "type": "=",
              "start_byte": 42,
              "end_byte": 43,
              "text": "=",
              "children": []
            },
            {
              "type": "initializer_list",
              "start_byte": 44,
              "end_byte": 700,
              "text": "{ 1 , 1 , 2 , 4 , 7 , 11 , 16 , 22 , 29 , 37 , 46 , 56 , 67 , 79 , 92 , 106 , 121 , 137 , 154 , 172 , 191 , 211 , 232 , 254 , 277 , 301 , 326 , 352 , 379 , 407 , 436 , 466 , 497 , 529 , 562 , 596 , 631 , 667 , 704 , 742 , 781 , 821 , 862 , 904 , 947 , 991 , 1036 , 1082 , 1129 , 1177 , 1226 , 1276 , 1327 , 1379 , 1432 , 1486 , 1541 , 1597 , 1654 , 1712 , 1771 , 1831 , 1892 , 1954 , 2017 , 2081 , 2146 , 2212 , 2279 , 2347 , 2416 , 2486 , 2557 , 2629 , 2702 , 2776 , 2851 , 2927 , 3004 , 3082 , 3161 , 3241 , 3322 , 3404 , 3487 , 3571 , 3656 , 3742 , 3829 , 3917 , 4006 , 4096 , 4187 , 4279 , 4372 , 4466 , 4561 , 4657 , 4754 , 4852 , 4951 , 5051 , 5152 }",
              "children": [
                {
                  "type": "{",
                  "start_byte": 44,
                  "end_byte": 45,
                  "text": "{",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 46,
                  "end_byte": 47,
                  "text": "1",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 48,
                  "end_byte": 49,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 50,
                  "end_byte": 51,
                  "text": "1",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 52,
                  "end_byte": 53,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 54,
                  "end_byte": 55,
                  "text": "2",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 56,
                  "end_byte": 57,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 58,
                  "end_byte": 59,
                  "text": "4",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 60,
                  "end_byte": 61,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 62,
                  "end_byte": 63,
                  "text": "7",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 64,
                  "end_byte": 65,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 66,
                  "end_byte": 68,
                  "text": "11",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 69,
                  "end_byte": 70,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 71,
                  "end_byte": 73,
                  "text": "16",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 74,
                  "end_byte": 75,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 76,
                  "end_byte": 78,
                  "text": "22",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 79,
                  "end_byte": 80,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 81,
                  "end_byte": 83,
                  "text": "29",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 84,
                  "end_byte": 85,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 86,
                  "end_byte": 88,
                  "text": "37",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 89,
                  "end_byte": 90,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 91,
                  "end_byte": 93,
                  "text": "46",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 94,
                  "end_byte": 95,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 96,
                  "end_byte": 98,
                  "text": "56",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 99,
                  "end_byte": 100,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 101,
                  "end_byte": 103,
                  "text": "67",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 104,
                  "end_byte": 105,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 106,
                  "end_byte": 108,
                  "text": "79",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 109,
                  "end_byte": 110,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 111,
                  "end_byte": 113,
                  "text": "92",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 114,
                  "end_byte": 115,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 116,
                  "end_byte": 119,
                  "text": "106",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 120,
                  "end_byte": 121,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 122,
                  "end_byte": 125,
                  "text": "121",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 126,
                  "end_byte": 127,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 128,
                  "end_byte": 131,
                  "text": "137",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 132,
                  "end_byte": 133,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 134,
                  "end_byte": 137,
                  "text": "154",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 138,
                  "end_byte": 139,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 140,
                  "end_byte": 143,
                  "text": "172",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 144,
                  "end_byte": 145,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 146,
                  "end_byte": 149,
                  "text": "191",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 150,
                  "end_byte": 151,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 152,
                  "end_byte": 155,
                  "text": "211",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 156,
                  "end_byte": 157,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 158,
                  "end_byte": 161,
                  "text": "232",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 162,
                  "end_byte": 163,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 164,
                  "end_byte": 167,
                  "text": "254",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 168,
                  "end_byte": 169,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 170,
                  "end_byte": 173,
                  "text": "277",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 174,
                  "end_byte": 175,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 176,
                  "end_byte": 179,
                  "text": "301",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 180,
                  "end_byte": 181,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 182,
                  "end_byte": 185,
                  "text": "326",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 186,
                  "end_byte": 187,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 188,
                  "end_byte": 191,
                  "text": "352",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 192,
                  "end_byte": 193,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 194,
                  "end_byte": 197,
                  "text": "379",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 198,
                  "end_byte": 199,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 200,
                  "end_byte": 203,
                  "text": "407",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 204,
                  "end_byte": 205,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 206,
                  "end_byte": 209,
                  "text": "436",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 210,
                  "end_byte": 211,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 212,
                  "end_byte": 215,
                  "text": "466",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 216,
                  "end_byte": 217,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 218,
                  "end_byte": 221,
                  "text": "497",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 222,
                  "end_byte": 223,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 224,
                  "end_byte": 227,
                  "text": "529",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 228,
                  "end_byte": 229,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 230,
                  "end_byte": 233,
                  "text": "562",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 234,
                  "end_byte": 235,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 236,
                  "end_byte": 239,
                  "text": "596",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 240,
                  "end_byte": 241,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 242,
                  "end_byte": 245,
                  "text": "631",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 246,
                  "end_byte": 247,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 248,
                  "end_byte": 251,
                  "text": "667",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 252,
                  "end_byte": 253,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 254,
                  "end_byte": 257,
                  "text": "704",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 258,
                  "end_byte": 259,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 260,
                  "end_byte": 263,
                  "text": "742",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 264,
                  "end_byte": 265,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 266,
                  "end_byte": 269,
                  "text": "781",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 270,
                  "end_byte": 271,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 272,
                  "end_byte": 275,
                  "text": "821",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 276,
                  "end_byte": 277,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 278,
                  "end_byte": 281,
                  "text": "862",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 282,
                  "end_byte": 283,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 284,
                  "end_byte": 287,
                  "text": "904",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 288,
                  "end_byte": 289,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 290,
                  "end_byte": 293,
                  "text": "947",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 294,
                  "end_byte": 295,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 296,
                  "end_byte": 299,
                  "text": "991",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 300,
                  "end_byte": 301,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 302,
                  "end_byte": 306,
                  "text": "1036",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 307,
                  "end_byte": 308,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 309,
                  "end_byte": 313,
                  "text": "1082",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 314,
                  "end_byte": 315,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 316,
                  "end_byte": 320,
                  "text": "1129",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 321,
                  "end_byte": 322,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 323,
                  "end_byte": 327,
                  "text": "1177",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 328,
                  "end_byte": 329,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 330,
                  "end_byte": 334,
                  "text": "1226",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 335,
                  "end_byte": 336,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 337,
                  "end_byte": 341,
                  "text": "1276",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 342,
                  "end_byte": 343,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 344,
                  "end_byte": 348,
                  "text": "1327",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 349,
                  "end_byte": 350,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 351,
                  "end_byte": 355,
                  "text": "1379",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 356,
                  "end_byte": 357,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 358,
                  "end_byte": 362,
                  "text": "1432",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 363,
                  "end_byte": 364,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 365,
                  "end_byte": 369,
                  "text": "1486",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 370,
                  "end_byte": 371,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 372,
                  "end_byte": 376,
                  "text": "1541",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 377,
                  "end_byte": 378,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 379,
                  "end_byte": 383,
                  "text": "1597",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 384,
                  "end_byte": 385,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 386,
                  "end_byte": 390,
                  "text": "1654",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 391,
                  "end_byte": 392,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 393,
                  "end_byte": 397,
                  "text": "1712",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 398,
                  "end_byte": 399,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 400,
                  "end_byte": 404,
                  "text": "1771",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 405,
                  "end_byte": 406,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 407,
                  "end_byte": 411,
                  "text": "1831",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 412,
                  "end_byte": 413,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 414,
                  "end_byte": 418,
                  "text": "1892",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 419,
                  "end_byte": 420,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 421,
                  "end_byte": 425,
                  "text": "1954",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 426,
                  "end_byte": 427,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 428,
                  "end_byte": 432,
                  "text": "2017",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 433,
                  "end_byte": 434,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 435,
                  "end_byte": 439,
                  "text": "2081",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 440,
                  "end_byte": 441,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 442,
                  "end_byte": 446,
                  "text": "2146",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 447,
                  "end_byte": 448,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 449,
                  "end_byte": 453,
                  "text": "2212",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 454,
                  "end_byte": 455,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 456,
                  "end_byte": 460,
                  "text": "2279",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 461,
                  "end_byte": 462,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 463,
                  "end_byte": 467,
                  "text": "2347",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 468,
                  "end_byte": 469,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 470,
                  "end_byte": 474,
                  "text": "2416",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 475,
                  "end_byte": 476,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 477,
                  "end_byte": 481,
                  "text": "2486",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 482,
                  "end_byte": 483,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 484,
                  "end_byte": 488,
                  "text": "2557",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 489,
                  "end_byte": 490,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 491,
                  "end_byte": 495,
                  "text": "2629",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 496,
                  "end_byte": 497,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 498,
                  "end_byte": 502,
                  "text": "2702",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 503,
                  "end_byte": 504,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 505,
                  "end_byte": 509,
                  "text": "2776",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 510,
                  "end_byte": 511,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 512,
                  "end_byte": 516,
                  "text": "2851",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 517,
                  "end_byte": 518,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 519,
                  "end_byte": 523,
                  "text": "2927",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 524,
                  "end_byte": 525,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 526,
                  "end_byte": 530,
                  "text": "3004",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 531,
                  "end_byte": 532,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 533,
                  "end_byte": 537,
                  "text": "3082",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 538,
                  "end_byte": 539,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 540,
                  "end_byte": 544,
                  "text": "3161",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 545,
                  "end_byte": 546,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 547,
                  "end_byte": 551,
                  "text": "3241",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 552,
                  "end_byte": 553,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 554,
                  "end_byte": 558,
                  "text": "3322",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 559,
                  "end_byte": 560,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 561,
                  "end_byte": 565,
                  "text": "3404",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 566,
                  "end_byte": 567,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 568,
                  "end_byte": 572,
                  "text": "3487",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 573,
                  "end_byte": 574,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 575,
                  "end_byte": 579,
                  "text": "3571",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 580,
                  "end_byte": 581,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 582,
                  "end_byte": 586,
                  "text": "3656",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 587,
                  "end_byte": 588,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 589,
                  "end_byte": 593,
                  "text": "3742",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 594,
                  "end_byte": 595,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 596,
                  "end_byte": 600,
                  "text": "3829",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 601,
                  "end_byte": 602,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 603,
                  "end_byte": 607,
                  "text": "3917",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 608,
                  "end_byte": 609,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 610,
                  "end_byte": 614,
                  "text": "4006",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 615,
                  "end_byte": 616,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 617,
                  "end_byte": 621,
                  "text": "4096",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 622,
                  "end_byte": 623,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 624,
                  "end_byte": 628,
                  "text": "4187",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 629,
                  "end_byte": 630,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 631,
                  "end_byte": 635,
                  "text": "4279",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 636,
                  "end_byte": 637,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 638,
                  "end_byte": 642,
                  "text": "4372",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 643,
                  "end_byte": 644,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 645,
                  "end_byte": 649,
                  "text": "4466",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 650,
                  "end_byte": 651,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 652,
                  "end_byte": 656,
                  "text": "4561",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 657,
                  "end_byte": 658,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 659,
                  "end_byte": 663,
                  "text": "4657",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 664,
                  "end_byte": 665,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 666,
                  "end_byte": 670,
                  "text": "4754",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 671,
                  "end_byte": 672,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 673,
                  "end_byte": 677,
                  "text": "4852",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 678,
                  "end_byte": 679,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 680,
                  "end_byte": 684,
                  "text": "4951",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 685,
                  "end_byte": 686,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 687,
                  "end_byte": 691,
                  "text": "5051",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 692,
                  "end_byte": 693,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 694,
                  "end_byte": 698,
                  "text": "5152",
                  "children": []
                },
                {
                  "type": "}",
                  "start_byte": 699,
                  "end_byte": 700,
                  "text": "}",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 701,
          "end_byte": 702,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 703,
      "end_byte": 888,
      "text": "void create ( ) { scanf ( \"%d\" , & rows ) ; free ( tri ) ; tri = malloc ( size [ rows + 1 ] ) ; int i , j ; for ( i = 1 ; i < size [ rows + 1 ] ; i ++ ) { scanf ( \"%d\" , tri + i ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 703,
          "end_byte": 707,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 708,
          "end_byte": 718,
          "text": "create ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 708,
              "end_byte": 714,
              "text": "create",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 715,
              "end_byte": 718,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 715,
                  "end_byte": 716,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 717,
                  "end_byte": 718,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 719,
          "end_byte": 888,
          "text": "{ scanf ( \"%d\" , & rows ) ; free ( tri ) ; tri = malloc ( size [ rows + 1 ] ) ; int i , j ; for ( i = 1 ; i < size [ rows + 1 ] ; i ++ ) { scanf ( \"%d\" , tri + i ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 719,
              "end_byte": 720,
              "text": "{",
              "children": []
            },
            {
              "type": "expression_statement",
              "start_byte": 721,
              "end_byte": 746,
              "text": "scanf ( \"%d\" , & rows ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 721,
                  "end_byte": 744,
                  "text": "scanf ( \"%d\" , & rows )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 721,
                      "end_byte": 726,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 727,
                      "end_byte": 744,
                      "text": "( \"%d\" , & rows )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 727,
                          "end_byte": 728,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 729,
                          "end_byte": 733,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 729,
                              "end_byte": 730,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 730,
                              "end_byte": 732,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 732,
                              "end_byte": 733,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 734,
                          "end_byte": 735,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 736,
                          "end_byte": 742,
                          "text": "& rows",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 736,
                              "end_byte": 737,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 738,
                              "end_byte": 742,
                              "text": "rows",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 743,
                          "end_byte": 744,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 745,
                  "end_byte": 746,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 747,
              "end_byte": 761,
              "text": "free ( tri ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 747,
                  "end_byte": 759,
                  "text": "free ( tri )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 747,
                      "end_byte": 751,
                      "text": "free",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 752,
                      "end_byte": 759,
                      "text": "( tri )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 752,
                          "end_byte": 753,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 754,
                          "end_byte": 757,
                          "text": "tri",
                          "children": []
                        },
                        {
                          "type": ")",
                          "start_byte": 758,
                          "end_byte": 759,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 760,
                  "end_byte": 761,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 762,
              "end_byte": 798,
              "text": "tri = malloc ( size [ rows + 1 ] ) ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 762,
                  "end_byte": 796,
                  "text": "tri = malloc ( size [ rows + 1 ] )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 762,
                      "end_byte": 765,
                      "text": "tri",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 766,
                      "end_byte": 767,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 768,
                      "end_byte": 796,
                      "text": "malloc ( size [ rows + 1 ] )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 768,
                          "end_byte": 774,
                          "text": "malloc",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 775,
                          "end_byte": 796,
                          "text": "( size [ rows + 1 ] )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 775,
                              "end_byte": 776,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 777,
                              "end_byte": 794,
                              "text": "size [ rows + 1 ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 777,
                                  "end_byte": 781,
                                  "text": "size",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 782,
                                  "end_byte": 794,
                                  "text": "[ rows + 1 ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 782,
                                      "end_byte": 783,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 784,
                                      "end_byte": 792,
                                      "text": "rows + 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 784,
                                          "end_byte": 788,
                                          "text": "rows",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 789,
                                          "end_byte": 790,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 791,
                                          "end_byte": 792,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 793,
                                      "end_byte": 794,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 795,
                              "end_byte": 796,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 797,
                  "end_byte": 798,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 799,
              "end_byte": 810,
              "text": "int i , j ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 799,
                  "end_byte": 802,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 803,
                  "end_byte": 804,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 805,
                  "end_byte": 806,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 807,
                  "end_byte": 808,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 809,
                  "end_byte": 810,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 811,
              "end_byte": 886,
              "text": "for ( i = 1 ; i < size [ rows + 1 ] ; i ++ ) { scanf ( \"%d\" , tri + i ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 811,
                  "end_byte": 814,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 815,
                  "end_byte": 816,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 817,
                  "end_byte": 822,
                  "text": "i = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 817,
                      "end_byte": 818,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 819,
                      "end_byte": 820,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 821,
                      "end_byte": 822,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 823,
                  "end_byte": 824,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 825,
                  "end_byte": 846,
                  "text": "i < size [ rows + 1 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 825,
                      "end_byte": 826,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 827,
                      "end_byte": 828,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "subscript_expression",
                      "start_byte": 829,
                      "end_byte": 846,
                      "text": "size [ rows + 1 ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 829,
                          "end_byte": 833,
                          "text": "size",
                          "children": []
                        },
                        {
                          "type": "subscript_argument_list",
                          "start_byte": 834,
                          "end_byte": 846,
                          "text": "[ rows + 1 ]",
                          "children": [
                            {
                              "type": "[",
                              "start_byte": 834,
                              "end_byte": 835,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 836,
                              "end_byte": 844,
                              "text": "rows + 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 836,
                                  "end_byte": 840,
                                  "text": "rows",
                                  "children": []
                                },
                                {
                                  "type": "+",
                                  "start_byte": 841,
                                  "end_byte": 842,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 843,
                                  "end_byte": 844,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "]",
                              "start_byte": 845,
                              "end_byte": 846,
                              "text": "]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 847,
                  "end_byte": 848,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 849,
                  "end_byte": 853,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 849,
                      "end_byte": 850,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 851,
                      "end_byte": 853,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 854,
                  "end_byte": 855,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 856,
                  "end_byte": 886,
                  "text": "{ scanf ( \"%d\" , tri + i ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 856,
                      "end_byte": 857,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 858,
                      "end_byte": 884,
                      "text": "scanf ( \"%d\" , tri + i ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 858,
                          "end_byte": 882,
                          "text": "scanf ( \"%d\" , tri + i )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 858,
                              "end_byte": 863,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 864,
                              "end_byte": 882,
                              "text": "( \"%d\" , tri + i )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 864,
                                  "end_byte": 865,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 866,
                                  "end_byte": 870,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 866,
                                      "end_byte": 867,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 867,
                                      "end_byte": 869,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 869,
                                      "end_byte": 870,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 871,
                                  "end_byte": 872,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 873,
                                  "end_byte": 880,
                                  "text": "tri + i",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 873,
                                      "end_byte": 876,
                                      "text": "tri",
                                      "children": []
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 877,
                                      "end_byte": 878,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 879,
                                      "end_byte": 880,
                                      "text": "i",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 881,
                                  "end_byte": 882,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 883,
                          "end_byte": 884,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 885,
                      "end_byte": 886,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 887,
              "end_byte": 888,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 889,
      "end_byte": 1126,
      "text": "void max ( ) { int i , j ; for ( i = rows - 1 ; i >= 1 ; i -- ) { for ( j = size [ i ] ; j < size [ i + 1 ] ; j ++ ) { tri [ j ] += MAX ( tri [ size [ i ] - size [ i - 1 ] + j + 1 ] , tri [ size [ i ] - size [ i - 1 ] + j + 2 ] ) ; } } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 889,
          "end_byte": 893,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 894,
          "end_byte": 901,
          "text": "max ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 894,
              "end_byte": 897,
              "text": "max",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 898,
              "end_byte": 901,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 898,
                  "end_byte": 899,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 900,
                  "end_byte": 901,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 902,
          "end_byte": 1126,
          "text": "{ int i , j ; for ( i = rows - 1 ; i >= 1 ; i -- ) { for ( j = size [ i ] ; j < size [ i + 1 ] ; j ++ ) { tri [ j ] += MAX ( tri [ size [ i ] - size [ i - 1 ] + j + 1 ] , tri [ size [ i ] - size [ i - 1 ] + j + 2 ] ) ; } } }",
          "children": [
            {
              "type": "{",
              "start_byte": 902,
              "end_byte": 903,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 904,
              "end_byte": 915,
              "text": "int i , j ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 904,
                  "end_byte": 907,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 908,
                  "end_byte": 909,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 910,
                  "end_byte": 911,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 912,
                  "end_byte": 913,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 914,
                  "end_byte": 915,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 916,
              "end_byte": 1124,
              "text": "for ( i = rows - 1 ; i >= 1 ; i -- ) { for ( j = size [ i ] ; j < size [ i + 1 ] ; j ++ ) { tri [ j ] += MAX ( tri [ size [ i ] - size [ i - 1 ] + j + 1 ] , tri [ size [ i ] - size [ i - 1 ] + j + 2 ] ) ; } }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 916,
                  "end_byte": 919,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 920,
                  "end_byte": 921,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 922,
                  "end_byte": 934,
                  "text": "i = rows - 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 922,
                      "end_byte": 923,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 924,
                      "end_byte": 925,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 926,
                      "end_byte": 934,
                      "text": "rows - 1",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 926,
                          "end_byte": 930,
                          "text": "rows",
                          "children": []
                        },
                        {
                          "type": "-",
                          "start_byte": 931,
                          "end_byte": 932,
                          "text": "-",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 933,
                          "end_byte": 934,
                          "text": "1",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 935,
                  "end_byte": 936,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 937,
                  "end_byte": 943,
                  "text": "i >= 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 937,
                      "end_byte": 938,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": ">=",
                      "start_byte": 939,
                      "end_byte": 941,
                      "text": ">=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 942,
                      "end_byte": 943,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 944,
                  "end_byte": 945,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 946,
                  "end_byte": 950,
                  "text": "i --",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 946,
                      "end_byte": 947,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "--",
                      "start_byte": 948,
                      "end_byte": 950,
                      "text": "--",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 951,
                  "end_byte": 952,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 953,
                  "end_byte": 1124,
                  "text": "{ for ( j = size [ i ] ; j < size [ i + 1 ] ; j ++ ) { tri [ j ] += MAX ( tri [ size [ i ] - size [ i - 1 ] + j + 1 ] , tri [ size [ i ] - size [ i - 1 ] + j + 2 ] ) ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 953,
                      "end_byte": 954,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 955,
                      "end_byte": 1122,
                      "text": "for ( j = size [ i ] ; j < size [ i + 1 ] ; j ++ ) { tri [ j ] += MAX ( tri [ size [ i ] - size [ i - 1 ] + j + 1 ] , tri [ size [ i ] - size [ i - 1 ] + j + 2 ] ) ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 955,
                          "end_byte": 958,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 959,
                          "end_byte": 960,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 961,
                          "end_byte": 975,
                          "text": "j = size [ i ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 961,
                              "end_byte": 962,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 963,
                              "end_byte": 964,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 965,
                              "end_byte": 975,
                              "text": "size [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 965,
                                  "end_byte": 969,
                                  "text": "size",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 970,
                                  "end_byte": 975,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 970,
                                      "end_byte": 971,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 972,
                                      "end_byte": 973,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 974,
                                      "end_byte": 975,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 976,
                          "end_byte": 977,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 978,
                          "end_byte": 996,
                          "text": "j < size [ i + 1 ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 978,
                              "end_byte": 979,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 980,
                              "end_byte": 981,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 982,
                              "end_byte": 996,
                              "text": "size [ i + 1 ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 982,
                                  "end_byte": 986,
                                  "text": "size",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 987,
                                  "end_byte": 996,
                                  "text": "[ i + 1 ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 987,
                                      "end_byte": 988,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 989,
                                      "end_byte": 994,
                                      "text": "i + 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 989,
                                          "end_byte": 990,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 991,
                                          "end_byte": 992,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 993,
                                          "end_byte": 994,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 995,
                                      "end_byte": 996,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 997,
                          "end_byte": 998,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 999,
                          "end_byte": 1003,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 999,
                              "end_byte": 1000,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 1001,
                              "end_byte": 1003,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 1004,
                          "end_byte": 1005,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 1006,
                          "end_byte": 1122,
                          "text": "{ tri [ j ] += MAX ( tri [ size [ i ] - size [ i - 1 ] + j + 1 ] , tri [ size [ i ] - size [ i - 1 ] + j + 2 ] ) ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 1006,
                              "end_byte": 1007,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1008,
                              "end_byte": 1120,
                              "text": "tri [ j ] += MAX ( tri [ size [ i ] - size [ i - 1 ] + j + 1 ] , tri [ size [ i ] - size [ i - 1 ] + j + 2 ] ) ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1008,
                                  "end_byte": 1118,
                                  "text": "tri [ j ] += MAX ( tri [ size [ i ] - size [ i - 1 ] + j + 1 ] , tri [ size [ i ] - size [ i - 1 ] + j + 2 ] )",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 1008,
                                      "end_byte": 1017,
                                      "text": "tri [ j ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1008,
                                          "end_byte": 1011,
                                          "text": "tri",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 1012,
                                          "end_byte": 1017,
                                          "text": "[ j ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 1012,
                                              "end_byte": 1013,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 1014,
                                              "end_byte": 1015,
                                              "text": "j",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 1016,
                                              "end_byte": 1017,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+=",
                                      "start_byte": 1018,
                                      "end_byte": 1020,
                                      "text": "+=",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 1021,
                                      "end_byte": 1118,
                                      "text": "MAX ( tri [ size [ i ] - size [ i - 1 ] + j + 1 ] , tri [ size [ i ] - size [ i - 1 ] + j + 2 ] )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1021,
                                          "end_byte": 1024,
                                          "text": "MAX",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 1025,
                                          "end_byte": 1118,
                                          "text": "( tri [ size [ i ] - size [ i - 1 ] + j + 1 ] , tri [ size [ i ] - size [ i - 1 ] + j + 2 ] )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 1025,
                                              "end_byte": 1026,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 1027,
                                              "end_byte": 1070,
                                              "text": "tri [ size [ i ] - size [ i - 1 ] + j + 1 ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1027,
                                                  "end_byte": 1030,
                                                  "text": "tri",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 1031,
                                                  "end_byte": 1070,
                                                  "text": "[ size [ i ] - size [ i - 1 ] + j + 1 ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 1031,
                                                      "end_byte": 1032,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 1033,
                                                      "end_byte": 1068,
                                                      "text": "size [ i ] - size [ i - 1 ] + j + 1",
                                                      "children": [
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 1033,
                                                          "end_byte": 1064,
                                                          "text": "size [ i ] - size [ i - 1 ] + j",
                                                          "children": [
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 1033,
                                                              "end_byte": 1060,
                                                              "text": "size [ i ] - size [ i - 1 ]",
                                                              "children": [
                                                                {
                                                                  "type": "subscript_expression",
                                                                  "start_byte": 1033,
                                                                  "end_byte": 1043,
                                                                  "text": "size [ i ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 1033,
                                                                      "end_byte": 1037,
                                                                      "text": "size",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "subscript_argument_list",
                                                                      "start_byte": 1038,
                                                                      "end_byte": 1043,
                                                                      "text": "[ i ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "[",
                                                                          "start_byte": 1038,
                                                                          "end_byte": 1039,
                                                                          "text": "[",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 1040,
                                                                          "end_byte": 1041,
                                                                          "text": "i",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "]",
                                                                          "start_byte": 1042,
                                                                          "end_byte": 1043,
                                                                          "text": "]",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "-",
                                                                  "start_byte": 1044,
                                                                  "end_byte": 1045,
                                                                  "text": "-",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "subscript_expression",
                                                                  "start_byte": 1046,
                                                                  "end_byte": 1060,
                                                                  "text": "size [ i - 1 ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 1046,
                                                                      "end_byte": 1050,
                                                                      "text": "size",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "subscript_argument_list",
                                                                      "start_byte": 1051,
                                                                      "end_byte": 1060,
                                                                      "text": "[ i - 1 ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "[",
                                                                          "start_byte": 1051,
                                                                          "end_byte": 1052,
                                                                          "text": "[",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "binary_expression",
                                                                          "start_byte": 1053,
                                                                          "end_byte": 1058,
                                                                          "text": "i - 1",
                                                                          "children": [
                                                                            {
                                                                              "type": "identifier",
                                                                              "start_byte": 1053,
                                                                              "end_byte": 1054,
                                                                              "text": "i",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "-",
                                                                              "start_byte": 1055,
                                                                              "end_byte": 1056,
                                                                              "text": "-",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "number_literal",
                                                                              "start_byte": 1057,
                                                                              "end_byte": 1058,
                                                                              "text": "1",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "]",
                                                                          "start_byte": 1059,
                                                                          "end_byte": 1060,
                                                                          "text": "]",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "+",
                                                              "start_byte": 1061,
                                                              "end_byte": 1062,
                                                              "text": "+",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 1063,
                                                              "end_byte": 1064,
                                                              "text": "j",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "+",
                                                          "start_byte": 1065,
                                                          "end_byte": 1066,
                                                          "text": "+",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "number_literal",
                                                          "start_byte": 1067,
                                                          "end_byte": 1068,
                                                          "text": "1",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 1069,
                                                      "end_byte": 1070,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 1071,
                                              "end_byte": 1072,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 1073,
                                              "end_byte": 1116,
                                              "text": "tri [ size [ i ] - size [ i - 1 ] + j + 2 ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1073,
                                                  "end_byte": 1076,
                                                  "text": "tri",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 1077,
                                                  "end_byte": 1116,
                                                  "text": "[ size [ i ] - size [ i - 1 ] + j + 2 ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 1077,
                                                      "end_byte": 1078,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 1079,
                                                      "end_byte": 1114,
                                                      "text": "size [ i ] - size [ i - 1 ] + j + 2",
                                                      "children": [
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 1079,
                                                          "end_byte": 1110,
                                                          "text": "size [ i ] - size [ i - 1 ] + j",
                                                          "children": [
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 1079,
                                                              "end_byte": 1106,
                                                              "text": "size [ i ] - size [ i - 1 ]",
                                                              "children": [
                                                                {
                                                                  "type": "subscript_expression",
                                                                  "start_byte": 1079,
                                                                  "end_byte": 1089,
                                                                  "text": "size [ i ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 1079,
                                                                      "end_byte": 1083,
                                                                      "text": "size",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "subscript_argument_list",
                                                                      "start_byte": 1084,
                                                                      "end_byte": 1089,
                                                                      "text": "[ i ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "[",
                                                                          "start_byte": 1084,
                                                                          "end_byte": 1085,
                                                                          "text": "[",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 1086,
                                                                          "end_byte": 1087,
                                                                          "text": "i",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "]",
                                                                          "start_byte": 1088,
                                                                          "end_byte": 1089,
                                                                          "text": "]",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "-",
                                                                  "start_byte": 1090,
                                                                  "end_byte": 1091,
                                                                  "text": "-",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "subscript_expression",
                                                                  "start_byte": 1092,
                                                                  "end_byte": 1106,
                                                                  "text": "size [ i - 1 ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 1092,
                                                                      "end_byte": 1096,
                                                                      "text": "size",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "subscript_argument_list",
                                                                      "start_byte": 1097,
                                                                      "end_byte": 1106,
                                                                      "text": "[ i - 1 ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "[",
                                                                          "start_byte": 1097,
                                                                          "end_byte": 1098,
                                                                          "text": "[",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "binary_expression",
                                                                          "start_byte": 1099,
                                                                          "end_byte": 1104,
                                                                          "text": "i - 1",
                                                                          "children": [
                                                                            {
                                                                              "type": "identifier",
                                                                              "start_byte": 1099,
                                                                              "end_byte": 1100,
                                                                              "text": "i",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "-",
                                                                              "start_byte": 1101,
                                                                              "end_byte": 1102,
                                                                              "text": "-",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "number_literal",
                                                                              "start_byte": 1103,
                                                                              "end_byte": 1104,
                                                                              "text": "1",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "]",
                                                                          "start_byte": 1105,
                                                                          "end_byte": 1106,
                                                                          "text": "]",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "+",
                                                              "start_byte": 1107,
                                                              "end_byte": 1108,
                                                              "text": "+",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 1109,
                                                              "end_byte": 1110,
                                                              "text": "j",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "+",
                                                          "start_byte": 1111,
                                                          "end_byte": 1112,
                                                          "text": "+",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "number_literal",
                                                          "start_byte": 1113,
                                                          "end_byte": 1114,
                                                          "text": "2",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 1115,
                                                      "end_byte": 1116,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 1117,
                                              "end_byte": 1118,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1119,
                                  "end_byte": 1120,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 1121,
                              "end_byte": 1122,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 1123,
                      "end_byte": 1124,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 1125,
              "end_byte": 1126,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 1127,
      "end_byte": 1295,
      "text": "void pr ( ) { int i , j ; for ( i = 1 ; i <= rows ; i ++ ) { for ( j = size [ i ] ; j < size [ i + 1 ] ; j ++ ) { printf ( \"%d \" , tri [ j ] ) ; } printf ( \"\\n\" ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 1127,
          "end_byte": 1131,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 1132,
          "end_byte": 1138,
          "text": "pr ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 1132,
              "end_byte": 1134,
              "text": "pr",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 1135,
              "end_byte": 1138,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 1135,
                  "end_byte": 1136,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 1137,
                  "end_byte": 1138,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 1139,
          "end_byte": 1295,
          "text": "{ int i , j ; for ( i = 1 ; i <= rows ; i ++ ) { for ( j = size [ i ] ; j < size [ i + 1 ] ; j ++ ) { printf ( \"%d \" , tri [ j ] ) ; } printf ( \"\\n\" ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 1139,
              "end_byte": 1140,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 1141,
              "end_byte": 1152,
              "text": "int i , j ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 1141,
                  "end_byte": 1144,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 1145,
                  "end_byte": 1146,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 1147,
                  "end_byte": 1148,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 1149,
                  "end_byte": 1150,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 1151,
                  "end_byte": 1152,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 1153,
              "end_byte": 1293,
              "text": "for ( i = 1 ; i <= rows ; i ++ ) { for ( j = size [ i ] ; j < size [ i + 1 ] ; j ++ ) { printf ( \"%d \" , tri [ j ] ) ; } printf ( \"\\n\" ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 1153,
                  "end_byte": 1156,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 1157,
                  "end_byte": 1158,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 1159,
                  "end_byte": 1164,
                  "text": "i = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1159,
                      "end_byte": 1160,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 1161,
                      "end_byte": 1162,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 1163,
                      "end_byte": 1164,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1165,
                  "end_byte": 1166,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 1167,
                  "end_byte": 1176,
                  "text": "i <= rows",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1167,
                      "end_byte": 1168,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<=",
                      "start_byte": 1169,
                      "end_byte": 1171,
                      "text": "<=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 1172,
                      "end_byte": 1176,
                      "text": "rows",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1177,
                  "end_byte": 1178,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 1179,
                  "end_byte": 1183,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1179,
                      "end_byte": 1180,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 1181,
                      "end_byte": 1183,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 1184,
                  "end_byte": 1185,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 1186,
                  "end_byte": 1293,
                  "text": "{ for ( j = size [ i ] ; j < size [ i + 1 ] ; j ++ ) { printf ( \"%d \" , tri [ j ] ) ; } printf ( \"\\n\" ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 1186,
                      "end_byte": 1187,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 1188,
                      "end_byte": 1273,
                      "text": "for ( j = size [ i ] ; j < size [ i + 1 ] ; j ++ ) { printf ( \"%d \" , tri [ j ] ) ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 1188,
                          "end_byte": 1191,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 1192,
                          "end_byte": 1193,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 1194,
                          "end_byte": 1208,
                          "text": "j = size [ i ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1194,
                              "end_byte": 1195,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 1196,
                              "end_byte": 1197,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 1198,
                              "end_byte": 1208,
                              "text": "size [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 1198,
                                  "end_byte": 1202,
                                  "text": "size",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 1203,
                                  "end_byte": 1208,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 1203,
                                      "end_byte": 1204,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 1205,
                                      "end_byte": 1206,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 1207,
                                      "end_byte": 1208,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1209,
                          "end_byte": 1210,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 1211,
                          "end_byte": 1229,
                          "text": "j < size [ i + 1 ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1211,
                              "end_byte": 1212,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 1213,
                              "end_byte": 1214,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 1215,
                              "end_byte": 1229,
                              "text": "size [ i + 1 ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 1215,
                                  "end_byte": 1219,
                                  "text": "size",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 1220,
                                  "end_byte": 1229,
                                  "text": "[ i + 1 ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 1220,
                                      "end_byte": 1221,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 1222,
                                      "end_byte": 1227,
                                      "text": "i + 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1222,
                                          "end_byte": 1223,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 1224,
                                          "end_byte": 1225,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 1226,
                                          "end_byte": 1227,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 1228,
                                      "end_byte": 1229,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1230,
                          "end_byte": 1231,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 1232,
                          "end_byte": 1236,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1232,
                              "end_byte": 1233,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 1234,
                              "end_byte": 1236,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 1237,
                          "end_byte": 1238,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 1239,
                          "end_byte": 1273,
                          "text": "{ printf ( \"%d \" , tri [ j ] ) ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 1239,
                              "end_byte": 1240,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1241,
                              "end_byte": 1271,
                              "text": "printf ( \"%d \" , tri [ j ] ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 1241,
                                  "end_byte": 1269,
                                  "text": "printf ( \"%d \" , tri [ j ] )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1241,
                                      "end_byte": 1247,
                                      "text": "printf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 1248,
                                      "end_byte": 1269,
                                      "text": "( \"%d \" , tri [ j ] )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 1248,
                                          "end_byte": 1249,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 1250,
                                          "end_byte": 1255,
                                          "text": "\"%d \"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 1250,
                                              "end_byte": 1251,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 1251,
                                              "end_byte": 1254,
                                              "text": "%d ",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 1254,
                                              "end_byte": 1255,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 1256,
                                          "end_byte": 1257,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 1258,
                                          "end_byte": 1267,
                                          "text": "tri [ j ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1258,
                                              "end_byte": 1261,
                                              "text": "tri",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 1262,
                                              "end_byte": 1267,
                                              "text": "[ j ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 1262,
                                                  "end_byte": 1263,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1264,
                                                  "end_byte": 1265,
                                                  "text": "j",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 1266,
                                                  "end_byte": 1267,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 1268,
                                          "end_byte": 1269,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1270,
                                  "end_byte": 1271,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 1272,
                              "end_byte": 1273,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1274,
                      "end_byte": 1291,
                      "text": "printf ( \"\\n\" ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 1274,
                          "end_byte": 1289,
                          "text": "printf ( \"\\n\" )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1274,
                              "end_byte": 1280,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 1281,
                              "end_byte": 1289,
                              "text": "( \"\\n\" )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 1281,
                                  "end_byte": 1282,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 1283,
                                  "end_byte": 1287,
                                  "text": "\"\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 1283,
                                      "end_byte": 1284,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 1284,
                                      "end_byte": 1286,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 1286,
                                      "end_byte": 1287,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1288,
                                  "end_byte": 1289,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1290,
                          "end_byte": 1291,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 1292,
                      "end_byte": 1293,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 1294,
              "end_byte": 1295,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 1296,
      "end_byte": 1422,
      "text": "main ( ) { int n ; scanf ( \"%d\" , & n ) ; for ( ; n >= 1 ; n -- ) { create ( ) ; max ( ) ; printf ( \"%d\\n\" , tri [ 1 ] ) ; } }",
      "children": [
        {
          "type": "function_declarator",
          "start_byte": 1296,
          "end_byte": 1304,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 1296,
              "end_byte": 1300,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 1301,
              "end_byte": 1304,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 1301,
                  "end_byte": 1302,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 1303,
                  "end_byte": 1304,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 1305,
          "end_byte": 1422,
          "text": "{ int n ; scanf ( \"%d\" , & n ) ; for ( ; n >= 1 ; n -- ) { create ( ) ; max ( ) ; printf ( \"%d\\n\" , tri [ 1 ] ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 1305,
              "end_byte": 1306,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 1307,
              "end_byte": 1314,
              "text": "int n ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 1307,
                  "end_byte": 1310,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 1311,
                  "end_byte": 1312,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 1313,
                  "end_byte": 1314,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 1315,
              "end_byte": 1337,
              "text": "scanf ( \"%d\" , & n ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 1315,
                  "end_byte": 1335,
                  "text": "scanf ( \"%d\" , & n )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1315,
                      "end_byte": 1320,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 1321,
                      "end_byte": 1335,
                      "text": "( \"%d\" , & n )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 1321,
                          "end_byte": 1322,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 1323,
                          "end_byte": 1327,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 1323,
                              "end_byte": 1324,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 1324,
                              "end_byte": 1326,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 1326,
                              "end_byte": 1327,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 1328,
                          "end_byte": 1329,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 1330,
                          "end_byte": 1333,
                          "text": "& n",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 1330,
                              "end_byte": 1331,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 1332,
                              "end_byte": 1333,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 1334,
                          "end_byte": 1335,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1336,
                  "end_byte": 1337,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 1338,
              "end_byte": 1420,
              "text": "for ( ; n >= 1 ; n -- ) { create ( ) ; max ( ) ; printf ( \"%d\\n\" , tri [ 1 ] ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 1338,
                  "end_byte": 1341,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 1342,
                  "end_byte": 1343,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 1344,
                  "end_byte": 1345,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 1346,
                  "end_byte": 1352,
                  "text": "n >= 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1346,
                      "end_byte": 1347,
                      "text": "n",
                      "children": []
                    },
                    {
                      "type": ">=",
                      "start_byte": 1348,
                      "end_byte": 1350,
                      "text": ">=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 1351,
                      "end_byte": 1352,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1353,
                  "end_byte": 1354,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 1355,
                  "end_byte": 1359,
                  "text": "n --",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1355,
                      "end_byte": 1356,
                      "text": "n",
                      "children": []
                    },
                    {
                      "type": "--",
                      "start_byte": 1357,
                      "end_byte": 1359,
                      "text": "--",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 1360,
                  "end_byte": 1361,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 1362,
                  "end_byte": 1420,
                  "text": "{ create ( ) ; max ( ) ; printf ( \"%d\\n\" , tri [ 1 ] ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 1362,
                      "end_byte": 1363,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1364,
                      "end_byte": 1376,
                      "text": "create ( ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 1364,
                          "end_byte": 1374,
                          "text": "create ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1364,
                              "end_byte": 1370,
                              "text": "create",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 1371,
                              "end_byte": 1374,
                              "text": "( )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 1371,
                                  "end_byte": 1372,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1373,
                                  "end_byte": 1374,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1375,
                          "end_byte": 1376,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1377,
                      "end_byte": 1386,
                      "text": "max ( ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 1377,
                          "end_byte": 1384,
                          "text": "max ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1377,
                              "end_byte": 1380,
                              "text": "max",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 1381,
                              "end_byte": 1384,
                              "text": "( )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 1381,
                                  "end_byte": 1382,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1383,
                                  "end_byte": 1384,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1385,
                          "end_byte": 1386,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1387,
                      "end_byte": 1418,
                      "text": "printf ( \"%d\\n\" , tri [ 1 ] ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 1387,
                          "end_byte": 1416,
                          "text": "printf ( \"%d\\n\" , tri [ 1 ] )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1387,
                              "end_byte": 1393,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 1394,
                              "end_byte": 1416,
                              "text": "( \"%d\\n\" , tri [ 1 ] )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 1394,
                                  "end_byte": 1395,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 1396,
                                  "end_byte": 1402,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 1396,
                                      "end_byte": 1397,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 1397,
                                      "end_byte": 1399,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 1399,
                                      "end_byte": 1401,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 1401,
                                      "end_byte": 1402,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 1403,
                                  "end_byte": 1404,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 1405,
                                  "end_byte": 1414,
                                  "text": "tri [ 1 ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1405,
                                      "end_byte": 1408,
                                      "text": "tri",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 1409,
                                      "end_byte": 1414,
                                      "text": "[ 1 ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 1409,
                                          "end_byte": 1410,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 1411,
                                          "end_byte": 1412,
                                          "text": "1",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 1413,
                                          "end_byte": 1414,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1415,
                                  "end_byte": 1416,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1417,
                          "end_byte": 1418,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 1419,
                      "end_byte": 1420,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 1421,
              "end_byte": 1422,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}