int sum ( int ) ; int sum ( int n ) { if ( n == 0 ) return 0 ; else if ( n == 1 ) return 1 ; else return ( n + sum ( n - 1 ) ) ; } int main ( ) { int t , * brr , n , i , tt , sum1 = 0 , j = 0 , k = 0 , sum2 , * arr ; scanf ( "%d" , & t ) ; tt = t ; brr = malloc ( sizeof ( int ) * t ) ; while ( t -- ) { sum1 = 0 , sum2 = 0 , k = 0 ; scanf ( "%d" , & n ) ; if ( n > 100 ) return 0 ; arr = malloc ( sizeof ( int ) * sum ( n ) ) ; for ( i = 0 ; i < sum ( n ) ; i ++ ) { scanf ( "%d" , & arr [ i ] ) ; } while ( k < n ) { sum1 = sum1 + arr [ sum ( k ++ ) ] ; } sum2 = sum1 - arr [ sum ( n - 1 ) ] + arr [ ( sum ( n - 1 ) + 1 ) ] ; if ( sum2 > sum1 ) brr [ j ++ ] = sum2 ; else brr [ j ++ ] = sum1 ; } for ( i = 0 ; i < tt ; i ++ ) printf ( "%d\n" , brr [ i ] ) ; return 0 ; }