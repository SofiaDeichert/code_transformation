{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 345,
  "text": "int gcd ( int m , int n ) { if ( m < n ) return gcd ( n , m ) ; if ( n == 0 ) return m ; if ( m > n ) return gcd ( n , m % n ) ; } int main ( ) { int s , m , n , c ; scanf ( \"%d\" , & s ) ; while ( s -- ) { scanf ( \"%d\" , & m ) ; scanf ( \"%d\" , & n ) ; c = gcd ( m , n ) ; printf ( \"%d %d\" , c , ( m * n ) / c ) ; printf ( \"\\n\" ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 130,
      "text": "int gcd ( int m , int n ) { if ( m < n ) return gcd ( n , m ) ; if ( n == 0 ) return m ; if ( m > n ) return gcd ( n , m % n ) ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 25,
          "text": "gcd ( int m , int n )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 7,
              "text": "gcd",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 8,
              "end_byte": 25,
              "text": "( int m , int n )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 8,
                  "end_byte": 9,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 10,
                  "end_byte": 15,
                  "text": "int m",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 10,
                      "end_byte": 13,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 14,
                      "end_byte": 15,
                      "text": "m",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 16,
                  "end_byte": 17,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 18,
                  "end_byte": 23,
                  "text": "int n",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 18,
                      "end_byte": 21,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 22,
                      "end_byte": 23,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 24,
                  "end_byte": 25,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 26,
          "end_byte": 130,
          "text": "{ if ( m < n ) return gcd ( n , m ) ; if ( n == 0 ) return m ; if ( m > n ) return gcd ( n , m % n ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 26,
              "end_byte": 27,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 28,
              "end_byte": 63,
              "text": "if ( m < n ) return gcd ( n , m ) ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 28,
                  "end_byte": 30,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 31,
                  "end_byte": 40,
                  "text": "( m < n )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 31,
                      "end_byte": 32,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 33,
                      "end_byte": 38,
                      "text": "m < n",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 33,
                          "end_byte": 34,
                          "text": "m",
                          "children": []
                        },
                        {
                          "type": "<",
                          "start_byte": 35,
                          "end_byte": 36,
                          "text": "<",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 37,
                          "end_byte": 38,
                          "text": "n",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 39,
                      "end_byte": 40,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 41,
                  "end_byte": 63,
                  "text": "return gcd ( n , m ) ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 41,
                      "end_byte": 47,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 48,
                      "end_byte": 61,
                      "text": "gcd ( n , m )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 48,
                          "end_byte": 51,
                          "text": "gcd",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 52,
                          "end_byte": 61,
                          "text": "( n , m )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 52,
                              "end_byte": 53,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 54,
                              "end_byte": 55,
                              "text": "n",
                              "children": []
                            },
                            {
                              "type": ",",
                              "start_byte": 56,
                              "end_byte": 57,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 58,
                              "end_byte": 59,
                              "text": "m",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 60,
                              "end_byte": 61,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 62,
                      "end_byte": 63,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 64,
              "end_byte": 88,
              "text": "if ( n == 0 ) return m ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 64,
                  "end_byte": 66,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 67,
                  "end_byte": 77,
                  "text": "( n == 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 67,
                      "end_byte": 68,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 69,
                      "end_byte": 75,
                      "text": "n == 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 69,
                          "end_byte": 70,
                          "text": "n",
                          "children": []
                        },
                        {
                          "type": "==",
                          "start_byte": 71,
                          "end_byte": 73,
                          "text": "==",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 74,
                          "end_byte": 75,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 76,
                      "end_byte": 77,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 78,
                  "end_byte": 88,
                  "text": "return m ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 78,
                      "end_byte": 84,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 85,
                      "end_byte": 86,
                      "text": "m",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 87,
                      "end_byte": 88,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 89,
              "end_byte": 128,
              "text": "if ( m > n ) return gcd ( n , m % n ) ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 89,
                  "end_byte": 91,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 92,
                  "end_byte": 101,
                  "text": "( m > n )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 92,
                      "end_byte": 93,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 94,
                      "end_byte": 99,
                      "text": "m > n",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 94,
                          "end_byte": 95,
                          "text": "m",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 96,
                          "end_byte": 97,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 98,
                          "end_byte": 99,
                          "text": "n",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 100,
                      "end_byte": 101,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 102,
                  "end_byte": 128,
                  "text": "return gcd ( n , m % n ) ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 102,
                      "end_byte": 108,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 109,
                      "end_byte": 126,
                      "text": "gcd ( n , m % n )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 109,
                          "end_byte": 112,
                          "text": "gcd",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 113,
                          "end_byte": 126,
                          "text": "( n , m % n )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 113,
                              "end_byte": 114,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 115,
                              "end_byte": 116,
                              "text": "n",
                              "children": []
                            },
                            {
                              "type": ",",
                              "start_byte": 117,
                              "end_byte": 118,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 119,
                              "end_byte": 124,
                              "text": "m % n",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 119,
                                  "end_byte": 120,
                                  "text": "m",
                                  "children": []
                                },
                                {
                                  "type": "%",
                                  "start_byte": 121,
                                  "end_byte": 122,
                                  "text": "%",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 123,
                                  "end_byte": 124,
                                  "text": "n",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 125,
                              "end_byte": 126,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 127,
                      "end_byte": 128,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 129,
              "end_byte": 130,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 131,
      "end_byte": 345,
      "text": "int main ( ) { int s , m , n , c ; scanf ( \"%d\" , & s ) ; while ( s -- ) { scanf ( \"%d\" , & m ) ; scanf ( \"%d\" , & n ) ; c = gcd ( m , n ) ; printf ( \"%d %d\" , c , ( m * n ) / c ) ; printf ( \"\\n\" ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 131,
          "end_byte": 134,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 135,
          "end_byte": 143,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 135,
              "end_byte": 139,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 140,
              "end_byte": 143,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 140,
                  "end_byte": 141,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 142,
                  "end_byte": 143,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 144,
          "end_byte": 345,
          "text": "{ int s , m , n , c ; scanf ( \"%d\" , & s ) ; while ( s -- ) { scanf ( \"%d\" , & m ) ; scanf ( \"%d\" , & n ) ; c = gcd ( m , n ) ; printf ( \"%d %d\" , c , ( m * n ) / c ) ; printf ( \"\\n\" ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 144,
              "end_byte": 145,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 146,
              "end_byte": 165,
              "text": "int s , m , n , c ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 146,
                  "end_byte": 149,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 150,
                  "end_byte": 151,
                  "text": "s",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 152,
                  "end_byte": 153,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 154,
                  "end_byte": 155,
                  "text": "m",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 156,
                  "end_byte": 157,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 158,
                  "end_byte": 159,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 160,
                  "end_byte": 161,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 162,
                  "end_byte": 163,
                  "text": "c",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 164,
                  "end_byte": 165,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 166,
              "end_byte": 188,
              "text": "scanf ( \"%d\" , & s ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 166,
                  "end_byte": 186,
                  "text": "scanf ( \"%d\" , & s )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 166,
                      "end_byte": 171,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 172,
                      "end_byte": 186,
                      "text": "( \"%d\" , & s )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 172,
                          "end_byte": 173,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 174,
                          "end_byte": 178,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 174,
                              "end_byte": 175,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 175,
                              "end_byte": 177,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 177,
                              "end_byte": 178,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 179,
                          "end_byte": 180,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 181,
                          "end_byte": 184,
                          "text": "& s",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 181,
                              "end_byte": 182,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 183,
                              "end_byte": 184,
                              "text": "s",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 185,
                          "end_byte": 186,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 187,
                  "end_byte": 188,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 189,
              "end_byte": 332,
              "text": "while ( s -- ) { scanf ( \"%d\" , & m ) ; scanf ( \"%d\" , & n ) ; c = gcd ( m , n ) ; printf ( \"%d %d\" , c , ( m * n ) / c ) ; printf ( \"\\n\" ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 189,
                  "end_byte": 194,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 195,
                  "end_byte": 203,
                  "text": "( s -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 195,
                      "end_byte": 196,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 197,
                      "end_byte": 201,
                      "text": "s --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 197,
                          "end_byte": 198,
                          "text": "s",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 199,
                          "end_byte": 201,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 202,
                      "end_byte": 203,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 204,
                  "end_byte": 332,
                  "text": "{ scanf ( \"%d\" , & m ) ; scanf ( \"%d\" , & n ) ; c = gcd ( m , n ) ; printf ( \"%d %d\" , c , ( m * n ) / c ) ; printf ( \"\\n\" ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 204,
                      "end_byte": 205,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 206,
                      "end_byte": 228,
                      "text": "scanf ( \"%d\" , & m ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 206,
                          "end_byte": 226,
                          "text": "scanf ( \"%d\" , & m )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 206,
                              "end_byte": 211,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 212,
                              "end_byte": 226,
                              "text": "( \"%d\" , & m )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 212,
                                  "end_byte": 213,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 214,
                                  "end_byte": 218,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 214,
                                      "end_byte": 215,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 215,
                                      "end_byte": 217,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 217,
                                      "end_byte": 218,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 219,
                                  "end_byte": 220,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 221,
                                  "end_byte": 224,
                                  "text": "& m",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 221,
                                      "end_byte": 222,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 223,
                                      "end_byte": 224,
                                      "text": "m",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 225,
                                  "end_byte": 226,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 227,
                          "end_byte": 228,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 229,
                      "end_byte": 251,
                      "text": "scanf ( \"%d\" , & n ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 229,
                          "end_byte": 249,
                          "text": "scanf ( \"%d\" , & n )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 229,
                              "end_byte": 234,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 235,
                              "end_byte": 249,
                              "text": "( \"%d\" , & n )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 235,
                                  "end_byte": 236,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 237,
                                  "end_byte": 241,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 237,
                                      "end_byte": 238,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 238,
                                      "end_byte": 240,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 240,
                                      "end_byte": 241,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 242,
                                  "end_byte": 243,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 244,
                                  "end_byte": 247,
                                  "text": "& n",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 244,
                                      "end_byte": 245,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 246,
                                      "end_byte": 247,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 248,
                                  "end_byte": 249,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 250,
                          "end_byte": 251,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 252,
                      "end_byte": 271,
                      "text": "c = gcd ( m , n ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 252,
                          "end_byte": 269,
                          "text": "c = gcd ( m , n )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 252,
                              "end_byte": 253,
                              "text": "c",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 254,
                              "end_byte": 255,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 256,
                              "end_byte": 269,
                              "text": "gcd ( m , n )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 256,
                                  "end_byte": 259,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 260,
                                  "end_byte": 269,
                                  "text": "( m , n )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 260,
                                      "end_byte": 261,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 262,
                                      "end_byte": 263,
                                      "text": "m",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 264,
                                      "end_byte": 265,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 266,
                                      "end_byte": 267,
                                      "text": "n",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 268,
                                      "end_byte": 269,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 270,
                          "end_byte": 271,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 272,
                      "end_byte": 312,
                      "text": "printf ( \"%d %d\" , c , ( m * n ) / c ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 272,
                          "end_byte": 310,
                          "text": "printf ( \"%d %d\" , c , ( m * n ) / c )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 272,
                              "end_byte": 278,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 279,
                              "end_byte": 310,
                              "text": "( \"%d %d\" , c , ( m * n ) / c )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 279,
                                  "end_byte": 280,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 281,
                                  "end_byte": 288,
                                  "text": "\"%d %d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 281,
                                      "end_byte": 282,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 282,
                                      "end_byte": 287,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 287,
                                      "end_byte": 288,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 289,
                                  "end_byte": 290,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 291,
                                  "end_byte": 292,
                                  "text": "c",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 293,
                                  "end_byte": 294,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 295,
                                  "end_byte": 308,
                                  "text": "( m * n ) / c",
                                  "children": [
                                    {
                                      "type": "parenthesized_expression",
                                      "start_byte": 295,
                                      "end_byte": 304,
                                      "text": "( m * n )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 295,
                                          "end_byte": 296,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 297,
                                          "end_byte": 302,
                                          "text": "m * n",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 297,
                                              "end_byte": 298,
                                              "text": "m",
                                              "children": []
                                            },
                                            {
                                              "type": "*",
                                              "start_byte": 299,
                                              "end_byte": 300,
                                              "text": "*",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 301,
                                              "end_byte": 302,
                                              "text": "n",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 303,
                                          "end_byte": 304,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "/",
                                      "start_byte": 305,
                                      "end_byte": 306,
                                      "text": "/",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 307,
                                      "end_byte": 308,
                                      "text": "c",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 309,
                                  "end_byte": 310,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 311,
                          "end_byte": 312,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 313,
                      "end_byte": 330,
                      "text": "printf ( \"\\n\" ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 313,
                          "end_byte": 328,
                          "text": "printf ( \"\\n\" )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 313,
                              "end_byte": 319,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 320,
                              "end_byte": 328,
                              "text": "( \"\\n\" )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 320,
                                  "end_byte": 321,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 322,
                                  "end_byte": 326,
                                  "text": "\"\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 322,
                                      "end_byte": 323,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 323,
                                      "end_byte": 325,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 325,
                                      "end_byte": 326,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 327,
                                  "end_byte": 328,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 329,
                          "end_byte": 330,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 331,
                      "end_byte": 332,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 333,
              "end_byte": 343,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 333,
                  "end_byte": 339,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 340,
                  "end_byte": 341,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 342,
                  "end_byte": 343,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 344,
              "end_byte": 345,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}