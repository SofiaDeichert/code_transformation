int max ( int a , int b ) { return a > b ? a : b ; } int main ( ) { int t , n , i , j , max1 ; scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & n ) ; int a [ n ] [ n ] ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & a [ i ] [ j ] ) ; } } int dp [ 100 ] [ 100 ] = { 0 } ; dp [ 0 ] [ 0 ] = a [ 0 ] [ 0 ] ; for ( i = 1 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { if ( j == 0 ) dp [ i ] [ j ] = dp [ i - 1 ] [ j ] + a [ i ] [ j ] ; else if ( j == i ) dp [ i ] [ j ] = dp [ i - 1 ] [ j - 1 ] + a [ i ] [ j ] ; else dp [ i ] [ j ] = max ( dp [ i - 1 ] [ j - 1 ] , dp [ i - 1 ] [ j ] ) + a [ i ] [ j ] ; } } max1 = dp [ n - 1 ] [ 0 ] ; for ( i = 1 ; i < n ; i ++ ) if ( dp [ n - 1 ] [ i ] > max1 ) max1 = dp [ n - 1 ] [ i ] ; printf ( "%d\n" , max1 ) ; } return 0 ; }