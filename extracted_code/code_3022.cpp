unsigned int numRows = 0 ; char * * data = NULL ; void AllocateMem ( ) { int i ; data = ( char * * ) malloc ( numRows * sizeof ( char * ) ) ; for ( i = 0 ; i < numRows ; i ++ ) { data [ i ] = ( char * ) malloc ( ( 1 + i ) * sizeof ( char ) ) ; } } void ReadInput ( ) { int i = 0 , j = 0 ; scanf ( "%d" , & numRows ) ; fflush ( stdin ) ; AllocateMem ( ) ; for ( i = 0 ; i < numRows ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & data [ i ] [ j ] ) ; fflush ( stdin ) ; } } } int AnalyseData ( ) { int * sum = NULL ; sum = ( int * ) malloc ( numRows * sizeof ( int ) ) ; int i = 0 , col = 0 ; int max = 0 ; for ( col = 0 ; col < numRows ; col ++ ) { sum [ col ] = data [ col ] [ col ] ; for ( i = col + 1 ; i < numRows ; i ++ ) { if ( data [ i ] [ col ] > data [ i ] [ col + 1 ] ) sum [ col ] += data [ i ] [ col ] ; else sum [ col ] += data [ i ] [ col + 1 ] ; } } for ( i = 0 ; i < numRows ; i ++ ) { if ( max < sum [ i ] ) max = sum [ i ] ; } free ( sum ) ; printf ( "%d\n" , max ) ; } void FreeMem ( ) { int i ; for ( i = 0 ; i < numRows ; i ++ ) { free ( data [ i ] ) ; } free ( data ) ; data = NULL ; } int main ( ) { unsigned int numTestCases = 0 ; int i = 0 , j = 0 ; scanf ( "%d" , & numTestCases ) ; fflush ( stdin ) ; for ( i = 0 ; i < numTestCases ; i ++ ) { ReadInput ( ) ; AnalyseData ( ) ; FreeMem ( ) ; numRows = 0 ; } }