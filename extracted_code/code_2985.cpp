int ar [ 1000 ] [ 1000 ] ; int maxa ( int a , int b ) { if ( a >= b ) return ( a ) ; else return ( b ) ; } int max1 ( int ar1 [ ] [ 1000 ] , int n ) { int i , j = 0 ; for ( i = 0 ; i < n ; i ++ ) { if ( ar1 [ n - 1 ] [ i ] > j ) j = ar1 [ n - 1 ] [ i ] ; } return ( j ) ; } int main ( ) { int i , j , k , l , m , n , p , t ; scanf ( "%d" , & t ) ; for ( p = 0 ; p < t ; p ++ ) { scanf ( "%d" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= ( i + 1 ) ; j ++ ) { ar [ i ] [ j ] == 0 ; } } for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & ar [ i ] [ j ] ) ; } } for ( i = 1 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { if ( j == 0 ) { ar [ i ] [ j ] += ar [ i - 1 ] [ j ] ; } else { l = ar [ i - 1 ] [ j ] ; m = ar [ i - 1 ] [ j - 1 ] ; ar [ i ] [ j ] += maxa ( l , m ) ; } } } k = max1 ( ar , n ) ; printf ( "%d\n" , k ) ; } system ( "pause" ) ; return ( 0 ) ; }