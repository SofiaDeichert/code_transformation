int getMax ( int * data , int row , int pos , int maxRows ) ; int main ( int argc , char * argv [ ] ) { int cases , i , j , rows , sum , c , len ; scanf ( "%d" , & cases ) ; int result [ cases ] ; for ( i = 0 ; i < cases ; i ++ ) { scanf ( "%d" , & rows ) ; len = rows * ( rows + 1 ) / 2 ; int numbers [ len ] ; for ( j = 0 ; j < len ; j ++ ) { scanf ( "%d" , & c ) ; numbers [ j ] = c ; } result [ i ] = getMax ( numbers , 1 , 0 , rows ) ; } for ( i = 0 ; i < cases ; i ++ ) { printf ( "%i\n" , result [ i ] ) ; } return 0 ; } int getMax ( int * data , int row , int pos , int maxRows ) { int sum1 = 0 , sum2 = 0 ; if ( row < maxRows ) { sum1 = getMax ( data , row + 1 , pos + row , maxRows ) ; sum2 = getMax ( data , row + 1 , pos + row + 1 , maxRows ) ; if ( sum1 > sum2 ) { return data [ pos ] + sum1 ; } else { return data [ pos ] + sum2 ; } } else { return data [ pos ] ; } }