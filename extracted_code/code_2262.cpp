int main ( ) { int t , i , j , k , m , largest ; int N ; char space ; int A [ 100 ] [ 100 ] ; int M [ 100 ] [ 100 ] = { 0 } ; scanf ( "%d" , & t ) ; for ( i = 0 ; i < t ; i ++ ) { scanf ( "%d" , & N ) ; for ( j = 0 ; j < N ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) scanf ( "%d%c" , & A [ j ] [ k ] , & space ) ; } M [ 0 ] [ 0 ] = A [ 0 ] [ 0 ] ; for ( j = 1 ; j < N ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { if ( k == 0 ) { M [ j ] [ k ] = M [ j - 1 ] [ k ] + A [ j ] [ k ] ; } else { if ( M [ j - 1 ] [ k ] + A [ j ] [ k ] > M [ j - 1 ] [ k - 1 ] + A [ j ] [ k ] ) M [ j ] [ k ] = M [ j - 1 ] [ k ] + A [ j ] [ k ] ; else M [ j ] [ k ] = M [ j - 1 ] [ k - 1 ] + A [ j ] [ k ] ; } } } largest = M [ N - 1 ] [ 0 ] ; for ( m = 0 ; m < N ; m ++ ) { if ( M [ N - 1 ] [ m ] > largest ) largest = M [ N - 1 ] [ m ] ; } printf ( "%d\n" , largest ) ; } }