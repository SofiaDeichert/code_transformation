{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 1217,
  "text": "struct node { int data ; struct node * next ; } ; typedef struct node NODE ; NODE * head = NULL ; NODE * create ( int ) ; int clear ( ) ; NODE * insert ( int ) ; int sum = 0 ; int main ( ) { int t , n ; int i = 0 , key ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d\" , & n ) ; head = create ( n ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\" , & key ) ; head = insert ( key ) ; } sum = clear ( ) ; printf ( \"%d\" , key ) ; } return 0 ; } NODE * create ( int n ) { NODE * p , * q = head ; int i = 0 ; for ( i = 0 ; i < n ; i ++ ) { p = ( NODE * ) malloc ( sizeof ( NODE ) ) ; p -> data = 32000 ; p -> next = NULL ; if ( head == NULL ) head = p ; else { while ( q -> next != NULL ) q = q -> next ; q -> next = p ; } } return head ; } NODE * insert ( int n ) { NODE * p = head ; while ( p -> next != NULL ) { if ( p -> data == 32000 ) { p -> data = n ; break ; } p = p -> next ; } return head ; } int clear ( ) { NODE * p , * q = head ; int key ; p = head -> next ; while ( q -> next != NULL ) { if ( p -> data >= q -> data ) { key = p -> data ; q -> next = p -> next ; free ( p ) ; p = q -> next ; } else { key = q -> data ; head = p ; free ( q ) ; q = head ; p = p -> next ; } sum = sum + key ; } return sum ; }",
  "children": [
    {
      "type": "struct_specifier",
      "start_byte": 0,
      "end_byte": 47,
      "text": "struct node { int data ; struct node * next ; }",
      "children": [
        {
          "type": "struct",
          "start_byte": 0,
          "end_byte": 6,
          "text": "struct",
          "children": []
        },
        {
          "type": "type_identifier",
          "start_byte": 7,
          "end_byte": 11,
          "text": "node",
          "children": []
        },
        {
          "type": "field_declaration_list",
          "start_byte": 12,
          "end_byte": 47,
          "text": "{ int data ; struct node * next ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 12,
              "end_byte": 13,
              "text": "{",
              "children": []
            },
            {
              "type": "field_declaration",
              "start_byte": 14,
              "end_byte": 24,
              "text": "int data ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 14,
                  "end_byte": 17,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "field_identifier",
                  "start_byte": 18,
                  "end_byte": 22,
                  "text": "data",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 23,
                  "end_byte": 24,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "field_declaration",
              "start_byte": 25,
              "end_byte": 45,
              "text": "struct node * next ;",
              "children": [
                {
                  "type": "struct_specifier",
                  "start_byte": 25,
                  "end_byte": 36,
                  "text": "struct node",
                  "children": [
                    {
                      "type": "struct",
                      "start_byte": 25,
                      "end_byte": 31,
                      "text": "struct",
                      "children": []
                    },
                    {
                      "type": "type_identifier",
                      "start_byte": 32,
                      "end_byte": 36,
                      "text": "node",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "pointer_declarator",
                  "start_byte": 37,
                  "end_byte": 43,
                  "text": "* next",
                  "children": [
                    {
                      "type": "*",
                      "start_byte": 37,
                      "end_byte": 38,
                      "text": "*",
                      "children": []
                    },
                    {
                      "type": "field_identifier",
                      "start_byte": 39,
                      "end_byte": 43,
                      "text": "next",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 44,
                  "end_byte": 45,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 46,
              "end_byte": 47,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": ";",
      "start_byte": 48,
      "end_byte": 49,
      "text": ";",
      "children": []
    },
    {
      "type": "type_definition",
      "start_byte": 50,
      "end_byte": 76,
      "text": "typedef struct node NODE ;",
      "children": [
        {
          "type": "typedef",
          "start_byte": 50,
          "end_byte": 57,
          "text": "typedef",
          "children": []
        },
        {
          "type": "struct_specifier",
          "start_byte": 58,
          "end_byte": 69,
          "text": "struct node",
          "children": [
            {
              "type": "struct",
              "start_byte": 58,
              "end_byte": 64,
              "text": "struct",
              "children": []
            },
            {
              "type": "type_identifier",
              "start_byte": 65,
              "end_byte": 69,
              "text": "node",
              "children": []
            }
          ]
        },
        {
          "type": "type_identifier",
          "start_byte": 70,
          "end_byte": 74,
          "text": "NODE",
          "children": []
        },
        {
          "type": ";",
          "start_byte": 75,
          "end_byte": 76,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 77,
      "end_byte": 97,
      "text": "NODE * head = NULL ;",
      "children": [
        {
          "type": "type_identifier",
          "start_byte": 77,
          "end_byte": 81,
          "text": "NODE",
          "children": []
        },
        {
          "type": "init_declarator",
          "start_byte": 82,
          "end_byte": 95,
          "text": "* head = NULL",
          "children": [
            {
              "type": "pointer_declarator",
              "start_byte": 82,
              "end_byte": 88,
              "text": "* head",
              "children": [
                {
                  "type": "*",
                  "start_byte": 82,
                  "end_byte": 83,
                  "text": "*",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 84,
                  "end_byte": 88,
                  "text": "head",
                  "children": []
                }
              ]
            },
            {
              "type": "=",
              "start_byte": 89,
              "end_byte": 90,
              "text": "=",
              "children": []
            },
            {
              "type": "null",
              "start_byte": 91,
              "end_byte": 95,
              "text": "NULL",
              "children": [
                {
                  "type": "NULL",
                  "start_byte": 91,
                  "end_byte": 95,
                  "text": "NULL",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 96,
          "end_byte": 97,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 98,
      "end_byte": 121,
      "text": "NODE * create ( int ) ;",
      "children": [
        {
          "type": "type_identifier",
          "start_byte": 98,
          "end_byte": 102,
          "text": "NODE",
          "children": []
        },
        {
          "type": "pointer_declarator",
          "start_byte": 103,
          "end_byte": 119,
          "text": "* create ( int )",
          "children": [
            {
              "type": "*",
              "start_byte": 103,
              "end_byte": 104,
              "text": "*",
              "children": []
            },
            {
              "type": "function_declarator",
              "start_byte": 105,
              "end_byte": 119,
              "text": "create ( int )",
              "children": [
                {
                  "type": "identifier",
                  "start_byte": 105,
                  "end_byte": 111,
                  "text": "create",
                  "children": []
                },
                {
                  "type": "parameter_list",
                  "start_byte": 112,
                  "end_byte": 119,
                  "text": "( int )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 112,
                      "end_byte": 113,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "parameter_declaration",
                      "start_byte": 114,
                      "end_byte": 117,
                      "text": "int",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 114,
                          "end_byte": 117,
                          "text": "int",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 118,
                      "end_byte": 119,
                      "text": ")",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 120,
          "end_byte": 121,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 122,
      "end_byte": 137,
      "text": "int clear ( ) ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 122,
          "end_byte": 125,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 126,
          "end_byte": 135,
          "text": "clear ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 126,
              "end_byte": 131,
              "text": "clear",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 132,
              "end_byte": 135,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 132,
                  "end_byte": 133,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 134,
                  "end_byte": 135,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 136,
          "end_byte": 137,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 138,
      "end_byte": 161,
      "text": "NODE * insert ( int ) ;",
      "children": [
        {
          "type": "type_identifier",
          "start_byte": 138,
          "end_byte": 142,
          "text": "NODE",
          "children": []
        },
        {
          "type": "pointer_declarator",
          "start_byte": 143,
          "end_byte": 159,
          "text": "* insert ( int )",
          "children": [
            {
              "type": "*",
              "start_byte": 143,
              "end_byte": 144,
              "text": "*",
              "children": []
            },
            {
              "type": "function_declarator",
              "start_byte": 145,
              "end_byte": 159,
              "text": "insert ( int )",
              "children": [
                {
                  "type": "identifier",
                  "start_byte": 145,
                  "end_byte": 151,
                  "text": "insert",
                  "children": []
                },
                {
                  "type": "parameter_list",
                  "start_byte": 152,
                  "end_byte": 159,
                  "text": "( int )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 152,
                      "end_byte": 153,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "parameter_declaration",
                      "start_byte": 154,
                      "end_byte": 157,
                      "text": "int",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 154,
                          "end_byte": 157,
                          "text": "int",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 158,
                      "end_byte": 159,
                      "text": ")",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 160,
          "end_byte": 161,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 162,
      "end_byte": 175,
      "text": "int sum = 0 ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 162,
          "end_byte": 165,
          "text": "int",
          "children": []
        },
        {
          "type": "init_declarator",
          "start_byte": 166,
          "end_byte": 173,
          "text": "sum = 0",
          "children": [
            {
              "type": "identifier",
              "start_byte": 166,
              "end_byte": 169,
              "text": "sum",
              "children": []
            },
            {
              "type": "=",
              "start_byte": 170,
              "end_byte": 171,
              "text": "=",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 172,
              "end_byte": 173,
              "text": "0",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 174,
          "end_byte": 175,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 176,
      "end_byte": 444,
      "text": "int main ( ) { int t , n ; int i = 0 , key ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d\" , & n ) ; head = create ( n ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\" , & key ) ; head = insert ( key ) ; } sum = clear ( ) ; printf ( \"%d\" , key ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 176,
          "end_byte": 179,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 180,
          "end_byte": 188,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 180,
              "end_byte": 184,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 185,
              "end_byte": 188,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 185,
                  "end_byte": 186,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 187,
                  "end_byte": 188,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 189,
          "end_byte": 444,
          "text": "{ int t , n ; int i = 0 , key ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d\" , & n ) ; head = create ( n ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\" , & key ) ; head = insert ( key ) ; } sum = clear ( ) ; printf ( \"%d\" , key ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 189,
              "end_byte": 190,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 191,
              "end_byte": 202,
              "text": "int t , n ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 191,
                  "end_byte": 194,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 195,
                  "end_byte": 196,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 197,
                  "end_byte": 198,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 199,
                  "end_byte": 200,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 201,
                  "end_byte": 202,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 203,
              "end_byte": 220,
              "text": "int i = 0 , key ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 203,
                  "end_byte": 206,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 207,
                  "end_byte": 212,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 207,
                      "end_byte": 208,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 209,
                      "end_byte": 210,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 211,
                      "end_byte": 212,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 213,
                  "end_byte": 214,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 215,
                  "end_byte": 218,
                  "text": "key",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 219,
                  "end_byte": 220,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 221,
              "end_byte": 243,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 221,
                  "end_byte": 241,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 221,
                      "end_byte": 226,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 227,
                      "end_byte": 241,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 227,
                          "end_byte": 228,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 229,
                          "end_byte": 233,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 229,
                              "end_byte": 230,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 230,
                              "end_byte": 232,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 232,
                              "end_byte": 233,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 234,
                          "end_byte": 235,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 236,
                          "end_byte": 239,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 236,
                              "end_byte": 237,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 238,
                              "end_byte": 239,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 240,
                          "end_byte": 241,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 242,
                  "end_byte": 243,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 244,
              "end_byte": 431,
              "text": "while ( t -- ) { scanf ( \"%d\" , & n ) ; head = create ( n ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\" , & key ) ; head = insert ( key ) ; } sum = clear ( ) ; printf ( \"%d\" , key ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 244,
                  "end_byte": 249,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 250,
                  "end_byte": 258,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 250,
                      "end_byte": 251,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 252,
                      "end_byte": 256,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 252,
                          "end_byte": 253,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 254,
                          "end_byte": 256,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 257,
                      "end_byte": 258,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 259,
                  "end_byte": 431,
                  "text": "{ scanf ( \"%d\" , & n ) ; head = create ( n ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\" , & key ) ; head = insert ( key ) ; } sum = clear ( ) ; printf ( \"%d\" , key ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 259,
                      "end_byte": 260,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 261,
                      "end_byte": 283,
                      "text": "scanf ( \"%d\" , & n ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 261,
                          "end_byte": 281,
                          "text": "scanf ( \"%d\" , & n )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 261,
                              "end_byte": 266,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 267,
                              "end_byte": 281,
                              "text": "( \"%d\" , & n )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 267,
                                  "end_byte": 268,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 269,
                                  "end_byte": 273,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 269,
                                      "end_byte": 270,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 270,
                                      "end_byte": 272,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 272,
                                      "end_byte": 273,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 274,
                                  "end_byte": 275,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 276,
                                  "end_byte": 279,
                                  "text": "& n",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 276,
                                      "end_byte": 277,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 278,
                                      "end_byte": 279,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 280,
                                  "end_byte": 281,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 282,
                          "end_byte": 283,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 284,
                      "end_byte": 305,
                      "text": "head = create ( n ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 284,
                          "end_byte": 303,
                          "text": "head = create ( n )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 284,
                              "end_byte": 288,
                              "text": "head",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 289,
                              "end_byte": 290,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 291,
                              "end_byte": 303,
                              "text": "create ( n )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 291,
                                  "end_byte": 297,
                                  "text": "create",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 298,
                                  "end_byte": 303,
                                  "text": "( n )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 298,
                                      "end_byte": 299,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 300,
                                      "end_byte": 301,
                                      "text": "n",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 302,
                                      "end_byte": 303,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 304,
                          "end_byte": 305,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 306,
                      "end_byte": 387,
                      "text": "for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\" , & key ) ; head = insert ( key ) ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 306,
                          "end_byte": 309,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 310,
                          "end_byte": 311,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 312,
                          "end_byte": 317,
                          "text": "i = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 312,
                              "end_byte": 313,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 314,
                              "end_byte": 315,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 316,
                              "end_byte": 317,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 318,
                          "end_byte": 319,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 320,
                          "end_byte": 325,
                          "text": "i < n",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 320,
                              "end_byte": 321,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 322,
                              "end_byte": 323,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 324,
                              "end_byte": 325,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 326,
                          "end_byte": 327,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 328,
                          "end_byte": 332,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 328,
                              "end_byte": 329,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 330,
                              "end_byte": 332,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 333,
                          "end_byte": 334,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 335,
                          "end_byte": 387,
                          "text": "{ scanf ( \"%d\" , & key ) ; head = insert ( key ) ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 335,
                              "end_byte": 336,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 337,
                              "end_byte": 361,
                              "text": "scanf ( \"%d\" , & key ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 337,
                                  "end_byte": 359,
                                  "text": "scanf ( \"%d\" , & key )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 337,
                                      "end_byte": 342,
                                      "text": "scanf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 343,
                                      "end_byte": 359,
                                      "text": "( \"%d\" , & key )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 343,
                                          "end_byte": 344,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 345,
                                          "end_byte": 349,
                                          "text": "\"%d\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 345,
                                              "end_byte": 346,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 346,
                                              "end_byte": 348,
                                              "text": "%d",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 348,
                                              "end_byte": 349,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 350,
                                          "end_byte": 351,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "pointer_expression",
                                          "start_byte": 352,
                                          "end_byte": 357,
                                          "text": "& key",
                                          "children": [
                                            {
                                              "type": "&",
                                              "start_byte": 352,
                                              "end_byte": 353,
                                              "text": "&",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 354,
                                              "end_byte": 357,
                                              "text": "key",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 358,
                                          "end_byte": 359,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 360,
                                  "end_byte": 361,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 362,
                              "end_byte": 385,
                              "text": "head = insert ( key ) ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 362,
                                  "end_byte": 383,
                                  "text": "head = insert ( key )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 362,
                                      "end_byte": 366,
                                      "text": "head",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 367,
                                      "end_byte": 368,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 369,
                                      "end_byte": 383,
                                      "text": "insert ( key )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 369,
                                          "end_byte": 375,
                                          "text": "insert",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 376,
                                          "end_byte": 383,
                                          "text": "( key )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 376,
                                              "end_byte": 377,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 378,
                                              "end_byte": 381,
                                              "text": "key",
                                              "children": []
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 382,
                                              "end_byte": 383,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 384,
                                  "end_byte": 385,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 386,
                              "end_byte": 387,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 388,
                      "end_byte": 405,
                      "text": "sum = clear ( ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 388,
                          "end_byte": 403,
                          "text": "sum = clear ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 388,
                              "end_byte": 391,
                              "text": "sum",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 392,
                              "end_byte": 393,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 394,
                              "end_byte": 403,
                              "text": "clear ( )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 394,
                                  "end_byte": 399,
                                  "text": "clear",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 400,
                                  "end_byte": 403,
                                  "text": "( )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 400,
                                      "end_byte": 401,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 402,
                                      "end_byte": 403,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 404,
                          "end_byte": 405,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 406,
                      "end_byte": 429,
                      "text": "printf ( \"%d\" , key ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 406,
                          "end_byte": 427,
                          "text": "printf ( \"%d\" , key )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 406,
                              "end_byte": 412,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 413,
                              "end_byte": 427,
                              "text": "( \"%d\" , key )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 413,
                                  "end_byte": 414,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 415,
                                  "end_byte": 419,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 415,
                                      "end_byte": 416,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 416,
                                      "end_byte": 418,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 418,
                                      "end_byte": 419,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 420,
                                  "end_byte": 421,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 422,
                                  "end_byte": 425,
                                  "text": "key",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 426,
                                  "end_byte": 427,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 428,
                          "end_byte": 429,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 430,
                      "end_byte": 431,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 432,
              "end_byte": 442,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 432,
                  "end_byte": 438,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 439,
                  "end_byte": 440,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 441,
                  "end_byte": 442,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 443,
              "end_byte": 444,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 445,
      "end_byte": 738,
      "text": "NODE * create ( int n ) { NODE * p , * q = head ; int i = 0 ; for ( i = 0 ; i < n ; i ++ ) { p = ( NODE * ) malloc ( sizeof ( NODE ) ) ; p -> data = 32000 ; p -> next = NULL ; if ( head == NULL ) head = p ; else { while ( q -> next != NULL ) q = q -> next ; q -> next = p ; } } return head ; }",
      "children": [
        {
          "type": "type_identifier",
          "start_byte": 445,
          "end_byte": 449,
          "text": "NODE",
          "children": []
        },
        {
          "type": "pointer_declarator",
          "start_byte": 450,
          "end_byte": 468,
          "text": "* create ( int n )",
          "children": [
            {
              "type": "*",
              "start_byte": 450,
              "end_byte": 451,
              "text": "*",
              "children": []
            },
            {
              "type": "function_declarator",
              "start_byte": 452,
              "end_byte": 468,
              "text": "create ( int n )",
              "children": [
                {
                  "type": "identifier",
                  "start_byte": 452,
                  "end_byte": 458,
                  "text": "create",
                  "children": []
                },
                {
                  "type": "parameter_list",
                  "start_byte": 459,
                  "end_byte": 468,
                  "text": "( int n )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 459,
                      "end_byte": 460,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "parameter_declaration",
                      "start_byte": 461,
                      "end_byte": 466,
                      "text": "int n",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 461,
                          "end_byte": 464,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 465,
                          "end_byte": 466,
                          "text": "n",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 467,
                      "end_byte": 468,
                      "text": ")",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 469,
          "end_byte": 738,
          "text": "{ NODE * p , * q = head ; int i = 0 ; for ( i = 0 ; i < n ; i ++ ) { p = ( NODE * ) malloc ( sizeof ( NODE ) ) ; p -> data = 32000 ; p -> next = NULL ; if ( head == NULL ) head = p ; else { while ( q -> next != NULL ) q = q -> next ; q -> next = p ; } } return head ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 469,
              "end_byte": 470,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 471,
              "end_byte": 494,
              "text": "NODE * p , * q = head ;",
              "children": [
                {
                  "type": "type_identifier",
                  "start_byte": 471,
                  "end_byte": 475,
                  "text": "NODE",
                  "children": []
                },
                {
                  "type": "pointer_declarator",
                  "start_byte": 476,
                  "end_byte": 479,
                  "text": "* p",
                  "children": [
                    {
                      "type": "*",
                      "start_byte": 476,
                      "end_byte": 477,
                      "text": "*",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 478,
                      "end_byte": 479,
                      "text": "p",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 480,
                  "end_byte": 481,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 482,
                  "end_byte": 492,
                  "text": "* q = head",
                  "children": [
                    {
                      "type": "pointer_declarator",
                      "start_byte": 482,
                      "end_byte": 485,
                      "text": "* q",
                      "children": [
                        {
                          "type": "*",
                          "start_byte": 482,
                          "end_byte": 483,
                          "text": "*",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 484,
                          "end_byte": 485,
                          "text": "q",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start_byte": 486,
                      "end_byte": 487,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 488,
                      "end_byte": 492,
                      "text": "head",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 493,
                  "end_byte": 494,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 495,
              "end_byte": 506,
              "text": "int i = 0 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 495,
                  "end_byte": 498,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 499,
                  "end_byte": 504,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 499,
                      "end_byte": 500,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 501,
                      "end_byte": 502,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 503,
                      "end_byte": 504,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 505,
                  "end_byte": 506,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 507,
              "end_byte": 722,
              "text": "for ( i = 0 ; i < n ; i ++ ) { p = ( NODE * ) malloc ( sizeof ( NODE ) ) ; p -> data = 32000 ; p -> next = NULL ; if ( head == NULL ) head = p ; else { while ( q -> next != NULL ) q = q -> next ; q -> next = p ; } }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 507,
                  "end_byte": 510,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 511,
                  "end_byte": 512,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 513,
                  "end_byte": 518,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 513,
                      "end_byte": 514,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 515,
                      "end_byte": 516,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 517,
                      "end_byte": 518,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 519,
                  "end_byte": 520,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 521,
                  "end_byte": 526,
                  "text": "i < n",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 521,
                      "end_byte": 522,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 523,
                      "end_byte": 524,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 525,
                      "end_byte": 526,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 527,
                  "end_byte": 528,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 529,
                  "end_byte": 533,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 529,
                      "end_byte": 530,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 531,
                      "end_byte": 533,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 534,
                  "end_byte": 535,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 536,
                  "end_byte": 722,
                  "text": "{ p = ( NODE * ) malloc ( sizeof ( NODE ) ) ; p -> data = 32000 ; p -> next = NULL ; if ( head == NULL ) head = p ; else { while ( q -> next != NULL ) q = q -> next ; q -> next = p ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 536,
                      "end_byte": 537,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 538,
                      "end_byte": 581,
                      "text": "p = ( NODE * ) malloc ( sizeof ( NODE ) ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 538,
                          "end_byte": 579,
                          "text": "p = ( NODE * ) malloc ( sizeof ( NODE ) )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 538,
                              "end_byte": 539,
                              "text": "p",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 540,
                              "end_byte": 541,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "cast_expression",
                              "start_byte": 542,
                              "end_byte": 579,
                              "text": "( NODE * ) malloc ( sizeof ( NODE ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 542,
                                  "end_byte": 543,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "type_descriptor",
                                  "start_byte": 544,
                                  "end_byte": 550,
                                  "text": "NODE *",
                                  "children": [
                                    {
                                      "type": "type_identifier",
                                      "start_byte": 544,
                                      "end_byte": 548,
                                      "text": "NODE",
                                      "children": []
                                    },
                                    {
                                      "type": "abstract_pointer_declarator",
                                      "start_byte": 549,
                                      "end_byte": 550,
                                      "text": "*",
                                      "children": [
                                        {
                                          "type": "*",
                                          "start_byte": 549,
                                          "end_byte": 550,
                                          "text": "*",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 551,
                                  "end_byte": 552,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 553,
                                  "end_byte": 579,
                                  "text": "malloc ( sizeof ( NODE ) )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 553,
                                      "end_byte": 559,
                                      "text": "malloc",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 560,
                                      "end_byte": 579,
                                      "text": "( sizeof ( NODE ) )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 560,
                                          "end_byte": 561,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "sizeof_expression",
                                          "start_byte": 562,
                                          "end_byte": 577,
                                          "text": "sizeof ( NODE )",
                                          "children": [
                                            {
                                              "type": "sizeof",
                                              "start_byte": 562,
                                              "end_byte": 568,
                                              "text": "sizeof",
                                              "children": []
                                            },
                                            {
                                              "type": "parenthesized_expression",
                                              "start_byte": 569,
                                              "end_byte": 577,
                                              "text": "( NODE )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 569,
                                                  "end_byte": 570,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 571,
                                                  "end_byte": 575,
                                                  "text": "NODE",
                                                  "children": []
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 576,
                                                  "end_byte": 577,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 578,
                                          "end_byte": 579,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 580,
                          "end_byte": 581,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 582,
                      "end_byte": 601,
                      "text": "p -> data = 32000 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 582,
                          "end_byte": 599,
                          "text": "p -> data = 32000",
                          "children": [
                            {
                              "type": "field_expression",
                              "start_byte": 582,
                              "end_byte": 591,
                              "text": "p -> data",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 582,
                                  "end_byte": 583,
                                  "text": "p",
                                  "children": []
                                },
                                {
                                  "type": "->",
                                  "start_byte": 584,
                                  "end_byte": 586,
                                  "text": "->",
                                  "children": []
                                },
                                {
                                  "type": "field_identifier",
                                  "start_byte": 587,
                                  "end_byte": 591,
                                  "text": "data",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 592,
                              "end_byte": 593,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 594,
                              "end_byte": 599,
                              "text": "32000",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 600,
                          "end_byte": 601,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 602,
                      "end_byte": 620,
                      "text": "p -> next = NULL ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 602,
                          "end_byte": 618,
                          "text": "p -> next = NULL",
                          "children": [
                            {
                              "type": "field_expression",
                              "start_byte": 602,
                              "end_byte": 611,
                              "text": "p -> next",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 602,
                                  "end_byte": 603,
                                  "text": "p",
                                  "children": []
                                },
                                {
                                  "type": "->",
                                  "start_byte": 604,
                                  "end_byte": 606,
                                  "text": "->",
                                  "children": []
                                },
                                {
                                  "type": "field_identifier",
                                  "start_byte": 607,
                                  "end_byte": 611,
                                  "text": "next",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 612,
                              "end_byte": 613,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "null",
                              "start_byte": 614,
                              "end_byte": 618,
                              "text": "NULL",
                              "children": [
                                {
                                  "type": "NULL",
                                  "start_byte": 614,
                                  "end_byte": 618,
                                  "text": "NULL",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 619,
                          "end_byte": 620,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 621,
                      "end_byte": 720,
                      "text": "if ( head == NULL ) head = p ; else { while ( q -> next != NULL ) q = q -> next ; q -> next = p ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 621,
                          "end_byte": 623,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 624,
                          "end_byte": 640,
                          "text": "( head == NULL )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 624,
                              "end_byte": 625,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 626,
                              "end_byte": 638,
                              "text": "head == NULL",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 626,
                                  "end_byte": 630,
                                  "text": "head",
                                  "children": []
                                },
                                {
                                  "type": "==",
                                  "start_byte": 631,
                                  "end_byte": 633,
                                  "text": "==",
                                  "children": []
                                },
                                {
                                  "type": "null",
                                  "start_byte": 634,
                                  "end_byte": 638,
                                  "text": "NULL",
                                  "children": [
                                    {
                                      "type": "NULL",
                                      "start_byte": 634,
                                      "end_byte": 638,
                                      "text": "NULL",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 639,
                              "end_byte": 640,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 641,
                          "end_byte": 651,
                          "text": "head = p ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 641,
                              "end_byte": 649,
                              "text": "head = p",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 641,
                                  "end_byte": 645,
                                  "text": "head",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 646,
                                  "end_byte": 647,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 648,
                                  "end_byte": 649,
                                  "text": "p",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 650,
                              "end_byte": 651,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 652,
                          "end_byte": 720,
                          "text": "else { while ( q -> next != NULL ) q = q -> next ; q -> next = p ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 652,
                              "end_byte": 656,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 657,
                              "end_byte": 720,
                              "text": "{ while ( q -> next != NULL ) q = q -> next ; q -> next = p ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 657,
                                  "end_byte": 658,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "while_statement",
                                  "start_byte": 659,
                                  "end_byte": 702,
                                  "text": "while ( q -> next != NULL ) q = q -> next ;",
                                  "children": [
                                    {
                                      "type": "while",
                                      "start_byte": 659,
                                      "end_byte": 664,
                                      "text": "while",
                                      "children": []
                                    },
                                    {
                                      "type": "condition_clause",
                                      "start_byte": 665,
                                      "end_byte": 686,
                                      "text": "( q -> next != NULL )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 665,
                                          "end_byte": 666,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 667,
                                          "end_byte": 684,
                                          "text": "q -> next != NULL",
                                          "children": [
                                            {
                                              "type": "field_expression",
                                              "start_byte": 667,
                                              "end_byte": 676,
                                              "text": "q -> next",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 667,
                                                  "end_byte": 668,
                                                  "text": "q",
                                                  "children": []
                                                },
                                                {
                                                  "type": "->",
                                                  "start_byte": 669,
                                                  "end_byte": 671,
                                                  "text": "->",
                                                  "children": []
                                                },
                                                {
                                                  "type": "field_identifier",
                                                  "start_byte": 672,
                                                  "end_byte": 676,
                                                  "text": "next",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "!=",
                                              "start_byte": 677,
                                              "end_byte": 679,
                                              "text": "!=",
                                              "children": []
                                            },
                                            {
                                              "type": "null",
                                              "start_byte": 680,
                                              "end_byte": 684,
                                              "text": "NULL",
                                              "children": [
                                                {
                                                  "type": "NULL",
                                                  "start_byte": 680,
                                                  "end_byte": 684,
                                                  "text": "NULL",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 685,
                                          "end_byte": 686,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 687,
                                      "end_byte": 702,
                                      "text": "q = q -> next ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 687,
                                          "end_byte": 700,
                                          "text": "q = q -> next",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 687,
                                              "end_byte": 688,
                                              "text": "q",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 689,
                                              "end_byte": 690,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "field_expression",
                                              "start_byte": 691,
                                              "end_byte": 700,
                                              "text": "q -> next",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 691,
                                                  "end_byte": 692,
                                                  "text": "q",
                                                  "children": []
                                                },
                                                {
                                                  "type": "->",
                                                  "start_byte": 693,
                                                  "end_byte": 695,
                                                  "text": "->",
                                                  "children": []
                                                },
                                                {
                                                  "type": "field_identifier",
                                                  "start_byte": 696,
                                                  "end_byte": 700,
                                                  "text": "next",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 701,
                                          "end_byte": 702,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 703,
                                  "end_byte": 718,
                                  "text": "q -> next = p ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 703,
                                      "end_byte": 716,
                                      "text": "q -> next = p",
                                      "children": [
                                        {
                                          "type": "field_expression",
                                          "start_byte": 703,
                                          "end_byte": 712,
                                          "text": "q -> next",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 703,
                                              "end_byte": 704,
                                              "text": "q",
                                              "children": []
                                            },
                                            {
                                              "type": "->",
                                              "start_byte": 705,
                                              "end_byte": 707,
                                              "text": "->",
                                              "children": []
                                            },
                                            {
                                              "type": "field_identifier",
                                              "start_byte": 708,
                                              "end_byte": 712,
                                              "text": "next",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 713,
                                          "end_byte": 714,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 715,
                                          "end_byte": 716,
                                          "text": "p",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 717,
                                      "end_byte": 718,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 719,
                                  "end_byte": 720,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 721,
                      "end_byte": 722,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 723,
              "end_byte": 736,
              "text": "return head ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 723,
                  "end_byte": 729,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 730,
                  "end_byte": 734,
                  "text": "head",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 735,
                  "end_byte": 736,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 737,
              "end_byte": 738,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 739,
      "end_byte": 900,
      "text": "NODE * insert ( int n ) { NODE * p = head ; while ( p -> next != NULL ) { if ( p -> data == 32000 ) { p -> data = n ; break ; } p = p -> next ; } return head ; }",
      "children": [
        {
          "type": "type_identifier",
          "start_byte": 739,
          "end_byte": 743,
          "text": "NODE",
          "children": []
        },
        {
          "type": "pointer_declarator",
          "start_byte": 744,
          "end_byte": 762,
          "text": "* insert ( int n )",
          "children": [
            {
              "type": "*",
              "start_byte": 744,
              "end_byte": 745,
              "text": "*",
              "children": []
            },
            {
              "type": "function_declarator",
              "start_byte": 746,
              "end_byte": 762,
              "text": "insert ( int n )",
              "children": [
                {
                  "type": "identifier",
                  "start_byte": 746,
                  "end_byte": 752,
                  "text": "insert",
                  "children": []
                },
                {
                  "type": "parameter_list",
                  "start_byte": 753,
                  "end_byte": 762,
                  "text": "( int n )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 753,
                      "end_byte": 754,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "parameter_declaration",
                      "start_byte": 755,
                      "end_byte": 760,
                      "text": "int n",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 755,
                          "end_byte": 758,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 759,
                          "end_byte": 760,
                          "text": "n",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 761,
                      "end_byte": 762,
                      "text": ")",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 763,
          "end_byte": 900,
          "text": "{ NODE * p = head ; while ( p -> next != NULL ) { if ( p -> data == 32000 ) { p -> data = n ; break ; } p = p -> next ; } return head ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 763,
              "end_byte": 764,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 765,
              "end_byte": 782,
              "text": "NODE * p = head ;",
              "children": [
                {
                  "type": "type_identifier",
                  "start_byte": 765,
                  "end_byte": 769,
                  "text": "NODE",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 770,
                  "end_byte": 780,
                  "text": "* p = head",
                  "children": [
                    {
                      "type": "pointer_declarator",
                      "start_byte": 770,
                      "end_byte": 773,
                      "text": "* p",
                      "children": [
                        {
                          "type": "*",
                          "start_byte": 770,
                          "end_byte": 771,
                          "text": "*",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 772,
                          "end_byte": 773,
                          "text": "p",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start_byte": 774,
                      "end_byte": 775,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 776,
                      "end_byte": 780,
                      "text": "head",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 781,
                  "end_byte": 782,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 783,
              "end_byte": 884,
              "text": "while ( p -> next != NULL ) { if ( p -> data == 32000 ) { p -> data = n ; break ; } p = p -> next ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 783,
                  "end_byte": 788,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 789,
                  "end_byte": 810,
                  "text": "( p -> next != NULL )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 789,
                      "end_byte": 790,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 791,
                      "end_byte": 808,
                      "text": "p -> next != NULL",
                      "children": [
                        {
                          "type": "field_expression",
                          "start_byte": 791,
                          "end_byte": 800,
                          "text": "p -> next",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 791,
                              "end_byte": 792,
                              "text": "p",
                              "children": []
                            },
                            {
                              "type": "->",
                              "start_byte": 793,
                              "end_byte": 795,
                              "text": "->",
                              "children": []
                            },
                            {
                              "type": "field_identifier",
                              "start_byte": 796,
                              "end_byte": 800,
                              "text": "next",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "!=",
                          "start_byte": 801,
                          "end_byte": 803,
                          "text": "!=",
                          "children": []
                        },
                        {
                          "type": "null",
                          "start_byte": 804,
                          "end_byte": 808,
                          "text": "NULL",
                          "children": [
                            {
                              "type": "NULL",
                              "start_byte": 804,
                              "end_byte": 808,
                              "text": "NULL",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 809,
                      "end_byte": 810,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 811,
                  "end_byte": 884,
                  "text": "{ if ( p -> data == 32000 ) { p -> data = n ; break ; } p = p -> next ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 811,
                      "end_byte": 812,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 813,
                      "end_byte": 866,
                      "text": "if ( p -> data == 32000 ) { p -> data = n ; break ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 813,
                          "end_byte": 815,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 816,
                          "end_byte": 838,
                          "text": "( p -> data == 32000 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 816,
                              "end_byte": 817,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 818,
                              "end_byte": 836,
                              "text": "p -> data == 32000",
                              "children": [
                                {
                                  "type": "field_expression",
                                  "start_byte": 818,
                                  "end_byte": 827,
                                  "text": "p -> data",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 818,
                                      "end_byte": 819,
                                      "text": "p",
                                      "children": []
                                    },
                                    {
                                      "type": "->",
                                      "start_byte": 820,
                                      "end_byte": 822,
                                      "text": "->",
                                      "children": []
                                    },
                                    {
                                      "type": "field_identifier",
                                      "start_byte": 823,
                                      "end_byte": 827,
                                      "text": "data",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "==",
                                  "start_byte": 828,
                                  "end_byte": 830,
                                  "text": "==",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 831,
                                  "end_byte": 836,
                                  "text": "32000",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 837,
                              "end_byte": 838,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 839,
                          "end_byte": 866,
                          "text": "{ p -> data = n ; break ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 839,
                              "end_byte": 840,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 841,
                              "end_byte": 856,
                              "text": "p -> data = n ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 841,
                                  "end_byte": 854,
                                  "text": "p -> data = n",
                                  "children": [
                                    {
                                      "type": "field_expression",
                                      "start_byte": 841,
                                      "end_byte": 850,
                                      "text": "p -> data",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 841,
                                          "end_byte": 842,
                                          "text": "p",
                                          "children": []
                                        },
                                        {
                                          "type": "->",
                                          "start_byte": 843,
                                          "end_byte": 845,
                                          "text": "->",
                                          "children": []
                                        },
                                        {
                                          "type": "field_identifier",
                                          "start_byte": 846,
                                          "end_byte": 850,
                                          "text": "data",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 851,
                                      "end_byte": 852,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 853,
                                      "end_byte": 854,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 855,
                                  "end_byte": 856,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "break_statement",
                              "start_byte": 857,
                              "end_byte": 864,
                              "text": "break ;",
                              "children": [
                                {
                                  "type": "break",
                                  "start_byte": 857,
                                  "end_byte": 862,
                                  "text": "break",
                                  "children": []
                                },
                                {
                                  "type": ";",
                                  "start_byte": 863,
                                  "end_byte": 864,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 865,
                              "end_byte": 866,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 867,
                      "end_byte": 882,
                      "text": "p = p -> next ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 867,
                          "end_byte": 880,
                          "text": "p = p -> next",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 867,
                              "end_byte": 868,
                              "text": "p",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 869,
                              "end_byte": 870,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "field_expression",
                              "start_byte": 871,
                              "end_byte": 880,
                              "text": "p -> next",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 871,
                                  "end_byte": 872,
                                  "text": "p",
                                  "children": []
                                },
                                {
                                  "type": "->",
                                  "start_byte": 873,
                                  "end_byte": 875,
                                  "text": "->",
                                  "children": []
                                },
                                {
                                  "type": "field_identifier",
                                  "start_byte": 876,
                                  "end_byte": 880,
                                  "text": "next",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 881,
                          "end_byte": 882,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 883,
                      "end_byte": 884,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 885,
              "end_byte": 898,
              "text": "return head ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 885,
                  "end_byte": 891,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 892,
                  "end_byte": 896,
                  "text": "head",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 897,
                  "end_byte": 898,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 899,
              "end_byte": 900,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 901,
      "end_byte": 1217,
      "text": "int clear ( ) { NODE * p , * q = head ; int key ; p = head -> next ; while ( q -> next != NULL ) { if ( p -> data >= q -> data ) { key = p -> data ; q -> next = p -> next ; free ( p ) ; p = q -> next ; } else { key = q -> data ; head = p ; free ( q ) ; q = head ; p = p -> next ; } sum = sum + key ; } return sum ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 901,
          "end_byte": 904,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 905,
          "end_byte": 914,
          "text": "clear ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 905,
              "end_byte": 910,
              "text": "clear",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 911,
              "end_byte": 914,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 911,
                  "end_byte": 912,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 913,
                  "end_byte": 914,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 915,
          "end_byte": 1217,
          "text": "{ NODE * p , * q = head ; int key ; p = head -> next ; while ( q -> next != NULL ) { if ( p -> data >= q -> data ) { key = p -> data ; q -> next = p -> next ; free ( p ) ; p = q -> next ; } else { key = q -> data ; head = p ; free ( q ) ; q = head ; p = p -> next ; } sum = sum + key ; } return sum ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 915,
              "end_byte": 916,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 917,
              "end_byte": 940,
              "text": "NODE * p , * q = head ;",
              "children": [
                {
                  "type": "type_identifier",
                  "start_byte": 917,
                  "end_byte": 921,
                  "text": "NODE",
                  "children": []
                },
                {
                  "type": "pointer_declarator",
                  "start_byte": 922,
                  "end_byte": 925,
                  "text": "* p",
                  "children": [
                    {
                      "type": "*",
                      "start_byte": 922,
                      "end_byte": 923,
                      "text": "*",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 924,
                      "end_byte": 925,
                      "text": "p",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 926,
                  "end_byte": 927,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 928,
                  "end_byte": 938,
                  "text": "* q = head",
                  "children": [
                    {
                      "type": "pointer_declarator",
                      "start_byte": 928,
                      "end_byte": 931,
                      "text": "* q",
                      "children": [
                        {
                          "type": "*",
                          "start_byte": 928,
                          "end_byte": 929,
                          "text": "*",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 930,
                          "end_byte": 931,
                          "text": "q",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start_byte": 932,
                      "end_byte": 933,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 934,
                      "end_byte": 938,
                      "text": "head",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 939,
                  "end_byte": 940,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 941,
              "end_byte": 950,
              "text": "int key ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 941,
                  "end_byte": 944,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 945,
                  "end_byte": 948,
                  "text": "key",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 949,
                  "end_byte": 950,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 951,
              "end_byte": 969,
              "text": "p = head -> next ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 951,
                  "end_byte": 967,
                  "text": "p = head -> next",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 951,
                      "end_byte": 952,
                      "text": "p",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 953,
                      "end_byte": 954,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "field_expression",
                      "start_byte": 955,
                      "end_byte": 967,
                      "text": "head -> next",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 955,
                          "end_byte": 959,
                          "text": "head",
                          "children": []
                        },
                        {
                          "type": "->",
                          "start_byte": 960,
                          "end_byte": 962,
                          "text": "->",
                          "children": []
                        },
                        {
                          "type": "field_identifier",
                          "start_byte": 963,
                          "end_byte": 967,
                          "text": "next",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 968,
                  "end_byte": 969,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 970,
              "end_byte": 1202,
              "text": "while ( q -> next != NULL ) { if ( p -> data >= q -> data ) { key = p -> data ; q -> next = p -> next ; free ( p ) ; p = q -> next ; } else { key = q -> data ; head = p ; free ( q ) ; q = head ; p = p -> next ; } sum = sum + key ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 970,
                  "end_byte": 975,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 976,
                  "end_byte": 997,
                  "text": "( q -> next != NULL )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 976,
                      "end_byte": 977,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 978,
                      "end_byte": 995,
                      "text": "q -> next != NULL",
                      "children": [
                        {
                          "type": "field_expression",
                          "start_byte": 978,
                          "end_byte": 987,
                          "text": "q -> next",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 978,
                              "end_byte": 979,
                              "text": "q",
                              "children": []
                            },
                            {
                              "type": "->",
                              "start_byte": 980,
                              "end_byte": 982,
                              "text": "->",
                              "children": []
                            },
                            {
                              "type": "field_identifier",
                              "start_byte": 983,
                              "end_byte": 987,
                              "text": "next",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "!=",
                          "start_byte": 988,
                          "end_byte": 990,
                          "text": "!=",
                          "children": []
                        },
                        {
                          "type": "null",
                          "start_byte": 991,
                          "end_byte": 995,
                          "text": "NULL",
                          "children": [
                            {
                              "type": "NULL",
                              "start_byte": 991,
                              "end_byte": 995,
                              "text": "NULL",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 996,
                      "end_byte": 997,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 998,
                  "end_byte": 1202,
                  "text": "{ if ( p -> data >= q -> data ) { key = p -> data ; q -> next = p -> next ; free ( p ) ; p = q -> next ; } else { key = q -> data ; head = p ; free ( q ) ; q = head ; p = p -> next ; } sum = sum + key ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 998,
                      "end_byte": 999,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 1000,
                      "end_byte": 1182,
                      "text": "if ( p -> data >= q -> data ) { key = p -> data ; q -> next = p -> next ; free ( p ) ; p = q -> next ; } else { key = q -> data ; head = p ; free ( q ) ; q = head ; p = p -> next ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 1000,
                          "end_byte": 1002,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 1003,
                          "end_byte": 1029,
                          "text": "( p -> data >= q -> data )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 1003,
                              "end_byte": 1004,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 1005,
                              "end_byte": 1027,
                              "text": "p -> data >= q -> data",
                              "children": [
                                {
                                  "type": "field_expression",
                                  "start_byte": 1005,
                                  "end_byte": 1014,
                                  "text": "p -> data",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1005,
                                      "end_byte": 1006,
                                      "text": "p",
                                      "children": []
                                    },
                                    {
                                      "type": "->",
                                      "start_byte": 1007,
                                      "end_byte": 1009,
                                      "text": "->",
                                      "children": []
                                    },
                                    {
                                      "type": "field_identifier",
                                      "start_byte": 1010,
                                      "end_byte": 1014,
                                      "text": "data",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ">=",
                                  "start_byte": 1015,
                                  "end_byte": 1017,
                                  "text": ">=",
                                  "children": []
                                },
                                {
                                  "type": "field_expression",
                                  "start_byte": 1018,
                                  "end_byte": 1027,
                                  "text": "q -> data",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1018,
                                      "end_byte": 1019,
                                      "text": "q",
                                      "children": []
                                    },
                                    {
                                      "type": "->",
                                      "start_byte": 1020,
                                      "end_byte": 1022,
                                      "text": "->",
                                      "children": []
                                    },
                                    {
                                      "type": "field_identifier",
                                      "start_byte": 1023,
                                      "end_byte": 1027,
                                      "text": "data",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 1028,
                              "end_byte": 1029,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 1030,
                          "end_byte": 1104,
                          "text": "{ key = p -> data ; q -> next = p -> next ; free ( p ) ; p = q -> next ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 1030,
                              "end_byte": 1031,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1032,
                              "end_byte": 1049,
                              "text": "key = p -> data ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1032,
                                  "end_byte": 1047,
                                  "text": "key = p -> data",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1032,
                                      "end_byte": 1035,
                                      "text": "key",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1036,
                                      "end_byte": 1037,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "field_expression",
                                      "start_byte": 1038,
                                      "end_byte": 1047,
                                      "text": "p -> data",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1038,
                                          "end_byte": 1039,
                                          "text": "p",
                                          "children": []
                                        },
                                        {
                                          "type": "->",
                                          "start_byte": 1040,
                                          "end_byte": 1042,
                                          "text": "->",
                                          "children": []
                                        },
                                        {
                                          "type": "field_identifier",
                                          "start_byte": 1043,
                                          "end_byte": 1047,
                                          "text": "data",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1048,
                                  "end_byte": 1049,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1050,
                              "end_byte": 1073,
                              "text": "q -> next = p -> next ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1050,
                                  "end_byte": 1071,
                                  "text": "q -> next = p -> next",
                                  "children": [
                                    {
                                      "type": "field_expression",
                                      "start_byte": 1050,
                                      "end_byte": 1059,
                                      "text": "q -> next",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1050,
                                          "end_byte": 1051,
                                          "text": "q",
                                          "children": []
                                        },
                                        {
                                          "type": "->",
                                          "start_byte": 1052,
                                          "end_byte": 1054,
                                          "text": "->",
                                          "children": []
                                        },
                                        {
                                          "type": "field_identifier",
                                          "start_byte": 1055,
                                          "end_byte": 1059,
                                          "text": "next",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1060,
                                      "end_byte": 1061,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "field_expression",
                                      "start_byte": 1062,
                                      "end_byte": 1071,
                                      "text": "p -> next",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1062,
                                          "end_byte": 1063,
                                          "text": "p",
                                          "children": []
                                        },
                                        {
                                          "type": "->",
                                          "start_byte": 1064,
                                          "end_byte": 1066,
                                          "text": "->",
                                          "children": []
                                        },
                                        {
                                          "type": "field_identifier",
                                          "start_byte": 1067,
                                          "end_byte": 1071,
                                          "text": "next",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1072,
                                  "end_byte": 1073,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1074,
                              "end_byte": 1086,
                              "text": "free ( p ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 1074,
                                  "end_byte": 1084,
                                  "text": "free ( p )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1074,
                                      "end_byte": 1078,
                                      "text": "free",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 1079,
                                      "end_byte": 1084,
                                      "text": "( p )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 1079,
                                          "end_byte": 1080,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 1081,
                                          "end_byte": 1082,
                                          "text": "p",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 1083,
                                          "end_byte": 1084,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1085,
                                  "end_byte": 1086,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1087,
                              "end_byte": 1102,
                              "text": "p = q -> next ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1087,
                                  "end_byte": 1100,
                                  "text": "p = q -> next",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1087,
                                      "end_byte": 1088,
                                      "text": "p",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1089,
                                      "end_byte": 1090,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "field_expression",
                                      "start_byte": 1091,
                                      "end_byte": 1100,
                                      "text": "q -> next",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1091,
                                          "end_byte": 1092,
                                          "text": "q",
                                          "children": []
                                        },
                                        {
                                          "type": "->",
                                          "start_byte": 1093,
                                          "end_byte": 1095,
                                          "text": "->",
                                          "children": []
                                        },
                                        {
                                          "type": "field_identifier",
                                          "start_byte": 1096,
                                          "end_byte": 1100,
                                          "text": "next",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1101,
                                  "end_byte": 1102,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 1103,
                              "end_byte": 1104,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 1105,
                          "end_byte": 1182,
                          "text": "else { key = q -> data ; head = p ; free ( q ) ; q = head ; p = p -> next ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 1105,
                              "end_byte": 1109,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 1110,
                              "end_byte": 1182,
                              "text": "{ key = q -> data ; head = p ; free ( q ) ; q = head ; p = p -> next ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 1110,
                                  "end_byte": 1111,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 1112,
                                  "end_byte": 1129,
                                  "text": "key = q -> data ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 1112,
                                      "end_byte": 1127,
                                      "text": "key = q -> data",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1112,
                                          "end_byte": 1115,
                                          "text": "key",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 1116,
                                          "end_byte": 1117,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "field_expression",
                                          "start_byte": 1118,
                                          "end_byte": 1127,
                                          "text": "q -> data",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1118,
                                              "end_byte": 1119,
                                              "text": "q",
                                              "children": []
                                            },
                                            {
                                              "type": "->",
                                              "start_byte": 1120,
                                              "end_byte": 1122,
                                              "text": "->",
                                              "children": []
                                            },
                                            {
                                              "type": "field_identifier",
                                              "start_byte": 1123,
                                              "end_byte": 1127,
                                              "text": "data",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 1128,
                                      "end_byte": 1129,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 1130,
                                  "end_byte": 1140,
                                  "text": "head = p ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 1130,
                                      "end_byte": 1138,
                                      "text": "head = p",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1130,
                                          "end_byte": 1134,
                                          "text": "head",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 1135,
                                          "end_byte": 1136,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 1137,
                                          "end_byte": 1138,
                                          "text": "p",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 1139,
                                      "end_byte": 1140,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 1141,
                                  "end_byte": 1153,
                                  "text": "free ( q ) ;",
                                  "children": [
                                    {
                                      "type": "call_expression",
                                      "start_byte": 1141,
                                      "end_byte": 1151,
                                      "text": "free ( q )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1141,
                                          "end_byte": 1145,
                                          "text": "free",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 1146,
                                          "end_byte": 1151,
                                          "text": "( q )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 1146,
                                              "end_byte": 1147,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 1148,
                                              "end_byte": 1149,
                                              "text": "q",
                                              "children": []
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 1150,
                                              "end_byte": 1151,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 1152,
                                      "end_byte": 1153,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 1154,
                                  "end_byte": 1164,
                                  "text": "q = head ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 1154,
                                      "end_byte": 1162,
                                      "text": "q = head",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1154,
                                          "end_byte": 1155,
                                          "text": "q",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 1156,
                                          "end_byte": 1157,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 1158,
                                          "end_byte": 1162,
                                          "text": "head",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 1163,
                                      "end_byte": 1164,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 1165,
                                  "end_byte": 1180,
                                  "text": "p = p -> next ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 1165,
                                      "end_byte": 1178,
                                      "text": "p = p -> next",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1165,
                                          "end_byte": 1166,
                                          "text": "p",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 1167,
                                          "end_byte": 1168,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "field_expression",
                                          "start_byte": 1169,
                                          "end_byte": 1178,
                                          "text": "p -> next",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1169,
                                              "end_byte": 1170,
                                              "text": "p",
                                              "children": []
                                            },
                                            {
                                              "type": "->",
                                              "start_byte": 1171,
                                              "end_byte": 1173,
                                              "text": "->",
                                              "children": []
                                            },
                                            {
                                              "type": "field_identifier",
                                              "start_byte": 1174,
                                              "end_byte": 1178,
                                              "text": "next",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 1179,
                                      "end_byte": 1180,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 1181,
                                  "end_byte": 1182,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1183,
                      "end_byte": 1200,
                      "text": "sum = sum + key ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 1183,
                          "end_byte": 1198,
                          "text": "sum = sum + key",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1183,
                              "end_byte": 1186,
                              "text": "sum",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 1187,
                              "end_byte": 1188,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 1189,
                              "end_byte": 1198,
                              "text": "sum + key",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 1189,
                                  "end_byte": 1192,
                                  "text": "sum",
                                  "children": []
                                },
                                {
                                  "type": "+",
                                  "start_byte": 1193,
                                  "end_byte": 1194,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 1195,
                                  "end_byte": 1198,
                                  "text": "key",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1199,
                          "end_byte": 1200,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 1201,
                      "end_byte": 1202,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 1203,
              "end_byte": 1215,
              "text": "return sum ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 1203,
                  "end_byte": 1209,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 1210,
                  "end_byte": 1213,
                  "text": "sum",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 1214,
                  "end_byte": 1215,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 1216,
              "end_byte": 1217,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}