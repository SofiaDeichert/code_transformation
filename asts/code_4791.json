{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 462,
  "text": "void second ( ) { int size , i , j , p , count = 0 ; scanf ( \"%d\" , & size ) ; int prime [ size ] ; for ( i = 0 ; i < size ; i ++ ) { scanf ( \"%d\" , & prime [ i ] ) ; } for ( i = 0 ; i < size - 1 ; i ++ ) { p = i ; for ( j = i + 1 ; j < size ; j ++ ) { if ( prime [ j ] > prime [ p ] ) { count ++ ; p = j ; } else { break ; } } } printf ( \"%d\" , size + count ) ; } int main ( ) { int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { second ( ) ; printf ( \"\\n\" ) ; } }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 364,
      "text": "void second ( ) { int size , i , j , p , count = 0 ; scanf ( \"%d\" , & size ) ; int prime [ size ] ; for ( i = 0 ; i < size ; i ++ ) { scanf ( \"%d\" , & prime [ i ] ) ; } for ( i = 0 ; i < size - 1 ; i ++ ) { p = i ; for ( j = i + 1 ; j < size ; j ++ ) { if ( prime [ j ] > prime [ p ] ) { count ++ ; p = j ; } else { break ; } } } printf ( \"%d\" , size + count ) ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 4,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 5,
          "end_byte": 15,
          "text": "second ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 5,
              "end_byte": 11,
              "text": "second",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 12,
              "end_byte": 15,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 12,
                  "end_byte": 13,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 14,
                  "end_byte": 15,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 16,
          "end_byte": 364,
          "text": "{ int size , i , j , p , count = 0 ; scanf ( \"%d\" , & size ) ; int prime [ size ] ; for ( i = 0 ; i < size ; i ++ ) { scanf ( \"%d\" , & prime [ i ] ) ; } for ( i = 0 ; i < size - 1 ; i ++ ) { p = i ; for ( j = i + 1 ; j < size ; j ++ ) { if ( prime [ j ] > prime [ p ] ) { count ++ ; p = j ; } else { break ; } } } printf ( \"%d\" , size + count ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 16,
              "end_byte": 17,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 18,
              "end_byte": 52,
              "text": "int size , i , j , p , count = 0 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 18,
                  "end_byte": 21,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 22,
                  "end_byte": 26,
                  "text": "size",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 27,
                  "end_byte": 28,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 29,
                  "end_byte": 30,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 31,
                  "end_byte": 32,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 33,
                  "end_byte": 34,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 35,
                  "end_byte": 36,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 37,
                  "end_byte": 38,
                  "text": "p",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 39,
                  "end_byte": 40,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 41,
                  "end_byte": 50,
                  "text": "count = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 41,
                      "end_byte": 46,
                      "text": "count",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 47,
                      "end_byte": 48,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 49,
                      "end_byte": 50,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 51,
                  "end_byte": 52,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 53,
              "end_byte": 78,
              "text": "scanf ( \"%d\" , & size ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 53,
                  "end_byte": 76,
                  "text": "scanf ( \"%d\" , & size )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 53,
                      "end_byte": 58,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 59,
                      "end_byte": 76,
                      "text": "( \"%d\" , & size )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 59,
                          "end_byte": 60,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 61,
                          "end_byte": 65,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 61,
                              "end_byte": 62,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 62,
                              "end_byte": 64,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 64,
                              "end_byte": 65,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 66,
                          "end_byte": 67,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 68,
                          "end_byte": 74,
                          "text": "& size",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 68,
                              "end_byte": 69,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 70,
                              "end_byte": 74,
                              "text": "size",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 75,
                          "end_byte": 76,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 77,
                  "end_byte": 78,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 79,
              "end_byte": 99,
              "text": "int prime [ size ] ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 79,
                  "end_byte": 82,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 83,
                  "end_byte": 97,
                  "text": "prime [ size ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 83,
                      "end_byte": 88,
                      "text": "prime",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 89,
                      "end_byte": 90,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 91,
                      "end_byte": 95,
                      "text": "size",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 96,
                      "end_byte": 97,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 98,
                  "end_byte": 99,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 100,
              "end_byte": 168,
              "text": "for ( i = 0 ; i < size ; i ++ ) { scanf ( \"%d\" , & prime [ i ] ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 100,
                  "end_byte": 103,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 104,
                  "end_byte": 105,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 106,
                  "end_byte": 111,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 106,
                      "end_byte": 107,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 108,
                      "end_byte": 109,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 110,
                      "end_byte": 111,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 112,
                  "end_byte": 113,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 114,
                  "end_byte": 122,
                  "text": "i < size",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 114,
                      "end_byte": 115,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 116,
                      "end_byte": 117,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 118,
                      "end_byte": 122,
                      "text": "size",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 123,
                  "end_byte": 124,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 125,
                  "end_byte": 129,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 125,
                      "end_byte": 126,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 127,
                      "end_byte": 129,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 130,
                  "end_byte": 131,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 132,
                  "end_byte": 168,
                  "text": "{ scanf ( \"%d\" , & prime [ i ] ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 132,
                      "end_byte": 133,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 134,
                      "end_byte": 166,
                      "text": "scanf ( \"%d\" , & prime [ i ] ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 134,
                          "end_byte": 164,
                          "text": "scanf ( \"%d\" , & prime [ i ] )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 134,
                              "end_byte": 139,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 140,
                              "end_byte": 164,
                              "text": "( \"%d\" , & prime [ i ] )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 140,
                                  "end_byte": 141,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 142,
                                  "end_byte": 146,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 142,
                                      "end_byte": 143,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 143,
                                      "end_byte": 145,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 145,
                                      "end_byte": 146,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 147,
                                  "end_byte": 148,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 149,
                                  "end_byte": 162,
                                  "text": "& prime [ i ]",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 149,
                                      "end_byte": 150,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 151,
                                      "end_byte": 162,
                                      "text": "prime [ i ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 151,
                                          "end_byte": 156,
                                          "text": "prime",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 157,
                                          "end_byte": 162,
                                          "text": "[ i ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 157,
                                              "end_byte": 158,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 159,
                                              "end_byte": 160,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 161,
                                              "end_byte": 162,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 163,
                                  "end_byte": 164,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 165,
                          "end_byte": 166,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 167,
                      "end_byte": 168,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 169,
              "end_byte": 329,
              "text": "for ( i = 0 ; i < size - 1 ; i ++ ) { p = i ; for ( j = i + 1 ; j < size ; j ++ ) { if ( prime [ j ] > prime [ p ] ) { count ++ ; p = j ; } else { break ; } } }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 169,
                  "end_byte": 172,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 173,
                  "end_byte": 174,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 175,
                  "end_byte": 180,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 175,
                      "end_byte": 176,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 177,
                      "end_byte": 178,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 179,
                      "end_byte": 180,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 181,
                  "end_byte": 182,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 183,
                  "end_byte": 195,
                  "text": "i < size - 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 183,
                      "end_byte": 184,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 185,
                      "end_byte": 186,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 187,
                      "end_byte": 195,
                      "text": "size - 1",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 187,
                          "end_byte": 191,
                          "text": "size",
                          "children": []
                        },
                        {
                          "type": "-",
                          "start_byte": 192,
                          "end_byte": 193,
                          "text": "-",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 194,
                          "end_byte": 195,
                          "text": "1",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 196,
                  "end_byte": 197,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 198,
                  "end_byte": 202,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 198,
                      "end_byte": 199,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 200,
                      "end_byte": 202,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 203,
                  "end_byte": 204,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 205,
                  "end_byte": 329,
                  "text": "{ p = i ; for ( j = i + 1 ; j < size ; j ++ ) { if ( prime [ j ] > prime [ p ] ) { count ++ ; p = j ; } else { break ; } } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 205,
                      "end_byte": 206,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 207,
                      "end_byte": 214,
                      "text": "p = i ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 207,
                          "end_byte": 212,
                          "text": "p = i",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 207,
                              "end_byte": 208,
                              "text": "p",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 209,
                              "end_byte": 210,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 211,
                              "end_byte": 212,
                              "text": "i",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 213,
                          "end_byte": 214,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 215,
                      "end_byte": 327,
                      "text": "for ( j = i + 1 ; j < size ; j ++ ) { if ( prime [ j ] > prime [ p ] ) { count ++ ; p = j ; } else { break ; } }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 215,
                          "end_byte": 218,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 219,
                          "end_byte": 220,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 221,
                          "end_byte": 230,
                          "text": "j = i + 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 221,
                              "end_byte": 222,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 223,
                              "end_byte": 224,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 225,
                              "end_byte": 230,
                              "text": "i + 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 225,
                                  "end_byte": 226,
                                  "text": "i",
                                  "children": []
                                },
                                {
                                  "type": "+",
                                  "start_byte": 227,
                                  "end_byte": 228,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 229,
                                  "end_byte": 230,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 231,
                          "end_byte": 232,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 233,
                          "end_byte": 241,
                          "text": "j < size",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 233,
                              "end_byte": 234,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 235,
                              "end_byte": 236,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 237,
                              "end_byte": 241,
                              "text": "size",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 242,
                          "end_byte": 243,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 244,
                          "end_byte": 248,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 244,
                              "end_byte": 245,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 246,
                              "end_byte": 248,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 249,
                          "end_byte": 250,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 251,
                          "end_byte": 327,
                          "text": "{ if ( prime [ j ] > prime [ p ] ) { count ++ ; p = j ; } else { break ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 251,
                              "end_byte": 252,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 253,
                              "end_byte": 325,
                              "text": "if ( prime [ j ] > prime [ p ] ) { count ++ ; p = j ; } else { break ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 253,
                                  "end_byte": 255,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 256,
                                  "end_byte": 285,
                                  "text": "( prime [ j ] > prime [ p ] )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 256,
                                      "end_byte": 257,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 258,
                                      "end_byte": 283,
                                      "text": "prime [ j ] > prime [ p ]",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 258,
                                          "end_byte": 269,
                                          "text": "prime [ j ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 258,
                                              "end_byte": 263,
                                              "text": "prime",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 264,
                                              "end_byte": 269,
                                              "text": "[ j ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 264,
                                                  "end_byte": 265,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 266,
                                                  "end_byte": 267,
                                                  "text": "j",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 268,
                                                  "end_byte": 269,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ">",
                                          "start_byte": 270,
                                          "end_byte": 271,
                                          "text": ">",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 272,
                                          "end_byte": 283,
                                          "text": "prime [ p ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 272,
                                              "end_byte": 277,
                                              "text": "prime",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 278,
                                              "end_byte": 283,
                                              "text": "[ p ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 278,
                                                  "end_byte": 279,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 280,
                                                  "end_byte": 281,
                                                  "text": "p",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 282,
                                                  "end_byte": 283,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 284,
                                      "end_byte": 285,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 286,
                                  "end_byte": 308,
                                  "text": "{ count ++ ; p = j ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 286,
                                      "end_byte": 287,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 288,
                                      "end_byte": 298,
                                      "text": "count ++ ;",
                                      "children": [
                                        {
                                          "type": "update_expression",
                                          "start_byte": 288,
                                          "end_byte": 296,
                                          "text": "count ++",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 288,
                                              "end_byte": 293,
                                              "text": "count",
                                              "children": []
                                            },
                                            {
                                              "type": "++",
                                              "start_byte": 294,
                                              "end_byte": 296,
                                              "text": "++",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 297,
                                          "end_byte": 298,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 299,
                                      "end_byte": 306,
                                      "text": "p = j ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 299,
                                          "end_byte": 304,
                                          "text": "p = j",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 299,
                                              "end_byte": 300,
                                              "text": "p",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 301,
                                              "end_byte": 302,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 303,
                                              "end_byte": 304,
                                              "text": "j",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 305,
                                          "end_byte": 306,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 307,
                                      "end_byte": 308,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start_byte": 309,
                                  "end_byte": 325,
                                  "text": "else { break ; }",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start_byte": 309,
                                      "end_byte": 313,
                                      "text": "else",
                                      "children": []
                                    },
                                    {
                                      "type": "compound_statement",
                                      "start_byte": 314,
                                      "end_byte": 325,
                                      "text": "{ break ; }",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start_byte": 314,
                                          "end_byte": 315,
                                          "text": "{",
                                          "children": []
                                        },
                                        {
                                          "type": "break_statement",
                                          "start_byte": 316,
                                          "end_byte": 323,
                                          "text": "break ;",
                                          "children": [
                                            {
                                              "type": "break",
                                              "start_byte": 316,
                                              "end_byte": 321,
                                              "text": "break",
                                              "children": []
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 322,
                                              "end_byte": 323,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start_byte": 324,
                                          "end_byte": 325,
                                          "text": "}",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 326,
                              "end_byte": 327,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 328,
                      "end_byte": 329,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 330,
              "end_byte": 362,
              "text": "printf ( \"%d\" , size + count ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 330,
                  "end_byte": 360,
                  "text": "printf ( \"%d\" , size + count )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 330,
                      "end_byte": 336,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 337,
                      "end_byte": 360,
                      "text": "( \"%d\" , size + count )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 337,
                          "end_byte": 338,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 339,
                          "end_byte": 343,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 339,
                              "end_byte": 340,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 340,
                              "end_byte": 342,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 342,
                              "end_byte": 343,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 344,
                          "end_byte": 345,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 346,
                          "end_byte": 358,
                          "text": "size + count",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 346,
                              "end_byte": 350,
                              "text": "size",
                              "children": []
                            },
                            {
                              "type": "+",
                              "start_byte": 351,
                              "end_byte": 352,
                              "text": "+",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 353,
                              "end_byte": 358,
                              "text": "count",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 359,
                          "end_byte": 360,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 361,
                  "end_byte": 362,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 363,
              "end_byte": 364,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 365,
      "end_byte": 462,
      "text": "int main ( ) { int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { second ( ) ; printf ( \"\\n\" ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 365,
          "end_byte": 368,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 369,
          "end_byte": 377,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 369,
              "end_byte": 373,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 374,
              "end_byte": 377,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 374,
                  "end_byte": 375,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 376,
                  "end_byte": 377,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 378,
          "end_byte": 462,
          "text": "{ int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { second ( ) ; printf ( \"\\n\" ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 378,
              "end_byte": 379,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 380,
              "end_byte": 387,
              "text": "int t ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 380,
                  "end_byte": 383,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 384,
                  "end_byte": 385,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 386,
                  "end_byte": 387,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 388,
              "end_byte": 410,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 388,
                  "end_byte": 408,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 388,
                      "end_byte": 393,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 394,
                      "end_byte": 408,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 394,
                          "end_byte": 395,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 396,
                          "end_byte": 400,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 396,
                              "end_byte": 397,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 397,
                              "end_byte": 399,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 399,
                              "end_byte": 400,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 401,
                          "end_byte": 402,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 403,
                          "end_byte": 406,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 403,
                              "end_byte": 404,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 405,
                              "end_byte": 406,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 407,
                          "end_byte": 408,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 409,
                  "end_byte": 410,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 411,
              "end_byte": 460,
              "text": "while ( t -- ) { second ( ) ; printf ( \"\\n\" ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 411,
                  "end_byte": 416,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 417,
                  "end_byte": 425,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 417,
                      "end_byte": 418,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 419,
                      "end_byte": 423,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 419,
                          "end_byte": 420,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 421,
                          "end_byte": 423,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 424,
                      "end_byte": 425,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 426,
                  "end_byte": 460,
                  "text": "{ second ( ) ; printf ( \"\\n\" ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 426,
                      "end_byte": 427,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 428,
                      "end_byte": 440,
                      "text": "second ( ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 428,
                          "end_byte": 438,
                          "text": "second ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 428,
                              "end_byte": 434,
                              "text": "second",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 435,
                              "end_byte": 438,
                              "text": "( )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 435,
                                  "end_byte": 436,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 437,
                                  "end_byte": 438,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 439,
                          "end_byte": 440,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 441,
                      "end_byte": 458,
                      "text": "printf ( \"\\n\" ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 441,
                          "end_byte": 456,
                          "text": "printf ( \"\\n\" )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 441,
                              "end_byte": 447,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 448,
                              "end_byte": 456,
                              "text": "( \"\\n\" )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 448,
                                  "end_byte": 449,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 450,
                                  "end_byte": 454,
                                  "text": "\"\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 450,
                                      "end_byte": 451,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 451,
                                      "end_byte": 453,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 453,
                                      "end_byte": 454,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 455,
                                  "end_byte": 456,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 457,
                          "end_byte": 458,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 459,
                      "end_byte": 460,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 461,
              "end_byte": 462,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}