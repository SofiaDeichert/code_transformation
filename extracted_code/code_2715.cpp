int maxim ( int a , int b ) { return ( a > b ) ? a : b ; } int main ( ) { int t , n , a [ 100 ] [ 100 ] , i , j , maxC [ 100 ] [ 100 ] ; scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & n ) ; for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & a [ i ] [ j ] ) ; maxC [ i ] [ j ] = 0 ; } maxC [ 0 ] [ 0 ] = a [ 0 ] [ 0 ] ; for ( i = 1 ; i < n ; i ++ ) maxC [ i ] [ 0 ] = maxC [ i - 1 ] [ 0 ] + a [ i ] [ 0 ] ; for ( i = 1 ; i < n ; i ++ ) for ( j = 1 ; j <= i ; j ++ ) if ( j == i ) { maxC [ i ] [ j ] = maxC [ i - 1 ] [ j - 1 ] + a [ i ] [ j ] ; } else maxC [ i ] [ j ] = maxim ( maxC [ i - 1 ] [ j ] , maxC [ i - 1 ] [ j - 1 ] ) + a [ i ] [ j ] ; int max = maxC [ n - 1 ] [ 0 ] ; for ( i = 1 ; i < n ; i ++ ) if ( maxC [ n - 1 ] [ i ] > max ) max = maxC [ n - 1 ] [ i ] ; printf ( "%d\n" , max ) ; } return 0 ; }