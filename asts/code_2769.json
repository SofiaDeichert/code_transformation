{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 483,
  "text": "int fastInput ( ) { int n = 0 , c = gc ( ) ; while ( c < '0' || c > '9' ) c = gc ( ) ; while ( c >= '0' && c <= '9' ) n = ( n << 3 ) + ( n << 1 ) + c - '0' , c = gc ( ) ; return n ; } int main ( void ) { int i , T , N , min , temp , ans ; T = fastInput ( ) ; for ( i = 0 ; i < T ; i ++ ) { N = fastInput ( ) ; min = fastInput ( ) ; for ( i = 1 ; i < N ; i ++ ) { temp = fastInput ( ) ; if ( temp < min ) min = temp ; } ans = min * ( N - 1 ) ; printf ( \"%d\\n\" , ans ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 183,
      "text": "int fastInput ( ) { int n = 0 , c = gc ( ) ; while ( c < '0' || c > '9' ) c = gc ( ) ; while ( c >= '0' && c <= '9' ) n = ( n << 3 ) + ( n << 1 ) + c - '0' , c = gc ( ) ; return n ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 17,
          "text": "fastInput ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 13,
              "text": "fastInput",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 14,
              "end_byte": 17,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 14,
                  "end_byte": 15,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 16,
                  "end_byte": 17,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 18,
          "end_byte": 183,
          "text": "{ int n = 0 , c = gc ( ) ; while ( c < '0' || c > '9' ) c = gc ( ) ; while ( c >= '0' && c <= '9' ) n = ( n << 3 ) + ( n << 1 ) + c - '0' , c = gc ( ) ; return n ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 18,
              "end_byte": 19,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 20,
              "end_byte": 44,
              "text": "int n = 0 , c = gc ( ) ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 20,
                  "end_byte": 23,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 24,
                  "end_byte": 29,
                  "text": "n = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 24,
                      "end_byte": 25,
                      "text": "n",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 26,
                      "end_byte": 27,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 28,
                      "end_byte": 29,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 30,
                  "end_byte": 31,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 32,
                  "end_byte": 42,
                  "text": "c = gc ( )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 32,
                      "end_byte": 33,
                      "text": "c",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 34,
                      "end_byte": 35,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 36,
                      "end_byte": 42,
                      "text": "gc ( )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 36,
                          "end_byte": 38,
                          "text": "gc",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 39,
                          "end_byte": 42,
                          "text": "( )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 39,
                              "end_byte": 40,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 41,
                              "end_byte": 42,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 43,
                  "end_byte": 44,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 45,
              "end_byte": 86,
              "text": "while ( c < '0' || c > '9' ) c = gc ( ) ;",
              "children": [
                {
                  "type": "while",
                  "start_byte": 45,
                  "end_byte": 50,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 51,
                  "end_byte": 73,
                  "text": "( c < '0' || c > '9' )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 51,
                      "end_byte": 52,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 53,
                      "end_byte": 71,
                      "text": "c < '0' || c > '9'",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 53,
                          "end_byte": 60,
                          "text": "c < '0'",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 53,
                              "end_byte": 54,
                              "text": "c",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 55,
                              "end_byte": 56,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "char_literal",
                              "start_byte": 57,
                              "end_byte": 60,
                              "text": "'0'",
                              "children": [
                                {
                                  "type": "'",
                                  "start_byte": 57,
                                  "end_byte": 58,
                                  "text": "'",
                                  "children": []
                                },
                                {
                                  "type": "character",
                                  "start_byte": 58,
                                  "end_byte": 59,
                                  "text": "0",
                                  "children": []
                                },
                                {
                                  "type": "'",
                                  "start_byte": 59,
                                  "end_byte": 60,
                                  "text": "'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "||",
                          "start_byte": 61,
                          "end_byte": 63,
                          "text": "||",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 64,
                          "end_byte": 71,
                          "text": "c > '9'",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 64,
                              "end_byte": 65,
                              "text": "c",
                              "children": []
                            },
                            {
                              "type": ">",
                              "start_byte": 66,
                              "end_byte": 67,
                              "text": ">",
                              "children": []
                            },
                            {
                              "type": "char_literal",
                              "start_byte": 68,
                              "end_byte": 71,
                              "text": "'9'",
                              "children": [
                                {
                                  "type": "'",
                                  "start_byte": 68,
                                  "end_byte": 69,
                                  "text": "'",
                                  "children": []
                                },
                                {
                                  "type": "character",
                                  "start_byte": 69,
                                  "end_byte": 70,
                                  "text": "9",
                                  "children": []
                                },
                                {
                                  "type": "'",
                                  "start_byte": 70,
                                  "end_byte": 71,
                                  "text": "'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 72,
                      "end_byte": 73,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "expression_statement",
                  "start_byte": 74,
                  "end_byte": 86,
                  "text": "c = gc ( ) ;",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start_byte": 74,
                      "end_byte": 84,
                      "text": "c = gc ( )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 74,
                          "end_byte": 75,
                          "text": "c",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 76,
                          "end_byte": 77,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "call_expression",
                          "start_byte": 78,
                          "end_byte": 84,
                          "text": "gc ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 78,
                              "end_byte": 80,
                              "text": "gc",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 81,
                              "end_byte": 84,
                              "text": "( )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 81,
                                  "end_byte": 82,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 83,
                                  "end_byte": 84,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 85,
                      "end_byte": 86,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 87,
              "end_byte": 170,
              "text": "while ( c >= '0' && c <= '9' ) n = ( n << 3 ) + ( n << 1 ) + c - '0' , c = gc ( ) ;",
              "children": [
                {
                  "type": "while",
                  "start_byte": 87,
                  "end_byte": 92,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 93,
                  "end_byte": 117,
                  "text": "( c >= '0' && c <= '9' )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 93,
                      "end_byte": 94,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 95,
                      "end_byte": 115,
                      "text": "c >= '0' && c <= '9'",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 95,
                          "end_byte": 103,
                          "text": "c >= '0'",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 95,
                              "end_byte": 96,
                              "text": "c",
                              "children": []
                            },
                            {
                              "type": ">=",
                              "start_byte": 97,
                              "end_byte": 99,
                              "text": ">=",
                              "children": []
                            },
                            {
                              "type": "char_literal",
                              "start_byte": 100,
                              "end_byte": 103,
                              "text": "'0'",
                              "children": [
                                {
                                  "type": "'",
                                  "start_byte": 100,
                                  "end_byte": 101,
                                  "text": "'",
                                  "children": []
                                },
                                {
                                  "type": "character",
                                  "start_byte": 101,
                                  "end_byte": 102,
                                  "text": "0",
                                  "children": []
                                },
                                {
                                  "type": "'",
                                  "start_byte": 102,
                                  "end_byte": 103,
                                  "text": "'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "&&",
                          "start_byte": 104,
                          "end_byte": 106,
                          "text": "&&",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 107,
                          "end_byte": 115,
                          "text": "c <= '9'",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 107,
                              "end_byte": 108,
                              "text": "c",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 109,
                              "end_byte": 111,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "char_literal",
                              "start_byte": 112,
                              "end_byte": 115,
                              "text": "'9'",
                              "children": [
                                {
                                  "type": "'",
                                  "start_byte": 112,
                                  "end_byte": 113,
                                  "text": "'",
                                  "children": []
                                },
                                {
                                  "type": "character",
                                  "start_byte": 113,
                                  "end_byte": 114,
                                  "text": "9",
                                  "children": []
                                },
                                {
                                  "type": "'",
                                  "start_byte": 114,
                                  "end_byte": 115,
                                  "text": "'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 116,
                      "end_byte": 117,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "expression_statement",
                  "start_byte": 118,
                  "end_byte": 170,
                  "text": "n = ( n << 3 ) + ( n << 1 ) + c - '0' , c = gc ( ) ;",
                  "children": [
                    {
                      "type": "comma_expression",
                      "start_byte": 118,
                      "end_byte": 168,
                      "text": "n = ( n << 3 ) + ( n << 1 ) + c - '0' , c = gc ( )",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 118,
                          "end_byte": 155,
                          "text": "n = ( n << 3 ) + ( n << 1 ) + c - '0'",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 118,
                              "end_byte": 119,
                              "text": "n",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 120,
                              "end_byte": 121,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 122,
                              "end_byte": 155,
                              "text": "( n << 3 ) + ( n << 1 ) + c - '0'",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 122,
                                  "end_byte": 149,
                                  "text": "( n << 3 ) + ( n << 1 ) + c",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 122,
                                      "end_byte": 145,
                                      "text": "( n << 3 ) + ( n << 1 )",
                                      "children": [
                                        {
                                          "type": "parenthesized_expression",
                                          "start_byte": 122,
                                          "end_byte": 132,
                                          "text": "( n << 3 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 122,
                                              "end_byte": 123,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 124,
                                              "end_byte": 130,
                                              "text": "n << 3",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 124,
                                                  "end_byte": 125,
                                                  "text": "n",
                                                  "children": []
                                                },
                                                {
                                                  "type": "<<",
                                                  "start_byte": 126,
                                                  "end_byte": 128,
                                                  "text": "<<",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 129,
                                                  "end_byte": 130,
                                                  "text": "3",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 131,
                                              "end_byte": 132,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 133,
                                          "end_byte": 134,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "parenthesized_expression",
                                          "start_byte": 135,
                                          "end_byte": 145,
                                          "text": "( n << 1 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 135,
                                              "end_byte": 136,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 137,
                                              "end_byte": 143,
                                              "text": "n << 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 137,
                                                  "end_byte": 138,
                                                  "text": "n",
                                                  "children": []
                                                },
                                                {
                                                  "type": "<<",
                                                  "start_byte": 139,
                                                  "end_byte": 141,
                                                  "text": "<<",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 142,
                                                  "end_byte": 143,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 144,
                                              "end_byte": 145,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 146,
                                      "end_byte": 147,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 148,
                                      "end_byte": 149,
                                      "text": "c",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "-",
                                  "start_byte": 150,
                                  "end_byte": 151,
                                  "text": "-",
                                  "children": []
                                },
                                {
                                  "type": "char_literal",
                                  "start_byte": 152,
                                  "end_byte": 155,
                                  "text": "'0'",
                                  "children": [
                                    {
                                      "type": "'",
                                      "start_byte": 152,
                                      "end_byte": 153,
                                      "text": "'",
                                      "children": []
                                    },
                                    {
                                      "type": "character",
                                      "start_byte": 153,
                                      "end_byte": 154,
                                      "text": "0",
                                      "children": []
                                    },
                                    {
                                      "type": "'",
                                      "start_byte": 154,
                                      "end_byte": 155,
                                      "text": "'",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 156,
                          "end_byte": 157,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 158,
                          "end_byte": 168,
                          "text": "c = gc ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 158,
                              "end_byte": 159,
                              "text": "c",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 160,
                              "end_byte": 161,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 162,
                              "end_byte": 168,
                              "text": "gc ( )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 162,
                                  "end_byte": 164,
                                  "text": "gc",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 165,
                                  "end_byte": 168,
                                  "text": "( )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 165,
                                      "end_byte": 166,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 167,
                                      "end_byte": 168,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 169,
                      "end_byte": 170,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 171,
              "end_byte": 181,
              "text": "return n ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 171,
                  "end_byte": 177,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 178,
                  "end_byte": 179,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 180,
                  "end_byte": 181,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 182,
              "end_byte": 183,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 184,
      "end_byte": 483,
      "text": "int main ( void ) { int i , T , N , min , temp , ans ; T = fastInput ( ) ; for ( i = 0 ; i < T ; i ++ ) { N = fastInput ( ) ; min = fastInput ( ) ; for ( i = 1 ; i < N ; i ++ ) { temp = fastInput ( ) ; if ( temp < min ) min = temp ; } ans = min * ( N - 1 ) ; printf ( \"%d\\n\" , ans ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 184,
          "end_byte": 187,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 188,
          "end_byte": 201,
          "text": "main ( void )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 188,
              "end_byte": 192,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 193,
              "end_byte": 201,
              "text": "( void )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 193,
                  "end_byte": 194,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 195,
                  "end_byte": 199,
                  "text": "void",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 195,
                      "end_byte": 199,
                      "text": "void",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 200,
                  "end_byte": 201,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 202,
          "end_byte": 483,
          "text": "{ int i , T , N , min , temp , ans ; T = fastInput ( ) ; for ( i = 0 ; i < T ; i ++ ) { N = fastInput ( ) ; min = fastInput ( ) ; for ( i = 1 ; i < N ; i ++ ) { temp = fastInput ( ) ; if ( temp < min ) min = temp ; } ans = min * ( N - 1 ) ; printf ( \"%d\\n\" , ans ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 202,
              "end_byte": 203,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 204,
              "end_byte": 238,
              "text": "int i , T , N , min , temp , ans ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 204,
                  "end_byte": 207,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 208,
                  "end_byte": 209,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 210,
                  "end_byte": 211,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 212,
                  "end_byte": 213,
                  "text": "T",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 214,
                  "end_byte": 215,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 216,
                  "end_byte": 217,
                  "text": "N",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 218,
                  "end_byte": 219,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 220,
                  "end_byte": 223,
                  "text": "min",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 224,
                  "end_byte": 225,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 226,
                  "end_byte": 230,
                  "text": "temp",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 231,
                  "end_byte": 232,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 233,
                  "end_byte": 236,
                  "text": "ans",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 237,
                  "end_byte": 238,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 239,
              "end_byte": 258,
              "text": "T = fastInput ( ) ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 239,
                  "end_byte": 256,
                  "text": "T = fastInput ( )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 239,
                      "end_byte": 240,
                      "text": "T",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 241,
                      "end_byte": 242,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 243,
                      "end_byte": 256,
                      "text": "fastInput ( )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 243,
                          "end_byte": 252,
                          "text": "fastInput",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 253,
                          "end_byte": 256,
                          "text": "( )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 253,
                              "end_byte": 254,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 255,
                              "end_byte": 256,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 257,
                  "end_byte": 258,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 259,
              "end_byte": 470,
              "text": "for ( i = 0 ; i < T ; i ++ ) { N = fastInput ( ) ; min = fastInput ( ) ; for ( i = 1 ; i < N ; i ++ ) { temp = fastInput ( ) ; if ( temp < min ) min = temp ; } ans = min * ( N - 1 ) ; printf ( \"%d\\n\" , ans ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 259,
                  "end_byte": 262,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 263,
                  "end_byte": 264,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 265,
                  "end_byte": 270,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 265,
                      "end_byte": 266,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 267,
                      "end_byte": 268,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 269,
                      "end_byte": 270,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 271,
                  "end_byte": 272,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 273,
                  "end_byte": 278,
                  "text": "i < T",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 273,
                      "end_byte": 274,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 275,
                      "end_byte": 276,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 277,
                      "end_byte": 278,
                      "text": "T",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 279,
                  "end_byte": 280,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 281,
                  "end_byte": 285,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 281,
                      "end_byte": 282,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 283,
                      "end_byte": 285,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 286,
                  "end_byte": 287,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 288,
                  "end_byte": 470,
                  "text": "{ N = fastInput ( ) ; min = fastInput ( ) ; for ( i = 1 ; i < N ; i ++ ) { temp = fastInput ( ) ; if ( temp < min ) min = temp ; } ans = min * ( N - 1 ) ; printf ( \"%d\\n\" , ans ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 288,
                      "end_byte": 289,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 290,
                      "end_byte": 309,
                      "text": "N = fastInput ( ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 290,
                          "end_byte": 307,
                          "text": "N = fastInput ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 290,
                              "end_byte": 291,
                              "text": "N",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 292,
                              "end_byte": 293,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 294,
                              "end_byte": 307,
                              "text": "fastInput ( )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 294,
                                  "end_byte": 303,
                                  "text": "fastInput",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 304,
                                  "end_byte": 307,
                                  "text": "( )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 304,
                                      "end_byte": 305,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 306,
                                      "end_byte": 307,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 308,
                          "end_byte": 309,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 310,
                      "end_byte": 331,
                      "text": "min = fastInput ( ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 310,
                          "end_byte": 329,
                          "text": "min = fastInput ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 310,
                              "end_byte": 313,
                              "text": "min",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 314,
                              "end_byte": 315,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 316,
                              "end_byte": 329,
                              "text": "fastInput ( )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 316,
                                  "end_byte": 325,
                                  "text": "fastInput",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 326,
                                  "end_byte": 329,
                                  "text": "( )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 326,
                                      "end_byte": 327,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 328,
                                      "end_byte": 329,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 330,
                          "end_byte": 331,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 332,
                      "end_byte": 418,
                      "text": "for ( i = 1 ; i < N ; i ++ ) { temp = fastInput ( ) ; if ( temp < min ) min = temp ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 332,
                          "end_byte": 335,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 336,
                          "end_byte": 337,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 338,
                          "end_byte": 343,
                          "text": "i = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 338,
                              "end_byte": 339,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 340,
                              "end_byte": 341,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 342,
                              "end_byte": 343,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 344,
                          "end_byte": 345,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 346,
                          "end_byte": 351,
                          "text": "i < N",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 346,
                              "end_byte": 347,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 348,
                              "end_byte": 349,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 350,
                              "end_byte": 351,
                              "text": "N",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 352,
                          "end_byte": 353,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 354,
                          "end_byte": 358,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 354,
                              "end_byte": 355,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 356,
                              "end_byte": 358,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 359,
                          "end_byte": 360,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 361,
                          "end_byte": 418,
                          "text": "{ temp = fastInput ( ) ; if ( temp < min ) min = temp ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 361,
                              "end_byte": 362,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 363,
                              "end_byte": 385,
                              "text": "temp = fastInput ( ) ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 363,
                                  "end_byte": 383,
                                  "text": "temp = fastInput ( )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 363,
                                      "end_byte": 367,
                                      "text": "temp",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 368,
                                      "end_byte": 369,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 370,
                                      "end_byte": 383,
                                      "text": "fastInput ( )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 370,
                                          "end_byte": 379,
                                          "text": "fastInput",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 380,
                                          "end_byte": 383,
                                          "text": "( )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 380,
                                              "end_byte": 381,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 382,
                                              "end_byte": 383,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 384,
                                  "end_byte": 385,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 386,
                              "end_byte": 416,
                              "text": "if ( temp < min ) min = temp ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 386,
                                  "end_byte": 388,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 389,
                                  "end_byte": 403,
                                  "text": "( temp < min )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 389,
                                      "end_byte": 390,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 391,
                                      "end_byte": 401,
                                      "text": "temp < min",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 391,
                                          "end_byte": 395,
                                          "text": "temp",
                                          "children": []
                                        },
                                        {
                                          "type": "<",
                                          "start_byte": 396,
                                          "end_byte": 397,
                                          "text": "<",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 398,
                                          "end_byte": 401,
                                          "text": "min",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 402,
                                      "end_byte": 403,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 404,
                                  "end_byte": 416,
                                  "text": "min = temp ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 404,
                                      "end_byte": 414,
                                      "text": "min = temp",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 404,
                                          "end_byte": 407,
                                          "text": "min",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 408,
                                          "end_byte": 409,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 410,
                                          "end_byte": 414,
                                          "text": "temp",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 415,
                                      "end_byte": 416,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 417,
                              "end_byte": 418,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 419,
                      "end_byte": 442,
                      "text": "ans = min * ( N - 1 ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 419,
                          "end_byte": 440,
                          "text": "ans = min * ( N - 1 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 419,
                              "end_byte": 422,
                              "text": "ans",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 423,
                              "end_byte": 424,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 425,
                              "end_byte": 440,
                              "text": "min * ( N - 1 )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 425,
                                  "end_byte": 428,
                                  "text": "min",
                                  "children": []
                                },
                                {
                                  "type": "*",
                                  "start_byte": 429,
                                  "end_byte": 430,
                                  "text": "*",
                                  "children": []
                                },
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 431,
                                  "end_byte": 440,
                                  "text": "( N - 1 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 431,
                                      "end_byte": 432,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 433,
                                      "end_byte": 438,
                                      "text": "N - 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 433,
                                          "end_byte": 434,
                                          "text": "N",
                                          "children": []
                                        },
                                        {
                                          "type": "-",
                                          "start_byte": 435,
                                          "end_byte": 436,
                                          "text": "-",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 437,
                                          "end_byte": 438,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 439,
                                      "end_byte": 440,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 441,
                          "end_byte": 442,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 443,
                      "end_byte": 468,
                      "text": "printf ( \"%d\\n\" , ans ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 443,
                          "end_byte": 466,
                          "text": "printf ( \"%d\\n\" , ans )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 443,
                              "end_byte": 449,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 450,
                              "end_byte": 466,
                              "text": "( \"%d\\n\" , ans )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 450,
                                  "end_byte": 451,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 452,
                                  "end_byte": 458,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 452,
                                      "end_byte": 453,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 453,
                                      "end_byte": 455,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 455,
                                      "end_byte": 457,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 457,
                                      "end_byte": 458,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 459,
                                  "end_byte": 460,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 461,
                                  "end_byte": 464,
                                  "text": "ans",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 465,
                                  "end_byte": 466,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 467,
                          "end_byte": 468,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 469,
                      "end_byte": 470,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 471,
              "end_byte": 481,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 471,
                  "end_byte": 477,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 478,
                  "end_byte": 479,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 480,
                  "end_byte": 481,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 482,
              "end_byte": 483,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}