{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 838,
  "text": "int arr [ 100 ] [ 100 ] ; void disp ( int len ) { printf ( \"\\n In disp\" ) ; int i , j ; for ( i = 0 ; i < len ; i ++ ) { printf ( \"\\n\" ) ; for ( j = 0 ; j < len ; j ++ ) { printf ( \" %d \" , arr [ i ] [ j ] ) ; } } } int solve ( int x ) { int k , l ; if ( x == 1 ) return arr [ 0 ] [ 0 ] ; for ( k = x - 2 ; k >= 0 ; k -- ) { for ( l = 0 ; l <= k ; l ++ ) { arr [ k ] [ l ] += ret_max ( arr [ k + 1 ] [ l ] , arr [ k + 1 ] [ l + 1 ] ) ; } } return arr [ 0 ] [ 0 ] ; } int ret_max ( int a , int b ) { if ( a > b ) return a ; else return b ; } int main ( ) { int i , T , k , l , tmp , j ; scanf ( \"%d\" , & T ) ; int N ; for ( i = 0 ; i < T ; i ++ ) { scanf ( \"%d\" , & N ) ; for ( j = 0 ; j < N ; j ++ ) { for ( k = 0 ; k < j + 1 ; k ++ ) { scanf ( \"%d\" , & tmp ) ; arr [ j ] [ k ] = tmp ; } } printf ( \"%d\\n\" , solve ( N ) ) ; } return 0 ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 25,
      "text": "int arr [ 100 ] [ 100 ] ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "array_declarator",
          "start_byte": 4,
          "end_byte": 23,
          "text": "arr [ 100 ] [ 100 ]",
          "children": [
            {
              "type": "array_declarator",
              "start_byte": 4,
              "end_byte": 15,
              "text": "arr [ 100 ]",
              "children": [
                {
                  "type": "identifier",
                  "start_byte": 4,
                  "end_byte": 7,
                  "text": "arr",
                  "children": []
                },
                {
                  "type": "[",
                  "start_byte": 8,
                  "end_byte": 9,
                  "text": "[",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 10,
                  "end_byte": 13,
                  "text": "100",
                  "children": []
                },
                {
                  "type": "]",
                  "start_byte": 14,
                  "end_byte": 15,
                  "text": "]",
                  "children": []
                }
              ]
            },
            {
              "type": "[",
              "start_byte": 16,
              "end_byte": 17,
              "text": "[",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 18,
              "end_byte": 21,
              "text": "100",
              "children": []
            },
            {
              "type": "]",
              "start_byte": 22,
              "end_byte": 23,
              "text": "]",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 24,
          "end_byte": 25,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 26,
      "end_byte": 215,
      "text": "void disp ( int len ) { printf ( \"\\n In disp\" ) ; int i , j ; for ( i = 0 ; i < len ; i ++ ) { printf ( \"\\n\" ) ; for ( j = 0 ; j < len ; j ++ ) { printf ( \" %d \" , arr [ i ] [ j ] ) ; } } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 26,
          "end_byte": 30,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 31,
          "end_byte": 47,
          "text": "disp ( int len )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 31,
              "end_byte": 35,
              "text": "disp",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 36,
              "end_byte": 47,
              "text": "( int len )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 36,
                  "end_byte": 37,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 38,
                  "end_byte": 45,
                  "text": "int len",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 38,
                      "end_byte": 41,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 42,
                      "end_byte": 45,
                      "text": "len",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 46,
                  "end_byte": 47,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 48,
          "end_byte": 215,
          "text": "{ printf ( \"\\n In disp\" ) ; int i , j ; for ( i = 0 ; i < len ; i ++ ) { printf ( \"\\n\" ) ; for ( j = 0 ; j < len ; j ++ ) { printf ( \" %d \" , arr [ i ] [ j ] ) ; } } }",
          "children": [
            {
              "type": "{",
              "start_byte": 48,
              "end_byte": 49,
              "text": "{",
              "children": []
            },
            {
              "type": "expression_statement",
              "start_byte": 50,
              "end_byte": 75,
              "text": "printf ( \"\\n In disp\" ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 50,
                  "end_byte": 73,
                  "text": "printf ( \"\\n In disp\" )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 50,
                      "end_byte": 56,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 57,
                      "end_byte": 73,
                      "text": "( \"\\n In disp\" )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 57,
                          "end_byte": 58,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 59,
                          "end_byte": 71,
                          "text": "\"\\n In disp\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 59,
                              "end_byte": 60,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 60,
                              "end_byte": 62,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 62,
                              "end_byte": 70,
                              "text": " In disp",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 70,
                              "end_byte": 71,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 72,
                          "end_byte": 73,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 74,
                  "end_byte": 75,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 76,
              "end_byte": 87,
              "text": "int i , j ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 76,
                  "end_byte": 79,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 80,
                  "end_byte": 81,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 82,
                  "end_byte": 83,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 84,
                  "end_byte": 85,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 86,
                  "end_byte": 87,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 88,
              "end_byte": 213,
              "text": "for ( i = 0 ; i < len ; i ++ ) { printf ( \"\\n\" ) ; for ( j = 0 ; j < len ; j ++ ) { printf ( \" %d \" , arr [ i ] [ j ] ) ; } }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 88,
                  "end_byte": 91,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 92,
                  "end_byte": 93,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 94,
                  "end_byte": 99,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 94,
                      "end_byte": 95,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 96,
                      "end_byte": 97,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 98,
                      "end_byte": 99,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 100,
                  "end_byte": 101,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 102,
                  "end_byte": 109,
                  "text": "i < len",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 102,
                      "end_byte": 103,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 104,
                      "end_byte": 105,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 106,
                      "end_byte": 109,
                      "text": "len",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 110,
                  "end_byte": 111,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 112,
                  "end_byte": 116,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 112,
                      "end_byte": 113,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 114,
                      "end_byte": 116,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 117,
                  "end_byte": 118,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 119,
                  "end_byte": 213,
                  "text": "{ printf ( \"\\n\" ) ; for ( j = 0 ; j < len ; j ++ ) { printf ( \" %d \" , arr [ i ] [ j ] ) ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 119,
                      "end_byte": 120,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 121,
                      "end_byte": 138,
                      "text": "printf ( \"\\n\" ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 121,
                          "end_byte": 136,
                          "text": "printf ( \"\\n\" )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 121,
                              "end_byte": 127,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 128,
                              "end_byte": 136,
                              "text": "( \"\\n\" )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 128,
                                  "end_byte": 129,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 130,
                                  "end_byte": 134,
                                  "text": "\"\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 130,
                                      "end_byte": 131,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 131,
                                      "end_byte": 133,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 133,
                                      "end_byte": 134,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 135,
                                  "end_byte": 136,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 137,
                          "end_byte": 138,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 139,
                      "end_byte": 211,
                      "text": "for ( j = 0 ; j < len ; j ++ ) { printf ( \" %d \" , arr [ i ] [ j ] ) ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 139,
                          "end_byte": 142,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 143,
                          "end_byte": 144,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 145,
                          "end_byte": 150,
                          "text": "j = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 145,
                              "end_byte": 146,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 147,
                              "end_byte": 148,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 149,
                              "end_byte": 150,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 151,
                          "end_byte": 152,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 153,
                          "end_byte": 160,
                          "text": "j < len",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 153,
                              "end_byte": 154,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 155,
                              "end_byte": 156,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 157,
                              "end_byte": 160,
                              "text": "len",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 161,
                          "end_byte": 162,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 163,
                          "end_byte": 167,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 163,
                              "end_byte": 164,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 165,
                              "end_byte": 167,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 168,
                          "end_byte": 169,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 170,
                          "end_byte": 211,
                          "text": "{ printf ( \" %d \" , arr [ i ] [ j ] ) ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 170,
                              "end_byte": 171,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 172,
                              "end_byte": 209,
                              "text": "printf ( \" %d \" , arr [ i ] [ j ] ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 172,
                                  "end_byte": 207,
                                  "text": "printf ( \" %d \" , arr [ i ] [ j ] )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 172,
                                      "end_byte": 178,
                                      "text": "printf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 179,
                                      "end_byte": 207,
                                      "text": "( \" %d \" , arr [ i ] [ j ] )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 179,
                                          "end_byte": 180,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 181,
                                          "end_byte": 187,
                                          "text": "\" %d \"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 181,
                                              "end_byte": 182,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 182,
                                              "end_byte": 186,
                                              "text": " %d ",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 186,
                                              "end_byte": 187,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 188,
                                          "end_byte": 189,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 190,
                                          "end_byte": 205,
                                          "text": "arr [ i ] [ j ]",
                                          "children": [
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 190,
                                              "end_byte": 199,
                                              "text": "arr [ i ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 190,
                                                  "end_byte": 193,
                                                  "text": "arr",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 194,
                                                  "end_byte": 199,
                                                  "text": "[ i ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 194,
                                                      "end_byte": 195,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 196,
                                                      "end_byte": 197,
                                                      "text": "i",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 198,
                                                      "end_byte": 199,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 200,
                                              "end_byte": 205,
                                              "text": "[ j ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 200,
                                                  "end_byte": 201,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 202,
                                                  "end_byte": 203,
                                                  "text": "j",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 204,
                                                  "end_byte": 205,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 206,
                                          "end_byte": 207,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 208,
                                  "end_byte": 209,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 210,
                              "end_byte": 211,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 212,
                      "end_byte": 213,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 214,
              "end_byte": 215,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 216,
      "end_byte": 466,
      "text": "int solve ( int x ) { int k , l ; if ( x == 1 ) return arr [ 0 ] [ 0 ] ; for ( k = x - 2 ; k >= 0 ; k -- ) { for ( l = 0 ; l <= k ; l ++ ) { arr [ k ] [ l ] += ret_max ( arr [ k + 1 ] [ l ] , arr [ k + 1 ] [ l + 1 ] ) ; } } return arr [ 0 ] [ 0 ] ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 216,
          "end_byte": 219,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 220,
          "end_byte": 235,
          "text": "solve ( int x )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 220,
              "end_byte": 225,
              "text": "solve",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 226,
              "end_byte": 235,
              "text": "( int x )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 226,
                  "end_byte": 227,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 228,
                  "end_byte": 233,
                  "text": "int x",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 228,
                      "end_byte": 231,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 232,
                      "end_byte": 233,
                      "text": "x",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 234,
                  "end_byte": 235,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 236,
          "end_byte": 466,
          "text": "{ int k , l ; if ( x == 1 ) return arr [ 0 ] [ 0 ] ; for ( k = x - 2 ; k >= 0 ; k -- ) { for ( l = 0 ; l <= k ; l ++ ) { arr [ k ] [ l ] += ret_max ( arr [ k + 1 ] [ l ] , arr [ k + 1 ] [ l + 1 ] ) ; } } return arr [ 0 ] [ 0 ] ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 236,
              "end_byte": 237,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 238,
              "end_byte": 249,
              "text": "int k , l ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 238,
                  "end_byte": 241,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 242,
                  "end_byte": 243,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 244,
                  "end_byte": 245,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 246,
                  "end_byte": 247,
                  "text": "l",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 248,
                  "end_byte": 249,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 250,
              "end_byte": 288,
              "text": "if ( x == 1 ) return arr [ 0 ] [ 0 ] ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 250,
                  "end_byte": 252,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 253,
                  "end_byte": 263,
                  "text": "( x == 1 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 253,
                      "end_byte": 254,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 255,
                      "end_byte": 261,
                      "text": "x == 1",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 255,
                          "end_byte": 256,
                          "text": "x",
                          "children": []
                        },
                        {
                          "type": "==",
                          "start_byte": 257,
                          "end_byte": 259,
                          "text": "==",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 260,
                          "end_byte": 261,
                          "text": "1",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 262,
                      "end_byte": 263,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 264,
                  "end_byte": 288,
                  "text": "return arr [ 0 ] [ 0 ] ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 264,
                      "end_byte": 270,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "subscript_expression",
                      "start_byte": 271,
                      "end_byte": 286,
                      "text": "arr [ 0 ] [ 0 ]",
                      "children": [
                        {
                          "type": "subscript_expression",
                          "start_byte": 271,
                          "end_byte": 280,
                          "text": "arr [ 0 ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 271,
                              "end_byte": 274,
                              "text": "arr",
                              "children": []
                            },
                            {
                              "type": "subscript_argument_list",
                              "start_byte": 275,
                              "end_byte": 280,
                              "text": "[ 0 ]",
                              "children": [
                                {
                                  "type": "[",
                                  "start_byte": 275,
                                  "end_byte": 276,
                                  "text": "[",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 277,
                                  "end_byte": 278,
                                  "text": "0",
                                  "children": []
                                },
                                {
                                  "type": "]",
                                  "start_byte": 279,
                                  "end_byte": 280,
                                  "text": "]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "subscript_argument_list",
                          "start_byte": 281,
                          "end_byte": 286,
                          "text": "[ 0 ]",
                          "children": [
                            {
                              "type": "[",
                              "start_byte": 281,
                              "end_byte": 282,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 283,
                              "end_byte": 284,
                              "text": "0",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 285,
                              "end_byte": 286,
                              "text": "]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 287,
                      "end_byte": 288,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 289,
              "end_byte": 439,
              "text": "for ( k = x - 2 ; k >= 0 ; k -- ) { for ( l = 0 ; l <= k ; l ++ ) { arr [ k ] [ l ] += ret_max ( arr [ k + 1 ] [ l ] , arr [ k + 1 ] [ l + 1 ] ) ; } }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 289,
                  "end_byte": 292,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 293,
                  "end_byte": 294,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 295,
                  "end_byte": 304,
                  "text": "k = x - 2",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 295,
                      "end_byte": 296,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 297,
                      "end_byte": 298,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 299,
                      "end_byte": 304,
                      "text": "x - 2",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 299,
                          "end_byte": 300,
                          "text": "x",
                          "children": []
                        },
                        {
                          "type": "-",
                          "start_byte": 301,
                          "end_byte": 302,
                          "text": "-",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 303,
                          "end_byte": 304,
                          "text": "2",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 305,
                  "end_byte": 306,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 307,
                  "end_byte": 313,
                  "text": "k >= 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 307,
                      "end_byte": 308,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": ">=",
                      "start_byte": 309,
                      "end_byte": 311,
                      "text": ">=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 312,
                      "end_byte": 313,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 314,
                  "end_byte": 315,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 316,
                  "end_byte": 320,
                  "text": "k --",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 316,
                      "end_byte": 317,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "--",
                      "start_byte": 318,
                      "end_byte": 320,
                      "text": "--",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 321,
                  "end_byte": 322,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 323,
                  "end_byte": 439,
                  "text": "{ for ( l = 0 ; l <= k ; l ++ ) { arr [ k ] [ l ] += ret_max ( arr [ k + 1 ] [ l ] , arr [ k + 1 ] [ l + 1 ] ) ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 323,
                      "end_byte": 324,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 325,
                      "end_byte": 437,
                      "text": "for ( l = 0 ; l <= k ; l ++ ) { arr [ k ] [ l ] += ret_max ( arr [ k + 1 ] [ l ] , arr [ k + 1 ] [ l + 1 ] ) ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 325,
                          "end_byte": 328,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 329,
                          "end_byte": 330,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 331,
                          "end_byte": 336,
                          "text": "l = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 331,
                              "end_byte": 332,
                              "text": "l",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 333,
                              "end_byte": 334,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 335,
                              "end_byte": 336,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 337,
                          "end_byte": 338,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 339,
                          "end_byte": 345,
                          "text": "l <= k",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 339,
                              "end_byte": 340,
                              "text": "l",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 341,
                              "end_byte": 343,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 344,
                              "end_byte": 345,
                              "text": "k",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 346,
                          "end_byte": 347,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 348,
                          "end_byte": 352,
                          "text": "l ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 348,
                              "end_byte": 349,
                              "text": "l",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 350,
                              "end_byte": 352,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 353,
                          "end_byte": 354,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 355,
                          "end_byte": 437,
                          "text": "{ arr [ k ] [ l ] += ret_max ( arr [ k + 1 ] [ l ] , arr [ k + 1 ] [ l + 1 ] ) ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 355,
                              "end_byte": 356,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 357,
                              "end_byte": 435,
                              "text": "arr [ k ] [ l ] += ret_max ( arr [ k + 1 ] [ l ] , arr [ k + 1 ] [ l + 1 ] ) ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 357,
                                  "end_byte": 433,
                                  "text": "arr [ k ] [ l ] += ret_max ( arr [ k + 1 ] [ l ] , arr [ k + 1 ] [ l + 1 ] )",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 357,
                                      "end_byte": 372,
                                      "text": "arr [ k ] [ l ]",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 357,
                                          "end_byte": 366,
                                          "text": "arr [ k ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 357,
                                              "end_byte": 360,
                                              "text": "arr",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 361,
                                              "end_byte": 366,
                                              "text": "[ k ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 361,
                                                  "end_byte": 362,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 363,
                                                  "end_byte": 364,
                                                  "text": "k",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 365,
                                                  "end_byte": 366,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 367,
                                          "end_byte": 372,
                                          "text": "[ l ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 367,
                                              "end_byte": 368,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 369,
                                              "end_byte": 370,
                                              "text": "l",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 371,
                                              "end_byte": 372,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+=",
                                      "start_byte": 373,
                                      "end_byte": 375,
                                      "text": "+=",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 376,
                                      "end_byte": 433,
                                      "text": "ret_max ( arr [ k + 1 ] [ l ] , arr [ k + 1 ] [ l + 1 ] )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 376,
                                          "end_byte": 383,
                                          "text": "ret_max",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 384,
                                          "end_byte": 433,
                                          "text": "( arr [ k + 1 ] [ l ] , arr [ k + 1 ] [ l + 1 ] )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 384,
                                              "end_byte": 385,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 386,
                                              "end_byte": 405,
                                              "text": "arr [ k + 1 ] [ l ]",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 386,
                                                  "end_byte": 399,
                                                  "text": "arr [ k + 1 ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 386,
                                                      "end_byte": 389,
                                                      "text": "arr",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 390,
                                                      "end_byte": 399,
                                                      "text": "[ k + 1 ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 390,
                                                          "end_byte": 391,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 392,
                                                          "end_byte": 397,
                                                          "text": "k + 1",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 392,
                                                              "end_byte": 393,
                                                              "text": "k",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "+",
                                                              "start_byte": 394,
                                                              "end_byte": 395,
                                                              "text": "+",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "number_literal",
                                                              "start_byte": 396,
                                                              "end_byte": 397,
                                                              "text": "1",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 398,
                                                          "end_byte": 399,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 400,
                                                  "end_byte": 405,
                                                  "text": "[ l ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 400,
                                                      "end_byte": 401,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 402,
                                                      "end_byte": 403,
                                                      "text": "l",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 404,
                                                      "end_byte": 405,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 406,
                                              "end_byte": 407,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 408,
                                              "end_byte": 431,
                                              "text": "arr [ k + 1 ] [ l + 1 ]",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 408,
                                                  "end_byte": 421,
                                                  "text": "arr [ k + 1 ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 408,
                                                      "end_byte": 411,
                                                      "text": "arr",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 412,
                                                      "end_byte": 421,
                                                      "text": "[ k + 1 ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 412,
                                                          "end_byte": 413,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 414,
                                                          "end_byte": 419,
                                                          "text": "k + 1",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 414,
                                                              "end_byte": 415,
                                                              "text": "k",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "+",
                                                              "start_byte": 416,
                                                              "end_byte": 417,
                                                              "text": "+",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "number_literal",
                                                              "start_byte": 418,
                                                              "end_byte": 419,
                                                              "text": "1",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 420,
                                                          "end_byte": 421,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 422,
                                                  "end_byte": 431,
                                                  "text": "[ l + 1 ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 422,
                                                      "end_byte": 423,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 424,
                                                      "end_byte": 429,
                                                      "text": "l + 1",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 424,
                                                          "end_byte": 425,
                                                          "text": "l",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "+",
                                                          "start_byte": 426,
                                                          "end_byte": 427,
                                                          "text": "+",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "number_literal",
                                                          "start_byte": 428,
                                                          "end_byte": 429,
                                                          "text": "1",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 430,
                                                      "end_byte": 431,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 432,
                                              "end_byte": 433,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 434,
                                  "end_byte": 435,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 436,
                              "end_byte": 437,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 438,
                      "end_byte": 439,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 440,
              "end_byte": 464,
              "text": "return arr [ 0 ] [ 0 ] ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 440,
                  "end_byte": 446,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "subscript_expression",
                  "start_byte": 447,
                  "end_byte": 462,
                  "text": "arr [ 0 ] [ 0 ]",
                  "children": [
                    {
                      "type": "subscript_expression",
                      "start_byte": 447,
                      "end_byte": 456,
                      "text": "arr [ 0 ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 447,
                          "end_byte": 450,
                          "text": "arr",
                          "children": []
                        },
                        {
                          "type": "subscript_argument_list",
                          "start_byte": 451,
                          "end_byte": 456,
                          "text": "[ 0 ]",
                          "children": [
                            {
                              "type": "[",
                              "start_byte": 451,
                              "end_byte": 452,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 453,
                              "end_byte": 454,
                              "text": "0",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 455,
                              "end_byte": 456,
                              "text": "]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "subscript_argument_list",
                      "start_byte": 457,
                      "end_byte": 462,
                      "text": "[ 0 ]",
                      "children": [
                        {
                          "type": "[",
                          "start_byte": 457,
                          "end_byte": 458,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 459,
                          "end_byte": 460,
                          "text": "0",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 461,
                          "end_byte": 462,
                          "text": "]",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 463,
                  "end_byte": 464,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 465,
              "end_byte": 466,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 467,
      "end_byte": 540,
      "text": "int ret_max ( int a , int b ) { if ( a > b ) return a ; else return b ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 467,
          "end_byte": 470,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 471,
          "end_byte": 496,
          "text": "ret_max ( int a , int b )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 471,
              "end_byte": 478,
              "text": "ret_max",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 479,
              "end_byte": 496,
              "text": "( int a , int b )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 479,
                  "end_byte": 480,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 481,
                  "end_byte": 486,
                  "text": "int a",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 481,
                      "end_byte": 484,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 485,
                      "end_byte": 486,
                      "text": "a",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 487,
                  "end_byte": 488,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 489,
                  "end_byte": 494,
                  "text": "int b",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 489,
                      "end_byte": 492,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 493,
                      "end_byte": 494,
                      "text": "b",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 495,
                  "end_byte": 496,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 497,
          "end_byte": 540,
          "text": "{ if ( a > b ) return a ; else return b ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 497,
              "end_byte": 498,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 499,
              "end_byte": 538,
              "text": "if ( a > b ) return a ; else return b ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 499,
                  "end_byte": 501,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 502,
                  "end_byte": 511,
                  "text": "( a > b )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 502,
                      "end_byte": 503,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 504,
                      "end_byte": 509,
                      "text": "a > b",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 504,
                          "end_byte": 505,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 506,
                          "end_byte": 507,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 508,
                          "end_byte": 509,
                          "text": "b",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 510,
                      "end_byte": 511,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 512,
                  "end_byte": 522,
                  "text": "return a ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 512,
                      "end_byte": 518,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 519,
                      "end_byte": 520,
                      "text": "a",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 521,
                      "end_byte": 522,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 523,
                  "end_byte": 538,
                  "text": "else return b ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 523,
                      "end_byte": 527,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 528,
                      "end_byte": 538,
                      "text": "return b ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 528,
                          "end_byte": 534,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 535,
                          "end_byte": 536,
                          "text": "b",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 537,
                          "end_byte": 538,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 539,
              "end_byte": 540,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 541,
      "end_byte": 838,
      "text": "int main ( ) { int i , T , k , l , tmp , j ; scanf ( \"%d\" , & T ) ; int N ; for ( i = 0 ; i < T ; i ++ ) { scanf ( \"%d\" , & N ) ; for ( j = 0 ; j < N ; j ++ ) { for ( k = 0 ; k < j + 1 ; k ++ ) { scanf ( \"%d\" , & tmp ) ; arr [ j ] [ k ] = tmp ; } } printf ( \"%d\\n\" , solve ( N ) ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 541,
          "end_byte": 544,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 545,
          "end_byte": 553,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 545,
              "end_byte": 549,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 550,
              "end_byte": 553,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 550,
                  "end_byte": 551,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 552,
                  "end_byte": 553,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 554,
          "end_byte": 838,
          "text": "{ int i , T , k , l , tmp , j ; scanf ( \"%d\" , & T ) ; int N ; for ( i = 0 ; i < T ; i ++ ) { scanf ( \"%d\" , & N ) ; for ( j = 0 ; j < N ; j ++ ) { for ( k = 0 ; k < j + 1 ; k ++ ) { scanf ( \"%d\" , & tmp ) ; arr [ j ] [ k ] = tmp ; } } printf ( \"%d\\n\" , solve ( N ) ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 554,
              "end_byte": 555,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 556,
              "end_byte": 585,
              "text": "int i , T , k , l , tmp , j ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 556,
                  "end_byte": 559,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 560,
                  "end_byte": 561,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 562,
                  "end_byte": 563,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 564,
                  "end_byte": 565,
                  "text": "T",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 566,
                  "end_byte": 567,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 568,
                  "end_byte": 569,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 570,
                  "end_byte": 571,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 572,
                  "end_byte": 573,
                  "text": "l",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 574,
                  "end_byte": 575,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 576,
                  "end_byte": 579,
                  "text": "tmp",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 580,
                  "end_byte": 581,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 582,
                  "end_byte": 583,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 584,
                  "end_byte": 585,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 586,
              "end_byte": 608,
              "text": "scanf ( \"%d\" , & T ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 586,
                  "end_byte": 606,
                  "text": "scanf ( \"%d\" , & T )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 586,
                      "end_byte": 591,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 592,
                      "end_byte": 606,
                      "text": "( \"%d\" , & T )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 592,
                          "end_byte": 593,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 594,
                          "end_byte": 598,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 594,
                              "end_byte": 595,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 595,
                              "end_byte": 597,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 597,
                              "end_byte": 598,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 599,
                          "end_byte": 600,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 601,
                          "end_byte": 604,
                          "text": "& T",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 601,
                              "end_byte": 602,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 603,
                              "end_byte": 604,
                              "text": "T",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 605,
                          "end_byte": 606,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 607,
                  "end_byte": 608,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 609,
              "end_byte": 616,
              "text": "int N ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 609,
                  "end_byte": 612,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 613,
                  "end_byte": 614,
                  "text": "N",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 615,
                  "end_byte": 616,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 617,
              "end_byte": 825,
              "text": "for ( i = 0 ; i < T ; i ++ ) { scanf ( \"%d\" , & N ) ; for ( j = 0 ; j < N ; j ++ ) { for ( k = 0 ; k < j + 1 ; k ++ ) { scanf ( \"%d\" , & tmp ) ; arr [ j ] [ k ] = tmp ; } } printf ( \"%d\\n\" , solve ( N ) ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 617,
                  "end_byte": 620,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 621,
                  "end_byte": 622,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 623,
                  "end_byte": 628,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 623,
                      "end_byte": 624,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 625,
                      "end_byte": 626,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 627,
                      "end_byte": 628,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 629,
                  "end_byte": 630,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 631,
                  "end_byte": 636,
                  "text": "i < T",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 631,
                      "end_byte": 632,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 633,
                      "end_byte": 634,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 635,
                      "end_byte": 636,
                      "text": "T",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 637,
                  "end_byte": 638,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 639,
                  "end_byte": 643,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 639,
                      "end_byte": 640,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 641,
                      "end_byte": 643,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 644,
                  "end_byte": 645,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 646,
                  "end_byte": 825,
                  "text": "{ scanf ( \"%d\" , & N ) ; for ( j = 0 ; j < N ; j ++ ) { for ( k = 0 ; k < j + 1 ; k ++ ) { scanf ( \"%d\" , & tmp ) ; arr [ j ] [ k ] = tmp ; } } printf ( \"%d\\n\" , solve ( N ) ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 646,
                      "end_byte": 647,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 648,
                      "end_byte": 670,
                      "text": "scanf ( \"%d\" , & N ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 648,
                          "end_byte": 668,
                          "text": "scanf ( \"%d\" , & N )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 648,
                              "end_byte": 653,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 654,
                              "end_byte": 668,
                              "text": "( \"%d\" , & N )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 654,
                                  "end_byte": 655,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 656,
                                  "end_byte": 660,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 656,
                                      "end_byte": 657,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 657,
                                      "end_byte": 659,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 659,
                                      "end_byte": 660,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 661,
                                  "end_byte": 662,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 663,
                                  "end_byte": 666,
                                  "text": "& N",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 663,
                                      "end_byte": 664,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 665,
                                      "end_byte": 666,
                                      "text": "N",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 667,
                                  "end_byte": 668,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 669,
                          "end_byte": 670,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 671,
                      "end_byte": 789,
                      "text": "for ( j = 0 ; j < N ; j ++ ) { for ( k = 0 ; k < j + 1 ; k ++ ) { scanf ( \"%d\" , & tmp ) ; arr [ j ] [ k ] = tmp ; } }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 671,
                          "end_byte": 674,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 675,
                          "end_byte": 676,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 677,
                          "end_byte": 682,
                          "text": "j = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 677,
                              "end_byte": 678,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 679,
                              "end_byte": 680,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 681,
                              "end_byte": 682,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 683,
                          "end_byte": 684,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 685,
                          "end_byte": 690,
                          "text": "j < N",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 685,
                              "end_byte": 686,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 687,
                              "end_byte": 688,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 689,
                              "end_byte": 690,
                              "text": "N",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 691,
                          "end_byte": 692,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 693,
                          "end_byte": 697,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 693,
                              "end_byte": 694,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 695,
                              "end_byte": 697,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 698,
                          "end_byte": 699,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 700,
                          "end_byte": 789,
                          "text": "{ for ( k = 0 ; k < j + 1 ; k ++ ) { scanf ( \"%d\" , & tmp ) ; arr [ j ] [ k ] = tmp ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 700,
                              "end_byte": 701,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 702,
                              "end_byte": 787,
                              "text": "for ( k = 0 ; k < j + 1 ; k ++ ) { scanf ( \"%d\" , & tmp ) ; arr [ j ] [ k ] = tmp ; }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 702,
                                  "end_byte": 705,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 706,
                                  "end_byte": 707,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 708,
                                  "end_byte": 713,
                                  "text": "k = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 708,
                                      "end_byte": 709,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 710,
                                      "end_byte": 711,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 712,
                                      "end_byte": 713,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 714,
                                  "end_byte": 715,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 716,
                                  "end_byte": 725,
                                  "text": "k < j + 1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 716,
                                      "end_byte": 717,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "<",
                                      "start_byte": 718,
                                      "end_byte": 719,
                                      "text": "<",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 720,
                                      "end_byte": 725,
                                      "text": "j + 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 720,
                                          "end_byte": 721,
                                          "text": "j",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 722,
                                          "end_byte": 723,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 724,
                                          "end_byte": 725,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 726,
                                  "end_byte": 727,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 728,
                                  "end_byte": 732,
                                  "text": "k ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 728,
                                      "end_byte": 729,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 730,
                                      "end_byte": 732,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 733,
                                  "end_byte": 734,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 735,
                                  "end_byte": 787,
                                  "text": "{ scanf ( \"%d\" , & tmp ) ; arr [ j ] [ k ] = tmp ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 735,
                                      "end_byte": 736,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 737,
                                      "end_byte": 761,
                                      "text": "scanf ( \"%d\" , & tmp ) ;",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start_byte": 737,
                                          "end_byte": 759,
                                          "text": "scanf ( \"%d\" , & tmp )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 737,
                                              "end_byte": 742,
                                              "text": "scanf",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 743,
                                              "end_byte": 759,
                                              "text": "( \"%d\" , & tmp )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 743,
                                                  "end_byte": 744,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_literal",
                                                  "start_byte": 745,
                                                  "end_byte": 749,
                                                  "text": "\"%d\"",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 745,
                                                      "end_byte": 746,
                                                      "text": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start_byte": 746,
                                                      "end_byte": 748,
                                                      "text": "%d",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 748,
                                                      "end_byte": 749,
                                                      "text": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 750,
                                                  "end_byte": 751,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "pointer_expression",
                                                  "start_byte": 752,
                                                  "end_byte": 757,
                                                  "text": "& tmp",
                                                  "children": [
                                                    {
                                                      "type": "&",
                                                      "start_byte": 752,
                                                      "end_byte": 753,
                                                      "text": "&",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 754,
                                                      "end_byte": 757,
                                                      "text": "tmp",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 758,
                                                  "end_byte": 759,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 760,
                                          "end_byte": 761,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 762,
                                      "end_byte": 785,
                                      "text": "arr [ j ] [ k ] = tmp ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 762,
                                          "end_byte": 783,
                                          "text": "arr [ j ] [ k ] = tmp",
                                          "children": [
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 762,
                                              "end_byte": 777,
                                              "text": "arr [ j ] [ k ]",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 762,
                                                  "end_byte": 771,
                                                  "text": "arr [ j ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 762,
                                                      "end_byte": 765,
                                                      "text": "arr",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 766,
                                                      "end_byte": 771,
                                                      "text": "[ j ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 766,
                                                          "end_byte": 767,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 768,
                                                          "end_byte": 769,
                                                          "text": "j",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 770,
                                                          "end_byte": 771,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 772,
                                                  "end_byte": 777,
                                                  "text": "[ k ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 772,
                                                      "end_byte": 773,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 774,
                                                      "end_byte": 775,
                                                      "text": "k",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 776,
                                                      "end_byte": 777,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 778,
                                              "end_byte": 779,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 780,
                                              "end_byte": 783,
                                              "text": "tmp",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 784,
                                          "end_byte": 785,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 786,
                                      "end_byte": 787,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 788,
                              "end_byte": 789,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 790,
                      "end_byte": 823,
                      "text": "printf ( \"%d\\n\" , solve ( N ) ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 790,
                          "end_byte": 821,
                          "text": "printf ( \"%d\\n\" , solve ( N ) )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 790,
                              "end_byte": 796,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 797,
                              "end_byte": 821,
                              "text": "( \"%d\\n\" , solve ( N ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 797,
                                  "end_byte": 798,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 799,
                                  "end_byte": 805,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 799,
                                      "end_byte": 800,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 800,
                                      "end_byte": 802,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 802,
                                      "end_byte": 804,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 804,
                                      "end_byte": 805,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 806,
                                  "end_byte": 807,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 808,
                                  "end_byte": 819,
                                  "text": "solve ( N )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 808,
                                      "end_byte": 813,
                                      "text": "solve",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 814,
                                      "end_byte": 819,
                                      "text": "( N )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 814,
                                          "end_byte": 815,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 816,
                                          "end_byte": 817,
                                          "text": "N",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 818,
                                          "end_byte": 819,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 820,
                                  "end_byte": 821,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 822,
                          "end_byte": 823,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 824,
                      "end_byte": 825,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 826,
              "end_byte": 836,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 826,
                  "end_byte": 832,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 833,
                  "end_byte": 834,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 835,
                  "end_byte": 836,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 837,
              "end_byte": 838,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}