int mat [ 101 ] [ 101 ] , rows ; int lookup [ 101 ] [ 101 ] ; int max ( int a , int b ) { return ( a > b ) ? a : b ; } int sumtrian ( int i , int j ) { int t ; if ( i > rows ) return 0 ; if ( lookup [ i ] [ j ] != 0 ) return lookup [ i ] [ j ] ; t = mat [ i ] [ j ] + max ( sumtrian ( i + 1 , j ) , sumtrian ( i + 1 , j + 1 ) ) ; lookup [ i ] [ j ] = t ; return t ; } int main ( ) { int count , i , j , result ; scanf ( "%d" , & count ) ; while ( count -- ) { scanf ( "%d" , & rows ) ; for ( i = 0 ; i < rows ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & mat [ i ] [ j ] ) ; } } for ( i = 0 ; i < 101 ; i ++ ) { for ( j = 0 ; j < 101 ; j ++ ) { lookup [ i ] [ j ] = 0 ; } } result = sumtrian ( 0 , 0 ) ; printf ( "%d\n" , result ) ; } return 0 ; }