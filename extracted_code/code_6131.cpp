int co = 0 ; int arrayremove ( int * A , int n ) { int i , max = 0 ; for ( i = 1 ; i < n ; i ++ ) { if ( A [ max ] < A [ i ] ) max = i ; } if ( ( A [ max - 1 ] ) > ( A [ max + 1 ] ) && ( max != n - 1 ) ) { co = A [ max - 1 ] + co ; } else if ( ( A [ max - 1 ] ) < ( A [ max + 1 ] ) && ( max != n - 1 ) ) { co = A [ max + 1 ] + co ; } else { co = A [ max - 1 ] + co ; } for ( i = max ; i < n ; i ++ ) { A [ i ] = A [ i + 1 ] ; } n = n - 1 ; if ( n != 1 ) arrayremove ( A , n ) ; else return co ; } int main ( ) { int A [ 60000 ] , t , n , i , cost ; scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( "%d" , & A [ i ] ) ; } cost = arrayremove ( A , n ) ; printf ( "%d\n" , cost ) ; } return 0 ; }