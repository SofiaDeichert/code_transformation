{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 642,
  "text": "int mat [ 100 ] [ 100 ] ; int main ( ) { int i , j , k , l , w ; scanf ( \"%d\" , & j ) ; int x ; for ( i = 0 ; i < j ; i ++ ) { scanf ( \"%d\" , & x ) ; for ( k = 0 ; k < x ; k ++ ) { for ( l = 0 ; l < k + 1 ; l ++ ) { scanf ( \"%d\" , & w ) ; mat [ k ] [ l ] = w ; } } printf ( \"%d\\n\" , solve ( x ) ) ; } return 0 ; } int max ( int a , int b ) { if ( a > b ) { return a ; } else { return b ; } } int solve ( int x ) { int k , l ; if ( x == 1 ) { return mat [ 0 ] [ 0 ] ; } for ( k = x - 2 ; k >= 0 ; k -- ) { for ( l = 0 ; l <= k ; l ++ ) { mat [ k ] [ l ] += max ( mat [ k + 1 ] [ l ] , mat [ k + 1 ] [ l + 1 ] ) ; } } return mat [ 0 ] [ 0 ] ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 25,
      "text": "int mat [ 100 ] [ 100 ] ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "array_declarator",
          "start_byte": 4,
          "end_byte": 23,
          "text": "mat [ 100 ] [ 100 ]",
          "children": [
            {
              "type": "array_declarator",
              "start_byte": 4,
              "end_byte": 15,
              "text": "mat [ 100 ]",
              "children": [
                {
                  "type": "identifier",
                  "start_byte": 4,
                  "end_byte": 7,
                  "text": "mat",
                  "children": []
                },
                {
                  "type": "[",
                  "start_byte": 8,
                  "end_byte": 9,
                  "text": "[",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 10,
                  "end_byte": 13,
                  "text": "100",
                  "children": []
                },
                {
                  "type": "]",
                  "start_byte": 14,
                  "end_byte": 15,
                  "text": "]",
                  "children": []
                }
              ]
            },
            {
              "type": "[",
              "start_byte": 16,
              "end_byte": 17,
              "text": "[",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 18,
              "end_byte": 21,
              "text": "100",
              "children": []
            },
            {
              "type": "]",
              "start_byte": 22,
              "end_byte": 23,
              "text": "]",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 24,
          "end_byte": 25,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 26,
      "end_byte": 313,
      "text": "int main ( ) { int i , j , k , l , w ; scanf ( \"%d\" , & j ) ; int x ; for ( i = 0 ; i < j ; i ++ ) { scanf ( \"%d\" , & x ) ; for ( k = 0 ; k < x ; k ++ ) { for ( l = 0 ; l < k + 1 ; l ++ ) { scanf ( \"%d\" , & w ) ; mat [ k ] [ l ] = w ; } } printf ( \"%d\\n\" , solve ( x ) ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 26,
          "end_byte": 29,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 30,
          "end_byte": 38,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 30,
              "end_byte": 34,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 35,
              "end_byte": 38,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 35,
                  "end_byte": 36,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 37,
                  "end_byte": 38,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 39,
          "end_byte": 313,
          "text": "{ int i , j , k , l , w ; scanf ( \"%d\" , & j ) ; int x ; for ( i = 0 ; i < j ; i ++ ) { scanf ( \"%d\" , & x ) ; for ( k = 0 ; k < x ; k ++ ) { for ( l = 0 ; l < k + 1 ; l ++ ) { scanf ( \"%d\" , & w ) ; mat [ k ] [ l ] = w ; } } printf ( \"%d\\n\" , solve ( x ) ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 39,
              "end_byte": 40,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 41,
              "end_byte": 64,
              "text": "int i , j , k , l , w ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 41,
                  "end_byte": 44,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 45,
                  "end_byte": 46,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 47,
                  "end_byte": 48,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 49,
                  "end_byte": 50,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 51,
                  "end_byte": 52,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 53,
                  "end_byte": 54,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 55,
                  "end_byte": 56,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 57,
                  "end_byte": 58,
                  "text": "l",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 59,
                  "end_byte": 60,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 61,
                  "end_byte": 62,
                  "text": "w",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 63,
                  "end_byte": 64,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 65,
              "end_byte": 87,
              "text": "scanf ( \"%d\" , & j ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 65,
                  "end_byte": 85,
                  "text": "scanf ( \"%d\" , & j )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 65,
                      "end_byte": 70,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 71,
                      "end_byte": 85,
                      "text": "( \"%d\" , & j )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 71,
                          "end_byte": 72,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 73,
                          "end_byte": 77,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 73,
                              "end_byte": 74,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 74,
                              "end_byte": 76,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 76,
                              "end_byte": 77,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 78,
                          "end_byte": 79,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 80,
                          "end_byte": 83,
                          "text": "& j",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 80,
                              "end_byte": 81,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 82,
                              "end_byte": 83,
                              "text": "j",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 84,
                          "end_byte": 85,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 86,
                  "end_byte": 87,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 88,
              "end_byte": 95,
              "text": "int x ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 88,
                  "end_byte": 91,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 92,
                  "end_byte": 93,
                  "text": "x",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 94,
                  "end_byte": 95,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 96,
              "end_byte": 300,
              "text": "for ( i = 0 ; i < j ; i ++ ) { scanf ( \"%d\" , & x ) ; for ( k = 0 ; k < x ; k ++ ) { for ( l = 0 ; l < k + 1 ; l ++ ) { scanf ( \"%d\" , & w ) ; mat [ k ] [ l ] = w ; } } printf ( \"%d\\n\" , solve ( x ) ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 96,
                  "end_byte": 99,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 100,
                  "end_byte": 101,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 102,
                  "end_byte": 107,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 102,
                      "end_byte": 103,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 104,
                      "end_byte": 105,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 106,
                      "end_byte": 107,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 108,
                  "end_byte": 109,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 110,
                  "end_byte": 115,
                  "text": "i < j",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 110,
                      "end_byte": 111,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 112,
                      "end_byte": 113,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 114,
                      "end_byte": 115,
                      "text": "j",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 116,
                  "end_byte": 117,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 118,
                  "end_byte": 122,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 118,
                      "end_byte": 119,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 120,
                      "end_byte": 122,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 123,
                  "end_byte": 124,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 125,
                  "end_byte": 300,
                  "text": "{ scanf ( \"%d\" , & x ) ; for ( k = 0 ; k < x ; k ++ ) { for ( l = 0 ; l < k + 1 ; l ++ ) { scanf ( \"%d\" , & w ) ; mat [ k ] [ l ] = w ; } } printf ( \"%d\\n\" , solve ( x ) ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 125,
                      "end_byte": 126,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 127,
                      "end_byte": 149,
                      "text": "scanf ( \"%d\" , & x ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 127,
                          "end_byte": 147,
                          "text": "scanf ( \"%d\" , & x )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 127,
                              "end_byte": 132,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 133,
                              "end_byte": 147,
                              "text": "( \"%d\" , & x )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 133,
                                  "end_byte": 134,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 135,
                                  "end_byte": 139,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 135,
                                      "end_byte": 136,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 136,
                                      "end_byte": 138,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 138,
                                      "end_byte": 139,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 140,
                                  "end_byte": 141,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 142,
                                  "end_byte": 145,
                                  "text": "& x",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 142,
                                      "end_byte": 143,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 144,
                                      "end_byte": 145,
                                      "text": "x",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 146,
                                  "end_byte": 147,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 148,
                          "end_byte": 149,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 150,
                      "end_byte": 264,
                      "text": "for ( k = 0 ; k < x ; k ++ ) { for ( l = 0 ; l < k + 1 ; l ++ ) { scanf ( \"%d\" , & w ) ; mat [ k ] [ l ] = w ; } }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 150,
                          "end_byte": 153,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 154,
                          "end_byte": 155,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 156,
                          "end_byte": 161,
                          "text": "k = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 156,
                              "end_byte": 157,
                              "text": "k",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 158,
                              "end_byte": 159,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 160,
                              "end_byte": 161,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 162,
                          "end_byte": 163,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 164,
                          "end_byte": 169,
                          "text": "k < x",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 164,
                              "end_byte": 165,
                              "text": "k",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 166,
                              "end_byte": 167,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 168,
                              "end_byte": 169,
                              "text": "x",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 170,
                          "end_byte": 171,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 172,
                          "end_byte": 176,
                          "text": "k ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 172,
                              "end_byte": 173,
                              "text": "k",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 174,
                              "end_byte": 176,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 177,
                          "end_byte": 178,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 179,
                          "end_byte": 264,
                          "text": "{ for ( l = 0 ; l < k + 1 ; l ++ ) { scanf ( \"%d\" , & w ) ; mat [ k ] [ l ] = w ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 179,
                              "end_byte": 180,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 181,
                              "end_byte": 262,
                              "text": "for ( l = 0 ; l < k + 1 ; l ++ ) { scanf ( \"%d\" , & w ) ; mat [ k ] [ l ] = w ; }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 181,
                                  "end_byte": 184,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 185,
                                  "end_byte": 186,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 187,
                                  "end_byte": 192,
                                  "text": "l = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 187,
                                      "end_byte": 188,
                                      "text": "l",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 189,
                                      "end_byte": 190,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 191,
                                      "end_byte": 192,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 193,
                                  "end_byte": 194,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 195,
                                  "end_byte": 204,
                                  "text": "l < k + 1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 195,
                                      "end_byte": 196,
                                      "text": "l",
                                      "children": []
                                    },
                                    {
                                      "type": "<",
                                      "start_byte": 197,
                                      "end_byte": 198,
                                      "text": "<",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 199,
                                      "end_byte": 204,
                                      "text": "k + 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 199,
                                          "end_byte": 200,
                                          "text": "k",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 201,
                                          "end_byte": 202,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 203,
                                          "end_byte": 204,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 205,
                                  "end_byte": 206,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 207,
                                  "end_byte": 211,
                                  "text": "l ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 207,
                                      "end_byte": 208,
                                      "text": "l",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 209,
                                      "end_byte": 211,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 212,
                                  "end_byte": 213,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 214,
                                  "end_byte": 262,
                                  "text": "{ scanf ( \"%d\" , & w ) ; mat [ k ] [ l ] = w ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 214,
                                      "end_byte": 215,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 216,
                                      "end_byte": 238,
                                      "text": "scanf ( \"%d\" , & w ) ;",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start_byte": 216,
                                          "end_byte": 236,
                                          "text": "scanf ( \"%d\" , & w )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 216,
                                              "end_byte": 221,
                                              "text": "scanf",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 222,
                                              "end_byte": 236,
                                              "text": "( \"%d\" , & w )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 222,
                                                  "end_byte": 223,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_literal",
                                                  "start_byte": 224,
                                                  "end_byte": 228,
                                                  "text": "\"%d\"",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 224,
                                                      "end_byte": 225,
                                                      "text": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start_byte": 225,
                                                      "end_byte": 227,
                                                      "text": "%d",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 227,
                                                      "end_byte": 228,
                                                      "text": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 229,
                                                  "end_byte": 230,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "pointer_expression",
                                                  "start_byte": 231,
                                                  "end_byte": 234,
                                                  "text": "& w",
                                                  "children": [
                                                    {
                                                      "type": "&",
                                                      "start_byte": 231,
                                                      "end_byte": 232,
                                                      "text": "&",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 233,
                                                      "end_byte": 234,
                                                      "text": "w",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 235,
                                                  "end_byte": 236,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 237,
                                          "end_byte": 238,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 239,
                                      "end_byte": 260,
                                      "text": "mat [ k ] [ l ] = w ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 239,
                                          "end_byte": 258,
                                          "text": "mat [ k ] [ l ] = w",
                                          "children": [
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 239,
                                              "end_byte": 254,
                                              "text": "mat [ k ] [ l ]",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 239,
                                                  "end_byte": 248,
                                                  "text": "mat [ k ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 239,
                                                      "end_byte": 242,
                                                      "text": "mat",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 243,
                                                      "end_byte": 248,
                                                      "text": "[ k ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 243,
                                                          "end_byte": 244,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 245,
                                                          "end_byte": 246,
                                                          "text": "k",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 247,
                                                          "end_byte": 248,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 249,
                                                  "end_byte": 254,
                                                  "text": "[ l ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 249,
                                                      "end_byte": 250,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 251,
                                                      "end_byte": 252,
                                                      "text": "l",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 253,
                                                      "end_byte": 254,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 255,
                                              "end_byte": 256,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 257,
                                              "end_byte": 258,
                                              "text": "w",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 259,
                                          "end_byte": 260,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 261,
                                      "end_byte": 262,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 263,
                              "end_byte": 264,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 265,
                      "end_byte": 298,
                      "text": "printf ( \"%d\\n\" , solve ( x ) ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 265,
                          "end_byte": 296,
                          "text": "printf ( \"%d\\n\" , solve ( x ) )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 265,
                              "end_byte": 271,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 272,
                              "end_byte": 296,
                              "text": "( \"%d\\n\" , solve ( x ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 272,
                                  "end_byte": 273,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 274,
                                  "end_byte": 280,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 274,
                                      "end_byte": 275,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 275,
                                      "end_byte": 277,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 277,
                                      "end_byte": 279,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 279,
                                      "end_byte": 280,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 281,
                                  "end_byte": 282,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 283,
                                  "end_byte": 294,
                                  "text": "solve ( x )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 283,
                                      "end_byte": 288,
                                      "text": "solve",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 289,
                                      "end_byte": 294,
                                      "text": "( x )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 289,
                                          "end_byte": 290,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 291,
                                          "end_byte": 292,
                                          "text": "x",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 293,
                                          "end_byte": 294,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 295,
                                  "end_byte": 296,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 297,
                          "end_byte": 298,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 299,
                      "end_byte": 300,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 301,
              "end_byte": 311,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 301,
                  "end_byte": 307,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 308,
                  "end_byte": 309,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 310,
                  "end_byte": 311,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 312,
              "end_byte": 313,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 314,
      "end_byte": 391,
      "text": "int max ( int a , int b ) { if ( a > b ) { return a ; } else { return b ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 314,
          "end_byte": 317,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 318,
          "end_byte": 339,
          "text": "max ( int a , int b )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 318,
              "end_byte": 321,
              "text": "max",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 322,
              "end_byte": 339,
              "text": "( int a , int b )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 322,
                  "end_byte": 323,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 324,
                  "end_byte": 329,
                  "text": "int a",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 324,
                      "end_byte": 327,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 328,
                      "end_byte": 329,
                      "text": "a",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 330,
                  "end_byte": 331,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 332,
                  "end_byte": 337,
                  "text": "int b",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 332,
                      "end_byte": 335,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 336,
                      "end_byte": 337,
                      "text": "b",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 338,
                  "end_byte": 339,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 340,
          "end_byte": 391,
          "text": "{ if ( a > b ) { return a ; } else { return b ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 340,
              "end_byte": 341,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 342,
              "end_byte": 389,
              "text": "if ( a > b ) { return a ; } else { return b ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 342,
                  "end_byte": 344,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 345,
                  "end_byte": 354,
                  "text": "( a > b )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 345,
                      "end_byte": 346,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 347,
                      "end_byte": 352,
                      "text": "a > b",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 347,
                          "end_byte": 348,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 349,
                          "end_byte": 350,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 351,
                          "end_byte": 352,
                          "text": "b",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 353,
                      "end_byte": 354,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 355,
                  "end_byte": 369,
                  "text": "{ return a ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 355,
                      "end_byte": 356,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 357,
                      "end_byte": 367,
                      "text": "return a ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 357,
                          "end_byte": 363,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 364,
                          "end_byte": 365,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 366,
                          "end_byte": 367,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 368,
                      "end_byte": 369,
                      "text": "}",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 370,
                  "end_byte": 389,
                  "text": "else { return b ; }",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 370,
                      "end_byte": 374,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "compound_statement",
                      "start_byte": 375,
                      "end_byte": 389,
                      "text": "{ return b ; }",
                      "children": [
                        {
                          "type": "{",
                          "start_byte": 375,
                          "end_byte": 376,
                          "text": "{",
                          "children": []
                        },
                        {
                          "type": "return_statement",
                          "start_byte": 377,
                          "end_byte": 387,
                          "text": "return b ;",
                          "children": [
                            {
                              "type": "return",
                              "start_byte": 377,
                              "end_byte": 383,
                              "text": "return",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 384,
                              "end_byte": 385,
                              "text": "b",
                              "children": []
                            },
                            {
                              "type": ";",
                              "start_byte": 386,
                              "end_byte": 387,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start_byte": 388,
                          "end_byte": 389,
                          "text": "}",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 390,
              "end_byte": 391,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 392,
      "end_byte": 642,
      "text": "int solve ( int x ) { int k , l ; if ( x == 1 ) { return mat [ 0 ] [ 0 ] ; } for ( k = x - 2 ; k >= 0 ; k -- ) { for ( l = 0 ; l <= k ; l ++ ) { mat [ k ] [ l ] += max ( mat [ k + 1 ] [ l ] , mat [ k + 1 ] [ l + 1 ] ) ; } } return mat [ 0 ] [ 0 ] ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 392,
          "end_byte": 395,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 396,
          "end_byte": 411,
          "text": "solve ( int x )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 396,
              "end_byte": 401,
              "text": "solve",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 402,
              "end_byte": 411,
              "text": "( int x )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 402,
                  "end_byte": 403,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 404,
                  "end_byte": 409,
                  "text": "int x",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 404,
                      "end_byte": 407,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 408,
                      "end_byte": 409,
                      "text": "x",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 410,
                  "end_byte": 411,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 412,
          "end_byte": 642,
          "text": "{ int k , l ; if ( x == 1 ) { return mat [ 0 ] [ 0 ] ; } for ( k = x - 2 ; k >= 0 ; k -- ) { for ( l = 0 ; l <= k ; l ++ ) { mat [ k ] [ l ] += max ( mat [ k + 1 ] [ l ] , mat [ k + 1 ] [ l + 1 ] ) ; } } return mat [ 0 ] [ 0 ] ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 412,
              "end_byte": 413,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 414,
              "end_byte": 425,
              "text": "int k , l ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 414,
                  "end_byte": 417,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 418,
                  "end_byte": 419,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 420,
                  "end_byte": 421,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 422,
                  "end_byte": 423,
                  "text": "l",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 424,
                  "end_byte": 425,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 426,
              "end_byte": 468,
              "text": "if ( x == 1 ) { return mat [ 0 ] [ 0 ] ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 426,
                  "end_byte": 428,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 429,
                  "end_byte": 439,
                  "text": "( x == 1 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 429,
                      "end_byte": 430,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 431,
                      "end_byte": 437,
                      "text": "x == 1",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 431,
                          "end_byte": 432,
                          "text": "x",
                          "children": []
                        },
                        {
                          "type": "==",
                          "start_byte": 433,
                          "end_byte": 435,
                          "text": "==",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 436,
                          "end_byte": 437,
                          "text": "1",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 438,
                      "end_byte": 439,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 440,
                  "end_byte": 468,
                  "text": "{ return mat [ 0 ] [ 0 ] ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 440,
                      "end_byte": 441,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 442,
                      "end_byte": 466,
                      "text": "return mat [ 0 ] [ 0 ] ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 442,
                          "end_byte": 448,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "subscript_expression",
                          "start_byte": 449,
                          "end_byte": 464,
                          "text": "mat [ 0 ] [ 0 ]",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 449,
                              "end_byte": 458,
                              "text": "mat [ 0 ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 449,
                                  "end_byte": 452,
                                  "text": "mat",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 453,
                                  "end_byte": 458,
                                  "text": "[ 0 ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 453,
                                      "end_byte": 454,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 455,
                                      "end_byte": 456,
                                      "text": "0",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 457,
                                      "end_byte": 458,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "subscript_argument_list",
                              "start_byte": 459,
                              "end_byte": 464,
                              "text": "[ 0 ]",
                              "children": [
                                {
                                  "type": "[",
                                  "start_byte": 459,
                                  "end_byte": 460,
                                  "text": "[",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 461,
                                  "end_byte": 462,
                                  "text": "0",
                                  "children": []
                                },
                                {
                                  "type": "]",
                                  "start_byte": 463,
                                  "end_byte": 464,
                                  "text": "]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 465,
                          "end_byte": 466,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 467,
                      "end_byte": 468,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 469,
              "end_byte": 615,
              "text": "for ( k = x - 2 ; k >= 0 ; k -- ) { for ( l = 0 ; l <= k ; l ++ ) { mat [ k ] [ l ] += max ( mat [ k + 1 ] [ l ] , mat [ k + 1 ] [ l + 1 ] ) ; } }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 469,
                  "end_byte": 472,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 473,
                  "end_byte": 474,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 475,
                  "end_byte": 484,
                  "text": "k = x - 2",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 475,
                      "end_byte": 476,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 477,
                      "end_byte": 478,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 479,
                      "end_byte": 484,
                      "text": "x - 2",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 479,
                          "end_byte": 480,
                          "text": "x",
                          "children": []
                        },
                        {
                          "type": "-",
                          "start_byte": 481,
                          "end_byte": 482,
                          "text": "-",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 483,
                          "end_byte": 484,
                          "text": "2",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 485,
                  "end_byte": 486,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 487,
                  "end_byte": 493,
                  "text": "k >= 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 487,
                      "end_byte": 488,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": ">=",
                      "start_byte": 489,
                      "end_byte": 491,
                      "text": ">=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 492,
                      "end_byte": 493,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 494,
                  "end_byte": 495,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 496,
                  "end_byte": 500,
                  "text": "k --",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 496,
                      "end_byte": 497,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "--",
                      "start_byte": 498,
                      "end_byte": 500,
                      "text": "--",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 501,
                  "end_byte": 502,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 503,
                  "end_byte": 615,
                  "text": "{ for ( l = 0 ; l <= k ; l ++ ) { mat [ k ] [ l ] += max ( mat [ k + 1 ] [ l ] , mat [ k + 1 ] [ l + 1 ] ) ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 503,
                      "end_byte": 504,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 505,
                      "end_byte": 613,
                      "text": "for ( l = 0 ; l <= k ; l ++ ) { mat [ k ] [ l ] += max ( mat [ k + 1 ] [ l ] , mat [ k + 1 ] [ l + 1 ] ) ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 505,
                          "end_byte": 508,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 509,
                          "end_byte": 510,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 511,
                          "end_byte": 516,
                          "text": "l = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 511,
                              "end_byte": 512,
                              "text": "l",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 513,
                              "end_byte": 514,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 515,
                              "end_byte": 516,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 517,
                          "end_byte": 518,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 519,
                          "end_byte": 525,
                          "text": "l <= k",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 519,
                              "end_byte": 520,
                              "text": "l",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 521,
                              "end_byte": 523,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 524,
                              "end_byte": 525,
                              "text": "k",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 526,
                          "end_byte": 527,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 528,
                          "end_byte": 532,
                          "text": "l ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 528,
                              "end_byte": 529,
                              "text": "l",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 530,
                              "end_byte": 532,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 533,
                          "end_byte": 534,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 535,
                          "end_byte": 613,
                          "text": "{ mat [ k ] [ l ] += max ( mat [ k + 1 ] [ l ] , mat [ k + 1 ] [ l + 1 ] ) ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 535,
                              "end_byte": 536,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 537,
                              "end_byte": 611,
                              "text": "mat [ k ] [ l ] += max ( mat [ k + 1 ] [ l ] , mat [ k + 1 ] [ l + 1 ] ) ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 537,
                                  "end_byte": 609,
                                  "text": "mat [ k ] [ l ] += max ( mat [ k + 1 ] [ l ] , mat [ k + 1 ] [ l + 1 ] )",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 537,
                                      "end_byte": 552,
                                      "text": "mat [ k ] [ l ]",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 537,
                                          "end_byte": 546,
                                          "text": "mat [ k ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 537,
                                              "end_byte": 540,
                                              "text": "mat",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 541,
                                              "end_byte": 546,
                                              "text": "[ k ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 541,
                                                  "end_byte": 542,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 543,
                                                  "end_byte": 544,
                                                  "text": "k",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 545,
                                                  "end_byte": 546,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 547,
                                          "end_byte": 552,
                                          "text": "[ l ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 547,
                                              "end_byte": 548,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 549,
                                              "end_byte": 550,
                                              "text": "l",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 551,
                                              "end_byte": 552,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+=",
                                      "start_byte": 553,
                                      "end_byte": 555,
                                      "text": "+=",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 556,
                                      "end_byte": 609,
                                      "text": "max ( mat [ k + 1 ] [ l ] , mat [ k + 1 ] [ l + 1 ] )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 556,
                                          "end_byte": 559,
                                          "text": "max",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 560,
                                          "end_byte": 609,
                                          "text": "( mat [ k + 1 ] [ l ] , mat [ k + 1 ] [ l + 1 ] )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 560,
                                              "end_byte": 561,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 562,
                                              "end_byte": 581,
                                              "text": "mat [ k + 1 ] [ l ]",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 562,
                                                  "end_byte": 575,
                                                  "text": "mat [ k + 1 ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 562,
                                                      "end_byte": 565,
                                                      "text": "mat",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 566,
                                                      "end_byte": 575,
                                                      "text": "[ k + 1 ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 566,
                                                          "end_byte": 567,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 568,
                                                          "end_byte": 573,
                                                          "text": "k + 1",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 568,
                                                              "end_byte": 569,
                                                              "text": "k",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "+",
                                                              "start_byte": 570,
                                                              "end_byte": 571,
                                                              "text": "+",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "number_literal",
                                                              "start_byte": 572,
                                                              "end_byte": 573,
                                                              "text": "1",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 574,
                                                          "end_byte": 575,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 576,
                                                  "end_byte": 581,
                                                  "text": "[ l ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 576,
                                                      "end_byte": 577,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 578,
                                                      "end_byte": 579,
                                                      "text": "l",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 580,
                                                      "end_byte": 581,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 582,
                                              "end_byte": 583,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 584,
                                              "end_byte": 607,
                                              "text": "mat [ k + 1 ] [ l + 1 ]",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 584,
                                                  "end_byte": 597,
                                                  "text": "mat [ k + 1 ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 584,
                                                      "end_byte": 587,
                                                      "text": "mat",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 588,
                                                      "end_byte": 597,
                                                      "text": "[ k + 1 ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 588,
                                                          "end_byte": 589,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 590,
                                                          "end_byte": 595,
                                                          "text": "k + 1",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 590,
                                                              "end_byte": 591,
                                                              "text": "k",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "+",
                                                              "start_byte": 592,
                                                              "end_byte": 593,
                                                              "text": "+",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "number_literal",
                                                              "start_byte": 594,
                                                              "end_byte": 595,
                                                              "text": "1",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 596,
                                                          "end_byte": 597,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 598,
                                                  "end_byte": 607,
                                                  "text": "[ l + 1 ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 598,
                                                      "end_byte": 599,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 600,
                                                      "end_byte": 605,
                                                      "text": "l + 1",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 600,
                                                          "end_byte": 601,
                                                          "text": "l",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "+",
                                                          "start_byte": 602,
                                                          "end_byte": 603,
                                                          "text": "+",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "number_literal",
                                                          "start_byte": 604,
                                                          "end_byte": 605,
                                                          "text": "1",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 606,
                                                      "end_byte": 607,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 608,
                                              "end_byte": 609,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 610,
                                  "end_byte": 611,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 612,
                              "end_byte": 613,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 614,
                      "end_byte": 615,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 616,
              "end_byte": 640,
              "text": "return mat [ 0 ] [ 0 ] ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 616,
                  "end_byte": 622,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "subscript_expression",
                  "start_byte": 623,
                  "end_byte": 638,
                  "text": "mat [ 0 ] [ 0 ]",
                  "children": [
                    {
                      "type": "subscript_expression",
                      "start_byte": 623,
                      "end_byte": 632,
                      "text": "mat [ 0 ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 623,
                          "end_byte": 626,
                          "text": "mat",
                          "children": []
                        },
                        {
                          "type": "subscript_argument_list",
                          "start_byte": 627,
                          "end_byte": 632,
                          "text": "[ 0 ]",
                          "children": [
                            {
                              "type": "[",
                              "start_byte": 627,
                              "end_byte": 628,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 629,
                              "end_byte": 630,
                              "text": "0",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 631,
                              "end_byte": 632,
                              "text": "]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "subscript_argument_list",
                      "start_byte": 633,
                      "end_byte": 638,
                      "text": "[ 0 ]",
                      "children": [
                        {
                          "type": "[",
                          "start_byte": 633,
                          "end_byte": 634,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 635,
                          "end_byte": 636,
                          "text": "0",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 637,
                          "end_byte": 638,
                          "text": "]",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 639,
                  "end_byte": 640,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 641,
              "end_byte": 642,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}