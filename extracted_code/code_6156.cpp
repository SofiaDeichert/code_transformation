int max ( int a , int b ) { if ( a > b ) { return ( a ) ; } return ( b ) ; } int main ( ) { int t , n , a [ 110 ] [ 110 ] , b [ 110 ] [ 110 ] , i , j ; scanf ( "%d" , & t ) ; while ( t -- ) { int m = - 1 ; scanf ( "%d" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & a [ i ] [ j ] ) ; } } b [ 0 ] [ 0 ] = a [ 0 ] [ 0 ] ; for ( i = 1 ; i < n ; i ++ ) { b [ i ] [ 0 ] = b [ i - 1 ] [ 0 ] + a [ i ] [ 0 ] ; b [ i ] [ n - 1 ] = b [ i - 1 ] [ n - 1 ] + a [ i ] [ n - 1 ] ; for ( j = 1 ; j < n - 1 ; j ++ ) { b [ i ] [ j ] = a [ i ] [ j ] + max ( b [ i - 1 ] [ j ] , b [ i - 1 ] [ j - 1 ] ) ; } } for ( i = 0 ; i < n ; i ++ ) { m = max ( m , b [ n - 1 ] [ i ] ) ; } printf ( "%d\n" , m ) ; } return ( 0 ) ; }