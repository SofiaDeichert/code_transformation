int a [ 40 ] [ 40 ] , cache [ 40 ] [ 40 ] ; int visited [ 40 ] [ 40 ] ; int n , nl ; int solve ( int i , int j ) { int t , t1 , t2 ; if ( i > n ) return 0 ; if ( visited [ i ] [ j ] == 1 ) return cache [ i ] [ j ] ; t1 = solve ( i + 1 , j ) ; t2 = solve ( i + 1 , j + 1 ) ; t = a [ i ] [ j ] + ( ( t1 > t2 ) ? t1 : t2 ) ; cache [ i ] [ j ] = t ; visited [ i ] [ j ] = 1 ; return t ; } int main ( ) { int i , j , max = 0 ; scanf ( "%d" , & n ) ; while ( n != 0 ) { scanf ( "%d" , & nl ) ; for ( i = 0 ; i < nl ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & a [ i ] [ j ] ) ; visited [ i ] [ j ] = 0 ; } } max = solve ( 0 , 0 ) ; printf ( "%d\n" , max ) ; n -- ; } }