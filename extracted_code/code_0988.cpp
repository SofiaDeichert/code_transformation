int n = 0 ; int * * a = NULL ; unsigned long int max ( int i , int j , unsigned long int count ) { unsigned long int count1 = 0 , count2 = 0 ; if ( i == n ) { return count ; } else { count1 = max ( i + 1 , j , count + a [ i ] [ j ] ) ; count2 = max ( i + 1 , j + 1 , count + a [ i ] [ j ] ) ; if ( count1 > count2 ) return count1 ; else return count2 ; } } int main ( ) { int i = 0 , j = 0 , t = 0 ; scanf ( "%d" , & t ) ; while ( t -- != 0 ) { scanf ( "%d" , & n ) ; a = ( int * * ) malloc ( n * sizeof ( int * ) ) ; while ( i < n ) { a [ i ] = ( int * ) malloc ( n * sizeof ( int ) ) ; i ++ ; } i = 0 ; while ( i < n ) { j = 0 ; while ( j <= i ) { scanf ( "%d" , & a [ i ] [ j ] ) ; j ++ ; } i ++ ; } printf ( "%lu" , max ( 0 , 0 , 0 ) ) ; free ( a ) ; } return 0 ; }