int func ( int * arr , int size , int sum , int count , int pos ) { int a , b , c , d ; if ( ( size >= 1 ) && ( size - count > 0 ) ) { sum += arr [ ( ( count ) * ( count + 1 ) / 2 ) + pos - 1 ] ; } count ++ ; if ( ( size - count ) > 0 ) { a = func ( arr , size , sum , count , pos ) ; b = func ( arr , size , sum , count , pos + 1 ) ; } if ( ( size - count ) == 0 ) { return sum ; } if ( a > b ) return a ; else return b ; } int main ( ) { int a , b , c , temp , d = 0 , i , count , j , k , l , pos = 1 ; scanf ( "%d" , & a ) ; int arr [ 50 ] ; for ( i = 0 ; i < a ; i ++ ) { d = 0 ; count = 0 ; scanf ( "%d" , & b ) ; int * arr = ( int * ) malloc ( ( ( b ) * ( b + 1 ) * sizeof ( int ) ) / 2 ) ; for ( j = 1 ; j <= b ; j ++ ) { for ( k = 1 ; k <= j ; k ++ ) { scanf ( "%d" , & arr [ ( ( ( j ) * ( j - 1 ) / 2 ) + k - 1 ) ] ) ; } printf ( "\n" ) ; } for ( j = 1 ; j <= b ; j ++ ) { for ( k = 1 ; k <= j ; k ++ ) { } } k = func ( arr , b , d , count , pos ) ; printf ( "%d\n" , k ) ; } }