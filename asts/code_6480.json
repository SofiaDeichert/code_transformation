{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 1751,
  "text": "char inbuffer [ BS ] ; int incount = 0 ; int bufsize = 0 ; char outBuffer [ BS ] ; int outcount = 0 ; int fastread ( ) { long int r = 0 ; int s = 1 ; while ( 1 ) { if ( incount >= bufsize ) { bufsize = read ( 0 , inbuffer , BS ) ; incount = 0 ; } if ( inbuffer [ incount ] < 48 ) { if ( s ) incount ++ ; else { return r ; } } else { s = 0 ; r = r * 10 + inbuffer [ incount ++ ] - 48 ; } } } void recursiveOutNum ( int num ) { if ( num && num < 10 ) { outBuffer [ outcount ++ ] = '0' + num ; } else { int count = 0 , i ; long int temp ; temp = num ; while ( temp ) { temp = temp / 10 ; count ++ ; } for ( i = outcount + count - 1 ; i >= outcount ; i -- ) { outBuffer [ i ] = '0' + num ; num = num / 10 ; } outcount += count ; } } void flush ( ) { write ( 1 , outBuffer , outcount ) ; outcount = 0 ; } int main ( ) { int n , N ; n = fastread ( ) ; int * array [ 100 ] ; int i = 0 , j , k , l ; int up , left ; while ( i < n ) { N = fastread ( ) ; for ( j = 1 ; j <= N ; j ++ ) { array [ j - 1 ] = ( int * ) malloc ( j * sizeof ( int ) ) ; for ( k = 0 ; k < j ; k ++ ) array [ j - 1 ] [ k ] = fastread ( ) ; } for ( j = 1 ; j < N ; j ++ ) { for ( k = 0 ; k < j ; k ++ ) { if ( k == 0 ) { array [ j ] [ k ] += array [ j - 1 ] [ k ] ; } else if ( k > 0 && k < j - 1 ) { up = array [ j ] [ k ] + array [ j - 1 ] [ k ] ; left = array [ j ] [ k ] + array [ j - 1 ] [ k - 1 ] ; if ( up >= left ) array [ j ] [ k ] = up ; else array [ j ] [ k ] = left ; } else if ( k == j - 1 ) { array [ j ] [ k ] += array [ j - 1 ] [ k - 1 ] ; } } } if ( N > 0 ) { int max = - 1 ; for ( k = 0 ; k < j ; k ++ ) { if ( array [ N - 1 ] [ k ] > max ) max = array [ N - 1 ] [ k ] ; } recursiveOutNum ( max ) ; outBuffer [ outcount ++ ] = '\\n' ; } i ++ ; } flush ( ) ; return 0 ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 22,
      "text": "char inbuffer [ BS ] ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 4,
          "text": "char",
          "children": []
        },
        {
          "type": "array_declarator",
          "start_byte": 5,
          "end_byte": 20,
          "text": "inbuffer [ BS ]",
          "children": [
            {
              "type": "identifier",
              "start_byte": 5,
              "end_byte": 13,
              "text": "inbuffer",
              "children": []
            },
            {
              "type": "[",
              "start_byte": 14,
              "end_byte": 15,
              "text": "[",
              "children": []
            },
            {
              "type": "identifier",
              "start_byte": 16,
              "end_byte": 18,
              "text": "BS",
              "children": []
            },
            {
              "type": "]",
              "start_byte": 19,
              "end_byte": 20,
              "text": "]",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 21,
          "end_byte": 22,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 23,
      "end_byte": 40,
      "text": "int incount = 0 ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 23,
          "end_byte": 26,
          "text": "int",
          "children": []
        },
        {
          "type": "init_declarator",
          "start_byte": 27,
          "end_byte": 38,
          "text": "incount = 0",
          "children": [
            {
              "type": "identifier",
              "start_byte": 27,
              "end_byte": 34,
              "text": "incount",
              "children": []
            },
            {
              "type": "=",
              "start_byte": 35,
              "end_byte": 36,
              "text": "=",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 37,
              "end_byte": 38,
              "text": "0",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 39,
          "end_byte": 40,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 41,
      "end_byte": 58,
      "text": "int bufsize = 0 ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 41,
          "end_byte": 44,
          "text": "int",
          "children": []
        },
        {
          "type": "init_declarator",
          "start_byte": 45,
          "end_byte": 56,
          "text": "bufsize = 0",
          "children": [
            {
              "type": "identifier",
              "start_byte": 45,
              "end_byte": 52,
              "text": "bufsize",
              "children": []
            },
            {
              "type": "=",
              "start_byte": 53,
              "end_byte": 54,
              "text": "=",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 55,
              "end_byte": 56,
              "text": "0",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 57,
          "end_byte": 58,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 59,
      "end_byte": 82,
      "text": "char outBuffer [ BS ] ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 59,
          "end_byte": 63,
          "text": "char",
          "children": []
        },
        {
          "type": "array_declarator",
          "start_byte": 64,
          "end_byte": 80,
          "text": "outBuffer [ BS ]",
          "children": [
            {
              "type": "identifier",
              "start_byte": 64,
              "end_byte": 73,
              "text": "outBuffer",
              "children": []
            },
            {
              "type": "[",
              "start_byte": 74,
              "end_byte": 75,
              "text": "[",
              "children": []
            },
            {
              "type": "identifier",
              "start_byte": 76,
              "end_byte": 78,
              "text": "BS",
              "children": []
            },
            {
              "type": "]",
              "start_byte": 79,
              "end_byte": 80,
              "text": "]",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 81,
          "end_byte": 82,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 83,
      "end_byte": 101,
      "text": "int outcount = 0 ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 83,
          "end_byte": 86,
          "text": "int",
          "children": []
        },
        {
          "type": "init_declarator",
          "start_byte": 87,
          "end_byte": 99,
          "text": "outcount = 0",
          "children": [
            {
              "type": "identifier",
              "start_byte": 87,
              "end_byte": 95,
              "text": "outcount",
              "children": []
            },
            {
              "type": "=",
              "start_byte": 96,
              "end_byte": 97,
              "text": "=",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 98,
              "end_byte": 99,
              "text": "0",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 100,
          "end_byte": 101,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 102,
      "end_byte": 390,
      "text": "int fastread ( ) { long int r = 0 ; int s = 1 ; while ( 1 ) { if ( incount >= bufsize ) { bufsize = read ( 0 , inbuffer , BS ) ; incount = 0 ; } if ( inbuffer [ incount ] < 48 ) { if ( s ) incount ++ ; else { return r ; } } else { s = 0 ; r = r * 10 + inbuffer [ incount ++ ] - 48 ; } } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 102,
          "end_byte": 105,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 106,
          "end_byte": 118,
          "text": "fastread ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 106,
              "end_byte": 114,
              "text": "fastread",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 115,
              "end_byte": 118,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 115,
                  "end_byte": 116,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 117,
                  "end_byte": 118,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 119,
          "end_byte": 390,
          "text": "{ long int r = 0 ; int s = 1 ; while ( 1 ) { if ( incount >= bufsize ) { bufsize = read ( 0 , inbuffer , BS ) ; incount = 0 ; } if ( inbuffer [ incount ] < 48 ) { if ( s ) incount ++ ; else { return r ; } } else { s = 0 ; r = r * 10 + inbuffer [ incount ++ ] - 48 ; } } }",
          "children": [
            {
              "type": "{",
              "start_byte": 119,
              "end_byte": 120,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 121,
              "end_byte": 137,
              "text": "long int r = 0 ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 121,
                  "end_byte": 129,
                  "text": "long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 121,
                      "end_byte": 125,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 126,
                      "end_byte": 129,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "init_declarator",
                  "start_byte": 130,
                  "end_byte": 135,
                  "text": "r = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 130,
                      "end_byte": 131,
                      "text": "r",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 132,
                      "end_byte": 133,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 134,
                      "end_byte": 135,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 136,
                  "end_byte": 137,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 138,
              "end_byte": 149,
              "text": "int s = 1 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 138,
                  "end_byte": 141,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 142,
                  "end_byte": 147,
                  "text": "s = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 142,
                      "end_byte": 143,
                      "text": "s",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 144,
                      "end_byte": 145,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 146,
                      "end_byte": 147,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 148,
                  "end_byte": 149,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 150,
              "end_byte": 388,
              "text": "while ( 1 ) { if ( incount >= bufsize ) { bufsize = read ( 0 , inbuffer , BS ) ; incount = 0 ; } if ( inbuffer [ incount ] < 48 ) { if ( s ) incount ++ ; else { return r ; } } else { s = 0 ; r = r * 10 + inbuffer [ incount ++ ] - 48 ; } }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 150,
                  "end_byte": 155,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 156,
                  "end_byte": 161,
                  "text": "( 1 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 156,
                      "end_byte": 157,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 158,
                      "end_byte": 159,
                      "text": "1",
                      "children": []
                    },
                    {
                      "type": ")",
                      "start_byte": 160,
                      "end_byte": 161,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 162,
                  "end_byte": 388,
                  "text": "{ if ( incount >= bufsize ) { bufsize = read ( 0 , inbuffer , BS ) ; incount = 0 ; } if ( inbuffer [ incount ] < 48 ) { if ( s ) incount ++ ; else { return r ; } } else { s = 0 ; r = r * 10 + inbuffer [ incount ++ ] - 48 ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 162,
                      "end_byte": 163,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 164,
                      "end_byte": 246,
                      "text": "if ( incount >= bufsize ) { bufsize = read ( 0 , inbuffer , BS ) ; incount = 0 ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 164,
                          "end_byte": 166,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 167,
                          "end_byte": 189,
                          "text": "( incount >= bufsize )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 167,
                              "end_byte": 168,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 169,
                              "end_byte": 187,
                              "text": "incount >= bufsize",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 169,
                                  "end_byte": 176,
                                  "text": "incount",
                                  "children": []
                                },
                                {
                                  "type": ">=",
                                  "start_byte": 177,
                                  "end_byte": 179,
                                  "text": ">=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 180,
                                  "end_byte": 187,
                                  "text": "bufsize",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 188,
                              "end_byte": 189,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 190,
                          "end_byte": 246,
                          "text": "{ bufsize = read ( 0 , inbuffer , BS ) ; incount = 0 ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 190,
                              "end_byte": 191,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 192,
                              "end_byte": 230,
                              "text": "bufsize = read ( 0 , inbuffer , BS ) ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 192,
                                  "end_byte": 228,
                                  "text": "bufsize = read ( 0 , inbuffer , BS )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 192,
                                      "end_byte": 199,
                                      "text": "bufsize",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 200,
                                      "end_byte": 201,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 202,
                                      "end_byte": 228,
                                      "text": "read ( 0 , inbuffer , BS )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 202,
                                          "end_byte": 206,
                                          "text": "read",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 207,
                                          "end_byte": 228,
                                          "text": "( 0 , inbuffer , BS )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 207,
                                              "end_byte": 208,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 209,
                                              "end_byte": 210,
                                              "text": "0",
                                              "children": []
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 211,
                                              "end_byte": 212,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 213,
                                              "end_byte": 221,
                                              "text": "inbuffer",
                                              "children": []
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 222,
                                              "end_byte": 223,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 224,
                                              "end_byte": 226,
                                              "text": "BS",
                                              "children": []
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 227,
                                              "end_byte": 228,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 229,
                                  "end_byte": 230,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 231,
                              "end_byte": 244,
                              "text": "incount = 0 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 231,
                                  "end_byte": 242,
                                  "text": "incount = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 231,
                                      "end_byte": 238,
                                      "text": "incount",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 239,
                                      "end_byte": 240,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 241,
                                      "end_byte": 242,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 243,
                                  "end_byte": 244,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 245,
                              "end_byte": 246,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 247,
                      "end_byte": 386,
                      "text": "if ( inbuffer [ incount ] < 48 ) { if ( s ) incount ++ ; else { return r ; } } else { s = 0 ; r = r * 10 + inbuffer [ incount ++ ] - 48 ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 247,
                          "end_byte": 249,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 250,
                          "end_byte": 279,
                          "text": "( inbuffer [ incount ] < 48 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 250,
                              "end_byte": 251,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 252,
                              "end_byte": 277,
                              "text": "inbuffer [ incount ] < 48",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 252,
                                  "end_byte": 272,
                                  "text": "inbuffer [ incount ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 252,
                                      "end_byte": 260,
                                      "text": "inbuffer",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 261,
                                      "end_byte": 272,
                                      "text": "[ incount ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 261,
                                          "end_byte": 262,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 263,
                                          "end_byte": 270,
                                          "text": "incount",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 271,
                                          "end_byte": 272,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "<",
                                  "start_byte": 273,
                                  "end_byte": 274,
                                  "text": "<",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 275,
                                  "end_byte": 277,
                                  "text": "48",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 278,
                              "end_byte": 279,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 280,
                          "end_byte": 325,
                          "text": "{ if ( s ) incount ++ ; else { return r ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 280,
                              "end_byte": 281,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 282,
                              "end_byte": 323,
                              "text": "if ( s ) incount ++ ; else { return r ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 282,
                                  "end_byte": 284,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 285,
                                  "end_byte": 290,
                                  "text": "( s )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 285,
                                      "end_byte": 286,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 287,
                                      "end_byte": 288,
                                      "text": "s",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 289,
                                      "end_byte": 290,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 291,
                                  "end_byte": 303,
                                  "text": "incount ++ ;",
                                  "children": [
                                    {
                                      "type": "update_expression",
                                      "start_byte": 291,
                                      "end_byte": 301,
                                      "text": "incount ++",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 291,
                                          "end_byte": 298,
                                          "text": "incount",
                                          "children": []
                                        },
                                        {
                                          "type": "++",
                                          "start_byte": 299,
                                          "end_byte": 301,
                                          "text": "++",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 302,
                                      "end_byte": 303,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start_byte": 304,
                                  "end_byte": 323,
                                  "text": "else { return r ; }",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start_byte": 304,
                                      "end_byte": 308,
                                      "text": "else",
                                      "children": []
                                    },
                                    {
                                      "type": "compound_statement",
                                      "start_byte": 309,
                                      "end_byte": 323,
                                      "text": "{ return r ; }",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start_byte": 309,
                                          "end_byte": 310,
                                          "text": "{",
                                          "children": []
                                        },
                                        {
                                          "type": "return_statement",
                                          "start_byte": 311,
                                          "end_byte": 321,
                                          "text": "return r ;",
                                          "children": [
                                            {
                                              "type": "return",
                                              "start_byte": 311,
                                              "end_byte": 317,
                                              "text": "return",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 318,
                                              "end_byte": 319,
                                              "text": "r",
                                              "children": []
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 320,
                                              "end_byte": 321,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start_byte": 322,
                                          "end_byte": 323,
                                          "text": "}",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 324,
                              "end_byte": 325,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 326,
                          "end_byte": 386,
                          "text": "else { s = 0 ; r = r * 10 + inbuffer [ incount ++ ] - 48 ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 326,
                              "end_byte": 330,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 331,
                              "end_byte": 386,
                              "text": "{ s = 0 ; r = r * 10 + inbuffer [ incount ++ ] - 48 ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 331,
                                  "end_byte": 332,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 333,
                                  "end_byte": 340,
                                  "text": "s = 0 ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 333,
                                      "end_byte": 338,
                                      "text": "s = 0",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 333,
                                          "end_byte": 334,
                                          "text": "s",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 335,
                                          "end_byte": 336,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 337,
                                          "end_byte": 338,
                                          "text": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 339,
                                      "end_byte": 340,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 341,
                                  "end_byte": 384,
                                  "text": "r = r * 10 + inbuffer [ incount ++ ] - 48 ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 341,
                                      "end_byte": 382,
                                      "text": "r = r * 10 + inbuffer [ incount ++ ] - 48",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 341,
                                          "end_byte": 342,
                                          "text": "r",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 343,
                                          "end_byte": 344,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 345,
                                          "end_byte": 382,
                                          "text": "r * 10 + inbuffer [ incount ++ ] - 48",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 345,
                                              "end_byte": 377,
                                              "text": "r * 10 + inbuffer [ incount ++ ]",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 345,
                                                  "end_byte": 351,
                                                  "text": "r * 10",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 345,
                                                      "end_byte": 346,
                                                      "text": "r",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "*",
                                                      "start_byte": 347,
                                                      "end_byte": 348,
                                                      "text": "*",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 349,
                                                      "end_byte": 351,
                                                      "text": "10",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 352,
                                                  "end_byte": 353,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 354,
                                                  "end_byte": 377,
                                                  "text": "inbuffer [ incount ++ ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 354,
                                                      "end_byte": 362,
                                                      "text": "inbuffer",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 363,
                                                      "end_byte": 377,
                                                      "text": "[ incount ++ ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 363,
                                                          "end_byte": 364,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "update_expression",
                                                          "start_byte": 365,
                                                          "end_byte": 375,
                                                          "text": "incount ++",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 365,
                                                              "end_byte": 372,
                                                              "text": "incount",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "++",
                                                              "start_byte": 373,
                                                              "end_byte": 375,
                                                              "text": "++",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 376,
                                                          "end_byte": 377,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "-",
                                              "start_byte": 378,
                                              "end_byte": 379,
                                              "text": "-",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 380,
                                              "end_byte": 382,
                                              "text": "48",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 383,
                                      "end_byte": 384,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 385,
                                  "end_byte": 386,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 387,
                      "end_byte": 388,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 389,
              "end_byte": 390,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 391,
      "end_byte": 728,
      "text": "void recursiveOutNum ( int num ) { if ( num && num < 10 ) { outBuffer [ outcount ++ ] = '0' + num ; } else { int count = 0 , i ; long int temp ; temp = num ; while ( temp ) { temp = temp / 10 ; count ++ ; } for ( i = outcount + count - 1 ; i >= outcount ; i -- ) { outBuffer [ i ] = '0' + num ; num = num / 10 ; } outcount += count ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 391,
          "end_byte": 395,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 396,
          "end_byte": 423,
          "text": "recursiveOutNum ( int num )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 396,
              "end_byte": 411,
              "text": "recursiveOutNum",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 412,
              "end_byte": 423,
              "text": "( int num )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 412,
                  "end_byte": 413,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 414,
                  "end_byte": 421,
                  "text": "int num",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 414,
                      "end_byte": 417,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 418,
                      "end_byte": 421,
                      "text": "num",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 422,
                  "end_byte": 423,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 424,
          "end_byte": 728,
          "text": "{ if ( num && num < 10 ) { outBuffer [ outcount ++ ] = '0' + num ; } else { int count = 0 , i ; long int temp ; temp = num ; while ( temp ) { temp = temp / 10 ; count ++ ; } for ( i = outcount + count - 1 ; i >= outcount ; i -- ) { outBuffer [ i ] = '0' + num ; num = num / 10 ; } outcount += count ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 424,
              "end_byte": 425,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 426,
              "end_byte": 726,
              "text": "if ( num && num < 10 ) { outBuffer [ outcount ++ ] = '0' + num ; } else { int count = 0 , i ; long int temp ; temp = num ; while ( temp ) { temp = temp / 10 ; count ++ ; } for ( i = outcount + count - 1 ; i >= outcount ; i -- ) { outBuffer [ i ] = '0' + num ; num = num / 10 ; } outcount += count ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 426,
                  "end_byte": 428,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 429,
                  "end_byte": 448,
                  "text": "( num && num < 10 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 429,
                      "end_byte": 430,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 431,
                      "end_byte": 446,
                      "text": "num && num < 10",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 431,
                          "end_byte": 434,
                          "text": "num",
                          "children": []
                        },
                        {
                          "type": "&&",
                          "start_byte": 435,
                          "end_byte": 437,
                          "text": "&&",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 438,
                          "end_byte": 446,
                          "text": "num < 10",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 438,
                              "end_byte": 441,
                              "text": "num",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 442,
                              "end_byte": 443,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 444,
                              "end_byte": 446,
                              "text": "10",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 447,
                      "end_byte": 448,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 449,
                  "end_byte": 492,
                  "text": "{ outBuffer [ outcount ++ ] = '0' + num ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 449,
                      "end_byte": 450,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 451,
                      "end_byte": 490,
                      "text": "outBuffer [ outcount ++ ] = '0' + num ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 451,
                          "end_byte": 488,
                          "text": "outBuffer [ outcount ++ ] = '0' + num",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 451,
                              "end_byte": 476,
                              "text": "outBuffer [ outcount ++ ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 451,
                                  "end_byte": 460,
                                  "text": "outBuffer",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 461,
                                  "end_byte": 476,
                                  "text": "[ outcount ++ ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 461,
                                      "end_byte": 462,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "update_expression",
                                      "start_byte": 463,
                                      "end_byte": 474,
                                      "text": "outcount ++",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 463,
                                          "end_byte": 471,
                                          "text": "outcount",
                                          "children": []
                                        },
                                        {
                                          "type": "++",
                                          "start_byte": 472,
                                          "end_byte": 474,
                                          "text": "++",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 475,
                                      "end_byte": 476,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 477,
                              "end_byte": 478,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 479,
                              "end_byte": 488,
                              "text": "'0' + num",
                              "children": [
                                {
                                  "type": "char_literal",
                                  "start_byte": 479,
                                  "end_byte": 482,
                                  "text": "'0'",
                                  "children": [
                                    {
                                      "type": "'",
                                      "start_byte": 479,
                                      "end_byte": 480,
                                      "text": "'",
                                      "children": []
                                    },
                                    {
                                      "type": "character",
                                      "start_byte": 480,
                                      "end_byte": 481,
                                      "text": "0",
                                      "children": []
                                    },
                                    {
                                      "type": "'",
                                      "start_byte": 481,
                                      "end_byte": 482,
                                      "text": "'",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "+",
                                  "start_byte": 483,
                                  "end_byte": 484,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 485,
                                  "end_byte": 488,
                                  "text": "num",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 489,
                          "end_byte": 490,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 491,
                      "end_byte": 492,
                      "text": "}",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 493,
                  "end_byte": 726,
                  "text": "else { int count = 0 , i ; long int temp ; temp = num ; while ( temp ) { temp = temp / 10 ; count ++ ; } for ( i = outcount + count - 1 ; i >= outcount ; i -- ) { outBuffer [ i ] = '0' + num ; num = num / 10 ; } outcount += count ; }",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 493,
                      "end_byte": 497,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "compound_statement",
                      "start_byte": 498,
                      "end_byte": 726,
                      "text": "{ int count = 0 , i ; long int temp ; temp = num ; while ( temp ) { temp = temp / 10 ; count ++ ; } for ( i = outcount + count - 1 ; i >= outcount ; i -- ) { outBuffer [ i ] = '0' + num ; num = num / 10 ; } outcount += count ; }",
                      "children": [
                        {
                          "type": "{",
                          "start_byte": 498,
                          "end_byte": 499,
                          "text": "{",
                          "children": []
                        },
                        {
                          "type": "declaration",
                          "start_byte": 500,
                          "end_byte": 519,
                          "text": "int count = 0 , i ;",
                          "children": [
                            {
                              "type": "primitive_type",
                              "start_byte": 500,
                              "end_byte": 503,
                              "text": "int",
                              "children": []
                            },
                            {
                              "type": "init_declarator",
                              "start_byte": 504,
                              "end_byte": 513,
                              "text": "count = 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 504,
                                  "end_byte": 509,
                                  "text": "count",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 510,
                                  "end_byte": 511,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 512,
                                  "end_byte": 513,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 514,
                              "end_byte": 515,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 516,
                              "end_byte": 517,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": ";",
                              "start_byte": 518,
                              "end_byte": 519,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "declaration",
                          "start_byte": 520,
                          "end_byte": 535,
                          "text": "long int temp ;",
                          "children": [
                            {
                              "type": "sized_type_specifier",
                              "start_byte": 520,
                              "end_byte": 528,
                              "text": "long int",
                              "children": [
                                {
                                  "type": "long",
                                  "start_byte": 520,
                                  "end_byte": 524,
                                  "text": "long",
                                  "children": []
                                },
                                {
                                  "type": "primitive_type",
                                  "start_byte": 525,
                                  "end_byte": 528,
                                  "text": "int",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "identifier",
                              "start_byte": 529,
                              "end_byte": 533,
                              "text": "temp",
                              "children": []
                            },
                            {
                              "type": ";",
                              "start_byte": 534,
                              "end_byte": 535,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 536,
                          "end_byte": 548,
                          "text": "temp = num ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 536,
                              "end_byte": 546,
                              "text": "temp = num",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 536,
                                  "end_byte": 540,
                                  "text": "temp",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 541,
                                  "end_byte": 542,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 543,
                                  "end_byte": 546,
                                  "text": "num",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 547,
                              "end_byte": 548,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "while_statement",
                          "start_byte": 549,
                          "end_byte": 597,
                          "text": "while ( temp ) { temp = temp / 10 ; count ++ ; }",
                          "children": [
                            {
                              "type": "while",
                              "start_byte": 549,
                              "end_byte": 554,
                              "text": "while",
                              "children": []
                            },
                            {
                              "type": "condition_clause",
                              "start_byte": 555,
                              "end_byte": 563,
                              "text": "( temp )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 555,
                                  "end_byte": 556,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 557,
                                  "end_byte": 561,
                                  "text": "temp",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 562,
                                  "end_byte": 563,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 564,
                              "end_byte": 597,
                              "text": "{ temp = temp / 10 ; count ++ ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 564,
                                  "end_byte": 565,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 566,
                                  "end_byte": 584,
                                  "text": "temp = temp / 10 ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 566,
                                      "end_byte": 582,
                                      "text": "temp = temp / 10",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 566,
                                          "end_byte": 570,
                                          "text": "temp",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 571,
                                          "end_byte": 572,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 573,
                                          "end_byte": 582,
                                          "text": "temp / 10",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 573,
                                              "end_byte": 577,
                                              "text": "temp",
                                              "children": []
                                            },
                                            {
                                              "type": "/",
                                              "start_byte": 578,
                                              "end_byte": 579,
                                              "text": "/",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 580,
                                              "end_byte": 582,
                                              "text": "10",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 583,
                                      "end_byte": 584,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 585,
                                  "end_byte": 595,
                                  "text": "count ++ ;",
                                  "children": [
                                    {
                                      "type": "update_expression",
                                      "start_byte": 585,
                                      "end_byte": 593,
                                      "text": "count ++",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 585,
                                          "end_byte": 590,
                                          "text": "count",
                                          "children": []
                                        },
                                        {
                                          "type": "++",
                                          "start_byte": 591,
                                          "end_byte": 593,
                                          "text": "++",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 594,
                                      "end_byte": 595,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 596,
                                  "end_byte": 597,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "for_statement",
                          "start_byte": 598,
                          "end_byte": 704,
                          "text": "for ( i = outcount + count - 1 ; i >= outcount ; i -- ) { outBuffer [ i ] = '0' + num ; num = num / 10 ; }",
                          "children": [
                            {
                              "type": "for",
                              "start_byte": 598,
                              "end_byte": 601,
                              "text": "for",
                              "children": []
                            },
                            {
                              "type": "(",
                              "start_byte": 602,
                              "end_byte": 603,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "assignment_expression",
                              "start_byte": 604,
                              "end_byte": 628,
                              "text": "i = outcount + count - 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 604,
                                  "end_byte": 605,
                                  "text": "i",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 606,
                                  "end_byte": 607,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 608,
                                  "end_byte": 628,
                                  "text": "outcount + count - 1",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 608,
                                      "end_byte": 624,
                                      "text": "outcount + count",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 608,
                                          "end_byte": 616,
                                          "text": "outcount",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 617,
                                          "end_byte": 618,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 619,
                                          "end_byte": 624,
                                          "text": "count",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "-",
                                      "start_byte": 625,
                                      "end_byte": 626,
                                      "text": "-",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 627,
                                      "end_byte": 628,
                                      "text": "1",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 629,
                              "end_byte": 630,
                              "text": ";",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 631,
                              "end_byte": 644,
                              "text": "i >= outcount",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 631,
                                  "end_byte": 632,
                                  "text": "i",
                                  "children": []
                                },
                                {
                                  "type": ">=",
                                  "start_byte": 633,
                                  "end_byte": 635,
                                  "text": ">=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 636,
                                  "end_byte": 644,
                                  "text": "outcount",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 645,
                              "end_byte": 646,
                              "text": ";",
                              "children": []
                            },
                            {
                              "type": "update_expression",
                              "start_byte": 647,
                              "end_byte": 651,
                              "text": "i --",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 647,
                                  "end_byte": 648,
                                  "text": "i",
                                  "children": []
                                },
                                {
                                  "type": "--",
                                  "start_byte": 649,
                                  "end_byte": 651,
                                  "text": "--",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 652,
                              "end_byte": 653,
                              "text": ")",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 654,
                              "end_byte": 704,
                              "text": "{ outBuffer [ i ] = '0' + num ; num = num / 10 ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 654,
                                  "end_byte": 655,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 656,
                                  "end_byte": 685,
                                  "text": "outBuffer [ i ] = '0' + num ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 656,
                                      "end_byte": 683,
                                      "text": "outBuffer [ i ] = '0' + num",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 656,
                                          "end_byte": 671,
                                          "text": "outBuffer [ i ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 656,
                                              "end_byte": 665,
                                              "text": "outBuffer",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 666,
                                              "end_byte": 671,
                                              "text": "[ i ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 666,
                                                  "end_byte": 667,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 668,
                                                  "end_byte": 669,
                                                  "text": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 670,
                                                  "end_byte": 671,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 672,
                                          "end_byte": 673,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 674,
                                          "end_byte": 683,
                                          "text": "'0' + num",
                                          "children": [
                                            {
                                              "type": "char_literal",
                                              "start_byte": 674,
                                              "end_byte": 677,
                                              "text": "'0'",
                                              "children": [
                                                {
                                                  "type": "'",
                                                  "start_byte": 674,
                                                  "end_byte": 675,
                                                  "text": "'",
                                                  "children": []
                                                },
                                                {
                                                  "type": "character",
                                                  "start_byte": 675,
                                                  "end_byte": 676,
                                                  "text": "0",
                                                  "children": []
                                                },
                                                {
                                                  "type": "'",
                                                  "start_byte": 676,
                                                  "end_byte": 677,
                                                  "text": "'",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 678,
                                              "end_byte": 679,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 680,
                                              "end_byte": 683,
                                              "text": "num",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 684,
                                      "end_byte": 685,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 686,
                                  "end_byte": 702,
                                  "text": "num = num / 10 ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 686,
                                      "end_byte": 700,
                                      "text": "num = num / 10",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 686,
                                          "end_byte": 689,
                                          "text": "num",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 690,
                                          "end_byte": 691,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 692,
                                          "end_byte": 700,
                                          "text": "num / 10",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 692,
                                              "end_byte": 695,
                                              "text": "num",
                                              "children": []
                                            },
                                            {
                                              "type": "/",
                                              "start_byte": 696,
                                              "end_byte": 697,
                                              "text": "/",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 698,
                                              "end_byte": 700,
                                              "text": "10",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 701,
                                      "end_byte": 702,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 703,
                                  "end_byte": 704,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 705,
                          "end_byte": 724,
                          "text": "outcount += count ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 705,
                              "end_byte": 722,
                              "text": "outcount += count",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 705,
                                  "end_byte": 713,
                                  "text": "outcount",
                                  "children": []
                                },
                                {
                                  "type": "+=",
                                  "start_byte": 714,
                                  "end_byte": 716,
                                  "text": "+=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 717,
                                  "end_byte": 722,
                                  "text": "count",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 723,
                              "end_byte": 724,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start_byte": 725,
                          "end_byte": 726,
                          "text": "}",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 727,
              "end_byte": 728,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 729,
      "end_byte": 799,
      "text": "void flush ( ) { write ( 1 , outBuffer , outcount ) ; outcount = 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 729,
          "end_byte": 733,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 734,
          "end_byte": 743,
          "text": "flush ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 734,
              "end_byte": 739,
              "text": "flush",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 740,
              "end_byte": 743,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 740,
                  "end_byte": 741,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 742,
                  "end_byte": 743,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 744,
          "end_byte": 799,
          "text": "{ write ( 1 , outBuffer , outcount ) ; outcount = 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 744,
              "end_byte": 745,
              "text": "{",
              "children": []
            },
            {
              "type": "expression_statement",
              "start_byte": 746,
              "end_byte": 782,
              "text": "write ( 1 , outBuffer , outcount ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 746,
                  "end_byte": 780,
                  "text": "write ( 1 , outBuffer , outcount )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 746,
                      "end_byte": 751,
                      "text": "write",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 752,
                      "end_byte": 780,
                      "text": "( 1 , outBuffer , outcount )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 752,
                          "end_byte": 753,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 754,
                          "end_byte": 755,
                          "text": "1",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 756,
                          "end_byte": 757,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 758,
                          "end_byte": 767,
                          "text": "outBuffer",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 768,
                          "end_byte": 769,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 770,
                          "end_byte": 778,
                          "text": "outcount",
                          "children": []
                        },
                        {
                          "type": ")",
                          "start_byte": 779,
                          "end_byte": 780,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 781,
                  "end_byte": 782,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 783,
              "end_byte": 797,
              "text": "outcount = 0 ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 783,
                  "end_byte": 795,
                  "text": "outcount = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 783,
                      "end_byte": 791,
                      "text": "outcount",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 792,
                      "end_byte": 793,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 794,
                      "end_byte": 795,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 796,
                  "end_byte": 797,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 798,
              "end_byte": 799,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 800,
      "end_byte": 1751,
      "text": "int main ( ) { int n , N ; n = fastread ( ) ; int * array [ 100 ] ; int i = 0 , j , k , l ; int up , left ; while ( i < n ) { N = fastread ( ) ; for ( j = 1 ; j <= N ; j ++ ) { array [ j - 1 ] = ( int * ) malloc ( j * sizeof ( int ) ) ; for ( k = 0 ; k < j ; k ++ ) array [ j - 1 ] [ k ] = fastread ( ) ; } for ( j = 1 ; j < N ; j ++ ) { for ( k = 0 ; k < j ; k ++ ) { if ( k == 0 ) { array [ j ] [ k ] += array [ j - 1 ] [ k ] ; } else if ( k > 0 && k < j - 1 ) { up = array [ j ] [ k ] + array [ j - 1 ] [ k ] ; left = array [ j ] [ k ] + array [ j - 1 ] [ k - 1 ] ; if ( up >= left ) array [ j ] [ k ] = up ; else array [ j ] [ k ] = left ; } else if ( k == j - 1 ) { array [ j ] [ k ] += array [ j - 1 ] [ k - 1 ] ; } } } if ( N > 0 ) { int max = - 1 ; for ( k = 0 ; k < j ; k ++ ) { if ( array [ N - 1 ] [ k ] > max ) max = array [ N - 1 ] [ k ] ; } recursiveOutNum ( max ) ; outBuffer [ outcount ++ ] = '\\n' ; } i ++ ; } flush ( ) ; return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 800,
          "end_byte": 803,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 804,
          "end_byte": 812,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 804,
              "end_byte": 808,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 809,
              "end_byte": 812,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 809,
                  "end_byte": 810,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 811,
                  "end_byte": 812,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 813,
          "end_byte": 1751,
          "text": "{ int n , N ; n = fastread ( ) ; int * array [ 100 ] ; int i = 0 , j , k , l ; int up , left ; while ( i < n ) { N = fastread ( ) ; for ( j = 1 ; j <= N ; j ++ ) { array [ j - 1 ] = ( int * ) malloc ( j * sizeof ( int ) ) ; for ( k = 0 ; k < j ; k ++ ) array [ j - 1 ] [ k ] = fastread ( ) ; } for ( j = 1 ; j < N ; j ++ ) { for ( k = 0 ; k < j ; k ++ ) { if ( k == 0 ) { array [ j ] [ k ] += array [ j - 1 ] [ k ] ; } else if ( k > 0 && k < j - 1 ) { up = array [ j ] [ k ] + array [ j - 1 ] [ k ] ; left = array [ j ] [ k ] + array [ j - 1 ] [ k - 1 ] ; if ( up >= left ) array [ j ] [ k ] = up ; else array [ j ] [ k ] = left ; } else if ( k == j - 1 ) { array [ j ] [ k ] += array [ j - 1 ] [ k - 1 ] ; } } } if ( N > 0 ) { int max = - 1 ; for ( k = 0 ; k < j ; k ++ ) { if ( array [ N - 1 ] [ k ] > max ) max = array [ N - 1 ] [ k ] ; } recursiveOutNum ( max ) ; outBuffer [ outcount ++ ] = '\\n' ; } i ++ ; } flush ( ) ; return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 813,
              "end_byte": 814,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 815,
              "end_byte": 826,
              "text": "int n , N ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 815,
                  "end_byte": 818,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 819,
                  "end_byte": 820,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 821,
                  "end_byte": 822,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 823,
                  "end_byte": 824,
                  "text": "N",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 825,
                  "end_byte": 826,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 827,
              "end_byte": 845,
              "text": "n = fastread ( ) ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 827,
                  "end_byte": 843,
                  "text": "n = fastread ( )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 827,
                      "end_byte": 828,
                      "text": "n",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 829,
                      "end_byte": 830,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 831,
                      "end_byte": 843,
                      "text": "fastread ( )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 831,
                          "end_byte": 839,
                          "text": "fastread",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 840,
                          "end_byte": 843,
                          "text": "( )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 840,
                              "end_byte": 841,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 842,
                              "end_byte": 843,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 844,
                  "end_byte": 845,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 846,
              "end_byte": 867,
              "text": "int * array [ 100 ] ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 846,
                  "end_byte": 849,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "pointer_declarator",
                  "start_byte": 850,
                  "end_byte": 865,
                  "text": "* array [ 100 ]",
                  "children": [
                    {
                      "type": "*",
                      "start_byte": 850,
                      "end_byte": 851,
                      "text": "*",
                      "children": []
                    },
                    {
                      "type": "array_declarator",
                      "start_byte": 852,
                      "end_byte": 865,
                      "text": "array [ 100 ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 852,
                          "end_byte": 857,
                          "text": "array",
                          "children": []
                        },
                        {
                          "type": "[",
                          "start_byte": 858,
                          "end_byte": 859,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 860,
                          "end_byte": 863,
                          "text": "100",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 864,
                          "end_byte": 865,
                          "text": "]",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 866,
                  "end_byte": 867,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 868,
              "end_byte": 891,
              "text": "int i = 0 , j , k , l ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 868,
                  "end_byte": 871,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 872,
                  "end_byte": 877,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 872,
                      "end_byte": 873,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 874,
                      "end_byte": 875,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 876,
                      "end_byte": 877,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 878,
                  "end_byte": 879,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 880,
                  "end_byte": 881,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 882,
                  "end_byte": 883,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 884,
                  "end_byte": 885,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 886,
                  "end_byte": 887,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 888,
                  "end_byte": 889,
                  "text": "l",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 890,
                  "end_byte": 891,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 892,
              "end_byte": 907,
              "text": "int up , left ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 892,
                  "end_byte": 895,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 896,
                  "end_byte": 898,
                  "text": "up",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 899,
                  "end_byte": 900,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 901,
                  "end_byte": 905,
                  "text": "left",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 906,
                  "end_byte": 907,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 908,
              "end_byte": 1726,
              "text": "while ( i < n ) { N = fastread ( ) ; for ( j = 1 ; j <= N ; j ++ ) { array [ j - 1 ] = ( int * ) malloc ( j * sizeof ( int ) ) ; for ( k = 0 ; k < j ; k ++ ) array [ j - 1 ] [ k ] = fastread ( ) ; } for ( j = 1 ; j < N ; j ++ ) { for ( k = 0 ; k < j ; k ++ ) { if ( k == 0 ) { array [ j ] [ k ] += array [ j - 1 ] [ k ] ; } else if ( k > 0 && k < j - 1 ) { up = array [ j ] [ k ] + array [ j - 1 ] [ k ] ; left = array [ j ] [ k ] + array [ j - 1 ] [ k - 1 ] ; if ( up >= left ) array [ j ] [ k ] = up ; else array [ j ] [ k ] = left ; } else if ( k == j - 1 ) { array [ j ] [ k ] += array [ j - 1 ] [ k - 1 ] ; } } } if ( N > 0 ) { int max = - 1 ; for ( k = 0 ; k < j ; k ++ ) { if ( array [ N - 1 ] [ k ] > max ) max = array [ N - 1 ] [ k ] ; } recursiveOutNum ( max ) ; outBuffer [ outcount ++ ] = '\\n' ; } i ++ ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 908,
                  "end_byte": 913,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 914,
                  "end_byte": 923,
                  "text": "( i < n )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 914,
                      "end_byte": 915,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 916,
                      "end_byte": 921,
                      "text": "i < n",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 916,
                          "end_byte": 917,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": "<",
                          "start_byte": 918,
                          "end_byte": 919,
                          "text": "<",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 920,
                          "end_byte": 921,
                          "text": "n",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 922,
                      "end_byte": 923,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 924,
                  "end_byte": 1726,
                  "text": "{ N = fastread ( ) ; for ( j = 1 ; j <= N ; j ++ ) { array [ j - 1 ] = ( int * ) malloc ( j * sizeof ( int ) ) ; for ( k = 0 ; k < j ; k ++ ) array [ j - 1 ] [ k ] = fastread ( ) ; } for ( j = 1 ; j < N ; j ++ ) { for ( k = 0 ; k < j ; k ++ ) { if ( k == 0 ) { array [ j ] [ k ] += array [ j - 1 ] [ k ] ; } else if ( k > 0 && k < j - 1 ) { up = array [ j ] [ k ] + array [ j - 1 ] [ k ] ; left = array [ j ] [ k ] + array [ j - 1 ] [ k - 1 ] ; if ( up >= left ) array [ j ] [ k ] = up ; else array [ j ] [ k ] = left ; } else if ( k == j - 1 ) { array [ j ] [ k ] += array [ j - 1 ] [ k - 1 ] ; } } } if ( N > 0 ) { int max = - 1 ; for ( k = 0 ; k < j ; k ++ ) { if ( array [ N - 1 ] [ k ] > max ) max = array [ N - 1 ] [ k ] ; } recursiveOutNum ( max ) ; outBuffer [ outcount ++ ] = '\\n' ; } i ++ ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 924,
                      "end_byte": 925,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 926,
                      "end_byte": 944,
                      "text": "N = fastread ( ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 926,
                          "end_byte": 942,
                          "text": "N = fastread ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 926,
                              "end_byte": 927,
                              "text": "N",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 928,
                              "end_byte": 929,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 930,
                              "end_byte": 942,
                              "text": "fastread ( )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 930,
                                  "end_byte": 938,
                                  "text": "fastread",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 939,
                                  "end_byte": 942,
                                  "text": "( )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 939,
                                      "end_byte": 940,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 941,
                                      "end_byte": 942,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 943,
                          "end_byte": 944,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 945,
                      "end_byte": 1106,
                      "text": "for ( j = 1 ; j <= N ; j ++ ) { array [ j - 1 ] = ( int * ) malloc ( j * sizeof ( int ) ) ; for ( k = 0 ; k < j ; k ++ ) array [ j - 1 ] [ k ] = fastread ( ) ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 945,
                          "end_byte": 948,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 949,
                          "end_byte": 950,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 951,
                          "end_byte": 956,
                          "text": "j = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 951,
                              "end_byte": 952,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 953,
                              "end_byte": 954,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 955,
                              "end_byte": 956,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 957,
                          "end_byte": 958,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 959,
                          "end_byte": 965,
                          "text": "j <= N",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 959,
                              "end_byte": 960,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 961,
                              "end_byte": 963,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 964,
                              "end_byte": 965,
                              "text": "N",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 966,
                          "end_byte": 967,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 968,
                          "end_byte": 972,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 968,
                              "end_byte": 969,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 970,
                              "end_byte": 972,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 973,
                          "end_byte": 974,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 975,
                          "end_byte": 1106,
                          "text": "{ array [ j - 1 ] = ( int * ) malloc ( j * sizeof ( int ) ) ; for ( k = 0 ; k < j ; k ++ ) array [ j - 1 ] [ k ] = fastread ( ) ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 975,
                              "end_byte": 976,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 977,
                              "end_byte": 1036,
                              "text": "array [ j - 1 ] = ( int * ) malloc ( j * sizeof ( int ) ) ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 977,
                                  "end_byte": 1034,
                                  "text": "array [ j - 1 ] = ( int * ) malloc ( j * sizeof ( int ) )",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 977,
                                      "end_byte": 992,
                                      "text": "array [ j - 1 ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 977,
                                          "end_byte": 982,
                                          "text": "array",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 983,
                                          "end_byte": 992,
                                          "text": "[ j - 1 ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 983,
                                              "end_byte": 984,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 985,
                                              "end_byte": 990,
                                              "text": "j - 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 985,
                                                  "end_byte": 986,
                                                  "text": "j",
                                                  "children": []
                                                },
                                                {
                                                  "type": "-",
                                                  "start_byte": 987,
                                                  "end_byte": 988,
                                                  "text": "-",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 989,
                                                  "end_byte": 990,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 991,
                                              "end_byte": 992,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 993,
                                      "end_byte": 994,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "cast_expression",
                                      "start_byte": 995,
                                      "end_byte": 1034,
                                      "text": "( int * ) malloc ( j * sizeof ( int ) )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 995,
                                          "end_byte": 996,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "type_descriptor",
                                          "start_byte": 997,
                                          "end_byte": 1002,
                                          "text": "int *",
                                          "children": [
                                            {
                                              "type": "primitive_type",
                                              "start_byte": 997,
                                              "end_byte": 1000,
                                              "text": "int",
                                              "children": []
                                            },
                                            {
                                              "type": "abstract_pointer_declarator",
                                              "start_byte": 1001,
                                              "end_byte": 1002,
                                              "text": "*",
                                              "children": [
                                                {
                                                  "type": "*",
                                                  "start_byte": 1001,
                                                  "end_byte": 1002,
                                                  "text": "*",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 1003,
                                          "end_byte": 1004,
                                          "text": ")",
                                          "children": []
                                        },
                                        {
                                          "type": "call_expression",
                                          "start_byte": 1005,
                                          "end_byte": 1034,
                                          "text": "malloc ( j * sizeof ( int ) )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1005,
                                              "end_byte": 1011,
                                              "text": "malloc",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 1012,
                                              "end_byte": 1034,
                                              "text": "( j * sizeof ( int ) )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 1012,
                                                  "end_byte": 1013,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 1014,
                                                  "end_byte": 1032,
                                                  "text": "j * sizeof ( int )",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 1014,
                                                      "end_byte": 1015,
                                                      "text": "j",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "*",
                                                      "start_byte": 1016,
                                                      "end_byte": 1017,
                                                      "text": "*",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "sizeof_expression",
                                                      "start_byte": 1018,
                                                      "end_byte": 1032,
                                                      "text": "sizeof ( int )",
                                                      "children": [
                                                        {
                                                          "type": "sizeof",
                                                          "start_byte": 1018,
                                                          "end_byte": 1024,
                                                          "text": "sizeof",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "(",
                                                          "start_byte": 1025,
                                                          "end_byte": 1026,
                                                          "text": "(",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "type_descriptor",
                                                          "start_byte": 1027,
                                                          "end_byte": 1030,
                                                          "text": "int",
                                                          "children": [
                                                            {
                                                              "type": "primitive_type",
                                                              "start_byte": 1027,
                                                              "end_byte": 1030,
                                                              "text": "int",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start_byte": 1031,
                                                          "end_byte": 1032,
                                                          "text": ")",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 1033,
                                                  "end_byte": 1034,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1035,
                                  "end_byte": 1036,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 1037,
                              "end_byte": 1104,
                              "text": "for ( k = 0 ; k < j ; k ++ ) array [ j - 1 ] [ k ] = fastread ( ) ;",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 1037,
                                  "end_byte": 1040,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 1041,
                                  "end_byte": 1042,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1043,
                                  "end_byte": 1048,
                                  "text": "k = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1043,
                                      "end_byte": 1044,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1045,
                                      "end_byte": 1046,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 1047,
                                      "end_byte": 1048,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1049,
                                  "end_byte": 1050,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 1051,
                                  "end_byte": 1056,
                                  "text": "k < j",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1051,
                                      "end_byte": 1052,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "<",
                                      "start_byte": 1053,
                                      "end_byte": 1054,
                                      "text": "<",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 1055,
                                      "end_byte": 1056,
                                      "text": "j",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1057,
                                  "end_byte": 1058,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 1059,
                                  "end_byte": 1063,
                                  "text": "k ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1059,
                                      "end_byte": 1060,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 1061,
                                      "end_byte": 1063,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1064,
                                  "end_byte": 1065,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 1066,
                                  "end_byte": 1104,
                                  "text": "array [ j - 1 ] [ k ] = fastread ( ) ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 1066,
                                      "end_byte": 1102,
                                      "text": "array [ j - 1 ] [ k ] = fastread ( )",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 1066,
                                          "end_byte": 1087,
                                          "text": "array [ j - 1 ] [ k ]",
                                          "children": [
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 1066,
                                              "end_byte": 1081,
                                              "text": "array [ j - 1 ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1066,
                                                  "end_byte": 1071,
                                                  "text": "array",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 1072,
                                                  "end_byte": 1081,
                                                  "text": "[ j - 1 ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 1072,
                                                      "end_byte": 1073,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 1074,
                                                      "end_byte": 1079,
                                                      "text": "j - 1",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 1074,
                                                          "end_byte": 1075,
                                                          "text": "j",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "-",
                                                          "start_byte": 1076,
                                                          "end_byte": 1077,
                                                          "text": "-",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "number_literal",
                                                          "start_byte": 1078,
                                                          "end_byte": 1079,
                                                          "text": "1",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 1080,
                                                      "end_byte": 1081,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 1082,
                                              "end_byte": 1087,
                                              "text": "[ k ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 1082,
                                                  "end_byte": 1083,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1084,
                                                  "end_byte": 1085,
                                                  "text": "k",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 1086,
                                                  "end_byte": 1087,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 1088,
                                          "end_byte": 1089,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "call_expression",
                                          "start_byte": 1090,
                                          "end_byte": 1102,
                                          "text": "fastread ( )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1090,
                                              "end_byte": 1098,
                                              "text": "fastread",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 1099,
                                              "end_byte": 1102,
                                              "text": "( )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 1099,
                                                  "end_byte": 1100,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 1101,
                                                  "end_byte": 1102,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 1103,
                                      "end_byte": 1104,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 1105,
                              "end_byte": 1106,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 1107,
                      "end_byte": 1525,
                      "text": "for ( j = 1 ; j < N ; j ++ ) { for ( k = 0 ; k < j ; k ++ ) { if ( k == 0 ) { array [ j ] [ k ] += array [ j - 1 ] [ k ] ; } else if ( k > 0 && k < j - 1 ) { up = array [ j ] [ k ] + array [ j - 1 ] [ k ] ; left = array [ j ] [ k ] + array [ j - 1 ] [ k - 1 ] ; if ( up >= left ) array [ j ] [ k ] = up ; else array [ j ] [ k ] = left ; } else if ( k == j - 1 ) { array [ j ] [ k ] += array [ j - 1 ] [ k - 1 ] ; } } }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 1107,
                          "end_byte": 1110,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 1111,
                          "end_byte": 1112,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 1113,
                          "end_byte": 1118,
                          "text": "j = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1113,
                              "end_byte": 1114,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 1115,
                              "end_byte": 1116,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 1117,
                              "end_byte": 1118,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1119,
                          "end_byte": 1120,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 1121,
                          "end_byte": 1126,
                          "text": "j < N",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1121,
                              "end_byte": 1122,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 1123,
                              "end_byte": 1124,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 1125,
                              "end_byte": 1126,
                              "text": "N",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1127,
                          "end_byte": 1128,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 1129,
                          "end_byte": 1133,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1129,
                              "end_byte": 1130,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 1131,
                              "end_byte": 1133,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 1134,
                          "end_byte": 1135,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 1136,
                          "end_byte": 1525,
                          "text": "{ for ( k = 0 ; k < j ; k ++ ) { if ( k == 0 ) { array [ j ] [ k ] += array [ j - 1 ] [ k ] ; } else if ( k > 0 && k < j - 1 ) { up = array [ j ] [ k ] + array [ j - 1 ] [ k ] ; left = array [ j ] [ k ] + array [ j - 1 ] [ k - 1 ] ; if ( up >= left ) array [ j ] [ k ] = up ; else array [ j ] [ k ] = left ; } else if ( k == j - 1 ) { array [ j ] [ k ] += array [ j - 1 ] [ k - 1 ] ; } } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 1136,
                              "end_byte": 1137,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 1138,
                              "end_byte": 1523,
                              "text": "for ( k = 0 ; k < j ; k ++ ) { if ( k == 0 ) { array [ j ] [ k ] += array [ j - 1 ] [ k ] ; } else if ( k > 0 && k < j - 1 ) { up = array [ j ] [ k ] + array [ j - 1 ] [ k ] ; left = array [ j ] [ k ] + array [ j - 1 ] [ k - 1 ] ; if ( up >= left ) array [ j ] [ k ] = up ; else array [ j ] [ k ] = left ; } else if ( k == j - 1 ) { array [ j ] [ k ] += array [ j - 1 ] [ k - 1 ] ; } }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 1138,
                                  "end_byte": 1141,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 1142,
                                  "end_byte": 1143,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1144,
                                  "end_byte": 1149,
                                  "text": "k = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1144,
                                      "end_byte": 1145,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1146,
                                      "end_byte": 1147,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 1148,
                                      "end_byte": 1149,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1150,
                                  "end_byte": 1151,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 1152,
                                  "end_byte": 1157,
                                  "text": "k < j",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1152,
                                      "end_byte": 1153,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "<",
                                      "start_byte": 1154,
                                      "end_byte": 1155,
                                      "text": "<",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 1156,
                                      "end_byte": 1157,
                                      "text": "j",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1158,
                                  "end_byte": 1159,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 1160,
                                  "end_byte": 1164,
                                  "text": "k ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1160,
                                      "end_byte": 1161,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 1162,
                                      "end_byte": 1164,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1165,
                                  "end_byte": 1166,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 1167,
                                  "end_byte": 1523,
                                  "text": "{ if ( k == 0 ) { array [ j ] [ k ] += array [ j - 1 ] [ k ] ; } else if ( k > 0 && k < j - 1 ) { up = array [ j ] [ k ] + array [ j - 1 ] [ k ] ; left = array [ j ] [ k ] + array [ j - 1 ] [ k - 1 ] ; if ( up >= left ) array [ j ] [ k ] = up ; else array [ j ] [ k ] = left ; } else if ( k == j - 1 ) { array [ j ] [ k ] += array [ j - 1 ] [ k - 1 ] ; } }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 1167,
                                      "end_byte": 1168,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 1169,
                                      "end_byte": 1521,
                                      "text": "if ( k == 0 ) { array [ j ] [ k ] += array [ j - 1 ] [ k ] ; } else if ( k > 0 && k < j - 1 ) { up = array [ j ] [ k ] + array [ j - 1 ] [ k ] ; left = array [ j ] [ k ] + array [ j - 1 ] [ k - 1 ] ; if ( up >= left ) array [ j ] [ k ] = up ; else array [ j ] [ k ] = left ; } else if ( k == j - 1 ) { array [ j ] [ k ] += array [ j - 1 ] [ k - 1 ] ; }",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 1169,
                                          "end_byte": 1171,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 1172,
                                          "end_byte": 1182,
                                          "text": "( k == 0 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 1172,
                                              "end_byte": 1173,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 1174,
                                              "end_byte": 1180,
                                              "text": "k == 0",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1174,
                                                  "end_byte": 1175,
                                                  "text": "k",
                                                  "children": []
                                                },
                                                {
                                                  "type": "==",
                                                  "start_byte": 1176,
                                                  "end_byte": 1178,
                                                  "text": "==",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 1179,
                                                  "end_byte": 1180,
                                                  "text": "0",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 1181,
                                              "end_byte": 1182,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "compound_statement",
                                          "start_byte": 1183,
                                          "end_byte": 1231,
                                          "text": "{ array [ j ] [ k ] += array [ j - 1 ] [ k ] ; }",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start_byte": 1183,
                                              "end_byte": 1184,
                                              "text": "{",
                                              "children": []
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 1185,
                                              "end_byte": 1229,
                                              "text": "array [ j ] [ k ] += array [ j - 1 ] [ k ] ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 1185,
                                                  "end_byte": 1227,
                                                  "text": "array [ j ] [ k ] += array [ j - 1 ] [ k ]",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 1185,
                                                      "end_byte": 1202,
                                                      "text": "array [ j ] [ k ]",
                                                      "children": [
                                                        {
                                                          "type": "subscript_expression",
                                                          "start_byte": 1185,
                                                          "end_byte": 1196,
                                                          "text": "array [ j ]",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 1185,
                                                              "end_byte": 1190,
                                                              "text": "array",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "subscript_argument_list",
                                                              "start_byte": 1191,
                                                              "end_byte": 1196,
                                                              "text": "[ j ]",
                                                              "children": [
                                                                {
                                                                  "type": "[",
                                                                  "start_byte": 1191,
                                                                  "end_byte": 1192,
                                                                  "text": "[",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 1193,
                                                                  "end_byte": 1194,
                                                                  "text": "j",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "]",
                                                                  "start_byte": 1195,
                                                                  "end_byte": 1196,
                                                                  "text": "]",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 1197,
                                                          "end_byte": 1202,
                                                          "text": "[ k ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 1197,
                                                              "end_byte": 1198,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 1199,
                                                              "end_byte": 1200,
                                                              "text": "k",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 1201,
                                                              "end_byte": 1202,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "+=",
                                                      "start_byte": 1203,
                                                      "end_byte": 1205,
                                                      "text": "+=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 1206,
                                                      "end_byte": 1227,
                                                      "text": "array [ j - 1 ] [ k ]",
                                                      "children": [
                                                        {
                                                          "type": "subscript_expression",
                                                          "start_byte": 1206,
                                                          "end_byte": 1221,
                                                          "text": "array [ j - 1 ]",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 1206,
                                                              "end_byte": 1211,
                                                              "text": "array",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "subscript_argument_list",
                                                              "start_byte": 1212,
                                                              "end_byte": 1221,
                                                              "text": "[ j - 1 ]",
                                                              "children": [
                                                                {
                                                                  "type": "[",
                                                                  "start_byte": 1212,
                                                                  "end_byte": 1213,
                                                                  "text": "[",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "binary_expression",
                                                                  "start_byte": 1214,
                                                                  "end_byte": 1219,
                                                                  "text": "j - 1",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 1214,
                                                                      "end_byte": 1215,
                                                                      "text": "j",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "-",
                                                                      "start_byte": 1216,
                                                                      "end_byte": 1217,
                                                                      "text": "-",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "number_literal",
                                                                      "start_byte": 1218,
                                                                      "end_byte": 1219,
                                                                      "text": "1",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "]",
                                                                  "start_byte": 1220,
                                                                  "end_byte": 1221,
                                                                  "text": "]",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 1222,
                                                          "end_byte": 1227,
                                                          "text": "[ k ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 1222,
                                                              "end_byte": 1223,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 1224,
                                                              "end_byte": 1225,
                                                              "text": "k",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 1226,
                                                              "end_byte": 1227,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 1228,
                                                  "end_byte": 1229,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start_byte": 1230,
                                              "end_byte": 1231,
                                              "text": "}",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "else_clause",
                                          "start_byte": 1232,
                                          "end_byte": 1521,
                                          "text": "else if ( k > 0 && k < j - 1 ) { up = array [ j ] [ k ] + array [ j - 1 ] [ k ] ; left = array [ j ] [ k ] + array [ j - 1 ] [ k - 1 ] ; if ( up >= left ) array [ j ] [ k ] = up ; else array [ j ] [ k ] = left ; } else if ( k == j - 1 ) { array [ j ] [ k ] += array [ j - 1 ] [ k - 1 ] ; }",
                                          "children": [
                                            {
                                              "type": "else",
                                              "start_byte": 1232,
                                              "end_byte": 1236,
                                              "text": "else",
                                              "children": []
                                            },
                                            {
                                              "type": "if_statement",
                                              "start_byte": 1237,
                                              "end_byte": 1521,
                                              "text": "if ( k > 0 && k < j - 1 ) { up = array [ j ] [ k ] + array [ j - 1 ] [ k ] ; left = array [ j ] [ k ] + array [ j - 1 ] [ k - 1 ] ; if ( up >= left ) array [ j ] [ k ] = up ; else array [ j ] [ k ] = left ; } else if ( k == j - 1 ) { array [ j ] [ k ] += array [ j - 1 ] [ k - 1 ] ; }",
                                              "children": [
                                                {
                                                  "type": "if",
                                                  "start_byte": 1237,
                                                  "end_byte": 1239,
                                                  "text": "if",
                                                  "children": []
                                                },
                                                {
                                                  "type": "condition_clause",
                                                  "start_byte": 1240,
                                                  "end_byte": 1262,
                                                  "text": "( k > 0 && k < j - 1 )",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start_byte": 1240,
                                                      "end_byte": 1241,
                                                      "text": "(",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 1242,
                                                      "end_byte": 1260,
                                                      "text": "k > 0 && k < j - 1",
                                                      "children": [
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 1242,
                                                          "end_byte": 1247,
                                                          "text": "k > 0",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 1242,
                                                              "end_byte": 1243,
                                                              "text": "k",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": ">",
                                                              "start_byte": 1244,
                                                              "end_byte": 1245,
                                                              "text": ">",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "number_literal",
                                                              "start_byte": 1246,
                                                              "end_byte": 1247,
                                                              "text": "0",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "&&",
                                                          "start_byte": 1248,
                                                          "end_byte": 1250,
                                                          "text": "&&",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 1251,
                                                          "end_byte": 1260,
                                                          "text": "k < j - 1",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 1251,
                                                              "end_byte": 1252,
                                                              "text": "k",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "<",
                                                              "start_byte": 1253,
                                                              "end_byte": 1254,
                                                              "text": "<",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 1255,
                                                              "end_byte": 1260,
                                                              "text": "j - 1",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 1255,
                                                                  "end_byte": 1256,
                                                                  "text": "j",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "-",
                                                                  "start_byte": 1257,
                                                                  "end_byte": 1258,
                                                                  "text": "-",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "number_literal",
                                                                  "start_byte": 1259,
                                                                  "end_byte": 1260,
                                                                  "text": "1",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start_byte": 1261,
                                                      "end_byte": 1262,
                                                      "text": ")",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "compound_statement",
                                                  "start_byte": 1263,
                                                  "end_byte": 1445,
                                                  "text": "{ up = array [ j ] [ k ] + array [ j - 1 ] [ k ] ; left = array [ j ] [ k ] + array [ j - 1 ] [ k - 1 ] ; if ( up >= left ) array [ j ] [ k ] = up ; else array [ j ] [ k ] = left ; }",
                                                  "children": [
                                                    {
                                                      "type": "{",
                                                      "start_byte": 1263,
                                                      "end_byte": 1264,
                                                      "text": "{",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "expression_statement",
                                                      "start_byte": 1265,
                                                      "end_byte": 1313,
                                                      "text": "up = array [ j ] [ k ] + array [ j - 1 ] [ k ] ;",
                                                      "children": [
                                                        {
                                                          "type": "assignment_expression",
                                                          "start_byte": 1265,
                                                          "end_byte": 1311,
                                                          "text": "up = array [ j ] [ k ] + array [ j - 1 ] [ k ]",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 1265,
                                                              "end_byte": 1267,
                                                              "text": "up",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "=",
                                                              "start_byte": 1268,
                                                              "end_byte": 1269,
                                                              "text": "=",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 1270,
                                                              "end_byte": 1311,
                                                              "text": "array [ j ] [ k ] + array [ j - 1 ] [ k ]",
                                                              "children": [
                                                                {
                                                                  "type": "subscript_expression",
                                                                  "start_byte": 1270,
                                                                  "end_byte": 1287,
                                                                  "text": "array [ j ] [ k ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "subscript_expression",
                                                                      "start_byte": 1270,
                                                                      "end_byte": 1281,
                                                                      "text": "array [ j ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 1270,
                                                                          "end_byte": 1275,
                                                                          "text": "array",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "subscript_argument_list",
                                                                          "start_byte": 1276,
                                                                          "end_byte": 1281,
                                                                          "text": "[ j ]",
                                                                          "children": [
                                                                            {
                                                                              "type": "[",
                                                                              "start_byte": 1276,
                                                                              "end_byte": 1277,
                                                                              "text": "[",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "identifier",
                                                                              "start_byte": 1278,
                                                                              "end_byte": 1279,
                                                                              "text": "j",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "]",
                                                                              "start_byte": 1280,
                                                                              "end_byte": 1281,
                                                                              "text": "]",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "subscript_argument_list",
                                                                      "start_byte": 1282,
                                                                      "end_byte": 1287,
                                                                      "text": "[ k ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "[",
                                                                          "start_byte": 1282,
                                                                          "end_byte": 1283,
                                                                          "text": "[",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 1284,
                                                                          "end_byte": 1285,
                                                                          "text": "k",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "]",
                                                                          "start_byte": 1286,
                                                                          "end_byte": 1287,
                                                                          "text": "]",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "+",
                                                                  "start_byte": 1288,
                                                                  "end_byte": 1289,
                                                                  "text": "+",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "subscript_expression",
                                                                  "start_byte": 1290,
                                                                  "end_byte": 1311,
                                                                  "text": "array [ j - 1 ] [ k ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "subscript_expression",
                                                                      "start_byte": 1290,
                                                                      "end_byte": 1305,
                                                                      "text": "array [ j - 1 ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 1290,
                                                                          "end_byte": 1295,
                                                                          "text": "array",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "subscript_argument_list",
                                                                          "start_byte": 1296,
                                                                          "end_byte": 1305,
                                                                          "text": "[ j - 1 ]",
                                                                          "children": [
                                                                            {
                                                                              "type": "[",
                                                                              "start_byte": 1296,
                                                                              "end_byte": 1297,
                                                                              "text": "[",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "binary_expression",
                                                                              "start_byte": 1298,
                                                                              "end_byte": 1303,
                                                                              "text": "j - 1",
                                                                              "children": [
                                                                                {
                                                                                  "type": "identifier",
                                                                                  "start_byte": 1298,
                                                                                  "end_byte": 1299,
                                                                                  "text": "j",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "-",
                                                                                  "start_byte": 1300,
                                                                                  "end_byte": 1301,
                                                                                  "text": "-",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "number_literal",
                                                                                  "start_byte": 1302,
                                                                                  "end_byte": 1303,
                                                                                  "text": "1",
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "]",
                                                                              "start_byte": 1304,
                                                                              "end_byte": 1305,
                                                                              "text": "]",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "subscript_argument_list",
                                                                      "start_byte": 1306,
                                                                      "end_byte": 1311,
                                                                      "text": "[ k ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "[",
                                                                          "start_byte": 1306,
                                                                          "end_byte": 1307,
                                                                          "text": "[",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 1308,
                                                                          "end_byte": 1309,
                                                                          "text": "k",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "]",
                                                                          "start_byte": 1310,
                                                                          "end_byte": 1311,
                                                                          "text": "]",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ";",
                                                          "start_byte": 1312,
                                                          "end_byte": 1313,
                                                          "text": ";",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "expression_statement",
                                                      "start_byte": 1314,
                                                      "end_byte": 1368,
                                                      "text": "left = array [ j ] [ k ] + array [ j - 1 ] [ k - 1 ] ;",
                                                      "children": [
                                                        {
                                                          "type": "assignment_expression",
                                                          "start_byte": 1314,
                                                          "end_byte": 1366,
                                                          "text": "left = array [ j ] [ k ] + array [ j - 1 ] [ k - 1 ]",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 1314,
                                                              "end_byte": 1318,
                                                              "text": "left",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "=",
                                                              "start_byte": 1319,
                                                              "end_byte": 1320,
                                                              "text": "=",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 1321,
                                                              "end_byte": 1366,
                                                              "text": "array [ j ] [ k ] + array [ j - 1 ] [ k - 1 ]",
                                                              "children": [
                                                                {
                                                                  "type": "subscript_expression",
                                                                  "start_byte": 1321,
                                                                  "end_byte": 1338,
                                                                  "text": "array [ j ] [ k ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "subscript_expression",
                                                                      "start_byte": 1321,
                                                                      "end_byte": 1332,
                                                                      "text": "array [ j ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 1321,
                                                                          "end_byte": 1326,
                                                                          "text": "array",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "subscript_argument_list",
                                                                          "start_byte": 1327,
                                                                          "end_byte": 1332,
                                                                          "text": "[ j ]",
                                                                          "children": [
                                                                            {
                                                                              "type": "[",
                                                                              "start_byte": 1327,
                                                                              "end_byte": 1328,
                                                                              "text": "[",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "identifier",
                                                                              "start_byte": 1329,
                                                                              "end_byte": 1330,
                                                                              "text": "j",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "]",
                                                                              "start_byte": 1331,
                                                                              "end_byte": 1332,
                                                                              "text": "]",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "subscript_argument_list",
                                                                      "start_byte": 1333,
                                                                      "end_byte": 1338,
                                                                      "text": "[ k ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "[",
                                                                          "start_byte": 1333,
                                                                          "end_byte": 1334,
                                                                          "text": "[",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 1335,
                                                                          "end_byte": 1336,
                                                                          "text": "k",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "]",
                                                                          "start_byte": 1337,
                                                                          "end_byte": 1338,
                                                                          "text": "]",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "+",
                                                                  "start_byte": 1339,
                                                                  "end_byte": 1340,
                                                                  "text": "+",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "subscript_expression",
                                                                  "start_byte": 1341,
                                                                  "end_byte": 1366,
                                                                  "text": "array [ j - 1 ] [ k - 1 ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "subscript_expression",
                                                                      "start_byte": 1341,
                                                                      "end_byte": 1356,
                                                                      "text": "array [ j - 1 ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 1341,
                                                                          "end_byte": 1346,
                                                                          "text": "array",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "subscript_argument_list",
                                                                          "start_byte": 1347,
                                                                          "end_byte": 1356,
                                                                          "text": "[ j - 1 ]",
                                                                          "children": [
                                                                            {
                                                                              "type": "[",
                                                                              "start_byte": 1347,
                                                                              "end_byte": 1348,
                                                                              "text": "[",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "binary_expression",
                                                                              "start_byte": 1349,
                                                                              "end_byte": 1354,
                                                                              "text": "j - 1",
                                                                              "children": [
                                                                                {
                                                                                  "type": "identifier",
                                                                                  "start_byte": 1349,
                                                                                  "end_byte": 1350,
                                                                                  "text": "j",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "-",
                                                                                  "start_byte": 1351,
                                                                                  "end_byte": 1352,
                                                                                  "text": "-",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "number_literal",
                                                                                  "start_byte": 1353,
                                                                                  "end_byte": 1354,
                                                                                  "text": "1",
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "]",
                                                                              "start_byte": 1355,
                                                                              "end_byte": 1356,
                                                                              "text": "]",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "subscript_argument_list",
                                                                      "start_byte": 1357,
                                                                      "end_byte": 1366,
                                                                      "text": "[ k - 1 ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "[",
                                                                          "start_byte": 1357,
                                                                          "end_byte": 1358,
                                                                          "text": "[",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "binary_expression",
                                                                          "start_byte": 1359,
                                                                          "end_byte": 1364,
                                                                          "text": "k - 1",
                                                                          "children": [
                                                                            {
                                                                              "type": "identifier",
                                                                              "start_byte": 1359,
                                                                              "end_byte": 1360,
                                                                              "text": "k",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "-",
                                                                              "start_byte": 1361,
                                                                              "end_byte": 1362,
                                                                              "text": "-",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "number_literal",
                                                                              "start_byte": 1363,
                                                                              "end_byte": 1364,
                                                                              "text": "1",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "]",
                                                                          "start_byte": 1365,
                                                                          "end_byte": 1366,
                                                                          "text": "]",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ";",
                                                          "start_byte": 1367,
                                                          "end_byte": 1368,
                                                          "text": ";",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "if_statement",
                                                      "start_byte": 1369,
                                                      "end_byte": 1443,
                                                      "text": "if ( up >= left ) array [ j ] [ k ] = up ; else array [ j ] [ k ] = left ;",
                                                      "children": [
                                                        {
                                                          "type": "if",
                                                          "start_byte": 1369,
                                                          "end_byte": 1371,
                                                          "text": "if",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "condition_clause",
                                                          "start_byte": 1372,
                                                          "end_byte": 1386,
                                                          "text": "( up >= left )",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start_byte": 1372,
                                                              "end_byte": 1373,
                                                              "text": "(",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 1374,
                                                              "end_byte": 1384,
                                                              "text": "up >= left",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 1374,
                                                                  "end_byte": 1376,
                                                                  "text": "up",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": ">=",
                                                                  "start_byte": 1377,
                                                                  "end_byte": 1379,
                                                                  "text": ">=",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 1380,
                                                                  "end_byte": 1384,
                                                                  "text": "left",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start_byte": 1385,
                                                              "end_byte": 1386,
                                                              "text": ")",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "expression_statement",
                                                          "start_byte": 1387,
                                                          "end_byte": 1411,
                                                          "text": "array [ j ] [ k ] = up ;",
                                                          "children": [
                                                            {
                                                              "type": "assignment_expression",
                                                              "start_byte": 1387,
                                                              "end_byte": 1409,
                                                              "text": "array [ j ] [ k ] = up",
                                                              "children": [
                                                                {
                                                                  "type": "subscript_expression",
                                                                  "start_byte": 1387,
                                                                  "end_byte": 1404,
                                                                  "text": "array [ j ] [ k ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "subscript_expression",
                                                                      "start_byte": 1387,
                                                                      "end_byte": 1398,
                                                                      "text": "array [ j ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 1387,
                                                                          "end_byte": 1392,
                                                                          "text": "array",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "subscript_argument_list",
                                                                          "start_byte": 1393,
                                                                          "end_byte": 1398,
                                                                          "text": "[ j ]",
                                                                          "children": [
                                                                            {
                                                                              "type": "[",
                                                                              "start_byte": 1393,
                                                                              "end_byte": 1394,
                                                                              "text": "[",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "identifier",
                                                                              "start_byte": 1395,
                                                                              "end_byte": 1396,
                                                                              "text": "j",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "]",
                                                                              "start_byte": 1397,
                                                                              "end_byte": 1398,
                                                                              "text": "]",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "subscript_argument_list",
                                                                      "start_byte": 1399,
                                                                      "end_byte": 1404,
                                                                      "text": "[ k ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "[",
                                                                          "start_byte": 1399,
                                                                          "end_byte": 1400,
                                                                          "text": "[",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 1401,
                                                                          "end_byte": 1402,
                                                                          "text": "k",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "]",
                                                                          "start_byte": 1403,
                                                                          "end_byte": 1404,
                                                                          "text": "]",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "=",
                                                                  "start_byte": 1405,
                                                                  "end_byte": 1406,
                                                                  "text": "=",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 1407,
                                                                  "end_byte": 1409,
                                                                  "text": "up",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ";",
                                                              "start_byte": 1410,
                                                              "end_byte": 1411,
                                                              "text": ";",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "else_clause",
                                                          "start_byte": 1412,
                                                          "end_byte": 1443,
                                                          "text": "else array [ j ] [ k ] = left ;",
                                                          "children": [
                                                            {
                                                              "type": "else",
                                                              "start_byte": 1412,
                                                              "end_byte": 1416,
                                                              "text": "else",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "expression_statement",
                                                              "start_byte": 1417,
                                                              "end_byte": 1443,
                                                              "text": "array [ j ] [ k ] = left ;",
                                                              "children": [
                                                                {
                                                                  "type": "assignment_expression",
                                                                  "start_byte": 1417,
                                                                  "end_byte": 1441,
                                                                  "text": "array [ j ] [ k ] = left",
                                                                  "children": [
                                                                    {
                                                                      "type": "subscript_expression",
                                                                      "start_byte": 1417,
                                                                      "end_byte": 1434,
                                                                      "text": "array [ j ] [ k ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "subscript_expression",
                                                                          "start_byte": 1417,
                                                                          "end_byte": 1428,
                                                                          "text": "array [ j ]",
                                                                          "children": [
                                                                            {
                                                                              "type": "identifier",
                                                                              "start_byte": 1417,
                                                                              "end_byte": 1422,
                                                                              "text": "array",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "subscript_argument_list",
                                                                              "start_byte": 1423,
                                                                              "end_byte": 1428,
                                                                              "text": "[ j ]",
                                                                              "children": [
                                                                                {
                                                                                  "type": "[",
                                                                                  "start_byte": 1423,
                                                                                  "end_byte": 1424,
                                                                                  "text": "[",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "identifier",
                                                                                  "start_byte": 1425,
                                                                                  "end_byte": 1426,
                                                                                  "text": "j",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "]",
                                                                                  "start_byte": 1427,
                                                                                  "end_byte": 1428,
                                                                                  "text": "]",
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "subscript_argument_list",
                                                                          "start_byte": 1429,
                                                                          "end_byte": 1434,
                                                                          "text": "[ k ]",
                                                                          "children": [
                                                                            {
                                                                              "type": "[",
                                                                              "start_byte": 1429,
                                                                              "end_byte": 1430,
                                                                              "text": "[",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "identifier",
                                                                              "start_byte": 1431,
                                                                              "end_byte": 1432,
                                                                              "text": "k",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "]",
                                                                              "start_byte": 1433,
                                                                              "end_byte": 1434,
                                                                              "text": "]",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "=",
                                                                      "start_byte": 1435,
                                                                      "end_byte": 1436,
                                                                      "text": "=",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 1437,
                                                                      "end_byte": 1441,
                                                                      "text": "left",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": ";",
                                                                  "start_byte": 1442,
                                                                  "end_byte": 1443,
                                                                  "text": ";",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "}",
                                                      "start_byte": 1444,
                                                      "end_byte": 1445,
                                                      "text": "}",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "else_clause",
                                                  "start_byte": 1446,
                                                  "end_byte": 1521,
                                                  "text": "else if ( k == j - 1 ) { array [ j ] [ k ] += array [ j - 1 ] [ k - 1 ] ; }",
                                                  "children": [
                                                    {
                                                      "type": "else",
                                                      "start_byte": 1446,
                                                      "end_byte": 1450,
                                                      "text": "else",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "if_statement",
                                                      "start_byte": 1451,
                                                      "end_byte": 1521,
                                                      "text": "if ( k == j - 1 ) { array [ j ] [ k ] += array [ j - 1 ] [ k - 1 ] ; }",
                                                      "children": [
                                                        {
                                                          "type": "if",
                                                          "start_byte": 1451,
                                                          "end_byte": 1453,
                                                          "text": "if",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "condition_clause",
                                                          "start_byte": 1454,
                                                          "end_byte": 1468,
                                                          "text": "( k == j - 1 )",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start_byte": 1454,
                                                              "end_byte": 1455,
                                                              "text": "(",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 1456,
                                                              "end_byte": 1466,
                                                              "text": "k == j - 1",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 1456,
                                                                  "end_byte": 1457,
                                                                  "text": "k",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "==",
                                                                  "start_byte": 1458,
                                                                  "end_byte": 1460,
                                                                  "text": "==",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "binary_expression",
                                                                  "start_byte": 1461,
                                                                  "end_byte": 1466,
                                                                  "text": "j - 1",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 1461,
                                                                      "end_byte": 1462,
                                                                      "text": "j",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "-",
                                                                      "start_byte": 1463,
                                                                      "end_byte": 1464,
                                                                      "text": "-",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "number_literal",
                                                                      "start_byte": 1465,
                                                                      "end_byte": 1466,
                                                                      "text": "1",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start_byte": 1467,
                                                              "end_byte": 1468,
                                                              "text": ")",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "compound_statement",
                                                          "start_byte": 1469,
                                                          "end_byte": 1521,
                                                          "text": "{ array [ j ] [ k ] += array [ j - 1 ] [ k - 1 ] ; }",
                                                          "children": [
                                                            {
                                                              "type": "{",
                                                              "start_byte": 1469,
                                                              "end_byte": 1470,
                                                              "text": "{",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "expression_statement",
                                                              "start_byte": 1471,
                                                              "end_byte": 1519,
                                                              "text": "array [ j ] [ k ] += array [ j - 1 ] [ k - 1 ] ;",
                                                              "children": [
                                                                {
                                                                  "type": "assignment_expression",
                                                                  "start_byte": 1471,
                                                                  "end_byte": 1517,
                                                                  "text": "array [ j ] [ k ] += array [ j - 1 ] [ k - 1 ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "subscript_expression",
                                                                      "start_byte": 1471,
                                                                      "end_byte": 1488,
                                                                      "text": "array [ j ] [ k ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "subscript_expression",
                                                                          "start_byte": 1471,
                                                                          "end_byte": 1482,
                                                                          "text": "array [ j ]",
                                                                          "children": [
                                                                            {
                                                                              "type": "identifier",
                                                                              "start_byte": 1471,
                                                                              "end_byte": 1476,
                                                                              "text": "array",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "subscript_argument_list",
                                                                              "start_byte": 1477,
                                                                              "end_byte": 1482,
                                                                              "text": "[ j ]",
                                                                              "children": [
                                                                                {
                                                                                  "type": "[",
                                                                                  "start_byte": 1477,
                                                                                  "end_byte": 1478,
                                                                                  "text": "[",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "identifier",
                                                                                  "start_byte": 1479,
                                                                                  "end_byte": 1480,
                                                                                  "text": "j",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "]",
                                                                                  "start_byte": 1481,
                                                                                  "end_byte": 1482,
                                                                                  "text": "]",
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "subscript_argument_list",
                                                                          "start_byte": 1483,
                                                                          "end_byte": 1488,
                                                                          "text": "[ k ]",
                                                                          "children": [
                                                                            {
                                                                              "type": "[",
                                                                              "start_byte": 1483,
                                                                              "end_byte": 1484,
                                                                              "text": "[",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "identifier",
                                                                              "start_byte": 1485,
                                                                              "end_byte": 1486,
                                                                              "text": "k",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "]",
                                                                              "start_byte": 1487,
                                                                              "end_byte": 1488,
                                                                              "text": "]",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "+=",
                                                                      "start_byte": 1489,
                                                                      "end_byte": 1491,
                                                                      "text": "+=",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "subscript_expression",
                                                                      "start_byte": 1492,
                                                                      "end_byte": 1517,
                                                                      "text": "array [ j - 1 ] [ k - 1 ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "subscript_expression",
                                                                          "start_byte": 1492,
                                                                          "end_byte": 1507,
                                                                          "text": "array [ j - 1 ]",
                                                                          "children": [
                                                                            {
                                                                              "type": "identifier",
                                                                              "start_byte": 1492,
                                                                              "end_byte": 1497,
                                                                              "text": "array",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "subscript_argument_list",
                                                                              "start_byte": 1498,
                                                                              "end_byte": 1507,
                                                                              "text": "[ j - 1 ]",
                                                                              "children": [
                                                                                {
                                                                                  "type": "[",
                                                                                  "start_byte": 1498,
                                                                                  "end_byte": 1499,
                                                                                  "text": "[",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "binary_expression",
                                                                                  "start_byte": 1500,
                                                                                  "end_byte": 1505,
                                                                                  "text": "j - 1",
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "identifier",
                                                                                      "start_byte": 1500,
                                                                                      "end_byte": 1501,
                                                                                      "text": "j",
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "-",
                                                                                      "start_byte": 1502,
                                                                                      "end_byte": 1503,
                                                                                      "text": "-",
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "number_literal",
                                                                                      "start_byte": 1504,
                                                                                      "end_byte": 1505,
                                                                                      "text": "1",
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "]",
                                                                                  "start_byte": 1506,
                                                                                  "end_byte": 1507,
                                                                                  "text": "]",
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "subscript_argument_list",
                                                                          "start_byte": 1508,
                                                                          "end_byte": 1517,
                                                                          "text": "[ k - 1 ]",
                                                                          "children": [
                                                                            {
                                                                              "type": "[",
                                                                              "start_byte": 1508,
                                                                              "end_byte": 1509,
                                                                              "text": "[",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "binary_expression",
                                                                              "start_byte": 1510,
                                                                              "end_byte": 1515,
                                                                              "text": "k - 1",
                                                                              "children": [
                                                                                {
                                                                                  "type": "identifier",
                                                                                  "start_byte": 1510,
                                                                                  "end_byte": 1511,
                                                                                  "text": "k",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "-",
                                                                                  "start_byte": 1512,
                                                                                  "end_byte": 1513,
                                                                                  "text": "-",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "number_literal",
                                                                                  "start_byte": 1514,
                                                                                  "end_byte": 1515,
                                                                                  "text": "1",
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "]",
                                                                              "start_byte": 1516,
                                                                              "end_byte": 1517,
                                                                              "text": "]",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": ";",
                                                                  "start_byte": 1518,
                                                                  "end_byte": 1519,
                                                                  "text": ";",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "}",
                                                              "start_byte": 1520,
                                                              "end_byte": 1521,
                                                              "text": "}",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 1522,
                                      "end_byte": 1523,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 1524,
                              "end_byte": 1525,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 1526,
                      "end_byte": 1717,
                      "text": "if ( N > 0 ) { int max = - 1 ; for ( k = 0 ; k < j ; k ++ ) { if ( array [ N - 1 ] [ k ] > max ) max = array [ N - 1 ] [ k ] ; } recursiveOutNum ( max ) ; outBuffer [ outcount ++ ] = '\\n' ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 1526,
                          "end_byte": 1528,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 1529,
                          "end_byte": 1538,
                          "text": "( N > 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 1529,
                              "end_byte": 1530,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 1531,
                              "end_byte": 1536,
                              "text": "N > 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 1531,
                                  "end_byte": 1532,
                                  "text": "N",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 1533,
                                  "end_byte": 1534,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 1535,
                                  "end_byte": 1536,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 1537,
                              "end_byte": 1538,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 1539,
                          "end_byte": 1717,
                          "text": "{ int max = - 1 ; for ( k = 0 ; k < j ; k ++ ) { if ( array [ N - 1 ] [ k ] > max ) max = array [ N - 1 ] [ k ] ; } recursiveOutNum ( max ) ; outBuffer [ outcount ++ ] = '\\n' ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 1539,
                              "end_byte": 1540,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "declaration",
                              "start_byte": 1541,
                              "end_byte": 1556,
                              "text": "int max = - 1 ;",
                              "children": [
                                {
                                  "type": "primitive_type",
                                  "start_byte": 1541,
                                  "end_byte": 1544,
                                  "text": "int",
                                  "children": []
                                },
                                {
                                  "type": "init_declarator",
                                  "start_byte": 1545,
                                  "end_byte": 1554,
                                  "text": "max = - 1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1545,
                                      "end_byte": 1548,
                                      "text": "max",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1549,
                                      "end_byte": 1550,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "unary_expression",
                                      "start_byte": 1551,
                                      "end_byte": 1554,
                                      "text": "- 1",
                                      "children": [
                                        {
                                          "type": "-",
                                          "start_byte": 1551,
                                          "end_byte": 1552,
                                          "text": "-",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 1553,
                                          "end_byte": 1554,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1555,
                                  "end_byte": 1556,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 1557,
                              "end_byte": 1654,
                              "text": "for ( k = 0 ; k < j ; k ++ ) { if ( array [ N - 1 ] [ k ] > max ) max = array [ N - 1 ] [ k ] ; }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 1557,
                                  "end_byte": 1560,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 1561,
                                  "end_byte": 1562,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1563,
                                  "end_byte": 1568,
                                  "text": "k = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1563,
                                      "end_byte": 1564,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1565,
                                      "end_byte": 1566,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 1567,
                                      "end_byte": 1568,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1569,
                                  "end_byte": 1570,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 1571,
                                  "end_byte": 1576,
                                  "text": "k < j",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1571,
                                      "end_byte": 1572,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "<",
                                      "start_byte": 1573,
                                      "end_byte": 1574,
                                      "text": "<",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 1575,
                                      "end_byte": 1576,
                                      "text": "j",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1577,
                                  "end_byte": 1578,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 1579,
                                  "end_byte": 1583,
                                  "text": "k ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1579,
                                      "end_byte": 1580,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 1581,
                                      "end_byte": 1583,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1584,
                                  "end_byte": 1585,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 1586,
                                  "end_byte": 1654,
                                  "text": "{ if ( array [ N - 1 ] [ k ] > max ) max = array [ N - 1 ] [ k ] ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 1586,
                                      "end_byte": 1587,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 1588,
                                      "end_byte": 1652,
                                      "text": "if ( array [ N - 1 ] [ k ] > max ) max = array [ N - 1 ] [ k ] ;",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 1588,
                                          "end_byte": 1590,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 1591,
                                          "end_byte": 1622,
                                          "text": "( array [ N - 1 ] [ k ] > max )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 1591,
                                              "end_byte": 1592,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 1593,
                                              "end_byte": 1620,
                                              "text": "array [ N - 1 ] [ k ] > max",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 1593,
                                                  "end_byte": 1614,
                                                  "text": "array [ N - 1 ] [ k ]",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 1593,
                                                      "end_byte": 1608,
                                                      "text": "array [ N - 1 ]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 1593,
                                                          "end_byte": 1598,
                                                          "text": "array",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 1599,
                                                          "end_byte": 1608,
                                                          "text": "[ N - 1 ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 1599,
                                                              "end_byte": 1600,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 1601,
                                                              "end_byte": 1606,
                                                              "text": "N - 1",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 1601,
                                                                  "end_byte": 1602,
                                                                  "text": "N",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "-",
                                                                  "start_byte": 1603,
                                                                  "end_byte": 1604,
                                                                  "text": "-",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "number_literal",
                                                                  "start_byte": 1605,
                                                                  "end_byte": 1606,
                                                                  "text": "1",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 1607,
                                                              "end_byte": 1608,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 1609,
                                                      "end_byte": 1614,
                                                      "text": "[ k ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 1609,
                                                          "end_byte": 1610,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 1611,
                                                          "end_byte": 1612,
                                                          "text": "k",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 1613,
                                                          "end_byte": 1614,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ">",
                                                  "start_byte": 1615,
                                                  "end_byte": 1616,
                                                  "text": ">",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1617,
                                                  "end_byte": 1620,
                                                  "text": "max",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 1621,
                                              "end_byte": 1622,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 1623,
                                          "end_byte": 1652,
                                          "text": "max = array [ N - 1 ] [ k ] ;",
                                          "children": [
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 1623,
                                              "end_byte": 1650,
                                              "text": "max = array [ N - 1 ] [ k ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1623,
                                                  "end_byte": 1626,
                                                  "text": "max",
                                                  "children": []
                                                },
                                                {
                                                  "type": "=",
                                                  "start_byte": 1627,
                                                  "end_byte": 1628,
                                                  "text": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 1629,
                                                  "end_byte": 1650,
                                                  "text": "array [ N - 1 ] [ k ]",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 1629,
                                                      "end_byte": 1644,
                                                      "text": "array [ N - 1 ]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 1629,
                                                          "end_byte": 1634,
                                                          "text": "array",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 1635,
                                                          "end_byte": 1644,
                                                          "text": "[ N - 1 ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 1635,
                                                              "end_byte": 1636,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 1637,
                                                              "end_byte": 1642,
                                                              "text": "N - 1",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 1637,
                                                                  "end_byte": 1638,
                                                                  "text": "N",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "-",
                                                                  "start_byte": 1639,
                                                                  "end_byte": 1640,
                                                                  "text": "-",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "number_literal",
                                                                  "start_byte": 1641,
                                                                  "end_byte": 1642,
                                                                  "text": "1",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 1643,
                                                              "end_byte": 1644,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 1645,
                                                      "end_byte": 1650,
                                                      "text": "[ k ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 1645,
                                                          "end_byte": 1646,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 1647,
                                                          "end_byte": 1648,
                                                          "text": "k",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 1649,
                                                          "end_byte": 1650,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 1651,
                                              "end_byte": 1652,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 1653,
                                      "end_byte": 1654,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1655,
                              "end_byte": 1680,
                              "text": "recursiveOutNum ( max ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 1655,
                                  "end_byte": 1678,
                                  "text": "recursiveOutNum ( max )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1655,
                                      "end_byte": 1670,
                                      "text": "recursiveOutNum",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 1671,
                                      "end_byte": 1678,
                                      "text": "( max )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 1671,
                                          "end_byte": 1672,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 1673,
                                          "end_byte": 1676,
                                          "text": "max",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 1677,
                                          "end_byte": 1678,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1679,
                                  "end_byte": 1680,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1681,
                              "end_byte": 1715,
                              "text": "outBuffer [ outcount ++ ] = '\\n' ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1681,
                                  "end_byte": 1713,
                                  "text": "outBuffer [ outcount ++ ] = '\\n'",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 1681,
                                      "end_byte": 1706,
                                      "text": "outBuffer [ outcount ++ ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1681,
                                          "end_byte": 1690,
                                          "text": "outBuffer",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 1691,
                                          "end_byte": 1706,
                                          "text": "[ outcount ++ ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 1691,
                                              "end_byte": 1692,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "update_expression",
                                              "start_byte": 1693,
                                              "end_byte": 1704,
                                              "text": "outcount ++",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1693,
                                                  "end_byte": 1701,
                                                  "text": "outcount",
                                                  "children": []
                                                },
                                                {
                                                  "type": "++",
                                                  "start_byte": 1702,
                                                  "end_byte": 1704,
                                                  "text": "++",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 1705,
                                              "end_byte": 1706,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1707,
                                      "end_byte": 1708,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "char_literal",
                                      "start_byte": 1709,
                                      "end_byte": 1713,
                                      "text": "'\\n'",
                                      "children": [
                                        {
                                          "type": "'",
                                          "start_byte": 1709,
                                          "end_byte": 1710,
                                          "text": "'",
                                          "children": []
                                        },
                                        {
                                          "type": "escape_sequence",
                                          "start_byte": 1710,
                                          "end_byte": 1712,
                                          "text": "\\n",
                                          "children": []
                                        },
                                        {
                                          "type": "'",
                                          "start_byte": 1712,
                                          "end_byte": 1713,
                                          "text": "'",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1714,
                                  "end_byte": 1715,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 1716,
                              "end_byte": 1717,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1718,
                      "end_byte": 1724,
                      "text": "i ++ ;",
                      "children": [
                        {
                          "type": "update_expression",
                          "start_byte": 1718,
                          "end_byte": 1722,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1718,
                              "end_byte": 1719,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 1720,
                              "end_byte": 1722,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1723,
                          "end_byte": 1724,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 1725,
                      "end_byte": 1726,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 1727,
              "end_byte": 1738,
              "text": "flush ( ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 1727,
                  "end_byte": 1736,
                  "text": "flush ( )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1727,
                      "end_byte": 1732,
                      "text": "flush",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 1733,
                      "end_byte": 1736,
                      "text": "( )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 1733,
                          "end_byte": 1734,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": ")",
                          "start_byte": 1735,
                          "end_byte": 1736,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1737,
                  "end_byte": 1738,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 1739,
              "end_byte": 1749,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 1739,
                  "end_byte": 1745,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 1746,
                  "end_byte": 1747,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 1748,
                  "end_byte": 1749,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 1750,
              "end_byte": 1751,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}