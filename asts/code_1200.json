{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 352,
  "text": "int main ( ) { int T ; long int A , B , l , i , GCD , LCM ; scanf ( \"%d\" , & T ) ; { scanf ( \"%ld%ld\" , & A , & B ) ; if ( A > B ) l = A ; else l = B ; i = l ; while ( 1 ) { if ( i % A == 0 && i % B == 0 ) { LCM = l ; break ; } else i = i + l ; } while ( B ) { l = A % B ; A = B ; B = l ; } GCD = A ; printf ( \"%ld %ld\\n\" , GCD , LCM ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 352,
      "text": "int main ( ) { int T ; long int A , B , l , i , GCD , LCM ; scanf ( \"%d\" , & T ) ; { scanf ( \"%ld%ld\" , & A , & B ) ; if ( A > B ) l = A ; else l = B ; i = l ; while ( 1 ) { if ( i % A == 0 && i % B == 0 ) { LCM = l ; break ; } else i = i + l ; } while ( B ) { l = A % B ; A = B ; B = l ; } GCD = A ; printf ( \"%ld %ld\\n\" , GCD , LCM ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 352,
          "text": "{ int T ; long int A , B , l , i , GCD , LCM ; scanf ( \"%d\" , & T ) ; { scanf ( \"%ld%ld\" , & A , & B ) ; if ( A > B ) l = A ; else l = B ; i = l ; while ( 1 ) { if ( i % A == 0 && i % B == 0 ) { LCM = l ; break ; } else i = i + l ; } while ( B ) { l = A % B ; A = B ; B = l ; } GCD = A ; printf ( \"%ld %ld\\n\" , GCD , LCM ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 22,
              "text": "int T ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": "T",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 23,
              "end_byte": 59,
              "text": "long int A , B , l , i , GCD , LCM ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 23,
                  "end_byte": 31,
                  "text": "long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 23,
                      "end_byte": 27,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 28,
                      "end_byte": 31,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 32,
                  "end_byte": 33,
                  "text": "A",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 34,
                  "end_byte": 35,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 36,
                  "end_byte": 37,
                  "text": "B",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 38,
                  "end_byte": 39,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 40,
                  "end_byte": 41,
                  "text": "l",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 42,
                  "end_byte": 43,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 44,
                  "end_byte": 45,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 46,
                  "end_byte": 47,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 48,
                  "end_byte": 51,
                  "text": "GCD",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 52,
                  "end_byte": 53,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 54,
                  "end_byte": 57,
                  "text": "LCM",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 58,
                  "end_byte": 59,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 60,
              "end_byte": 82,
              "text": "scanf ( \"%d\" , & T ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 60,
                  "end_byte": 80,
                  "text": "scanf ( \"%d\" , & T )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 60,
                      "end_byte": 65,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 66,
                      "end_byte": 80,
                      "text": "( \"%d\" , & T )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 66,
                          "end_byte": 67,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 68,
                          "end_byte": 72,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 68,
                              "end_byte": 69,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 69,
                              "end_byte": 71,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 71,
                              "end_byte": 72,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 73,
                          "end_byte": 74,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 75,
                          "end_byte": 78,
                          "text": "& T",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 75,
                              "end_byte": 76,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 77,
                              "end_byte": 78,
                              "text": "T",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 79,
                          "end_byte": 80,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 81,
                  "end_byte": 82,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "compound_statement",
              "start_byte": 83,
              "end_byte": 339,
              "text": "{ scanf ( \"%ld%ld\" , & A , & B ) ; if ( A > B ) l = A ; else l = B ; i = l ; while ( 1 ) { if ( i % A == 0 && i % B == 0 ) { LCM = l ; break ; } else i = i + l ; } while ( B ) { l = A % B ; A = B ; B = l ; } GCD = A ; printf ( \"%ld %ld\\n\" , GCD , LCM ) ; }",
              "children": [
                {
                  "type": "{",
                  "start_byte": 83,
                  "end_byte": 84,
                  "text": "{",
                  "children": []
                },
                {
                  "type": "expression_statement",
                  "start_byte": 85,
                  "end_byte": 117,
                  "text": "scanf ( \"%ld%ld\" , & A , & B ) ;",
                  "children": [
                    {
                      "type": "call_expression",
                      "start_byte": 85,
                      "end_byte": 115,
                      "text": "scanf ( \"%ld%ld\" , & A , & B )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 85,
                          "end_byte": 90,
                          "text": "scanf",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 91,
                          "end_byte": 115,
                          "text": "( \"%ld%ld\" , & A , & B )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 91,
                              "end_byte": 92,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "string_literal",
                              "start_byte": 93,
                              "end_byte": 101,
                              "text": "\"%ld%ld\"",
                              "children": [
                                {
                                  "type": "\"",
                                  "start_byte": 93,
                                  "end_byte": 94,
                                  "text": "\"",
                                  "children": []
                                },
                                {
                                  "type": "string_content",
                                  "start_byte": 94,
                                  "end_byte": 100,
                                  "text": "%ld%ld",
                                  "children": []
                                },
                                {
                                  "type": "\"",
                                  "start_byte": 100,
                                  "end_byte": 101,
                                  "text": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 102,
                              "end_byte": 103,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "pointer_expression",
                              "start_byte": 104,
                              "end_byte": 107,
                              "text": "& A",
                              "children": [
                                {
                                  "type": "&",
                                  "start_byte": 104,
                                  "end_byte": 105,
                                  "text": "&",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 106,
                                  "end_byte": 107,
                                  "text": "A",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 108,
                              "end_byte": 109,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "pointer_expression",
                              "start_byte": 110,
                              "end_byte": 113,
                              "text": "& B",
                              "children": [
                                {
                                  "type": "&",
                                  "start_byte": 110,
                                  "end_byte": 111,
                                  "text": "&",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 112,
                                  "end_byte": 113,
                                  "text": "B",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 114,
                              "end_byte": 115,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 116,
                      "end_byte": 117,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "if_statement",
                  "start_byte": 118,
                  "end_byte": 151,
                  "text": "if ( A > B ) l = A ; else l = B ;",
                  "children": [
                    {
                      "type": "if",
                      "start_byte": 118,
                      "end_byte": 120,
                      "text": "if",
                      "children": []
                    },
                    {
                      "type": "condition_clause",
                      "start_byte": 121,
                      "end_byte": 130,
                      "text": "( A > B )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 121,
                          "end_byte": 122,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 123,
                          "end_byte": 128,
                          "text": "A > B",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 123,
                              "end_byte": 124,
                              "text": "A",
                              "children": []
                            },
                            {
                              "type": ">",
                              "start_byte": 125,
                              "end_byte": 126,
                              "text": ">",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 127,
                              "end_byte": 128,
                              "text": "B",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 129,
                          "end_byte": 130,
                          "text": ")",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 131,
                      "end_byte": 138,
                      "text": "l = A ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 131,
                          "end_byte": 136,
                          "text": "l = A",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 131,
                              "end_byte": 132,
                              "text": "l",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 133,
                              "end_byte": 134,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 135,
                              "end_byte": 136,
                              "text": "A",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 137,
                          "end_byte": 138,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "else_clause",
                      "start_byte": 139,
                      "end_byte": 151,
                      "text": "else l = B ;",
                      "children": [
                        {
                          "type": "else",
                          "start_byte": 139,
                          "end_byte": 143,
                          "text": "else",
                          "children": []
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 144,
                          "end_byte": 151,
                          "text": "l = B ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 144,
                              "end_byte": 149,
                              "text": "l = B",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 144,
                                  "end_byte": 145,
                                  "text": "l",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 146,
                                  "end_byte": 147,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 148,
                                  "end_byte": 149,
                                  "text": "B",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 150,
                              "end_byte": 151,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "expression_statement",
                  "start_byte": 152,
                  "end_byte": 159,
                  "text": "i = l ;",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start_byte": 152,
                      "end_byte": 157,
                      "text": "i = l",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 152,
                          "end_byte": 153,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 154,
                          "end_byte": 155,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 156,
                          "end_byte": 157,
                          "text": "l",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 158,
                      "end_byte": 159,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "while_statement",
                  "start_byte": 160,
                  "end_byte": 246,
                  "text": "while ( 1 ) { if ( i % A == 0 && i % B == 0 ) { LCM = l ; break ; } else i = i + l ; }",
                  "children": [
                    {
                      "type": "while",
                      "start_byte": 160,
                      "end_byte": 165,
                      "text": "while",
                      "children": []
                    },
                    {
                      "type": "condition_clause",
                      "start_byte": 166,
                      "end_byte": 171,
                      "text": "( 1 )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 166,
                          "end_byte": 167,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 168,
                          "end_byte": 169,
                          "text": "1",
                          "children": []
                        },
                        {
                          "type": ")",
                          "start_byte": 170,
                          "end_byte": 171,
                          "text": ")",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "compound_statement",
                      "start_byte": 172,
                      "end_byte": 246,
                      "text": "{ if ( i % A == 0 && i % B == 0 ) { LCM = l ; break ; } else i = i + l ; }",
                      "children": [
                        {
                          "type": "{",
                          "start_byte": 172,
                          "end_byte": 173,
                          "text": "{",
                          "children": []
                        },
                        {
                          "type": "if_statement",
                          "start_byte": 174,
                          "end_byte": 244,
                          "text": "if ( i % A == 0 && i % B == 0 ) { LCM = l ; break ; } else i = i + l ;",
                          "children": [
                            {
                              "type": "if",
                              "start_byte": 174,
                              "end_byte": 176,
                              "text": "if",
                              "children": []
                            },
                            {
                              "type": "condition_clause",
                              "start_byte": 177,
                              "end_byte": 205,
                              "text": "( i % A == 0 && i % B == 0 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 177,
                                  "end_byte": 178,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 179,
                                  "end_byte": 203,
                                  "text": "i % A == 0 && i % B == 0",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 179,
                                      "end_byte": 189,
                                      "text": "i % A == 0",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 179,
                                          "end_byte": 184,
                                          "text": "i % A",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 179,
                                              "end_byte": 180,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "%",
                                              "start_byte": 181,
                                              "end_byte": 182,
                                              "text": "%",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 183,
                                              "end_byte": 184,
                                              "text": "A",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "==",
                                          "start_byte": 185,
                                          "end_byte": 187,
                                          "text": "==",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 188,
                                          "end_byte": 189,
                                          "text": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "&&",
                                      "start_byte": 190,
                                      "end_byte": 192,
                                      "text": "&&",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 193,
                                      "end_byte": 203,
                                      "text": "i % B == 0",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 193,
                                          "end_byte": 198,
                                          "text": "i % B",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 193,
                                              "end_byte": 194,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "%",
                                              "start_byte": 195,
                                              "end_byte": 196,
                                              "text": "%",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 197,
                                              "end_byte": 198,
                                              "text": "B",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "==",
                                          "start_byte": 199,
                                          "end_byte": 201,
                                          "text": "==",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 202,
                                          "end_byte": 203,
                                          "text": "0",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 204,
                                  "end_byte": 205,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 206,
                              "end_byte": 227,
                              "text": "{ LCM = l ; break ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 206,
                                  "end_byte": 207,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 208,
                                  "end_byte": 217,
                                  "text": "LCM = l ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 208,
                                      "end_byte": 215,
                                      "text": "LCM = l",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 208,
                                          "end_byte": 211,
                                          "text": "LCM",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 212,
                                          "end_byte": 213,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 214,
                                          "end_byte": 215,
                                          "text": "l",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 216,
                                      "end_byte": 217,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "break_statement",
                                  "start_byte": 218,
                                  "end_byte": 225,
                                  "text": "break ;",
                                  "children": [
                                    {
                                      "type": "break",
                                      "start_byte": 218,
                                      "end_byte": 223,
                                      "text": "break",
                                      "children": []
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 224,
                                      "end_byte": 225,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 226,
                                  "end_byte": 227,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "else_clause",
                              "start_byte": 228,
                              "end_byte": 244,
                              "text": "else i = i + l ;",
                              "children": [
                                {
                                  "type": "else",
                                  "start_byte": 228,
                                  "end_byte": 232,
                                  "text": "else",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 233,
                                  "end_byte": 244,
                                  "text": "i = i + l ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 233,
                                      "end_byte": 242,
                                      "text": "i = i + l",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 233,
                                          "end_byte": 234,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 235,
                                          "end_byte": 236,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 237,
                                          "end_byte": 242,
                                          "text": "i + l",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 237,
                                              "end_byte": 238,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 239,
                                              "end_byte": 240,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 241,
                                              "end_byte": 242,
                                              "text": "l",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 243,
                                      "end_byte": 244,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start_byte": 245,
                          "end_byte": 246,
                          "text": "}",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "while_statement",
                  "start_byte": 247,
                  "end_byte": 290,
                  "text": "while ( B ) { l = A % B ; A = B ; B = l ; }",
                  "children": [
                    {
                      "type": "while",
                      "start_byte": 247,
                      "end_byte": 252,
                      "text": "while",
                      "children": []
                    },
                    {
                      "type": "condition_clause",
                      "start_byte": 253,
                      "end_byte": 258,
                      "text": "( B )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 253,
                          "end_byte": 254,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 255,
                          "end_byte": 256,
                          "text": "B",
                          "children": []
                        },
                        {
                          "type": ")",
                          "start_byte": 257,
                          "end_byte": 258,
                          "text": ")",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "compound_statement",
                      "start_byte": 259,
                      "end_byte": 290,
                      "text": "{ l = A % B ; A = B ; B = l ; }",
                      "children": [
                        {
                          "type": "{",
                          "start_byte": 259,
                          "end_byte": 260,
                          "text": "{",
                          "children": []
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 261,
                          "end_byte": 272,
                          "text": "l = A % B ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 261,
                              "end_byte": 270,
                              "text": "l = A % B",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 261,
                                  "end_byte": 262,
                                  "text": "l",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 263,
                                  "end_byte": 264,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 265,
                                  "end_byte": 270,
                                  "text": "A % B",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 265,
                                      "end_byte": 266,
                                      "text": "A",
                                      "children": []
                                    },
                                    {
                                      "type": "%",
                                      "start_byte": 267,
                                      "end_byte": 268,
                                      "text": "%",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 269,
                                      "end_byte": 270,
                                      "text": "B",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 271,
                              "end_byte": 272,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 273,
                          "end_byte": 280,
                          "text": "A = B ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 273,
                              "end_byte": 278,
                              "text": "A = B",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 273,
                                  "end_byte": 274,
                                  "text": "A",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 275,
                                  "end_byte": 276,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 277,
                                  "end_byte": 278,
                                  "text": "B",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 279,
                              "end_byte": 280,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 281,
                          "end_byte": 288,
                          "text": "B = l ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 281,
                              "end_byte": 286,
                              "text": "B = l",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 281,
                                  "end_byte": 282,
                                  "text": "B",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 283,
                                  "end_byte": 284,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 285,
                                  "end_byte": 286,
                                  "text": "l",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 287,
                              "end_byte": 288,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start_byte": 289,
                          "end_byte": 290,
                          "text": "}",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "expression_statement",
                  "start_byte": 291,
                  "end_byte": 300,
                  "text": "GCD = A ;",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start_byte": 291,
                      "end_byte": 298,
                      "text": "GCD = A",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 291,
                          "end_byte": 294,
                          "text": "GCD",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 295,
                          "end_byte": 296,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 297,
                          "end_byte": 298,
                          "text": "A",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 299,
                      "end_byte": 300,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "expression_statement",
                  "start_byte": 301,
                  "end_byte": 337,
                  "text": "printf ( \"%ld %ld\\n\" , GCD , LCM ) ;",
                  "children": [
                    {
                      "type": "call_expression",
                      "start_byte": 301,
                      "end_byte": 335,
                      "text": "printf ( \"%ld %ld\\n\" , GCD , LCM )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 301,
                          "end_byte": 307,
                          "text": "printf",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 308,
                          "end_byte": 335,
                          "text": "( \"%ld %ld\\n\" , GCD , LCM )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 308,
                              "end_byte": 309,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "string_literal",
                              "start_byte": 310,
                              "end_byte": 321,
                              "text": "\"%ld %ld\\n\"",
                              "children": [
                                {
                                  "type": "\"",
                                  "start_byte": 310,
                                  "end_byte": 311,
                                  "text": "\"",
                                  "children": []
                                },
                                {
                                  "type": "string_content",
                                  "start_byte": 311,
                                  "end_byte": 318,
                                  "text": "%ld %ld",
                                  "children": []
                                },
                                {
                                  "type": "escape_sequence",
                                  "start_byte": 318,
                                  "end_byte": 320,
                                  "text": "\\n",
                                  "children": []
                                },
                                {
                                  "type": "\"",
                                  "start_byte": 320,
                                  "end_byte": 321,
                                  "text": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 322,
                              "end_byte": 323,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 324,
                              "end_byte": 327,
                              "text": "GCD",
                              "children": []
                            },
                            {
                              "type": ",",
                              "start_byte": 328,
                              "end_byte": 329,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 330,
                              "end_byte": 333,
                              "text": "LCM",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 334,
                              "end_byte": 335,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 336,
                      "end_byte": 337,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "}",
                  "start_byte": 338,
                  "end_byte": 339,
                  "text": "}",
                  "children": []
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 340,
              "end_byte": 350,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 340,
                  "end_byte": 346,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 347,
                  "end_byte": 348,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 349,
                  "end_byte": 350,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 351,
              "end_byte": 352,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}