{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 417,
  "text": "int main ( ) { int A , B , T , i , t , z , y ; scanf ( \"%d\" , & T ) ; for ( i = 0 ; i < T ; i ++ ) { scanf ( \"%d%d\" , & A , & B ) ; z = A * B ; if ( A > B ) { do { t = A % B ; A = B ; B = t ; } while ( B != 0 ) ; } else if ( B > A ) { do { t = B % A ; B = A ; A = t ; } while ( A != 0 ) ; } if ( A > B ) { y = z / A ; printf ( \"%d %d\" , A , y ) ; } else if ( B > A ) { y = z / B ; printf ( \"%d %d\\n\" , B , y ) ; } } }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 417,
      "text": "int main ( ) { int A , B , T , i , t , z , y ; scanf ( \"%d\" , & T ) ; for ( i = 0 ; i < T ; i ++ ) { scanf ( \"%d%d\" , & A , & B ) ; z = A * B ; if ( A > B ) { do { t = A % B ; A = B ; B = t ; } while ( B != 0 ) ; } else if ( B > A ) { do { t = B % A ; B = A ; A = t ; } while ( A != 0 ) ; } if ( A > B ) { y = z / A ; printf ( \"%d %d\" , A , y ) ; } else if ( B > A ) { y = z / B ; printf ( \"%d %d\\n\" , B , y ) ; } } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 417,
          "text": "{ int A , B , T , i , t , z , y ; scanf ( \"%d\" , & T ) ; for ( i = 0 ; i < T ; i ++ ) { scanf ( \"%d%d\" , & A , & B ) ; z = A * B ; if ( A > B ) { do { t = A % B ; A = B ; B = t ; } while ( B != 0 ) ; } else if ( B > A ) { do { t = B % A ; B = A ; A = t ; } while ( A != 0 ) ; } if ( A > B ) { y = z / A ; printf ( \"%d %d\" , A , y ) ; } else if ( B > A ) { y = z / B ; printf ( \"%d %d\\n\" , B , y ) ; } } }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 46,
              "text": "int A , B , T , i , t , z , y ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": "A",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 23,
                  "end_byte": 24,
                  "text": "B",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 27,
                  "end_byte": 28,
                  "text": "T",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 29,
                  "end_byte": 30,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 31,
                  "end_byte": 32,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 33,
                  "end_byte": 34,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 35,
                  "end_byte": 36,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 37,
                  "end_byte": 38,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 39,
                  "end_byte": 40,
                  "text": "z",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 41,
                  "end_byte": 42,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 43,
                  "end_byte": 44,
                  "text": "y",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 45,
                  "end_byte": 46,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 47,
              "end_byte": 69,
              "text": "scanf ( \"%d\" , & T ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 47,
                  "end_byte": 67,
                  "text": "scanf ( \"%d\" , & T )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 47,
                      "end_byte": 52,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 53,
                      "end_byte": 67,
                      "text": "( \"%d\" , & T )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 53,
                          "end_byte": 54,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 55,
                          "end_byte": 59,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 55,
                              "end_byte": 56,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 56,
                              "end_byte": 58,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 58,
                              "end_byte": 59,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 60,
                          "end_byte": 61,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 62,
                          "end_byte": 65,
                          "text": "& T",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 62,
                              "end_byte": 63,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 64,
                              "end_byte": 65,
                              "text": "T",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 66,
                          "end_byte": 67,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 68,
                  "end_byte": 69,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 70,
              "end_byte": 415,
              "text": "for ( i = 0 ; i < T ; i ++ ) { scanf ( \"%d%d\" , & A , & B ) ; z = A * B ; if ( A > B ) { do { t = A % B ; A = B ; B = t ; } while ( B != 0 ) ; } else if ( B > A ) { do { t = B % A ; B = A ; A = t ; } while ( A != 0 ) ; } if ( A > B ) { y = z / A ; printf ( \"%d %d\" , A , y ) ; } else if ( B > A ) { y = z / B ; printf ( \"%d %d\\n\" , B , y ) ; } }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 70,
                  "end_byte": 73,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 74,
                  "end_byte": 75,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 76,
                  "end_byte": 81,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 76,
                      "end_byte": 77,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 78,
                      "end_byte": 79,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 80,
                      "end_byte": 81,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 82,
                  "end_byte": 83,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 84,
                  "end_byte": 89,
                  "text": "i < T",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 84,
                      "end_byte": 85,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 86,
                      "end_byte": 87,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 88,
                      "end_byte": 89,
                      "text": "T",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 90,
                  "end_byte": 91,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 92,
                  "end_byte": 96,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 92,
                      "end_byte": 93,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 94,
                      "end_byte": 96,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 97,
                  "end_byte": 98,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 99,
                  "end_byte": 415,
                  "text": "{ scanf ( \"%d%d\" , & A , & B ) ; z = A * B ; if ( A > B ) { do { t = A % B ; A = B ; B = t ; } while ( B != 0 ) ; } else if ( B > A ) { do { t = B % A ; B = A ; A = t ; } while ( A != 0 ) ; } if ( A > B ) { y = z / A ; printf ( \"%d %d\" , A , y ) ; } else if ( B > A ) { y = z / B ; printf ( \"%d %d\\n\" , B , y ) ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 99,
                      "end_byte": 100,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 101,
                      "end_byte": 131,
                      "text": "scanf ( \"%d%d\" , & A , & B ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 101,
                          "end_byte": 129,
                          "text": "scanf ( \"%d%d\" , & A , & B )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 101,
                              "end_byte": 106,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 107,
                              "end_byte": 129,
                              "text": "( \"%d%d\" , & A , & B )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 107,
                                  "end_byte": 108,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 109,
                                  "end_byte": 115,
                                  "text": "\"%d%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 109,
                                      "end_byte": 110,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 110,
                                      "end_byte": 114,
                                      "text": "%d%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 114,
                                      "end_byte": 115,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 116,
                                  "end_byte": 117,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 118,
                                  "end_byte": 121,
                                  "text": "& A",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 118,
                                      "end_byte": 119,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 120,
                                      "end_byte": 121,
                                      "text": "A",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 122,
                                  "end_byte": 123,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 124,
                                  "end_byte": 127,
                                  "text": "& B",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 124,
                                      "end_byte": 125,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 126,
                                      "end_byte": 127,
                                      "text": "B",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 128,
                                  "end_byte": 129,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 130,
                          "end_byte": 131,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 132,
                      "end_byte": 143,
                      "text": "z = A * B ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 132,
                          "end_byte": 141,
                          "text": "z = A * B",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 132,
                              "end_byte": 133,
                              "text": "z",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 134,
                              "end_byte": 135,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 136,
                              "end_byte": 141,
                              "text": "A * B",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 136,
                                  "end_byte": 137,
                                  "text": "A",
                                  "children": []
                                },
                                {
                                  "type": "*",
                                  "start_byte": 138,
                                  "end_byte": 139,
                                  "text": "*",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 140,
                                  "end_byte": 141,
                                  "text": "B",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 142,
                          "end_byte": 143,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 144,
                      "end_byte": 290,
                      "text": "if ( A > B ) { do { t = A % B ; A = B ; B = t ; } while ( B != 0 ) ; } else if ( B > A ) { do { t = B % A ; B = A ; A = t ; } while ( A != 0 ) ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 144,
                          "end_byte": 146,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 147,
                          "end_byte": 156,
                          "text": "( A > B )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 147,
                              "end_byte": 148,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 149,
                              "end_byte": 154,
                              "text": "A > B",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 149,
                                  "end_byte": 150,
                                  "text": "A",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 151,
                                  "end_byte": 152,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 153,
                                  "end_byte": 154,
                                  "text": "B",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 155,
                              "end_byte": 156,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 157,
                          "end_byte": 214,
                          "text": "{ do { t = A % B ; A = B ; B = t ; } while ( B != 0 ) ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 157,
                              "end_byte": 158,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "do_statement",
                              "start_byte": 159,
                              "end_byte": 212,
                              "text": "do { t = A % B ; A = B ; B = t ; } while ( B != 0 ) ;",
                              "children": [
                                {
                                  "type": "do",
                                  "start_byte": 159,
                                  "end_byte": 161,
                                  "text": "do",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 162,
                                  "end_byte": 193,
                                  "text": "{ t = A % B ; A = B ; B = t ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 162,
                                      "end_byte": 163,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 164,
                                      "end_byte": 175,
                                      "text": "t = A % B ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 164,
                                          "end_byte": 173,
                                          "text": "t = A % B",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 164,
                                              "end_byte": 165,
                                              "text": "t",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 166,
                                              "end_byte": 167,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 168,
                                              "end_byte": 173,
                                              "text": "A % B",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 168,
                                                  "end_byte": 169,
                                                  "text": "A",
                                                  "children": []
                                                },
                                                {
                                                  "type": "%",
                                                  "start_byte": 170,
                                                  "end_byte": 171,
                                                  "text": "%",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 172,
                                                  "end_byte": 173,
                                                  "text": "B",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 174,
                                          "end_byte": 175,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 176,
                                      "end_byte": 183,
                                      "text": "A = B ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 176,
                                          "end_byte": 181,
                                          "text": "A = B",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 176,
                                              "end_byte": 177,
                                              "text": "A",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 178,
                                              "end_byte": 179,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 180,
                                              "end_byte": 181,
                                              "text": "B",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 182,
                                          "end_byte": 183,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 184,
                                      "end_byte": 191,
                                      "text": "B = t ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 184,
                                          "end_byte": 189,
                                          "text": "B = t",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 184,
                                              "end_byte": 185,
                                              "text": "B",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 186,
                                              "end_byte": 187,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 188,
                                              "end_byte": 189,
                                              "text": "t",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 190,
                                          "end_byte": 191,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 192,
                                      "end_byte": 193,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "while",
                                  "start_byte": 194,
                                  "end_byte": 199,
                                  "text": "while",
                                  "children": []
                                },
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 200,
                                  "end_byte": 210,
                                  "text": "( B != 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 200,
                                      "end_byte": 201,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 202,
                                      "end_byte": 208,
                                      "text": "B != 0",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 202,
                                          "end_byte": 203,
                                          "text": "B",
                                          "children": []
                                        },
                                        {
                                          "type": "!=",
                                          "start_byte": 204,
                                          "end_byte": 206,
                                          "text": "!=",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 207,
                                          "end_byte": 208,
                                          "text": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 209,
                                      "end_byte": 210,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 211,
                                  "end_byte": 212,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 213,
                              "end_byte": 214,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 215,
                          "end_byte": 290,
                          "text": "else if ( B > A ) { do { t = B % A ; B = A ; A = t ; } while ( A != 0 ) ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 215,
                              "end_byte": 219,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 220,
                              "end_byte": 290,
                              "text": "if ( B > A ) { do { t = B % A ; B = A ; A = t ; } while ( A != 0 ) ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 220,
                                  "end_byte": 222,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 223,
                                  "end_byte": 232,
                                  "text": "( B > A )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 223,
                                      "end_byte": 224,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 225,
                                      "end_byte": 230,
                                      "text": "B > A",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 225,
                                          "end_byte": 226,
                                          "text": "B",
                                          "children": []
                                        },
                                        {
                                          "type": ">",
                                          "start_byte": 227,
                                          "end_byte": 228,
                                          "text": ">",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 229,
                                          "end_byte": 230,
                                          "text": "A",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 231,
                                      "end_byte": 232,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 233,
                                  "end_byte": 290,
                                  "text": "{ do { t = B % A ; B = A ; A = t ; } while ( A != 0 ) ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 233,
                                      "end_byte": 234,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "do_statement",
                                      "start_byte": 235,
                                      "end_byte": 288,
                                      "text": "do { t = B % A ; B = A ; A = t ; } while ( A != 0 ) ;",
                                      "children": [
                                        {
                                          "type": "do",
                                          "start_byte": 235,
                                          "end_byte": 237,
                                          "text": "do",
                                          "children": []
                                        },
                                        {
                                          "type": "compound_statement",
                                          "start_byte": 238,
                                          "end_byte": 269,
                                          "text": "{ t = B % A ; B = A ; A = t ; }",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start_byte": 238,
                                              "end_byte": 239,
                                              "text": "{",
                                              "children": []
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 240,
                                              "end_byte": 251,
                                              "text": "t = B % A ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 240,
                                                  "end_byte": 249,
                                                  "text": "t = B % A",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 240,
                                                      "end_byte": 241,
                                                      "text": "t",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 242,
                                                      "end_byte": 243,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 244,
                                                      "end_byte": 249,
                                                      "text": "B % A",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 244,
                                                          "end_byte": 245,
                                                          "text": "B",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "%",
                                                          "start_byte": 246,
                                                          "end_byte": 247,
                                                          "text": "%",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 248,
                                                          "end_byte": 249,
                                                          "text": "A",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 250,
                                                  "end_byte": 251,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 252,
                                              "end_byte": 259,
                                              "text": "B = A ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 252,
                                                  "end_byte": 257,
                                                  "text": "B = A",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 252,
                                                      "end_byte": 253,
                                                      "text": "B",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 254,
                                                      "end_byte": 255,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 256,
                                                      "end_byte": 257,
                                                      "text": "A",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 258,
                                                  "end_byte": 259,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 260,
                                              "end_byte": 267,
                                              "text": "A = t ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 260,
                                                  "end_byte": 265,
                                                  "text": "A = t",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 260,
                                                      "end_byte": 261,
                                                      "text": "A",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 262,
                                                      "end_byte": 263,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 264,
                                                      "end_byte": 265,
                                                      "text": "t",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 266,
                                                  "end_byte": 267,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start_byte": 268,
                                              "end_byte": 269,
                                              "text": "}",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "while",
                                          "start_byte": 270,
                                          "end_byte": 275,
                                          "text": "while",
                                          "children": []
                                        },
                                        {
                                          "type": "parenthesized_expression",
                                          "start_byte": 276,
                                          "end_byte": 286,
                                          "text": "( A != 0 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 276,
                                              "end_byte": 277,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 278,
                                              "end_byte": 284,
                                              "text": "A != 0",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 278,
                                                  "end_byte": 279,
                                                  "text": "A",
                                                  "children": []
                                                },
                                                {
                                                  "type": "!=",
                                                  "start_byte": 280,
                                                  "end_byte": 282,
                                                  "text": "!=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 283,
                                                  "end_byte": 284,
                                                  "text": "0",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 285,
                                              "end_byte": 286,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 287,
                                          "end_byte": 288,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 289,
                                      "end_byte": 290,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 291,
                      "end_byte": 413,
                      "text": "if ( A > B ) { y = z / A ; printf ( \"%d %d\" , A , y ) ; } else if ( B > A ) { y = z / B ; printf ( \"%d %d\\n\" , B , y ) ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 291,
                          "end_byte": 293,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 294,
                          "end_byte": 303,
                          "text": "( A > B )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 294,
                              "end_byte": 295,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 296,
                              "end_byte": 301,
                              "text": "A > B",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 296,
                                  "end_byte": 297,
                                  "text": "A",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 298,
                                  "end_byte": 299,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 300,
                                  "end_byte": 301,
                                  "text": "B",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 302,
                              "end_byte": 303,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 304,
                          "end_byte": 348,
                          "text": "{ y = z / A ; printf ( \"%d %d\" , A , y ) ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 304,
                              "end_byte": 305,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 306,
                              "end_byte": 317,
                              "text": "y = z / A ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 306,
                                  "end_byte": 315,
                                  "text": "y = z / A",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 306,
                                      "end_byte": 307,
                                      "text": "y",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 308,
                                      "end_byte": 309,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 310,
                                      "end_byte": 315,
                                      "text": "z / A",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 310,
                                          "end_byte": 311,
                                          "text": "z",
                                          "children": []
                                        },
                                        {
                                          "type": "/",
                                          "start_byte": 312,
                                          "end_byte": 313,
                                          "text": "/",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 314,
                                          "end_byte": 315,
                                          "text": "A",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 316,
                                  "end_byte": 317,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 318,
                              "end_byte": 346,
                              "text": "printf ( \"%d %d\" , A , y ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 318,
                                  "end_byte": 344,
                                  "text": "printf ( \"%d %d\" , A , y )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 318,
                                      "end_byte": 324,
                                      "text": "printf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 325,
                                      "end_byte": 344,
                                      "text": "( \"%d %d\" , A , y )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 325,
                                          "end_byte": 326,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 327,
                                          "end_byte": 334,
                                          "text": "\"%d %d\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 327,
                                              "end_byte": 328,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 328,
                                              "end_byte": 333,
                                              "text": "%d %d",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 333,
                                              "end_byte": 334,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 335,
                                          "end_byte": 336,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 337,
                                          "end_byte": 338,
                                          "text": "A",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 339,
                                          "end_byte": 340,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 341,
                                          "end_byte": 342,
                                          "text": "y",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 343,
                                          "end_byte": 344,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 345,
                                  "end_byte": 346,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 347,
                              "end_byte": 348,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 349,
                          "end_byte": 413,
                          "text": "else if ( B > A ) { y = z / B ; printf ( \"%d %d\\n\" , B , y ) ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 349,
                              "end_byte": 353,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 354,
                              "end_byte": 413,
                              "text": "if ( B > A ) { y = z / B ; printf ( \"%d %d\\n\" , B , y ) ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 354,
                                  "end_byte": 356,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 357,
                                  "end_byte": 366,
                                  "text": "( B > A )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 357,
                                      "end_byte": 358,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 359,
                                      "end_byte": 364,
                                      "text": "B > A",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 359,
                                          "end_byte": 360,
                                          "text": "B",
                                          "children": []
                                        },
                                        {
                                          "type": ">",
                                          "start_byte": 361,
                                          "end_byte": 362,
                                          "text": ">",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 363,
                                          "end_byte": 364,
                                          "text": "A",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 365,
                                      "end_byte": 366,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 367,
                                  "end_byte": 413,
                                  "text": "{ y = z / B ; printf ( \"%d %d\\n\" , B , y ) ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 367,
                                      "end_byte": 368,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 369,
                                      "end_byte": 380,
                                      "text": "y = z / B ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 369,
                                          "end_byte": 378,
                                          "text": "y = z / B",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 369,
                                              "end_byte": 370,
                                              "text": "y",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 371,
                                              "end_byte": 372,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 373,
                                              "end_byte": 378,
                                              "text": "z / B",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 373,
                                                  "end_byte": 374,
                                                  "text": "z",
                                                  "children": []
                                                },
                                                {
                                                  "type": "/",
                                                  "start_byte": 375,
                                                  "end_byte": 376,
                                                  "text": "/",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 377,
                                                  "end_byte": 378,
                                                  "text": "B",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 379,
                                          "end_byte": 380,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 381,
                                      "end_byte": 411,
                                      "text": "printf ( \"%d %d\\n\" , B , y ) ;",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start_byte": 381,
                                          "end_byte": 409,
                                          "text": "printf ( \"%d %d\\n\" , B , y )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 381,
                                              "end_byte": 387,
                                              "text": "printf",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 388,
                                              "end_byte": 409,
                                              "text": "( \"%d %d\\n\" , B , y )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 388,
                                                  "end_byte": 389,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_literal",
                                                  "start_byte": 390,
                                                  "end_byte": 399,
                                                  "text": "\"%d %d\\n\"",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 390,
                                                      "end_byte": 391,
                                                      "text": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start_byte": 391,
                                                      "end_byte": 396,
                                                      "text": "%d %d",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "escape_sequence",
                                                      "start_byte": 396,
                                                      "end_byte": 398,
                                                      "text": "\\n",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 398,
                                                      "end_byte": 399,
                                                      "text": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 400,
                                                  "end_byte": 401,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 402,
                                                  "end_byte": 403,
                                                  "text": "B",
                                                  "children": []
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 404,
                                                  "end_byte": 405,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 406,
                                                  "end_byte": 407,
                                                  "text": "y",
                                                  "children": []
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 408,
                                                  "end_byte": 409,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 410,
                                          "end_byte": 411,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 412,
                                      "end_byte": 413,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 414,
                      "end_byte": 415,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 416,
              "end_byte": 417,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}