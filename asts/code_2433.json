{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 802,
  "text": "unsigned int max ( unsigned int a , unsigned int b ) { return a >= b ? a : b ; } unsigned int min ( unsigned int a , unsigned int b ) { return a <= b ? a : b ; } int main ( ) { unsigned int t , n , i , j , k , number ; unsigned int triangle [ 100 ] [ 100 ] ; unsigned int max_path = 0 ; scanf ( \"%u\" , & t ) ; for ( i = 0 ; i < t ; i ++ ) { scanf ( \"%u\" , & n ) ; for ( j = 0 ; j < n ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%u\" , & number ) ; if ( j > 0 ) { triangle [ j ] [ k ] = max ( number + triangle [ j - 1 ] [ min ( k , j - 1 ) ] , number + triangle [ j - 1 ] [ max ( k - 1 , 0 ) ] ) ; } else { triangle [ j ] [ k ] = number ; } } } for ( k = 0 ; k < n ; k ++ ) { max_path = max ( max_path , triangle [ n - 1 ] [ k ] ) ; } printf ( \"%u\\n\" , max_path ) ; max_path = 0 ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 80,
      "text": "unsigned int max ( unsigned int a , unsigned int b ) { return a >= b ? a : b ; }",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 0,
          "end_byte": 12,
          "text": "unsigned int",
          "children": [
            {
              "type": "unsigned",
              "start_byte": 0,
              "end_byte": 8,
              "text": "unsigned",
              "children": []
            },
            {
              "type": "primitive_type",
              "start_byte": 9,
              "end_byte": 12,
              "text": "int",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 13,
          "end_byte": 52,
          "text": "max ( unsigned int a , unsigned int b )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 13,
              "end_byte": 16,
              "text": "max",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 17,
              "end_byte": 52,
              "text": "( unsigned int a , unsigned int b )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 17,
                  "end_byte": 18,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 19,
                  "end_byte": 33,
                  "text": "unsigned int a",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 19,
                      "end_byte": 31,
                      "text": "unsigned int",
                      "children": [
                        {
                          "type": "unsigned",
                          "start_byte": 19,
                          "end_byte": 27,
                          "text": "unsigned",
                          "children": []
                        },
                        {
                          "type": "primitive_type",
                          "start_byte": 28,
                          "end_byte": 31,
                          "text": "int",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 32,
                      "end_byte": 33,
                      "text": "a",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 34,
                  "end_byte": 35,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 36,
                  "end_byte": 50,
                  "text": "unsigned int b",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 36,
                      "end_byte": 48,
                      "text": "unsigned int",
                      "children": [
                        {
                          "type": "unsigned",
                          "start_byte": 36,
                          "end_byte": 44,
                          "text": "unsigned",
                          "children": []
                        },
                        {
                          "type": "primitive_type",
                          "start_byte": 45,
                          "end_byte": 48,
                          "text": "int",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 49,
                      "end_byte": 50,
                      "text": "b",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 51,
                  "end_byte": 52,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 53,
          "end_byte": 80,
          "text": "{ return a >= b ? a : b ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 53,
              "end_byte": 54,
              "text": "{",
              "children": []
            },
            {
              "type": "return_statement",
              "start_byte": 55,
              "end_byte": 78,
              "text": "return a >= b ? a : b ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 55,
                  "end_byte": 61,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "conditional_expression",
                  "start_byte": 62,
                  "end_byte": 76,
                  "text": "a >= b ? a : b",
                  "children": [
                    {
                      "type": "binary_expression",
                      "start_byte": 62,
                      "end_byte": 68,
                      "text": "a >= b",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 62,
                          "end_byte": 63,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": ">=",
                          "start_byte": 64,
                          "end_byte": 66,
                          "text": ">=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 67,
                          "end_byte": 68,
                          "text": "b",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "?",
                      "start_byte": 69,
                      "end_byte": 70,
                      "text": "?",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 71,
                      "end_byte": 72,
                      "text": "a",
                      "children": []
                    },
                    {
                      "type": ":",
                      "start_byte": 73,
                      "end_byte": 74,
                      "text": ":",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 75,
                      "end_byte": 76,
                      "text": "b",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 77,
                  "end_byte": 78,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 79,
              "end_byte": 80,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 81,
      "end_byte": 161,
      "text": "unsigned int min ( unsigned int a , unsigned int b ) { return a <= b ? a : b ; }",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 81,
          "end_byte": 93,
          "text": "unsigned int",
          "children": [
            {
              "type": "unsigned",
              "start_byte": 81,
              "end_byte": 89,
              "text": "unsigned",
              "children": []
            },
            {
              "type": "primitive_type",
              "start_byte": 90,
              "end_byte": 93,
              "text": "int",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 94,
          "end_byte": 133,
          "text": "min ( unsigned int a , unsigned int b )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 94,
              "end_byte": 97,
              "text": "min",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 98,
              "end_byte": 133,
              "text": "( unsigned int a , unsigned int b )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 98,
                  "end_byte": 99,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 100,
                  "end_byte": 114,
                  "text": "unsigned int a",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 100,
                      "end_byte": 112,
                      "text": "unsigned int",
                      "children": [
                        {
                          "type": "unsigned",
                          "start_byte": 100,
                          "end_byte": 108,
                          "text": "unsigned",
                          "children": []
                        },
                        {
                          "type": "primitive_type",
                          "start_byte": 109,
                          "end_byte": 112,
                          "text": "int",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 113,
                      "end_byte": 114,
                      "text": "a",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 115,
                  "end_byte": 116,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 117,
                  "end_byte": 131,
                  "text": "unsigned int b",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 117,
                      "end_byte": 129,
                      "text": "unsigned int",
                      "children": [
                        {
                          "type": "unsigned",
                          "start_byte": 117,
                          "end_byte": 125,
                          "text": "unsigned",
                          "children": []
                        },
                        {
                          "type": "primitive_type",
                          "start_byte": 126,
                          "end_byte": 129,
                          "text": "int",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 130,
                      "end_byte": 131,
                      "text": "b",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 132,
                  "end_byte": 133,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 134,
          "end_byte": 161,
          "text": "{ return a <= b ? a : b ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 134,
              "end_byte": 135,
              "text": "{",
              "children": []
            },
            {
              "type": "return_statement",
              "start_byte": 136,
              "end_byte": 159,
              "text": "return a <= b ? a : b ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 136,
                  "end_byte": 142,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "conditional_expression",
                  "start_byte": 143,
                  "end_byte": 157,
                  "text": "a <= b ? a : b",
                  "children": [
                    {
                      "type": "binary_expression",
                      "start_byte": 143,
                      "end_byte": 149,
                      "text": "a <= b",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 143,
                          "end_byte": 144,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": "<=",
                          "start_byte": 145,
                          "end_byte": 147,
                          "text": "<=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 148,
                          "end_byte": 149,
                          "text": "b",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "?",
                      "start_byte": 150,
                      "end_byte": 151,
                      "text": "?",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 152,
                      "end_byte": 153,
                      "text": "a",
                      "children": []
                    },
                    {
                      "type": ":",
                      "start_byte": 154,
                      "end_byte": 155,
                      "text": ":",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 156,
                      "end_byte": 157,
                      "text": "b",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 158,
                  "end_byte": 159,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 160,
              "end_byte": 161,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 162,
      "end_byte": 802,
      "text": "int main ( ) { unsigned int t , n , i , j , k , number ; unsigned int triangle [ 100 ] [ 100 ] ; unsigned int max_path = 0 ; scanf ( \"%u\" , & t ) ; for ( i = 0 ; i < t ; i ++ ) { scanf ( \"%u\" , & n ) ; for ( j = 0 ; j < n ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%u\" , & number ) ; if ( j > 0 ) { triangle [ j ] [ k ] = max ( number + triangle [ j - 1 ] [ min ( k , j - 1 ) ] , number + triangle [ j - 1 ] [ max ( k - 1 , 0 ) ] ) ; } else { triangle [ j ] [ k ] = number ; } } } for ( k = 0 ; k < n ; k ++ ) { max_path = max ( max_path , triangle [ n - 1 ] [ k ] ) ; } printf ( \"%u\\n\" , max_path ) ; max_path = 0 ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 162,
          "end_byte": 165,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 166,
          "end_byte": 174,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 166,
              "end_byte": 170,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 171,
              "end_byte": 174,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 171,
                  "end_byte": 172,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 173,
                  "end_byte": 174,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 175,
          "end_byte": 802,
          "text": "{ unsigned int t , n , i , j , k , number ; unsigned int triangle [ 100 ] [ 100 ] ; unsigned int max_path = 0 ; scanf ( \"%u\" , & t ) ; for ( i = 0 ; i < t ; i ++ ) { scanf ( \"%u\" , & n ) ; for ( j = 0 ; j < n ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%u\" , & number ) ; if ( j > 0 ) { triangle [ j ] [ k ] = max ( number + triangle [ j - 1 ] [ min ( k , j - 1 ) ] , number + triangle [ j - 1 ] [ max ( k - 1 , 0 ) ] ) ; } else { triangle [ j ] [ k ] = number ; } } } for ( k = 0 ; k < n ; k ++ ) { max_path = max ( max_path , triangle [ n - 1 ] [ k ] ) ; } printf ( \"%u\\n\" , max_path ) ; max_path = 0 ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 175,
              "end_byte": 176,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 177,
              "end_byte": 218,
              "text": "unsigned int t , n , i , j , k , number ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 177,
                  "end_byte": 189,
                  "text": "unsigned int",
                  "children": [
                    {
                      "type": "unsigned",
                      "start_byte": 177,
                      "end_byte": 185,
                      "text": "unsigned",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 186,
                      "end_byte": 189,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 190,
                  "end_byte": 191,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 192,
                  "end_byte": 193,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 194,
                  "end_byte": 195,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 196,
                  "end_byte": 197,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 198,
                  "end_byte": 199,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 200,
                  "end_byte": 201,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 202,
                  "end_byte": 203,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 204,
                  "end_byte": 205,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 206,
                  "end_byte": 207,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 208,
                  "end_byte": 209,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 210,
                  "end_byte": 216,
                  "text": "number",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 217,
                  "end_byte": 218,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 219,
              "end_byte": 258,
              "text": "unsigned int triangle [ 100 ] [ 100 ] ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 219,
                  "end_byte": 231,
                  "text": "unsigned int",
                  "children": [
                    {
                      "type": "unsigned",
                      "start_byte": 219,
                      "end_byte": 227,
                      "text": "unsigned",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 228,
                      "end_byte": 231,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "array_declarator",
                  "start_byte": 232,
                  "end_byte": 256,
                  "text": "triangle [ 100 ] [ 100 ]",
                  "children": [
                    {
                      "type": "array_declarator",
                      "start_byte": 232,
                      "end_byte": 248,
                      "text": "triangle [ 100 ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 232,
                          "end_byte": 240,
                          "text": "triangle",
                          "children": []
                        },
                        {
                          "type": "[",
                          "start_byte": 241,
                          "end_byte": 242,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 243,
                          "end_byte": 246,
                          "text": "100",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 247,
                          "end_byte": 248,
                          "text": "]",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "[",
                      "start_byte": 249,
                      "end_byte": 250,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 251,
                      "end_byte": 254,
                      "text": "100",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 255,
                      "end_byte": 256,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 257,
                  "end_byte": 258,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 259,
              "end_byte": 286,
              "text": "unsigned int max_path = 0 ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 259,
                  "end_byte": 271,
                  "text": "unsigned int",
                  "children": [
                    {
                      "type": "unsigned",
                      "start_byte": 259,
                      "end_byte": 267,
                      "text": "unsigned",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 268,
                      "end_byte": 271,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "init_declarator",
                  "start_byte": 272,
                  "end_byte": 284,
                  "text": "max_path = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 272,
                      "end_byte": 280,
                      "text": "max_path",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 281,
                      "end_byte": 282,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 283,
                      "end_byte": 284,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 285,
                  "end_byte": 286,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 287,
              "end_byte": 309,
              "text": "scanf ( \"%u\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 287,
                  "end_byte": 307,
                  "text": "scanf ( \"%u\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 287,
                      "end_byte": 292,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 293,
                      "end_byte": 307,
                      "text": "( \"%u\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 293,
                          "end_byte": 294,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 295,
                          "end_byte": 299,
                          "text": "\"%u\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 295,
                              "end_byte": 296,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 296,
                              "end_byte": 298,
                              "text": "%u",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 298,
                              "end_byte": 299,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 300,
                          "end_byte": 301,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 302,
                          "end_byte": 305,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 302,
                              "end_byte": 303,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 304,
                              "end_byte": 305,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 306,
                          "end_byte": 307,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 308,
                  "end_byte": 309,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 310,
              "end_byte": 789,
              "text": "for ( i = 0 ; i < t ; i ++ ) { scanf ( \"%u\" , & n ) ; for ( j = 0 ; j < n ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%u\" , & number ) ; if ( j > 0 ) { triangle [ j ] [ k ] = max ( number + triangle [ j - 1 ] [ min ( k , j - 1 ) ] , number + triangle [ j - 1 ] [ max ( k - 1 , 0 ) ] ) ; } else { triangle [ j ] [ k ] = number ; } } } for ( k = 0 ; k < n ; k ++ ) { max_path = max ( max_path , triangle [ n - 1 ] [ k ] ) ; } printf ( \"%u\\n\" , max_path ) ; max_path = 0 ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 310,
                  "end_byte": 313,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 314,
                  "end_byte": 315,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 316,
                  "end_byte": 321,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 316,
                      "end_byte": 317,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 318,
                      "end_byte": 319,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 320,
                      "end_byte": 321,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 322,
                  "end_byte": 323,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 324,
                  "end_byte": 329,
                  "text": "i < t",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 324,
                      "end_byte": 325,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 326,
                      "end_byte": 327,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 328,
                      "end_byte": 329,
                      "text": "t",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 330,
                  "end_byte": 331,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 332,
                  "end_byte": 336,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 332,
                      "end_byte": 333,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 334,
                      "end_byte": 336,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 337,
                  "end_byte": 338,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 339,
                  "end_byte": 789,
                  "text": "{ scanf ( \"%u\" , & n ) ; for ( j = 0 ; j < n ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%u\" , & number ) ; if ( j > 0 ) { triangle [ j ] [ k ] = max ( number + triangle [ j - 1 ] [ min ( k , j - 1 ) ] , number + triangle [ j - 1 ] [ max ( k - 1 , 0 ) ] ) ; } else { triangle [ j ] [ k ] = number ; } } } for ( k = 0 ; k < n ; k ++ ) { max_path = max ( max_path , triangle [ n - 1 ] [ k ] ) ; } printf ( \"%u\\n\" , max_path ) ; max_path = 0 ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 339,
                      "end_byte": 340,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 341,
                      "end_byte": 363,
                      "text": "scanf ( \"%u\" , & n ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 341,
                          "end_byte": 361,
                          "text": "scanf ( \"%u\" , & n )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 341,
                              "end_byte": 346,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 347,
                              "end_byte": 361,
                              "text": "( \"%u\" , & n )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 347,
                                  "end_byte": 348,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 349,
                                  "end_byte": 353,
                                  "text": "\"%u\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 349,
                                      "end_byte": 350,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 350,
                                      "end_byte": 352,
                                      "text": "%u",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 352,
                                      "end_byte": 353,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 354,
                                  "end_byte": 355,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 356,
                                  "end_byte": 359,
                                  "text": "& n",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 356,
                                      "end_byte": 357,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 358,
                                      "end_byte": 359,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 360,
                                  "end_byte": 361,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 362,
                          "end_byte": 363,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 364,
                      "end_byte": 651,
                      "text": "for ( j = 0 ; j < n ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%u\" , & number ) ; if ( j > 0 ) { triangle [ j ] [ k ] = max ( number + triangle [ j - 1 ] [ min ( k , j - 1 ) ] , number + triangle [ j - 1 ] [ max ( k - 1 , 0 ) ] ) ; } else { triangle [ j ] [ k ] = number ; } } }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 364,
                          "end_byte": 367,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 368,
                          "end_byte": 369,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 370,
                          "end_byte": 375,
                          "text": "j = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 370,
                              "end_byte": 371,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 372,
                              "end_byte": 373,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 374,
                              "end_byte": 375,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 376,
                          "end_byte": 377,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 378,
                          "end_byte": 383,
                          "text": "j < n",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 378,
                              "end_byte": 379,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 380,
                              "end_byte": 381,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 382,
                              "end_byte": 383,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 384,
                          "end_byte": 385,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 386,
                          "end_byte": 390,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 386,
                              "end_byte": 387,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 388,
                              "end_byte": 390,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 391,
                          "end_byte": 392,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 393,
                          "end_byte": 651,
                          "text": "{ for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%u\" , & number ) ; if ( j > 0 ) { triangle [ j ] [ k ] = max ( number + triangle [ j - 1 ] [ min ( k , j - 1 ) ] , number + triangle [ j - 1 ] [ max ( k - 1 , 0 ) ] ) ; } else { triangle [ j ] [ k ] = number ; } } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 393,
                              "end_byte": 394,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 395,
                              "end_byte": 649,
                              "text": "for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%u\" , & number ) ; if ( j > 0 ) { triangle [ j ] [ k ] = max ( number + triangle [ j - 1 ] [ min ( k , j - 1 ) ] , number + triangle [ j - 1 ] [ max ( k - 1 , 0 ) ] ) ; } else { triangle [ j ] [ k ] = number ; } }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 395,
                                  "end_byte": 398,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 399,
                                  "end_byte": 400,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 401,
                                  "end_byte": 406,
                                  "text": "k = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 401,
                                      "end_byte": 402,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 403,
                                      "end_byte": 404,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 405,
                                      "end_byte": 406,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 407,
                                  "end_byte": 408,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 409,
                                  "end_byte": 415,
                                  "text": "k <= j",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 409,
                                      "end_byte": 410,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "<=",
                                      "start_byte": 411,
                                      "end_byte": 413,
                                      "text": "<=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 414,
                                      "end_byte": 415,
                                      "text": "j",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 416,
                                  "end_byte": 417,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 418,
                                  "end_byte": 422,
                                  "text": "k ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 418,
                                      "end_byte": 419,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 420,
                                      "end_byte": 422,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 423,
                                  "end_byte": 424,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 425,
                                  "end_byte": 649,
                                  "text": "{ scanf ( \"%u\" , & number ) ; if ( j > 0 ) { triangle [ j ] [ k ] = max ( number + triangle [ j - 1 ] [ min ( k , j - 1 ) ] , number + triangle [ j - 1 ] [ max ( k - 1 , 0 ) ] ) ; } else { triangle [ j ] [ k ] = number ; } }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 425,
                                      "end_byte": 426,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 427,
                                      "end_byte": 454,
                                      "text": "scanf ( \"%u\" , & number ) ;",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start_byte": 427,
                                          "end_byte": 452,
                                          "text": "scanf ( \"%u\" , & number )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 427,
                                              "end_byte": 432,
                                              "text": "scanf",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 433,
                                              "end_byte": 452,
                                              "text": "( \"%u\" , & number )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 433,
                                                  "end_byte": 434,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_literal",
                                                  "start_byte": 435,
                                                  "end_byte": 439,
                                                  "text": "\"%u\"",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 435,
                                                      "end_byte": 436,
                                                      "text": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start_byte": 436,
                                                      "end_byte": 438,
                                                      "text": "%u",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 438,
                                                      "end_byte": 439,
                                                      "text": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 440,
                                                  "end_byte": 441,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "pointer_expression",
                                                  "start_byte": 442,
                                                  "end_byte": 450,
                                                  "text": "& number",
                                                  "children": [
                                                    {
                                                      "type": "&",
                                                      "start_byte": 442,
                                                      "end_byte": 443,
                                                      "text": "&",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 444,
                                                      "end_byte": 450,
                                                      "text": "number",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 451,
                                                  "end_byte": 452,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 453,
                                          "end_byte": 454,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 455,
                                      "end_byte": 647,
                                      "text": "if ( j > 0 ) { triangle [ j ] [ k ] = max ( number + triangle [ j - 1 ] [ min ( k , j - 1 ) ] , number + triangle [ j - 1 ] [ max ( k - 1 , 0 ) ] ) ; } else { triangle [ j ] [ k ] = number ; }",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 455,
                                          "end_byte": 457,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 458,
                                          "end_byte": 467,
                                          "text": "( j > 0 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 458,
                                              "end_byte": 459,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 460,
                                              "end_byte": 465,
                                              "text": "j > 0",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 460,
                                                  "end_byte": 461,
                                                  "text": "j",
                                                  "children": []
                                                },
                                                {
                                                  "type": ">",
                                                  "start_byte": 462,
                                                  "end_byte": 463,
                                                  "text": ">",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 464,
                                                  "end_byte": 465,
                                                  "text": "0",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 466,
                                              "end_byte": 467,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "compound_statement",
                                          "start_byte": 468,
                                          "end_byte": 606,
                                          "text": "{ triangle [ j ] [ k ] = max ( number + triangle [ j - 1 ] [ min ( k , j - 1 ) ] , number + triangle [ j - 1 ] [ max ( k - 1 , 0 ) ] ) ; }",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start_byte": 468,
                                              "end_byte": 469,
                                              "text": "{",
                                              "children": []
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 470,
                                              "end_byte": 604,
                                              "text": "triangle [ j ] [ k ] = max ( number + triangle [ j - 1 ] [ min ( k , j - 1 ) ] , number + triangle [ j - 1 ] [ max ( k - 1 , 0 ) ] ) ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 470,
                                                  "end_byte": 602,
                                                  "text": "triangle [ j ] [ k ] = max ( number + triangle [ j - 1 ] [ min ( k , j - 1 ) ] , number + triangle [ j - 1 ] [ max ( k - 1 , 0 ) ] )",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 470,
                                                      "end_byte": 490,
                                                      "text": "triangle [ j ] [ k ]",
                                                      "children": [
                                                        {
                                                          "type": "subscript_expression",
                                                          "start_byte": 470,
                                                          "end_byte": 484,
                                                          "text": "triangle [ j ]",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 470,
                                                              "end_byte": 478,
                                                              "text": "triangle",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "subscript_argument_list",
                                                              "start_byte": 479,
                                                              "end_byte": 484,
                                                              "text": "[ j ]",
                                                              "children": [
                                                                {
                                                                  "type": "[",
                                                                  "start_byte": 479,
                                                                  "end_byte": 480,
                                                                  "text": "[",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 481,
                                                                  "end_byte": 482,
                                                                  "text": "j",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "]",
                                                                  "start_byte": 483,
                                                                  "end_byte": 484,
                                                                  "text": "]",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 485,
                                                          "end_byte": 490,
                                                          "text": "[ k ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 485,
                                                              "end_byte": 486,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 487,
                                                              "end_byte": 488,
                                                              "text": "k",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 489,
                                                              "end_byte": 490,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 491,
                                                      "end_byte": 492,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "call_expression",
                                                      "start_byte": 493,
                                                      "end_byte": 602,
                                                      "text": "max ( number + triangle [ j - 1 ] [ min ( k , j - 1 ) ] , number + triangle [ j - 1 ] [ max ( k - 1 , 0 ) ] )",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 493,
                                                          "end_byte": 496,
                                                          "text": "max",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "argument_list",
                                                          "start_byte": 497,
                                                          "end_byte": 602,
                                                          "text": "( number + triangle [ j - 1 ] [ min ( k , j - 1 ) ] , number + triangle [ j - 1 ] [ max ( k - 1 , 0 ) ] )",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start_byte": 497,
                                                              "end_byte": 498,
                                                              "text": "(",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 499,
                                                              "end_byte": 548,
                                                              "text": "number + triangle [ j - 1 ] [ min ( k , j - 1 ) ]",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 499,
                                                                  "end_byte": 505,
                                                                  "text": "number",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "+",
                                                                  "start_byte": 506,
                                                                  "end_byte": 507,
                                                                  "text": "+",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "subscript_expression",
                                                                  "start_byte": 508,
                                                                  "end_byte": 548,
                                                                  "text": "triangle [ j - 1 ] [ min ( k , j - 1 ) ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "subscript_expression",
                                                                      "start_byte": 508,
                                                                      "end_byte": 526,
                                                                      "text": "triangle [ j - 1 ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 508,
                                                                          "end_byte": 516,
                                                                          "text": "triangle",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "subscript_argument_list",
                                                                          "start_byte": 517,
                                                                          "end_byte": 526,
                                                                          "text": "[ j - 1 ]",
                                                                          "children": [
                                                                            {
                                                                              "type": "[",
                                                                              "start_byte": 517,
                                                                              "end_byte": 518,
                                                                              "text": "[",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "binary_expression",
                                                                              "start_byte": 519,
                                                                              "end_byte": 524,
                                                                              "text": "j - 1",
                                                                              "children": [
                                                                                {
                                                                                  "type": "identifier",
                                                                                  "start_byte": 519,
                                                                                  "end_byte": 520,
                                                                                  "text": "j",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "-",
                                                                                  "start_byte": 521,
                                                                                  "end_byte": 522,
                                                                                  "text": "-",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "number_literal",
                                                                                  "start_byte": 523,
                                                                                  "end_byte": 524,
                                                                                  "text": "1",
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "]",
                                                                              "start_byte": 525,
                                                                              "end_byte": 526,
                                                                              "text": "]",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "subscript_argument_list",
                                                                      "start_byte": 527,
                                                                      "end_byte": 548,
                                                                      "text": "[ min ( k , j - 1 ) ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "[",
                                                                          "start_byte": 527,
                                                                          "end_byte": 528,
                                                                          "text": "[",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "call_expression",
                                                                          "start_byte": 529,
                                                                          "end_byte": 546,
                                                                          "text": "min ( k , j - 1 )",
                                                                          "children": [
                                                                            {
                                                                              "type": "identifier",
                                                                              "start_byte": 529,
                                                                              "end_byte": 532,
                                                                              "text": "min",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "argument_list",
                                                                              "start_byte": 533,
                                                                              "end_byte": 546,
                                                                              "text": "( k , j - 1 )",
                                                                              "children": [
                                                                                {
                                                                                  "type": "(",
                                                                                  "start_byte": 533,
                                                                                  "end_byte": 534,
                                                                                  "text": "(",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "identifier",
                                                                                  "start_byte": 535,
                                                                                  "end_byte": 536,
                                                                                  "text": "k",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": ",",
                                                                                  "start_byte": 537,
                                                                                  "end_byte": 538,
                                                                                  "text": ",",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "binary_expression",
                                                                                  "start_byte": 539,
                                                                                  "end_byte": 544,
                                                                                  "text": "j - 1",
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "identifier",
                                                                                      "start_byte": 539,
                                                                                      "end_byte": 540,
                                                                                      "text": "j",
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "-",
                                                                                      "start_byte": 541,
                                                                                      "end_byte": 542,
                                                                                      "text": "-",
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "number_literal",
                                                                                      "start_byte": 543,
                                                                                      "end_byte": 544,
                                                                                      "text": "1",
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": ")",
                                                                                  "start_byte": 545,
                                                                                  "end_byte": 546,
                                                                                  "text": ")",
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "]",
                                                                          "start_byte": 547,
                                                                          "end_byte": 548,
                                                                          "text": "]",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ",",
                                                              "start_byte": 549,
                                                              "end_byte": 550,
                                                              "text": ",",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 551,
                                                              "end_byte": 600,
                                                              "text": "number + triangle [ j - 1 ] [ max ( k - 1 , 0 ) ]",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 551,
                                                                  "end_byte": 557,
                                                                  "text": "number",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "+",
                                                                  "start_byte": 558,
                                                                  "end_byte": 559,
                                                                  "text": "+",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "subscript_expression",
                                                                  "start_byte": 560,
                                                                  "end_byte": 600,
                                                                  "text": "triangle [ j - 1 ] [ max ( k - 1 , 0 ) ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "subscript_expression",
                                                                      "start_byte": 560,
                                                                      "end_byte": 578,
                                                                      "text": "triangle [ j - 1 ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 560,
                                                                          "end_byte": 568,
                                                                          "text": "triangle",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "subscript_argument_list",
                                                                          "start_byte": 569,
                                                                          "end_byte": 578,
                                                                          "text": "[ j - 1 ]",
                                                                          "children": [
                                                                            {
                                                                              "type": "[",
                                                                              "start_byte": 569,
                                                                              "end_byte": 570,
                                                                              "text": "[",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "binary_expression",
                                                                              "start_byte": 571,
                                                                              "end_byte": 576,
                                                                              "text": "j - 1",
                                                                              "children": [
                                                                                {
                                                                                  "type": "identifier",
                                                                                  "start_byte": 571,
                                                                                  "end_byte": 572,
                                                                                  "text": "j",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "-",
                                                                                  "start_byte": 573,
                                                                                  "end_byte": 574,
                                                                                  "text": "-",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "number_literal",
                                                                                  "start_byte": 575,
                                                                                  "end_byte": 576,
                                                                                  "text": "1",
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "]",
                                                                              "start_byte": 577,
                                                                              "end_byte": 578,
                                                                              "text": "]",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "subscript_argument_list",
                                                                      "start_byte": 579,
                                                                      "end_byte": 600,
                                                                      "text": "[ max ( k - 1 , 0 ) ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "[",
                                                                          "start_byte": 579,
                                                                          "end_byte": 580,
                                                                          "text": "[",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "call_expression",
                                                                          "start_byte": 581,
                                                                          "end_byte": 598,
                                                                          "text": "max ( k - 1 , 0 )",
                                                                          "children": [
                                                                            {
                                                                              "type": "identifier",
                                                                              "start_byte": 581,
                                                                              "end_byte": 584,
                                                                              "text": "max",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "argument_list",
                                                                              "start_byte": 585,
                                                                              "end_byte": 598,
                                                                              "text": "( k - 1 , 0 )",
                                                                              "children": [
                                                                                {
                                                                                  "type": "(",
                                                                                  "start_byte": 585,
                                                                                  "end_byte": 586,
                                                                                  "text": "(",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "binary_expression",
                                                                                  "start_byte": 587,
                                                                                  "end_byte": 592,
                                                                                  "text": "k - 1",
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "identifier",
                                                                                      "start_byte": 587,
                                                                                      "end_byte": 588,
                                                                                      "text": "k",
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "-",
                                                                                      "start_byte": 589,
                                                                                      "end_byte": 590,
                                                                                      "text": "-",
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "number_literal",
                                                                                      "start_byte": 591,
                                                                                      "end_byte": 592,
                                                                                      "text": "1",
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": ",",
                                                                                  "start_byte": 593,
                                                                                  "end_byte": 594,
                                                                                  "text": ",",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "number_literal",
                                                                                  "start_byte": 595,
                                                                                  "end_byte": 596,
                                                                                  "text": "0",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": ")",
                                                                                  "start_byte": 597,
                                                                                  "end_byte": 598,
                                                                                  "text": ")",
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "]",
                                                                          "start_byte": 599,
                                                                          "end_byte": 600,
                                                                          "text": "]",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start_byte": 601,
                                                              "end_byte": 602,
                                                              "text": ")",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 603,
                                                  "end_byte": 604,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start_byte": 605,
                                              "end_byte": 606,
                                              "text": "}",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "else_clause",
                                          "start_byte": 607,
                                          "end_byte": 647,
                                          "text": "else { triangle [ j ] [ k ] = number ; }",
                                          "children": [
                                            {
                                              "type": "else",
                                              "start_byte": 607,
                                              "end_byte": 611,
                                              "text": "else",
                                              "children": []
                                            },
                                            {
                                              "type": "compound_statement",
                                              "start_byte": 612,
                                              "end_byte": 647,
                                              "text": "{ triangle [ j ] [ k ] = number ; }",
                                              "children": [
                                                {
                                                  "type": "{",
                                                  "start_byte": 612,
                                                  "end_byte": 613,
                                                  "text": "{",
                                                  "children": []
                                                },
                                                {
                                                  "type": "expression_statement",
                                                  "start_byte": 614,
                                                  "end_byte": 645,
                                                  "text": "triangle [ j ] [ k ] = number ;",
                                                  "children": [
                                                    {
                                                      "type": "assignment_expression",
                                                      "start_byte": 614,
                                                      "end_byte": 643,
                                                      "text": "triangle [ j ] [ k ] = number",
                                                      "children": [
                                                        {
                                                          "type": "subscript_expression",
                                                          "start_byte": 614,
                                                          "end_byte": 634,
                                                          "text": "triangle [ j ] [ k ]",
                                                          "children": [
                                                            {
                                                              "type": "subscript_expression",
                                                              "start_byte": 614,
                                                              "end_byte": 628,
                                                              "text": "triangle [ j ]",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 614,
                                                                  "end_byte": 622,
                                                                  "text": "triangle",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "subscript_argument_list",
                                                                  "start_byte": 623,
                                                                  "end_byte": 628,
                                                                  "text": "[ j ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "[",
                                                                      "start_byte": 623,
                                                                      "end_byte": 624,
                                                                      "text": "[",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 625,
                                                                      "end_byte": 626,
                                                                      "text": "j",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "]",
                                                                      "start_byte": 627,
                                                                      "end_byte": 628,
                                                                      "text": "]",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "subscript_argument_list",
                                                              "start_byte": 629,
                                                              "end_byte": 634,
                                                              "text": "[ k ]",
                                                              "children": [
                                                                {
                                                                  "type": "[",
                                                                  "start_byte": 629,
                                                                  "end_byte": 630,
                                                                  "text": "[",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 631,
                                                                  "end_byte": 632,
                                                                  "text": "k",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "]",
                                                                  "start_byte": 633,
                                                                  "end_byte": 634,
                                                                  "text": "]",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "=",
                                                          "start_byte": 635,
                                                          "end_byte": 636,
                                                          "text": "=",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 637,
                                                          "end_byte": 643,
                                                          "text": "number",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ";",
                                                      "start_byte": 644,
                                                      "end_byte": 645,
                                                      "text": ";",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "}",
                                                  "start_byte": 646,
                                                  "end_byte": 647,
                                                  "text": "}",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 648,
                                      "end_byte": 649,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 650,
                              "end_byte": 651,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 652,
                      "end_byte": 741,
                      "text": "for ( k = 0 ; k < n ; k ++ ) { max_path = max ( max_path , triangle [ n - 1 ] [ k ] ) ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 652,
                          "end_byte": 655,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 656,
                          "end_byte": 657,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 658,
                          "end_byte": 663,
                          "text": "k = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 658,
                              "end_byte": 659,
                              "text": "k",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 660,
                              "end_byte": 661,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 662,
                              "end_byte": 663,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 664,
                          "end_byte": 665,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 666,
                          "end_byte": 671,
                          "text": "k < n",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 666,
                              "end_byte": 667,
                              "text": "k",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 668,
                              "end_byte": 669,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 670,
                              "end_byte": 671,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 672,
                          "end_byte": 673,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 674,
                          "end_byte": 678,
                          "text": "k ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 674,
                              "end_byte": 675,
                              "text": "k",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 676,
                              "end_byte": 678,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 679,
                          "end_byte": 680,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 681,
                          "end_byte": 741,
                          "text": "{ max_path = max ( max_path , triangle [ n - 1 ] [ k ] ) ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 681,
                              "end_byte": 682,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 683,
                              "end_byte": 739,
                              "text": "max_path = max ( max_path , triangle [ n - 1 ] [ k ] ) ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 683,
                                  "end_byte": 737,
                                  "text": "max_path = max ( max_path , triangle [ n - 1 ] [ k ] )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 683,
                                      "end_byte": 691,
                                      "text": "max_path",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 692,
                                      "end_byte": 693,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 694,
                                      "end_byte": 737,
                                      "text": "max ( max_path , triangle [ n - 1 ] [ k ] )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 694,
                                          "end_byte": 697,
                                          "text": "max",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 698,
                                          "end_byte": 737,
                                          "text": "( max_path , triangle [ n - 1 ] [ k ] )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 698,
                                              "end_byte": 699,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 700,
                                              "end_byte": 708,
                                              "text": "max_path",
                                              "children": []
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 709,
                                              "end_byte": 710,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 711,
                                              "end_byte": 735,
                                              "text": "triangle [ n - 1 ] [ k ]",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 711,
                                                  "end_byte": 729,
                                                  "text": "triangle [ n - 1 ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 711,
                                                      "end_byte": 719,
                                                      "text": "triangle",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 720,
                                                      "end_byte": 729,
                                                      "text": "[ n - 1 ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 720,
                                                          "end_byte": 721,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 722,
                                                          "end_byte": 727,
                                                          "text": "n - 1",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 722,
                                                              "end_byte": 723,
                                                              "text": "n",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "-",
                                                              "start_byte": 724,
                                                              "end_byte": 725,
                                                              "text": "-",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "number_literal",
                                                              "start_byte": 726,
                                                              "end_byte": 727,
                                                              "text": "1",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 728,
                                                          "end_byte": 729,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 730,
                                                  "end_byte": 735,
                                                  "text": "[ k ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 730,
                                                      "end_byte": 731,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 732,
                                                      "end_byte": 733,
                                                      "text": "k",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 734,
                                                      "end_byte": 735,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 736,
                                              "end_byte": 737,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 738,
                                  "end_byte": 739,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 740,
                              "end_byte": 741,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 742,
                      "end_byte": 772,
                      "text": "printf ( \"%u\\n\" , max_path ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 742,
                          "end_byte": 770,
                          "text": "printf ( \"%u\\n\" , max_path )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 742,
                              "end_byte": 748,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 749,
                              "end_byte": 770,
                              "text": "( \"%u\\n\" , max_path )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 749,
                                  "end_byte": 750,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 751,
                                  "end_byte": 757,
                                  "text": "\"%u\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 751,
                                      "end_byte": 752,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 752,
                                      "end_byte": 754,
                                      "text": "%u",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 754,
                                      "end_byte": 756,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 756,
                                      "end_byte": 757,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 758,
                                  "end_byte": 759,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 760,
                                  "end_byte": 768,
                                  "text": "max_path",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 769,
                                  "end_byte": 770,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 771,
                          "end_byte": 772,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 773,
                      "end_byte": 787,
                      "text": "max_path = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 773,
                          "end_byte": 785,
                          "text": "max_path = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 773,
                              "end_byte": 781,
                              "text": "max_path",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 782,
                              "end_byte": 783,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 784,
                              "end_byte": 785,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 786,
                          "end_byte": 787,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 788,
                      "end_byte": 789,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 790,
              "end_byte": 800,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 790,
                  "end_byte": 796,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 797,
                  "end_byte": 798,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 799,
                  "end_byte": 800,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 801,
              "end_byte": 802,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}