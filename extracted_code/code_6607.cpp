void print_array ( int * * head , int nl ) ; int main ( void ) { int t ; scanf ( "%d" , & t ) ; while ( t -- ) { int nl ; scanf ( "%d" , & nl ) ; int count = 0 ; int * * head = ( int * * ) malloc ( nl * sizeof ( int * ) ) ; int * * sum = ( int * * ) malloc ( nl * sizeof ( int * ) ) ; int i = 0 ; for ( ; i < nl ; i ++ ) { * ( head + i ) = ( int * ) malloc ( nl * sizeof ( int ) ) ; * ( sum + i ) = ( int * ) malloc ( nl * sizeof ( int ) ) ; } while ( count < nl ) { for ( i = 0 ; i <= count ; i ++ ) { scanf ( "%d" , * ( head + count ) + i ) ; if ( count < nl - 1 ) sum [ count ] [ i ] = - 1 ; else sum [ count ] [ i ] = head [ count ] [ i ] ; } count ++ ; } printf ( "%d\n" , max ( head , 0 , 0 , nl , sum ) ) ; } } void print_array ( int * * head , int nl ) { int i = 0 ; int j = 0 ; for ( ; i < nl ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) printf ( "%d " , * ( * ( head + i ) + j ) ) ; printf ( "\n" ) ; } } int max ( int * * head , int i , int j , int nl , int * * sum ) { if ( i < nl - 1 ) { int m1 , m2 ; if ( sum [ i + 1 ] [ j ] == - 1 ) sum [ i + 1 ] [ j ] = max ( head , i + 1 , j , nl , sum ) ; m1 = sum [ i + 1 ] [ j ] ; if ( sum [ i + 1 ] [ j + 1 ] == - 1 ) sum [ i + 1 ] [ j + 1 ] = max ( head , i + 1 , j + 1 , nl , sum ) ; m2 = sum [ i + 1 ] [ j + 1 ] ; m1 = ( m1 > m2 ) ? m1 : m2 ; return ( m1 + head [ i ] [ j ] ) ; } else return head [ i ] [ j ] ; }