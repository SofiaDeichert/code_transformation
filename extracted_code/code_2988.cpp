int gcd ( long int , long int ) ; int lcm ( long int , long int ) ; int main ( ) { long int t = 0 , a = 0 , b = 0 ; scanf ( "%ld" , & t ) ; while ( t -- > 0 ) { scanf ( "%ld %ld" , & a , & b ) ; long int g = gcd ( a , b ) ; long int l = lcm ( a , b ) ; printf ( "%ld %ld\n" , g , l ) ; } return 0 ; } int gcd ( long int x , long int y ) { long int dividend = 0 , divisor = 0 , rem = 0 ; if ( x > y ) { dividend = x ; divisor = y ; } else { dividend = y ; divisor = x ; } while ( divisor ) { rem = dividend % divisor ; dividend = divisor ; divisor = rem ; } return dividend ; } int lcm ( long int x , long int y ) { long int min = 0 , max = 0 , lc = 0 , a = 1 , i = 0 ; if ( x < y ) { min = x ; max = y ; } else { min = y ; max = x ; } for ( i = 1 ; i <= min ; i ++ ) { a = max * i ; if ( a % min == 0 ) { lc = a ; break ; } } return lc ; }