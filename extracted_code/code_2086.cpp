struct node { int data ; struct node * next ; } ; typedef struct node NODE ; NODE * head = NULL ; NODE * create ( int ) ; int clear ( ) ; NODE * insert ( int ) ; int sum = 0 ; int main ( ) { int t , n ; int i = 0 , key ; scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & n ) ; head = create ( n ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( "%d" , & key ) ; head = insert ( key ) ; } sum = clear ( ) ; printf ( "%d" , key ) ; } return 0 ; } NODE * create ( int n ) { NODE * p , * q = head ; int i = 0 ; for ( i = 0 ; i < n ; i ++ ) { p = ( NODE * ) malloc ( sizeof ( NODE ) ) ; p -> data = 32000 ; p -> next = NULL ; if ( head == NULL ) head = p ; else { while ( q -> next != NULL ) q = q -> next ; q -> next = p ; } } return head ; } NODE * insert ( int n ) { NODE * p = head ; while ( p -> next != NULL ) { if ( p -> data == 32000 ) { p -> data = n ; break ; } p = p -> next ; } return head ; } int clear ( ) { NODE * p , * q = head ; int key ; p = head -> next ; while ( q -> next != NULL ) { if ( p -> data >= q -> data ) { key = p -> data ; q -> next = p -> next ; free ( p ) ; p = q -> next ; } else { key = q -> data ; head = p ; free ( q ) ; q = head ; p = p -> next ; } sum = sum + key ; } return sum ; }