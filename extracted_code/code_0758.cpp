int getmax ( int * arr , int n ) { int i = 0 , max = - 1 ; while ( i < n ) { if ( max < arr [ i ] ) max = arr [ i ] ; i ++ ; } return max ; } int Sum_of_triangle ( int * * arr , int n ) { int i = 1 , j ; int a , b ; while ( i < n ) { j = 0 ; while ( j < ( i + 1 ) ) { a = b = 0 ; if ( j >= 1 ) a = arr [ i - 1 ] [ j - 1 ] ; if ( j < i ) b = arr [ i - 1 ] [ j ] ; if ( a > b ) arr [ i ] [ j ] += a ; else arr [ i ] [ j ] += b ; j ++ ; } i ++ ; } return getmax ( arr [ n - 1 ] , n ) ; } int main ( ) { int t , n , * * arr ; int i , j ; scanf ( "%d" , & t ) ; while ( t -- ) { i = 0 ; scanf ( "%d" , & n ) ; arr = ( int * * ) malloc ( sizeof ( int * ) * n ) ; while ( i < n ) { arr [ i ] = ( int * ) malloc ( sizeof ( int ) * ( i + 1 ) ) ; i ++ ; } i = 0 ; while ( i < n ) { j = 0 ; while ( j < i + 1 ) { scanf ( "%d" , & arr [ i ] [ j ] ) ; j ++ ; } i ++ ; } printf ( "%d\n" , Sum_of_triangle ( arr , n ) ) ; } return 0 ; }