int path ( int a [ 100 ] [ 100 ] , int k , int i , int row , int sum ) { int m , n ; if ( row == ( k - 1 ) ) { return ( a [ row ] [ i ] ) ; } else { m = path ( a , k , i , row + 1 , sum ) ; n = path ( a , k , i + 1 , row + 1 , sum ) ; if ( m > n ) return ( m + a [ row ] [ i ] ) ; else return ( n + a [ row ] [ i ] ) ; } } int main ( ) { int n , k , a [ 100 ] [ 100 ] , x , i , j ; scanf ( "%d" , & n ) ; while ( n -- ) { scanf ( "%d" , & k ) ; for ( i = 0 ; i < k ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & a [ i ] [ j ] ) ; } } x = path ( a , k , 0 , 0 , 0 ) ; printf ( "%d\n" , x ) ; } return 0 ; }