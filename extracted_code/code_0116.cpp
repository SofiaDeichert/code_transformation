int a [ 5000 ] [ 5000 ] ; int dp [ 5000 ] [ 5000 ] , n ; int max ( int a , int b ) { return a > b ? a : b ; } int rec ( int N , int K ) { if ( N >= n ) return 0 ; if ( dp [ N ] [ K ] != - 1 ) return dp [ N ] [ K ] ; return ( dp [ N ] [ K ] = max ( a [ N ] [ K ] + rec ( N + 1 , K ) , a [ N ] [ K ] + rec ( N + 1 , K + 1 ) ) ) ; } int main ( ) { int i , j , t ; scanf ( "%d" , & t ) ; while ( t -- ) { int k = 1 ; scanf ( "%d" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j < k ; j ++ ) { scanf ( "%d" , & a [ i ] [ j ] ) ; dp [ i ] [ j ] = - 1 ; } k ++ ; } printf ( "%d\n" , rec ( 0 , 0 ) ) ; } return 0 ; }