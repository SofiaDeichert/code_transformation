int sum = 0 , ele [ 100 ] [ 100 ] , store [ 100 ] [ 100 ] ; int maxfunc ( int row , int col , int l ) { if ( store [ row ] [ col ] ) { return store [ row ] [ col ] ; } if ( row < l ) { sum = ele [ row ] [ col ] + max ( maxfunc ( row + 1 , col , l ) , maxfunc ( row + 1 , col + 1 , l ) ) ; store [ row ] [ col ] = sum ; return sum ; } else return 0 ; } int main ( ) { int n , l , i , j , k , ans [ 1000 ] ; scanf ( "%d" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( "%d" , & l ) ; for ( j = 0 ; j < l ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( "%d" , & ele [ j ] [ k ] ) ; } } ans [ i ] = maxfunc ( 0 , 0 , l ) ; memset ( store , 0 , sizeof ( store ) ) ; memset ( ele , 0 , sizeof ( ele ) ) ; } for ( i = 0 ; i < n ; i ++ ) { printf ( "%d\n" , ans [ i ] ) ; } }