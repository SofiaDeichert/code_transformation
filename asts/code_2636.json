{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 403,
  "text": "long gcd ( long , long ) ; int main ( ) { long x , y , hcf , lcm ; printf ( \"enter two int\\n\" ) ; scanf ( \"%d%d\" , & x , & y ) ; hcf = gcd ( x , y ) ; lcm = ( x * y ) / hcf ; printf ( \"%d%d%d\" , x , y , hcf ) ; printf ( \"%d%d%d\" , x , y , lcm ) ; return 0 ; } long gcd ( long x , long y ) { if ( x == 0 ) { return y ; } while ( y != 0 ) { if ( x > y ) { x = x - y ; } else { y = y - x ; } } return x ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 26,
      "text": "long gcd ( long , long ) ;",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 0,
          "end_byte": 4,
          "text": "long",
          "children": [
            {
              "type": "long",
              "start_byte": 0,
              "end_byte": 4,
              "text": "long",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 5,
          "end_byte": 24,
          "text": "gcd ( long , long )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 5,
              "end_byte": 8,
              "text": "gcd",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 24,
              "text": "( long , long )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 11,
                  "end_byte": 15,
                  "text": "long",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 11,
                      "end_byte": 15,
                      "text": "long",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 11,
                          "end_byte": 15,
                          "text": "long",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 16,
                  "end_byte": 17,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 18,
                  "end_byte": 22,
                  "text": "long",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 18,
                      "end_byte": 22,
                      "text": "long",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 18,
                          "end_byte": 22,
                          "text": "long",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 23,
                  "end_byte": 24,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 25,
          "end_byte": 26,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 27,
      "end_byte": 259,
      "text": "int main ( ) { long x , y , hcf , lcm ; printf ( \"enter two int\\n\" ) ; scanf ( \"%d%d\" , & x , & y ) ; hcf = gcd ( x , y ) ; lcm = ( x * y ) / hcf ; printf ( \"%d%d%d\" , x , y , hcf ) ; printf ( \"%d%d%d\" , x , y , lcm ) ; return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 27,
          "end_byte": 30,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 31,
          "end_byte": 39,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 31,
              "end_byte": 35,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 36,
              "end_byte": 39,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 36,
                  "end_byte": 37,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 38,
                  "end_byte": 39,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 40,
          "end_byte": 259,
          "text": "{ long x , y , hcf , lcm ; printf ( \"enter two int\\n\" ) ; scanf ( \"%d%d\" , & x , & y ) ; hcf = gcd ( x , y ) ; lcm = ( x * y ) / hcf ; printf ( \"%d%d%d\" , x , y , hcf ) ; printf ( \"%d%d%d\" , x , y , lcm ) ; return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 40,
              "end_byte": 41,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 42,
              "end_byte": 66,
              "text": "long x , y , hcf , lcm ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 42,
                  "end_byte": 46,
                  "text": "long",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 42,
                      "end_byte": 46,
                      "text": "long",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 47,
                  "end_byte": 48,
                  "text": "x",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 49,
                  "end_byte": 50,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 51,
                  "end_byte": 52,
                  "text": "y",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 53,
                  "end_byte": 54,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 55,
                  "end_byte": 58,
                  "text": "hcf",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 59,
                  "end_byte": 60,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 61,
                  "end_byte": 64,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 65,
                  "end_byte": 66,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 67,
              "end_byte": 97,
              "text": "printf ( \"enter two int\\n\" ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 67,
                  "end_byte": 95,
                  "text": "printf ( \"enter two int\\n\" )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 67,
                      "end_byte": 73,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 74,
                      "end_byte": 95,
                      "text": "( \"enter two int\\n\" )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 74,
                          "end_byte": 75,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 76,
                          "end_byte": 93,
                          "text": "\"enter two int\\n\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 76,
                              "end_byte": 77,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 77,
                              "end_byte": 90,
                              "text": "enter two int",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 90,
                              "end_byte": 92,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 92,
                              "end_byte": 93,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 94,
                          "end_byte": 95,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 96,
                  "end_byte": 97,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 98,
              "end_byte": 128,
              "text": "scanf ( \"%d%d\" , & x , & y ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 98,
                  "end_byte": 126,
                  "text": "scanf ( \"%d%d\" , & x , & y )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 98,
                      "end_byte": 103,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 104,
                      "end_byte": 126,
                      "text": "( \"%d%d\" , & x , & y )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 104,
                          "end_byte": 105,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 106,
                          "end_byte": 112,
                          "text": "\"%d%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 106,
                              "end_byte": 107,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 107,
                              "end_byte": 111,
                              "text": "%d%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 111,
                              "end_byte": 112,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 113,
                          "end_byte": 114,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 115,
                          "end_byte": 118,
                          "text": "& x",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 115,
                              "end_byte": 116,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 117,
                              "end_byte": 118,
                              "text": "x",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 119,
                          "end_byte": 120,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 121,
                          "end_byte": 124,
                          "text": "& y",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 121,
                              "end_byte": 122,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 123,
                              "end_byte": 124,
                              "text": "y",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 125,
                          "end_byte": 126,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 127,
                  "end_byte": 128,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 129,
              "end_byte": 150,
              "text": "hcf = gcd ( x , y ) ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 129,
                  "end_byte": 148,
                  "text": "hcf = gcd ( x , y )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 129,
                      "end_byte": 132,
                      "text": "hcf",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 133,
                      "end_byte": 134,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 135,
                      "end_byte": 148,
                      "text": "gcd ( x , y )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 135,
                          "end_byte": 138,
                          "text": "gcd",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 139,
                          "end_byte": 148,
                          "text": "( x , y )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 139,
                              "end_byte": 140,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 141,
                              "end_byte": 142,
                              "text": "x",
                              "children": []
                            },
                            {
                              "type": ",",
                              "start_byte": 143,
                              "end_byte": 144,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 145,
                              "end_byte": 146,
                              "text": "y",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 147,
                              "end_byte": 148,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 149,
                  "end_byte": 150,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 151,
              "end_byte": 174,
              "text": "lcm = ( x * y ) / hcf ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 151,
                  "end_byte": 172,
                  "text": "lcm = ( x * y ) / hcf",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 151,
                      "end_byte": 154,
                      "text": "lcm",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 155,
                      "end_byte": 156,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 157,
                      "end_byte": 172,
                      "text": "( x * y ) / hcf",
                      "children": [
                        {
                          "type": "parenthesized_expression",
                          "start_byte": 157,
                          "end_byte": 166,
                          "text": "( x * y )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 157,
                              "end_byte": 158,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 159,
                              "end_byte": 164,
                              "text": "x * y",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 159,
                                  "end_byte": 160,
                                  "text": "x",
                                  "children": []
                                },
                                {
                                  "type": "*",
                                  "start_byte": 161,
                                  "end_byte": 162,
                                  "text": "*",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 163,
                                  "end_byte": 164,
                                  "text": "y",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 165,
                              "end_byte": 166,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "/",
                          "start_byte": 167,
                          "end_byte": 168,
                          "text": "/",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 169,
                          "end_byte": 172,
                          "text": "hcf",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 173,
                  "end_byte": 174,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 175,
              "end_byte": 210,
              "text": "printf ( \"%d%d%d\" , x , y , hcf ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 175,
                  "end_byte": 208,
                  "text": "printf ( \"%d%d%d\" , x , y , hcf )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 175,
                      "end_byte": 181,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 182,
                      "end_byte": 208,
                      "text": "( \"%d%d%d\" , x , y , hcf )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 182,
                          "end_byte": 183,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 184,
                          "end_byte": 192,
                          "text": "\"%d%d%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 184,
                              "end_byte": 185,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 185,
                              "end_byte": 191,
                              "text": "%d%d%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 191,
                              "end_byte": 192,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 193,
                          "end_byte": 194,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 195,
                          "end_byte": 196,
                          "text": "x",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 197,
                          "end_byte": 198,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 199,
                          "end_byte": 200,
                          "text": "y",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 201,
                          "end_byte": 202,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 203,
                          "end_byte": 206,
                          "text": "hcf",
                          "children": []
                        },
                        {
                          "type": ")",
                          "start_byte": 207,
                          "end_byte": 208,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 209,
                  "end_byte": 210,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 211,
              "end_byte": 246,
              "text": "printf ( \"%d%d%d\" , x , y , lcm ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 211,
                  "end_byte": 244,
                  "text": "printf ( \"%d%d%d\" , x , y , lcm )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 211,
                      "end_byte": 217,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 218,
                      "end_byte": 244,
                      "text": "( \"%d%d%d\" , x , y , lcm )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 218,
                          "end_byte": 219,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 220,
                          "end_byte": 228,
                          "text": "\"%d%d%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 220,
                              "end_byte": 221,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 221,
                              "end_byte": 227,
                              "text": "%d%d%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 227,
                              "end_byte": 228,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 229,
                          "end_byte": 230,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 231,
                          "end_byte": 232,
                          "text": "x",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 233,
                          "end_byte": 234,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 235,
                          "end_byte": 236,
                          "text": "y",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 237,
                          "end_byte": 238,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 239,
                          "end_byte": 242,
                          "text": "lcm",
                          "children": []
                        },
                        {
                          "type": ")",
                          "start_byte": 243,
                          "end_byte": 244,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 245,
                  "end_byte": 246,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 247,
              "end_byte": 257,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 247,
                  "end_byte": 253,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 254,
                  "end_byte": 255,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 256,
                  "end_byte": 257,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 258,
              "end_byte": 259,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 260,
      "end_byte": 403,
      "text": "long gcd ( long x , long y ) { if ( x == 0 ) { return y ; } while ( y != 0 ) { if ( x > y ) { x = x - y ; } else { y = y - x ; } } return x ; }",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 260,
          "end_byte": 264,
          "text": "long",
          "children": [
            {
              "type": "long",
              "start_byte": 260,
              "end_byte": 264,
              "text": "long",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 265,
          "end_byte": 288,
          "text": "gcd ( long x , long y )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 265,
              "end_byte": 268,
              "text": "gcd",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 269,
              "end_byte": 288,
              "text": "( long x , long y )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 269,
                  "end_byte": 270,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 271,
                  "end_byte": 277,
                  "text": "long x",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 271,
                      "end_byte": 275,
                      "text": "long",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 271,
                          "end_byte": 275,
                          "text": "long",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 276,
                      "end_byte": 277,
                      "text": "x",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 278,
                  "end_byte": 279,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 280,
                  "end_byte": 286,
                  "text": "long y",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 280,
                      "end_byte": 284,
                      "text": "long",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 280,
                          "end_byte": 284,
                          "text": "long",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 285,
                      "end_byte": 286,
                      "text": "y",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 287,
                  "end_byte": 288,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 289,
          "end_byte": 403,
          "text": "{ if ( x == 0 ) { return y ; } while ( y != 0 ) { if ( x > y ) { x = x - y ; } else { y = y - x ; } } return x ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 289,
              "end_byte": 290,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 291,
              "end_byte": 319,
              "text": "if ( x == 0 ) { return y ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 291,
                  "end_byte": 293,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 294,
                  "end_byte": 304,
                  "text": "( x == 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 294,
                      "end_byte": 295,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 296,
                      "end_byte": 302,
                      "text": "x == 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 296,
                          "end_byte": 297,
                          "text": "x",
                          "children": []
                        },
                        {
                          "type": "==",
                          "start_byte": 298,
                          "end_byte": 300,
                          "text": "==",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 301,
                          "end_byte": 302,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 303,
                      "end_byte": 304,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 305,
                  "end_byte": 319,
                  "text": "{ return y ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 305,
                      "end_byte": 306,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 307,
                      "end_byte": 317,
                      "text": "return y ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 307,
                          "end_byte": 313,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 314,
                          "end_byte": 315,
                          "text": "y",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 316,
                          "end_byte": 317,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 318,
                      "end_byte": 319,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 320,
              "end_byte": 390,
              "text": "while ( y != 0 ) { if ( x > y ) { x = x - y ; } else { y = y - x ; } }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 320,
                  "end_byte": 325,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 326,
                  "end_byte": 336,
                  "text": "( y != 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 326,
                      "end_byte": 327,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 328,
                      "end_byte": 334,
                      "text": "y != 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 328,
                          "end_byte": 329,
                          "text": "y",
                          "children": []
                        },
                        {
                          "type": "!=",
                          "start_byte": 330,
                          "end_byte": 332,
                          "text": "!=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 333,
                          "end_byte": 334,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 335,
                      "end_byte": 336,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 337,
                  "end_byte": 390,
                  "text": "{ if ( x > y ) { x = x - y ; } else { y = y - x ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 337,
                      "end_byte": 338,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 339,
                      "end_byte": 388,
                      "text": "if ( x > y ) { x = x - y ; } else { y = y - x ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 339,
                          "end_byte": 341,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 342,
                          "end_byte": 351,
                          "text": "( x > y )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 342,
                              "end_byte": 343,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 344,
                              "end_byte": 349,
                              "text": "x > y",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 344,
                                  "end_byte": 345,
                                  "text": "x",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 346,
                                  "end_byte": 347,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 348,
                                  "end_byte": 349,
                                  "text": "y",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 350,
                              "end_byte": 351,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 352,
                          "end_byte": 367,
                          "text": "{ x = x - y ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 352,
                              "end_byte": 353,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 354,
                              "end_byte": 365,
                              "text": "x = x - y ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 354,
                                  "end_byte": 363,
                                  "text": "x = x - y",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 354,
                                      "end_byte": 355,
                                      "text": "x",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 356,
                                      "end_byte": 357,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 358,
                                      "end_byte": 363,
                                      "text": "x - y",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 358,
                                          "end_byte": 359,
                                          "text": "x",
                                          "children": []
                                        },
                                        {
                                          "type": "-",
                                          "start_byte": 360,
                                          "end_byte": 361,
                                          "text": "-",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 362,
                                          "end_byte": 363,
                                          "text": "y",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 364,
                                  "end_byte": 365,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 366,
                              "end_byte": 367,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 368,
                          "end_byte": 388,
                          "text": "else { y = y - x ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 368,
                              "end_byte": 372,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 373,
                              "end_byte": 388,
                              "text": "{ y = y - x ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 373,
                                  "end_byte": 374,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 375,
                                  "end_byte": 386,
                                  "text": "y = y - x ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 375,
                                      "end_byte": 384,
                                      "text": "y = y - x",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 375,
                                          "end_byte": 376,
                                          "text": "y",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 377,
                                          "end_byte": 378,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 379,
                                          "end_byte": 384,
                                          "text": "y - x",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 379,
                                              "end_byte": 380,
                                              "text": "y",
                                              "children": []
                                            },
                                            {
                                              "type": "-",
                                              "start_byte": 381,
                                              "end_byte": 382,
                                              "text": "-",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 383,
                                              "end_byte": 384,
                                              "text": "x",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 385,
                                      "end_byte": 386,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 387,
                                  "end_byte": 388,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 389,
                      "end_byte": 390,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 391,
              "end_byte": 401,
              "text": "return x ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 391,
                  "end_byte": 397,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 398,
                  "end_byte": 399,
                  "text": "x",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 400,
                  "end_byte": 401,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 402,
              "end_byte": 403,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}