{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 1344,
  "text": "struct node { int triangle [ 100 ] [ 100 ] ; int max ; struct node * next ; } ; typedef struct node * NODE ; NODE getnode ( void ) { return ( malloc ( sizeof ( struct node ) ) ) ; } int next ( int mask [ ] , int n ) { int i ; for ( i = 0 ; ( i < n ) && mask [ i ] ; ++ i ) mask [ i ] = 0 ; if ( i < n ) { mask [ i ] = 1 ; return 1 ; } return 0 ; } int main ( void ) { int rows ; int i , j , k , count ; int r , c ; int bin [ 100 ] ; int sum = 0 ; int testcases ; NODE temp , head , cur ; scanf ( \"%d\" , & testcases ) ; for ( count = 0 ; count < testcases ; count ++ ) { temp = getnode ( ) ; scanf ( \"%d\" , & rows ) ; for ( i = 1 ; i <= rows ; i ++ ) for ( j = 0 ; j < i ; j ++ ) { scanf ( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] ) ; } if ( count == 0 ) { head = temp ; cur = head ; } else { cur -> next = temp ; cur = cur -> next ; } } cur = head ; for ( count = 0 ; count < testcases ; count ++ ) { cur -> max = 0 ; for ( j = 0 ; j < rows ; j ++ ) { bin [ j ] = 0 ; cur -> max += cur -> triangle [ j ] [ 0 ] ; } while ( next ( bin , rows - 1 ) ) { k = 0 ; r = 0 ; c = 0 ; sum = 0 ; for ( j = 0 ; j < rows ; j ++ ) { sum += cur -> triangle [ r ++ ] [ c ] ; c = c + bin [ k ++ ] ; } if ( sum > cur -> max ) cur -> max = sum ; } cur = cur -> next ; } cur = head ; while ( cur != NULL ) { printf ( \"%d\\n\" , cur -> max ) ; cur = cur -> next ; } }",
  "children": [
    {
      "type": "struct_specifier",
      "start_byte": 0,
      "end_byte": 77,
      "text": "struct node { int triangle [ 100 ] [ 100 ] ; int max ; struct node * next ; }",
      "children": [
        {
          "type": "struct",
          "start_byte": 0,
          "end_byte": 6,
          "text": "struct",
          "children": []
        },
        {
          "type": "type_identifier",
          "start_byte": 7,
          "end_byte": 11,
          "text": "node",
          "children": []
        },
        {
          "type": "field_declaration_list",
          "start_byte": 12,
          "end_byte": 77,
          "text": "{ int triangle [ 100 ] [ 100 ] ; int max ; struct node * next ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 12,
              "end_byte": 13,
              "text": "{",
              "children": []
            },
            {
              "type": "field_declaration",
              "start_byte": 14,
              "end_byte": 44,
              "text": "int triangle [ 100 ] [ 100 ] ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 14,
                  "end_byte": 17,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 18,
                  "end_byte": 42,
                  "text": "triangle [ 100 ] [ 100 ]",
                  "children": [
                    {
                      "type": "array_declarator",
                      "start_byte": 18,
                      "end_byte": 34,
                      "text": "triangle [ 100 ]",
                      "children": [
                        {
                          "type": "field_identifier",
                          "start_byte": 18,
                          "end_byte": 26,
                          "text": "triangle",
                          "children": []
                        },
                        {
                          "type": "[",
                          "start_byte": 27,
                          "end_byte": 28,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 29,
                          "end_byte": 32,
                          "text": "100",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 33,
                          "end_byte": 34,
                          "text": "]",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "[",
                      "start_byte": 35,
                      "end_byte": 36,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 37,
                      "end_byte": 40,
                      "text": "100",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 41,
                      "end_byte": 42,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 43,
                  "end_byte": 44,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "field_declaration",
              "start_byte": 45,
              "end_byte": 54,
              "text": "int max ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 45,
                  "end_byte": 48,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "field_identifier",
                  "start_byte": 49,
                  "end_byte": 52,
                  "text": "max",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 53,
                  "end_byte": 54,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "field_declaration",
              "start_byte": 55,
              "end_byte": 75,
              "text": "struct node * next ;",
              "children": [
                {
                  "type": "struct_specifier",
                  "start_byte": 55,
                  "end_byte": 66,
                  "text": "struct node",
                  "children": [
                    {
                      "type": "struct",
                      "start_byte": 55,
                      "end_byte": 61,
                      "text": "struct",
                      "children": []
                    },
                    {
                      "type": "type_identifier",
                      "start_byte": 62,
                      "end_byte": 66,
                      "text": "node",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "pointer_declarator",
                  "start_byte": 67,
                  "end_byte": 73,
                  "text": "* next",
                  "children": [
                    {
                      "type": "*",
                      "start_byte": 67,
                      "end_byte": 68,
                      "text": "*",
                      "children": []
                    },
                    {
                      "type": "field_identifier",
                      "start_byte": 69,
                      "end_byte": 73,
                      "text": "next",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 74,
                  "end_byte": 75,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 76,
              "end_byte": 77,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": ";",
      "start_byte": 78,
      "end_byte": 79,
      "text": ";",
      "children": []
    },
    {
      "type": "type_definition",
      "start_byte": 80,
      "end_byte": 108,
      "text": "typedef struct node * NODE ;",
      "children": [
        {
          "type": "typedef",
          "start_byte": 80,
          "end_byte": 87,
          "text": "typedef",
          "children": []
        },
        {
          "type": "struct_specifier",
          "start_byte": 88,
          "end_byte": 99,
          "text": "struct node",
          "children": [
            {
              "type": "struct",
              "start_byte": 88,
              "end_byte": 94,
              "text": "struct",
              "children": []
            },
            {
              "type": "type_identifier",
              "start_byte": 95,
              "end_byte": 99,
              "text": "node",
              "children": []
            }
          ]
        },
        {
          "type": "pointer_declarator",
          "start_byte": 100,
          "end_byte": 106,
          "text": "* NODE",
          "children": [
            {
              "type": "*",
              "start_byte": 100,
              "end_byte": 101,
              "text": "*",
              "children": []
            },
            {
              "type": "type_identifier",
              "start_byte": 102,
              "end_byte": 106,
              "text": "NODE",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 107,
          "end_byte": 108,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 109,
      "end_byte": 181,
      "text": "NODE getnode ( void ) { return ( malloc ( sizeof ( struct node ) ) ) ; }",
      "children": [
        {
          "type": "type_identifier",
          "start_byte": 109,
          "end_byte": 113,
          "text": "NODE",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 114,
          "end_byte": 130,
          "text": "getnode ( void )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 114,
              "end_byte": 121,
              "text": "getnode",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 122,
              "end_byte": 130,
              "text": "( void )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 122,
                  "end_byte": 123,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 124,
                  "end_byte": 128,
                  "text": "void",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 124,
                      "end_byte": 128,
                      "text": "void",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 129,
                  "end_byte": 130,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 131,
          "end_byte": 181,
          "text": "{ return ( malloc ( sizeof ( struct node ) ) ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 131,
              "end_byte": 132,
              "text": "{",
              "children": []
            },
            {
              "type": "return_statement",
              "start_byte": 133,
              "end_byte": 179,
              "text": "return ( malloc ( sizeof ( struct node ) ) ) ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 133,
                  "end_byte": 139,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "parenthesized_expression",
                  "start_byte": 140,
                  "end_byte": 177,
                  "text": "( malloc ( sizeof ( struct node ) ) )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 140,
                      "end_byte": 141,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 142,
                      "end_byte": 175,
                      "text": "malloc ( sizeof ( struct node ) )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 142,
                          "end_byte": 148,
                          "text": "malloc",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 149,
                          "end_byte": 175,
                          "text": "( sizeof ( struct node ) )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 149,
                              "end_byte": 150,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "sizeof_expression",
                              "start_byte": 151,
                              "end_byte": 173,
                              "text": "sizeof ( struct node )",
                              "children": [
                                {
                                  "type": "sizeof",
                                  "start_byte": 151,
                                  "end_byte": 157,
                                  "text": "sizeof",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 158,
                                  "end_byte": 159,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "type_descriptor",
                                  "start_byte": 160,
                                  "end_byte": 171,
                                  "text": "struct node",
                                  "children": [
                                    {
                                      "type": "struct_specifier",
                                      "start_byte": 160,
                                      "end_byte": 171,
                                      "text": "struct node",
                                      "children": [
                                        {
                                          "type": "struct",
                                          "start_byte": 160,
                                          "end_byte": 166,
                                          "text": "struct",
                                          "children": []
                                        },
                                        {
                                          "type": "type_identifier",
                                          "start_byte": 167,
                                          "end_byte": 171,
                                          "text": "node",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 172,
                                  "end_byte": 173,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 174,
                              "end_byte": 175,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 176,
                      "end_byte": 177,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 178,
                  "end_byte": 179,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 180,
              "end_byte": 181,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 182,
      "end_byte": 347,
      "text": "int next ( int mask [ ] , int n ) { int i ; for ( i = 0 ; ( i < n ) && mask [ i ] ; ++ i ) mask [ i ] = 0 ; if ( i < n ) { mask [ i ] = 1 ; return 1 ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 182,
          "end_byte": 185,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 186,
          "end_byte": 215,
          "text": "next ( int mask [ ] , int n )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 186,
              "end_byte": 190,
              "text": "next",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 191,
              "end_byte": 215,
              "text": "( int mask [ ] , int n )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 191,
                  "end_byte": 192,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 193,
                  "end_byte": 205,
                  "text": "int mask [ ]",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 193,
                      "end_byte": 196,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "array_declarator",
                      "start_byte": 197,
                      "end_byte": 205,
                      "text": "mask [ ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 197,
                          "end_byte": 201,
                          "text": "mask",
                          "children": []
                        },
                        {
                          "type": "[",
                          "start_byte": 202,
                          "end_byte": 203,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 204,
                          "end_byte": 205,
                          "text": "]",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 206,
                  "end_byte": 207,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 208,
                  "end_byte": 213,
                  "text": "int n",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 208,
                      "end_byte": 211,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 212,
                      "end_byte": 213,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 214,
                  "end_byte": 215,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 216,
          "end_byte": 347,
          "text": "{ int i ; for ( i = 0 ; ( i < n ) && mask [ i ] ; ++ i ) mask [ i ] = 0 ; if ( i < n ) { mask [ i ] = 1 ; return 1 ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 216,
              "end_byte": 217,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 218,
              "end_byte": 225,
              "text": "int i ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 218,
                  "end_byte": 221,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 222,
                  "end_byte": 223,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 224,
                  "end_byte": 225,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 226,
              "end_byte": 289,
              "text": "for ( i = 0 ; ( i < n ) && mask [ i ] ; ++ i ) mask [ i ] = 0 ;",
              "children": [
                {
                  "type": "for",
                  "start_byte": 226,
                  "end_byte": 229,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 230,
                  "end_byte": 231,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 232,
                  "end_byte": 237,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 232,
                      "end_byte": 233,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 234,
                      "end_byte": 235,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 236,
                      "end_byte": 237,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 238,
                  "end_byte": 239,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 240,
                  "end_byte": 263,
                  "text": "( i < n ) && mask [ i ]",
                  "children": [
                    {
                      "type": "parenthesized_expression",
                      "start_byte": 240,
                      "end_byte": 249,
                      "text": "( i < n )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 240,
                          "end_byte": 241,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 242,
                          "end_byte": 247,
                          "text": "i < n",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 242,
                              "end_byte": 243,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 244,
                              "end_byte": 245,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 246,
                              "end_byte": 247,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 248,
                          "end_byte": 249,
                          "text": ")",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "&&",
                      "start_byte": 250,
                      "end_byte": 252,
                      "text": "&&",
                      "children": []
                    },
                    {
                      "type": "subscript_expression",
                      "start_byte": 253,
                      "end_byte": 263,
                      "text": "mask [ i ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 253,
                          "end_byte": 257,
                          "text": "mask",
                          "children": []
                        },
                        {
                          "type": "subscript_argument_list",
                          "start_byte": 258,
                          "end_byte": 263,
                          "text": "[ i ]",
                          "children": [
                            {
                              "type": "[",
                              "start_byte": 258,
                              "end_byte": 259,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 260,
                              "end_byte": 261,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 262,
                              "end_byte": 263,
                              "text": "]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 264,
                  "end_byte": 265,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 266,
                  "end_byte": 270,
                  "text": "++ i",
                  "children": [
                    {
                      "type": "++",
                      "start_byte": 266,
                      "end_byte": 268,
                      "text": "++",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 269,
                      "end_byte": 270,
                      "text": "i",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 271,
                  "end_byte": 272,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "expression_statement",
                  "start_byte": 273,
                  "end_byte": 289,
                  "text": "mask [ i ] = 0 ;",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start_byte": 273,
                      "end_byte": 287,
                      "text": "mask [ i ] = 0",
                      "children": [
                        {
                          "type": "subscript_expression",
                          "start_byte": 273,
                          "end_byte": 283,
                          "text": "mask [ i ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 273,
                              "end_byte": 277,
                              "text": "mask",
                              "children": []
                            },
                            {
                              "type": "subscript_argument_list",
                              "start_byte": 278,
                              "end_byte": 283,
                              "text": "[ i ]",
                              "children": [
                                {
                                  "type": "[",
                                  "start_byte": 278,
                                  "end_byte": 279,
                                  "text": "[",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 280,
                                  "end_byte": 281,
                                  "text": "i",
                                  "children": []
                                },
                                {
                                  "type": "]",
                                  "start_byte": 282,
                                  "end_byte": 283,
                                  "text": "]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "=",
                          "start_byte": 284,
                          "end_byte": 285,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 286,
                          "end_byte": 287,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 288,
                      "end_byte": 289,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 290,
              "end_byte": 334,
              "text": "if ( i < n ) { mask [ i ] = 1 ; return 1 ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 290,
                  "end_byte": 292,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 293,
                  "end_byte": 302,
                  "text": "( i < n )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 293,
                      "end_byte": 294,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 295,
                      "end_byte": 300,
                      "text": "i < n",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 295,
                          "end_byte": 296,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": "<",
                          "start_byte": 297,
                          "end_byte": 298,
                          "text": "<",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 299,
                          "end_byte": 300,
                          "text": "n",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 301,
                      "end_byte": 302,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 303,
                  "end_byte": 334,
                  "text": "{ mask [ i ] = 1 ; return 1 ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 303,
                      "end_byte": 304,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 305,
                      "end_byte": 321,
                      "text": "mask [ i ] = 1 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 305,
                          "end_byte": 319,
                          "text": "mask [ i ] = 1",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 305,
                              "end_byte": 315,
                              "text": "mask [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 305,
                                  "end_byte": 309,
                                  "text": "mask",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 310,
                                  "end_byte": 315,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 310,
                                      "end_byte": 311,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 312,
                                      "end_byte": 313,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 314,
                                      "end_byte": 315,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 316,
                              "end_byte": 317,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 318,
                              "end_byte": 319,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 320,
                          "end_byte": 321,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 322,
                      "end_byte": 332,
                      "text": "return 1 ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 322,
                          "end_byte": 328,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 329,
                          "end_byte": 330,
                          "text": "1",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 331,
                          "end_byte": 332,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 333,
                      "end_byte": 334,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 335,
              "end_byte": 345,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 335,
                  "end_byte": 341,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 342,
                  "end_byte": 343,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 344,
                  "end_byte": 345,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 346,
              "end_byte": 347,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 348,
      "end_byte": 1344,
      "text": "int main ( void ) { int rows ; int i , j , k , count ; int r , c ; int bin [ 100 ] ; int sum = 0 ; int testcases ; NODE temp , head , cur ; scanf ( \"%d\" , & testcases ) ; for ( count = 0 ; count < testcases ; count ++ ) { temp = getnode ( ) ; scanf ( \"%d\" , & rows ) ; for ( i = 1 ; i <= rows ; i ++ ) for ( j = 0 ; j < i ; j ++ ) { scanf ( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] ) ; } if ( count == 0 ) { head = temp ; cur = head ; } else { cur -> next = temp ; cur = cur -> next ; } } cur = head ; for ( count = 0 ; count < testcases ; count ++ ) { cur -> max = 0 ; for ( j = 0 ; j < rows ; j ++ ) { bin [ j ] = 0 ; cur -> max += cur -> triangle [ j ] [ 0 ] ; } while ( next ( bin , rows - 1 ) ) { k = 0 ; r = 0 ; c = 0 ; sum = 0 ; for ( j = 0 ; j < rows ; j ++ ) { sum += cur -> triangle [ r ++ ] [ c ] ; c = c + bin [ k ++ ] ; } if ( sum > cur -> max ) cur -> max = sum ; } cur = cur -> next ; } cur = head ; while ( cur != NULL ) { printf ( \"%d\\n\" , cur -> max ) ; cur = cur -> next ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 348,
          "end_byte": 351,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 352,
          "end_byte": 365,
          "text": "main ( void )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 352,
              "end_byte": 356,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 357,
              "end_byte": 365,
              "text": "( void )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 357,
                  "end_byte": 358,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 359,
                  "end_byte": 363,
                  "text": "void",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 359,
                      "end_byte": 363,
                      "text": "void",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 364,
                  "end_byte": 365,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 366,
          "end_byte": 1344,
          "text": "{ int rows ; int i , j , k , count ; int r , c ; int bin [ 100 ] ; int sum = 0 ; int testcases ; NODE temp , head , cur ; scanf ( \"%d\" , & testcases ) ; for ( count = 0 ; count < testcases ; count ++ ) { temp = getnode ( ) ; scanf ( \"%d\" , & rows ) ; for ( i = 1 ; i <= rows ; i ++ ) for ( j = 0 ; j < i ; j ++ ) { scanf ( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] ) ; } if ( count == 0 ) { head = temp ; cur = head ; } else { cur -> next = temp ; cur = cur -> next ; } } cur = head ; for ( count = 0 ; count < testcases ; count ++ ) { cur -> max = 0 ; for ( j = 0 ; j < rows ; j ++ ) { bin [ j ] = 0 ; cur -> max += cur -> triangle [ j ] [ 0 ] ; } while ( next ( bin , rows - 1 ) ) { k = 0 ; r = 0 ; c = 0 ; sum = 0 ; for ( j = 0 ; j < rows ; j ++ ) { sum += cur -> triangle [ r ++ ] [ c ] ; c = c + bin [ k ++ ] ; } if ( sum > cur -> max ) cur -> max = sum ; } cur = cur -> next ; } cur = head ; while ( cur != NULL ) { printf ( \"%d\\n\" , cur -> max ) ; cur = cur -> next ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 366,
              "end_byte": 367,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 368,
              "end_byte": 378,
              "text": "int rows ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 368,
                  "end_byte": 371,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 372,
                  "end_byte": 376,
                  "text": "rows",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 377,
                  "end_byte": 378,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 379,
              "end_byte": 402,
              "text": "int i , j , k , count ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 379,
                  "end_byte": 382,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 383,
                  "end_byte": 384,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 385,
                  "end_byte": 386,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 387,
                  "end_byte": 388,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 389,
                  "end_byte": 390,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 391,
                  "end_byte": 392,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 393,
                  "end_byte": 394,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 395,
                  "end_byte": 400,
                  "text": "count",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 401,
                  "end_byte": 402,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 403,
              "end_byte": 414,
              "text": "int r , c ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 403,
                  "end_byte": 406,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 407,
                  "end_byte": 408,
                  "text": "r",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 409,
                  "end_byte": 410,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 411,
                  "end_byte": 412,
                  "text": "c",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 413,
                  "end_byte": 414,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 415,
              "end_byte": 432,
              "text": "int bin [ 100 ] ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 415,
                  "end_byte": 418,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 419,
                  "end_byte": 430,
                  "text": "bin [ 100 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 419,
                      "end_byte": 422,
                      "text": "bin",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 423,
                      "end_byte": 424,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 425,
                      "end_byte": 428,
                      "text": "100",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 429,
                      "end_byte": 430,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 431,
                  "end_byte": 432,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 433,
              "end_byte": 446,
              "text": "int sum = 0 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 433,
                  "end_byte": 436,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 437,
                  "end_byte": 444,
                  "text": "sum = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 437,
                      "end_byte": 440,
                      "text": "sum",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 441,
                      "end_byte": 442,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 443,
                      "end_byte": 444,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 445,
                  "end_byte": 446,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 447,
              "end_byte": 462,
              "text": "int testcases ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 447,
                  "end_byte": 450,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 451,
                  "end_byte": 460,
                  "text": "testcases",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 461,
                  "end_byte": 462,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 463,
              "end_byte": 487,
              "text": "NODE temp , head , cur ;",
              "children": [
                {
                  "type": "type_identifier",
                  "start_byte": 463,
                  "end_byte": 467,
                  "text": "NODE",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 468,
                  "end_byte": 472,
                  "text": "temp",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 473,
                  "end_byte": 474,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 475,
                  "end_byte": 479,
                  "text": "head",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 480,
                  "end_byte": 481,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 482,
                  "end_byte": 485,
                  "text": "cur",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 486,
                  "end_byte": 487,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 488,
              "end_byte": 518,
              "text": "scanf ( \"%d\" , & testcases ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 488,
                  "end_byte": 516,
                  "text": "scanf ( \"%d\" , & testcases )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 488,
                      "end_byte": 493,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 494,
                      "end_byte": 516,
                      "text": "( \"%d\" , & testcases )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 494,
                          "end_byte": 495,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 496,
                          "end_byte": 500,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 496,
                              "end_byte": 497,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 497,
                              "end_byte": 499,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 499,
                              "end_byte": 500,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 501,
                          "end_byte": 502,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 503,
                          "end_byte": 514,
                          "text": "& testcases",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 503,
                              "end_byte": 504,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 505,
                              "end_byte": 514,
                              "text": "testcases",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 515,
                          "end_byte": 516,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 517,
                  "end_byte": 518,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 519,
              "end_byte": 837,
              "text": "for ( count = 0 ; count < testcases ; count ++ ) { temp = getnode ( ) ; scanf ( \"%d\" , & rows ) ; for ( i = 1 ; i <= rows ; i ++ ) for ( j = 0 ; j < i ; j ++ ) { scanf ( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] ) ; } if ( count == 0 ) { head = temp ; cur = head ; } else { cur -> next = temp ; cur = cur -> next ; } }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 519,
                  "end_byte": 522,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 523,
                  "end_byte": 524,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 525,
                  "end_byte": 534,
                  "text": "count = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 525,
                      "end_byte": 530,
                      "text": "count",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 531,
                      "end_byte": 532,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 533,
                      "end_byte": 534,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 535,
                  "end_byte": 536,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 537,
                  "end_byte": 554,
                  "text": "count < testcases",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 537,
                      "end_byte": 542,
                      "text": "count",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 543,
                      "end_byte": 544,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 545,
                      "end_byte": 554,
                      "text": "testcases",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 555,
                  "end_byte": 556,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 557,
                  "end_byte": 565,
                  "text": "count ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 557,
                      "end_byte": 562,
                      "text": "count",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 563,
                      "end_byte": 565,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 566,
                  "end_byte": 567,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 568,
                  "end_byte": 837,
                  "text": "{ temp = getnode ( ) ; scanf ( \"%d\" , & rows ) ; for ( i = 1 ; i <= rows ; i ++ ) for ( j = 0 ; j < i ; j ++ ) { scanf ( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] ) ; } if ( count == 0 ) { head = temp ; cur = head ; } else { cur -> next = temp ; cur = cur -> next ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 568,
                      "end_byte": 569,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 570,
                      "end_byte": 590,
                      "text": "temp = getnode ( ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 570,
                          "end_byte": 588,
                          "text": "temp = getnode ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 570,
                              "end_byte": 574,
                              "text": "temp",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 575,
                              "end_byte": 576,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 577,
                              "end_byte": 588,
                              "text": "getnode ( )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 577,
                                  "end_byte": 584,
                                  "text": "getnode",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 585,
                                  "end_byte": 588,
                                  "text": "( )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 585,
                                      "end_byte": 586,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 587,
                                      "end_byte": 588,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 589,
                          "end_byte": 590,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 591,
                      "end_byte": 616,
                      "text": "scanf ( \"%d\" , & rows ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 591,
                          "end_byte": 614,
                          "text": "scanf ( \"%d\" , & rows )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 591,
                              "end_byte": 596,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 597,
                              "end_byte": 614,
                              "text": "( \"%d\" , & rows )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 597,
                                  "end_byte": 598,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 599,
                                  "end_byte": 603,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 599,
                                      "end_byte": 600,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 600,
                                      "end_byte": 602,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 602,
                                      "end_byte": 603,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 604,
                                  "end_byte": 605,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 606,
                                  "end_byte": 612,
                                  "text": "& rows",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 606,
                                      "end_byte": 607,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 608,
                                      "end_byte": 612,
                                      "text": "rows",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 613,
                                  "end_byte": 614,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 615,
                          "end_byte": 616,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 617,
                      "end_byte": 736,
                      "text": "for ( i = 1 ; i <= rows ; i ++ ) for ( j = 0 ; j < i ; j ++ ) { scanf ( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] ) ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 617,
                          "end_byte": 620,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 621,
                          "end_byte": 622,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 623,
                          "end_byte": 628,
                          "text": "i = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 623,
                              "end_byte": 624,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 625,
                              "end_byte": 626,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 627,
                              "end_byte": 628,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 629,
                          "end_byte": 630,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 631,
                          "end_byte": 640,
                          "text": "i <= rows",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 631,
                              "end_byte": 632,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 633,
                              "end_byte": 635,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 636,
                              "end_byte": 640,
                              "text": "rows",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 641,
                          "end_byte": 642,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 643,
                          "end_byte": 647,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 643,
                              "end_byte": 644,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 645,
                              "end_byte": 647,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 648,
                          "end_byte": 649,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "for_statement",
                          "start_byte": 650,
                          "end_byte": 736,
                          "text": "for ( j = 0 ; j < i ; j ++ ) { scanf ( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] ) ; }",
                          "children": [
                            {
                              "type": "for",
                              "start_byte": 650,
                              "end_byte": 653,
                              "text": "for",
                              "children": []
                            },
                            {
                              "type": "(",
                              "start_byte": 654,
                              "end_byte": 655,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "assignment_expression",
                              "start_byte": 656,
                              "end_byte": 661,
                              "text": "j = 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 656,
                                  "end_byte": 657,
                                  "text": "j",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 658,
                                  "end_byte": 659,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 660,
                                  "end_byte": 661,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 662,
                              "end_byte": 663,
                              "text": ";",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 664,
                              "end_byte": 669,
                              "text": "j < i",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 664,
                                  "end_byte": 665,
                                  "text": "j",
                                  "children": []
                                },
                                {
                                  "type": "<",
                                  "start_byte": 666,
                                  "end_byte": 667,
                                  "text": "<",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 668,
                                  "end_byte": 669,
                                  "text": "i",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 670,
                              "end_byte": 671,
                              "text": ";",
                              "children": []
                            },
                            {
                              "type": "update_expression",
                              "start_byte": 672,
                              "end_byte": 676,
                              "text": "j ++",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 672,
                                  "end_byte": 673,
                                  "text": "j",
                                  "children": []
                                },
                                {
                                  "type": "++",
                                  "start_byte": 674,
                                  "end_byte": 676,
                                  "text": "++",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 677,
                              "end_byte": 678,
                              "text": ")",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 679,
                              "end_byte": 736,
                              "text": "{ scanf ( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] ) ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 679,
                                  "end_byte": 680,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 681,
                                  "end_byte": 734,
                                  "text": "scanf ( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] ) ;",
                                  "children": [
                                    {
                                      "type": "call_expression",
                                      "start_byte": 681,
                                      "end_byte": 732,
                                      "text": "scanf ( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 681,
                                          "end_byte": 686,
                                          "text": "scanf",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 687,
                                          "end_byte": 732,
                                          "text": "( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 687,
                                              "end_byte": 688,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "string_literal",
                                              "start_byte": 689,
                                              "end_byte": 693,
                                              "text": "\"%d\"",
                                              "children": [
                                                {
                                                  "type": "\"",
                                                  "start_byte": 689,
                                                  "end_byte": 690,
                                                  "text": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_content",
                                                  "start_byte": 690,
                                                  "end_byte": 692,
                                                  "text": "%d",
                                                  "children": []
                                                },
                                                {
                                                  "type": "\"",
                                                  "start_byte": 692,
                                                  "end_byte": 693,
                                                  "text": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 694,
                                              "end_byte": 695,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "pointer_expression",
                                              "start_byte": 696,
                                              "end_byte": 730,
                                              "text": "& temp -> triangle [ i - 1 ] [ j ]",
                                              "children": [
                                                {
                                                  "type": "&",
                                                  "start_byte": 696,
                                                  "end_byte": 697,
                                                  "text": "&",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 698,
                                                  "end_byte": 730,
                                                  "text": "temp -> triangle [ i - 1 ] [ j ]",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 698,
                                                      "end_byte": 724,
                                                      "text": "temp -> triangle [ i - 1 ]",
                                                      "children": [
                                                        {
                                                          "type": "field_expression",
                                                          "start_byte": 698,
                                                          "end_byte": 714,
                                                          "text": "temp -> triangle",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 698,
                                                              "end_byte": 702,
                                                              "text": "temp",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "->",
                                                              "start_byte": 703,
                                                              "end_byte": 705,
                                                              "text": "->",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "field_identifier",
                                                              "start_byte": 706,
                                                              "end_byte": 714,
                                                              "text": "triangle",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 715,
                                                          "end_byte": 724,
                                                          "text": "[ i - 1 ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 715,
                                                              "end_byte": 716,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 717,
                                                              "end_byte": 722,
                                                              "text": "i - 1",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 717,
                                                                  "end_byte": 718,
                                                                  "text": "i",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "-",
                                                                  "start_byte": 719,
                                                                  "end_byte": 720,
                                                                  "text": "-",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "number_literal",
                                                                  "start_byte": 721,
                                                                  "end_byte": 722,
                                                                  "text": "1",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 723,
                                                              "end_byte": 724,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 725,
                                                      "end_byte": 730,
                                                      "text": "[ j ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 725,
                                                          "end_byte": 726,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 727,
                                                          "end_byte": 728,
                                                          "text": "j",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 729,
                                                          "end_byte": 730,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 731,
                                              "end_byte": 732,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 733,
                                      "end_byte": 734,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 735,
                                  "end_byte": 736,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 737,
                      "end_byte": 835,
                      "text": "if ( count == 0 ) { head = temp ; cur = head ; } else { cur -> next = temp ; cur = cur -> next ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 737,
                          "end_byte": 739,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 740,
                          "end_byte": 754,
                          "text": "( count == 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 740,
                              "end_byte": 741,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 742,
                              "end_byte": 752,
                              "text": "count == 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 742,
                                  "end_byte": 747,
                                  "text": "count",
                                  "children": []
                                },
                                {
                                  "type": "==",
                                  "start_byte": 748,
                                  "end_byte": 750,
                                  "text": "==",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 751,
                                  "end_byte": 752,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 753,
                              "end_byte": 754,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 755,
                          "end_byte": 785,
                          "text": "{ head = temp ; cur = head ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 755,
                              "end_byte": 756,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 757,
                              "end_byte": 770,
                              "text": "head = temp ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 757,
                                  "end_byte": 768,
                                  "text": "head = temp",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 757,
                                      "end_byte": 761,
                                      "text": "head",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 762,
                                      "end_byte": 763,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 764,
                                      "end_byte": 768,
                                      "text": "temp",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 769,
                                  "end_byte": 770,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 771,
                              "end_byte": 783,
                              "text": "cur = head ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 771,
                                  "end_byte": 781,
                                  "text": "cur = head",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 771,
                                      "end_byte": 774,
                                      "text": "cur",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 775,
                                      "end_byte": 776,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 777,
                                      "end_byte": 781,
                                      "text": "head",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 782,
                                  "end_byte": 783,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 784,
                              "end_byte": 785,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 786,
                          "end_byte": 835,
                          "text": "else { cur -> next = temp ; cur = cur -> next ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 786,
                              "end_byte": 790,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 791,
                              "end_byte": 835,
                              "text": "{ cur -> next = temp ; cur = cur -> next ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 791,
                                  "end_byte": 792,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 793,
                                  "end_byte": 813,
                                  "text": "cur -> next = temp ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 793,
                                      "end_byte": 811,
                                      "text": "cur -> next = temp",
                                      "children": [
                                        {
                                          "type": "field_expression",
                                          "start_byte": 793,
                                          "end_byte": 804,
                                          "text": "cur -> next",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 793,
                                              "end_byte": 796,
                                              "text": "cur",
                                              "children": []
                                            },
                                            {
                                              "type": "->",
                                              "start_byte": 797,
                                              "end_byte": 799,
                                              "text": "->",
                                              "children": []
                                            },
                                            {
                                              "type": "field_identifier",
                                              "start_byte": 800,
                                              "end_byte": 804,
                                              "text": "next",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 805,
                                          "end_byte": 806,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 807,
                                          "end_byte": 811,
                                          "text": "temp",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 812,
                                      "end_byte": 813,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 814,
                                  "end_byte": 833,
                                  "text": "cur = cur -> next ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 814,
                                      "end_byte": 831,
                                      "text": "cur = cur -> next",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 814,
                                          "end_byte": 817,
                                          "text": "cur",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 818,
                                          "end_byte": 819,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "field_expression",
                                          "start_byte": 820,
                                          "end_byte": 831,
                                          "text": "cur -> next",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 820,
                                              "end_byte": 823,
                                              "text": "cur",
                                              "children": []
                                            },
                                            {
                                              "type": "->",
                                              "start_byte": 824,
                                              "end_byte": 826,
                                              "text": "->",
                                              "children": []
                                            },
                                            {
                                              "type": "field_identifier",
                                              "start_byte": 827,
                                              "end_byte": 831,
                                              "text": "next",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 832,
                                      "end_byte": 833,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 834,
                                  "end_byte": 835,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 836,
                      "end_byte": 837,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 838,
              "end_byte": 850,
              "text": "cur = head ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 838,
                  "end_byte": 848,
                  "text": "cur = head",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 838,
                      "end_byte": 841,
                      "text": "cur",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 842,
                      "end_byte": 843,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 844,
                      "end_byte": 848,
                      "text": "head",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 849,
                  "end_byte": 850,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 851,
              "end_byte": 1250,
              "text": "for ( count = 0 ; count < testcases ; count ++ ) { cur -> max = 0 ; for ( j = 0 ; j < rows ; j ++ ) { bin [ j ] = 0 ; cur -> max += cur -> triangle [ j ] [ 0 ] ; } while ( next ( bin , rows - 1 ) ) { k = 0 ; r = 0 ; c = 0 ; sum = 0 ; for ( j = 0 ; j < rows ; j ++ ) { sum += cur -> triangle [ r ++ ] [ c ] ; c = c + bin [ k ++ ] ; } if ( sum > cur -> max ) cur -> max = sum ; } cur = cur -> next ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 851,
                  "end_byte": 854,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 855,
                  "end_byte": 856,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 857,
                  "end_byte": 866,
                  "text": "count = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 857,
                      "end_byte": 862,
                      "text": "count",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 863,
                      "end_byte": 864,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 865,
                      "end_byte": 866,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 867,
                  "end_byte": 868,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 869,
                  "end_byte": 886,
                  "text": "count < testcases",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 869,
                      "end_byte": 874,
                      "text": "count",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 875,
                      "end_byte": 876,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 877,
                      "end_byte": 886,
                      "text": "testcases",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 887,
                  "end_byte": 888,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 889,
                  "end_byte": 897,
                  "text": "count ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 889,
                      "end_byte": 894,
                      "text": "count",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 895,
                      "end_byte": 897,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 898,
                  "end_byte": 899,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 900,
                  "end_byte": 1250,
                  "text": "{ cur -> max = 0 ; for ( j = 0 ; j < rows ; j ++ ) { bin [ j ] = 0 ; cur -> max += cur -> triangle [ j ] [ 0 ] ; } while ( next ( bin , rows - 1 ) ) { k = 0 ; r = 0 ; c = 0 ; sum = 0 ; for ( j = 0 ; j < rows ; j ++ ) { sum += cur -> triangle [ r ++ ] [ c ] ; c = c + bin [ k ++ ] ; } if ( sum > cur -> max ) cur -> max = sum ; } cur = cur -> next ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 900,
                      "end_byte": 901,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 902,
                      "end_byte": 918,
                      "text": "cur -> max = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 902,
                          "end_byte": 916,
                          "text": "cur -> max = 0",
                          "children": [
                            {
                              "type": "field_expression",
                              "start_byte": 902,
                              "end_byte": 912,
                              "text": "cur -> max",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 902,
                                  "end_byte": 905,
                                  "text": "cur",
                                  "children": []
                                },
                                {
                                  "type": "->",
                                  "start_byte": 906,
                                  "end_byte": 908,
                                  "text": "->",
                                  "children": []
                                },
                                {
                                  "type": "field_identifier",
                                  "start_byte": 909,
                                  "end_byte": 912,
                                  "text": "max",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 913,
                              "end_byte": 914,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 915,
                              "end_byte": 916,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 917,
                          "end_byte": 918,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 919,
                      "end_byte": 1014,
                      "text": "for ( j = 0 ; j < rows ; j ++ ) { bin [ j ] = 0 ; cur -> max += cur -> triangle [ j ] [ 0 ] ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 919,
                          "end_byte": 922,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 923,
                          "end_byte": 924,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 925,
                          "end_byte": 930,
                          "text": "j = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 925,
                              "end_byte": 926,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 927,
                              "end_byte": 928,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 929,
                              "end_byte": 930,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 931,
                          "end_byte": 932,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 933,
                          "end_byte": 941,
                          "text": "j < rows",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 933,
                              "end_byte": 934,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 935,
                              "end_byte": 936,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 937,
                              "end_byte": 941,
                              "text": "rows",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 942,
                          "end_byte": 943,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 944,
                          "end_byte": 948,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 944,
                              "end_byte": 945,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 946,
                              "end_byte": 948,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 949,
                          "end_byte": 950,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 951,
                          "end_byte": 1014,
                          "text": "{ bin [ j ] = 0 ; cur -> max += cur -> triangle [ j ] [ 0 ] ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 951,
                              "end_byte": 952,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 953,
                              "end_byte": 968,
                              "text": "bin [ j ] = 0 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 953,
                                  "end_byte": 966,
                                  "text": "bin [ j ] = 0",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 953,
                                      "end_byte": 962,
                                      "text": "bin [ j ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 953,
                                          "end_byte": 956,
                                          "text": "bin",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 957,
                                          "end_byte": 962,
                                          "text": "[ j ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 957,
                                              "end_byte": 958,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 959,
                                              "end_byte": 960,
                                              "text": "j",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 961,
                                              "end_byte": 962,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 963,
                                      "end_byte": 964,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 965,
                                      "end_byte": 966,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 967,
                                  "end_byte": 968,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 969,
                              "end_byte": 1012,
                              "text": "cur -> max += cur -> triangle [ j ] [ 0 ] ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 969,
                                  "end_byte": 1010,
                                  "text": "cur -> max += cur -> triangle [ j ] [ 0 ]",
                                  "children": [
                                    {
                                      "type": "field_expression",
                                      "start_byte": 969,
                                      "end_byte": 979,
                                      "text": "cur -> max",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 969,
                                          "end_byte": 972,
                                          "text": "cur",
                                          "children": []
                                        },
                                        {
                                          "type": "->",
                                          "start_byte": 973,
                                          "end_byte": 975,
                                          "text": "->",
                                          "children": []
                                        },
                                        {
                                          "type": "field_identifier",
                                          "start_byte": 976,
                                          "end_byte": 979,
                                          "text": "max",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+=",
                                      "start_byte": 980,
                                      "end_byte": 982,
                                      "text": "+=",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 983,
                                      "end_byte": 1010,
                                      "text": "cur -> triangle [ j ] [ 0 ]",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 983,
                                          "end_byte": 1004,
                                          "text": "cur -> triangle [ j ]",
                                          "children": [
                                            {
                                              "type": "field_expression",
                                              "start_byte": 983,
                                              "end_byte": 998,
                                              "text": "cur -> triangle",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 983,
                                                  "end_byte": 986,
                                                  "text": "cur",
                                                  "children": []
                                                },
                                                {
                                                  "type": "->",
                                                  "start_byte": 987,
                                                  "end_byte": 989,
                                                  "text": "->",
                                                  "children": []
                                                },
                                                {
                                                  "type": "field_identifier",
                                                  "start_byte": 990,
                                                  "end_byte": 998,
                                                  "text": "triangle",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 999,
                                              "end_byte": 1004,
                                              "text": "[ j ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 999,
                                                  "end_byte": 1000,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1001,
                                                  "end_byte": 1002,
                                                  "text": "j",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 1003,
                                                  "end_byte": 1004,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 1005,
                                          "end_byte": 1010,
                                          "text": "[ 0 ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 1005,
                                              "end_byte": 1006,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 1007,
                                              "end_byte": 1008,
                                              "text": "0",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 1009,
                                              "end_byte": 1010,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1011,
                                  "end_byte": 1012,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 1013,
                              "end_byte": 1014,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 1015,
                      "end_byte": 1228,
                      "text": "while ( next ( bin , rows - 1 ) ) { k = 0 ; r = 0 ; c = 0 ; sum = 0 ; for ( j = 0 ; j < rows ; j ++ ) { sum += cur -> triangle [ r ++ ] [ c ] ; c = c + bin [ k ++ ] ; } if ( sum > cur -> max ) cur -> max = sum ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 1015,
                          "end_byte": 1020,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 1021,
                          "end_byte": 1048,
                          "text": "( next ( bin , rows - 1 ) )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 1021,
                              "end_byte": 1022,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 1023,
                              "end_byte": 1046,
                              "text": "next ( bin , rows - 1 )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 1023,
                                  "end_byte": 1027,
                                  "text": "next",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 1028,
                                  "end_byte": 1046,
                                  "text": "( bin , rows - 1 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 1028,
                                      "end_byte": 1029,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 1030,
                                      "end_byte": 1033,
                                      "text": "bin",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 1034,
                                      "end_byte": 1035,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 1036,
                                      "end_byte": 1044,
                                      "text": "rows - 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1036,
                                          "end_byte": 1040,
                                          "text": "rows",
                                          "children": []
                                        },
                                        {
                                          "type": "-",
                                          "start_byte": 1041,
                                          "end_byte": 1042,
                                          "text": "-",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 1043,
                                          "end_byte": 1044,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 1045,
                                      "end_byte": 1046,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 1047,
                              "end_byte": 1048,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 1049,
                          "end_byte": 1228,
                          "text": "{ k = 0 ; r = 0 ; c = 0 ; sum = 0 ; for ( j = 0 ; j < rows ; j ++ ) { sum += cur -> triangle [ r ++ ] [ c ] ; c = c + bin [ k ++ ] ; } if ( sum > cur -> max ) cur -> max = sum ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 1049,
                              "end_byte": 1050,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1051,
                              "end_byte": 1058,
                              "text": "k = 0 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1051,
                                  "end_byte": 1056,
                                  "text": "k = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1051,
                                      "end_byte": 1052,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1053,
                                      "end_byte": 1054,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 1055,
                                      "end_byte": 1056,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1057,
                                  "end_byte": 1058,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1059,
                              "end_byte": 1066,
                              "text": "r = 0 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1059,
                                  "end_byte": 1064,
                                  "text": "r = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1059,
                                      "end_byte": 1060,
                                      "text": "r",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1061,
                                      "end_byte": 1062,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 1063,
                                      "end_byte": 1064,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1065,
                                  "end_byte": 1066,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1067,
                              "end_byte": 1074,
                              "text": "c = 0 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1067,
                                  "end_byte": 1072,
                                  "text": "c = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1067,
                                      "end_byte": 1068,
                                      "text": "c",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1069,
                                      "end_byte": 1070,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 1071,
                                      "end_byte": 1072,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1073,
                                  "end_byte": 1074,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1075,
                              "end_byte": 1084,
                              "text": "sum = 0 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1075,
                                  "end_byte": 1082,
                                  "text": "sum = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1075,
                                      "end_byte": 1078,
                                      "text": "sum",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1079,
                                      "end_byte": 1080,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 1081,
                                      "end_byte": 1082,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1083,
                                  "end_byte": 1084,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 1085,
                              "end_byte": 1183,
                              "text": "for ( j = 0 ; j < rows ; j ++ ) { sum += cur -> triangle [ r ++ ] [ c ] ; c = c + bin [ k ++ ] ; }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 1085,
                                  "end_byte": 1088,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 1089,
                                  "end_byte": 1090,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1091,
                                  "end_byte": 1096,
                                  "text": "j = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1091,
                                      "end_byte": 1092,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1093,
                                      "end_byte": 1094,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 1095,
                                      "end_byte": 1096,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1097,
                                  "end_byte": 1098,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 1099,
                                  "end_byte": 1107,
                                  "text": "j < rows",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1099,
                                      "end_byte": 1100,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "<",
                                      "start_byte": 1101,
                                      "end_byte": 1102,
                                      "text": "<",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 1103,
                                      "end_byte": 1107,
                                      "text": "rows",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1108,
                                  "end_byte": 1109,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 1110,
                                  "end_byte": 1114,
                                  "text": "j ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1110,
                                      "end_byte": 1111,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 1112,
                                      "end_byte": 1114,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1115,
                                  "end_byte": 1116,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 1117,
                                  "end_byte": 1183,
                                  "text": "{ sum += cur -> triangle [ r ++ ] [ c ] ; c = c + bin [ k ++ ] ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 1117,
                                      "end_byte": 1118,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 1119,
                                      "end_byte": 1158,
                                      "text": "sum += cur -> triangle [ r ++ ] [ c ] ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 1119,
                                          "end_byte": 1156,
                                          "text": "sum += cur -> triangle [ r ++ ] [ c ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1119,
                                              "end_byte": 1122,
                                              "text": "sum",
                                              "children": []
                                            },
                                            {
                                              "type": "+=",
                                              "start_byte": 1123,
                                              "end_byte": 1125,
                                              "text": "+=",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 1126,
                                              "end_byte": 1156,
                                              "text": "cur -> triangle [ r ++ ] [ c ]",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 1126,
                                                  "end_byte": 1150,
                                                  "text": "cur -> triangle [ r ++ ]",
                                                  "children": [
                                                    {
                                                      "type": "field_expression",
                                                      "start_byte": 1126,
                                                      "end_byte": 1141,
                                                      "text": "cur -> triangle",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 1126,
                                                          "end_byte": 1129,
                                                          "text": "cur",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "->",
                                                          "start_byte": 1130,
                                                          "end_byte": 1132,
                                                          "text": "->",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "field_identifier",
                                                          "start_byte": 1133,
                                                          "end_byte": 1141,
                                                          "text": "triangle",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 1142,
                                                      "end_byte": 1150,
                                                      "text": "[ r ++ ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 1142,
                                                          "end_byte": 1143,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "update_expression",
                                                          "start_byte": 1144,
                                                          "end_byte": 1148,
                                                          "text": "r ++",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 1144,
                                                              "end_byte": 1145,
                                                              "text": "r",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "++",
                                                              "start_byte": 1146,
                                                              "end_byte": 1148,
                                                              "text": "++",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 1149,
                                                          "end_byte": 1150,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 1151,
                                                  "end_byte": 1156,
                                                  "text": "[ c ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 1151,
                                                      "end_byte": 1152,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 1153,
                                                      "end_byte": 1154,
                                                      "text": "c",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 1155,
                                                      "end_byte": 1156,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 1157,
                                          "end_byte": 1158,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 1159,
                                      "end_byte": 1181,
                                      "text": "c = c + bin [ k ++ ] ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 1159,
                                          "end_byte": 1179,
                                          "text": "c = c + bin [ k ++ ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1159,
                                              "end_byte": 1160,
                                              "text": "c",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 1161,
                                              "end_byte": 1162,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 1163,
                                              "end_byte": 1179,
                                              "text": "c + bin [ k ++ ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1163,
                                                  "end_byte": 1164,
                                                  "text": "c",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 1165,
                                                  "end_byte": 1166,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 1167,
                                                  "end_byte": 1179,
                                                  "text": "bin [ k ++ ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 1167,
                                                      "end_byte": 1170,
                                                      "text": "bin",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 1171,
                                                      "end_byte": 1179,
                                                      "text": "[ k ++ ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 1171,
                                                          "end_byte": 1172,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "update_expression",
                                                          "start_byte": 1173,
                                                          "end_byte": 1177,
                                                          "text": "k ++",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 1173,
                                                              "end_byte": 1174,
                                                              "text": "k",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "++",
                                                              "start_byte": 1175,
                                                              "end_byte": 1177,
                                                              "text": "++",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 1178,
                                                          "end_byte": 1179,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 1180,
                                          "end_byte": 1181,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 1182,
                                      "end_byte": 1183,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 1184,
                              "end_byte": 1226,
                              "text": "if ( sum > cur -> max ) cur -> max = sum ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 1184,
                                  "end_byte": 1186,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 1187,
                                  "end_byte": 1207,
                                  "text": "( sum > cur -> max )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 1187,
                                      "end_byte": 1188,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 1189,
                                      "end_byte": 1205,
                                      "text": "sum > cur -> max",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1189,
                                          "end_byte": 1192,
                                          "text": "sum",
                                          "children": []
                                        },
                                        {
                                          "type": ">",
                                          "start_byte": 1193,
                                          "end_byte": 1194,
                                          "text": ">",
                                          "children": []
                                        },
                                        {
                                          "type": "field_expression",
                                          "start_byte": 1195,
                                          "end_byte": 1205,
                                          "text": "cur -> max",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1195,
                                              "end_byte": 1198,
                                              "text": "cur",
                                              "children": []
                                            },
                                            {
                                              "type": "->",
                                              "start_byte": 1199,
                                              "end_byte": 1201,
                                              "text": "->",
                                              "children": []
                                            },
                                            {
                                              "type": "field_identifier",
                                              "start_byte": 1202,
                                              "end_byte": 1205,
                                              "text": "max",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 1206,
                                      "end_byte": 1207,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 1208,
                                  "end_byte": 1226,
                                  "text": "cur -> max = sum ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 1208,
                                      "end_byte": 1224,
                                      "text": "cur -> max = sum",
                                      "children": [
                                        {
                                          "type": "field_expression",
                                          "start_byte": 1208,
                                          "end_byte": 1218,
                                          "text": "cur -> max",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1208,
                                              "end_byte": 1211,
                                              "text": "cur",
                                              "children": []
                                            },
                                            {
                                              "type": "->",
                                              "start_byte": 1212,
                                              "end_byte": 1214,
                                              "text": "->",
                                              "children": []
                                            },
                                            {
                                              "type": "field_identifier",
                                              "start_byte": 1215,
                                              "end_byte": 1218,
                                              "text": "max",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 1219,
                                          "end_byte": 1220,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 1221,
                                          "end_byte": 1224,
                                          "text": "sum",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 1225,
                                      "end_byte": 1226,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 1227,
                              "end_byte": 1228,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1229,
                      "end_byte": 1248,
                      "text": "cur = cur -> next ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 1229,
                          "end_byte": 1246,
                          "text": "cur = cur -> next",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1229,
                              "end_byte": 1232,
                              "text": "cur",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 1233,
                              "end_byte": 1234,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "field_expression",
                              "start_byte": 1235,
                              "end_byte": 1246,
                              "text": "cur -> next",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 1235,
                                  "end_byte": 1238,
                                  "text": "cur",
                                  "children": []
                                },
                                {
                                  "type": "->",
                                  "start_byte": 1239,
                                  "end_byte": 1241,
                                  "text": "->",
                                  "children": []
                                },
                                {
                                  "type": "field_identifier",
                                  "start_byte": 1242,
                                  "end_byte": 1246,
                                  "text": "next",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1247,
                          "end_byte": 1248,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 1249,
                      "end_byte": 1250,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 1251,
              "end_byte": 1263,
              "text": "cur = head ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 1251,
                  "end_byte": 1261,
                  "text": "cur = head",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1251,
                      "end_byte": 1254,
                      "text": "cur",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 1255,
                      "end_byte": 1256,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 1257,
                      "end_byte": 1261,
                      "text": "head",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1262,
                  "end_byte": 1263,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 1264,
              "end_byte": 1342,
              "text": "while ( cur != NULL ) { printf ( \"%d\\n\" , cur -> max ) ; cur = cur -> next ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 1264,
                  "end_byte": 1269,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 1270,
                  "end_byte": 1285,
                  "text": "( cur != NULL )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 1270,
                      "end_byte": 1271,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 1272,
                      "end_byte": 1283,
                      "text": "cur != NULL",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 1272,
                          "end_byte": 1275,
                          "text": "cur",
                          "children": []
                        },
                        {
                          "type": "!=",
                          "start_byte": 1276,
                          "end_byte": 1278,
                          "text": "!=",
                          "children": []
                        },
                        {
                          "type": "null",
                          "start_byte": 1279,
                          "end_byte": 1283,
                          "text": "NULL",
                          "children": [
                            {
                              "type": "NULL",
                              "start_byte": 1279,
                              "end_byte": 1283,
                              "text": "NULL",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 1284,
                      "end_byte": 1285,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 1286,
                  "end_byte": 1342,
                  "text": "{ printf ( \"%d\\n\" , cur -> max ) ; cur = cur -> next ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 1286,
                      "end_byte": 1287,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1288,
                      "end_byte": 1320,
                      "text": "printf ( \"%d\\n\" , cur -> max ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 1288,
                          "end_byte": 1318,
                          "text": "printf ( \"%d\\n\" , cur -> max )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1288,
                              "end_byte": 1294,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 1295,
                              "end_byte": 1318,
                              "text": "( \"%d\\n\" , cur -> max )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 1295,
                                  "end_byte": 1296,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 1297,
                                  "end_byte": 1303,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 1297,
                                      "end_byte": 1298,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 1298,
                                      "end_byte": 1300,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 1300,
                                      "end_byte": 1302,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 1302,
                                      "end_byte": 1303,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 1304,
                                  "end_byte": 1305,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "field_expression",
                                  "start_byte": 1306,
                                  "end_byte": 1316,
                                  "text": "cur -> max",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1306,
                                      "end_byte": 1309,
                                      "text": "cur",
                                      "children": []
                                    },
                                    {
                                      "type": "->",
                                      "start_byte": 1310,
                                      "end_byte": 1312,
                                      "text": "->",
                                      "children": []
                                    },
                                    {
                                      "type": "field_identifier",
                                      "start_byte": 1313,
                                      "end_byte": 1316,
                                      "text": "max",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1317,
                                  "end_byte": 1318,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1319,
                          "end_byte": 1320,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1321,
                      "end_byte": 1340,
                      "text": "cur = cur -> next ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 1321,
                          "end_byte": 1338,
                          "text": "cur = cur -> next",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1321,
                              "end_byte": 1324,
                              "text": "cur",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 1325,
                              "end_byte": 1326,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "field_expression",
                              "start_byte": 1327,
                              "end_byte": 1338,
                              "text": "cur -> next",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 1327,
                                  "end_byte": 1330,
                                  "text": "cur",
                                  "children": []
                                },
                                {
                                  "type": "->",
                                  "start_byte": 1331,
                                  "end_byte": 1333,
                                  "text": "->",
                                  "children": []
                                },
                                {
                                  "type": "field_identifier",
                                  "start_byte": 1334,
                                  "end_byte": 1338,
                                  "text": "next",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1339,
                          "end_byte": 1340,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 1341,
                      "end_byte": 1342,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 1343,
              "end_byte": 1344,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}