int fun ( void ) ; int main ( ) { int n = 0 , m , i ; scanf ( "%d" , & n ) ; for ( i = 1 ; i <= n ; i ++ ) { m = fun ( ) ; printf ( "\n%d" , m ) ; } return 0 ; } int fun ( void ) { { int a [ 100 ] [ 100 ] , i , j , n , m ; scanf ( "%d" , & n ) ; m = n ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) scanf ( "%d" , & a [ i ] [ j ] ) ; } if ( m == 1 ) { m = a [ 0 ] [ 0 ] ; return ( m ) ; } else { if ( a [ 1 ] [ 0 ] > a [ 1 ] [ 1 ] ) { n = a [ 1 ] [ 0 ] + a [ 0 ] [ 0 ] ; j = 0 ; } else { n = a [ 1 ] [ 1 ] + a [ 0 ] [ 0 ] ; j = 1 ; } } for ( i = 2 ; i <= m ; i ++ ) { if ( j == 0 ) { if ( a [ i ] [ 0 ] > a [ i ] [ 1 ] ) { n = n + a [ i ] [ 0 ] ; j = 0 ; } else { n = n + a [ i ] [ 1 ] ; j = 1 ; } } else if ( i == j ) { if ( a [ i ] [ j ] > a [ i ] [ j - i ] ) n = n + a [ i ] [ j ] ; else { n = n + a [ i ] [ j - i ] ; j = j - 1 ; } } else if ( j >= 1 ) { if ( a [ i ] [ j ] > a [ i ] [ j - 1 ] && a [ i ] [ j ] > a [ i ] [ j + 1 ] ) n = n + a [ i ] [ j ] ; else if ( a [ i ] [ j - 1 ] > a [ i ] [ j ] && a [ i ] [ j - 1 ] > a [ i ] [ j + 1 ] ) { n = n + a [ i ] [ j - 1 ] ; j = j - 1 ; } else if ( a [ i ] [ j + 1 ] > a [ i ] [ j ] && a [ i ] [ j + 1 ] > a [ i ] [ j - 1 ] ) { n = n + a [ i ] [ j + 1 ] ; j = j + 1 ; } } } return ( n ) ; } }