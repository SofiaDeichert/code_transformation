{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 731,
  "text": "int main ( ) { long T , N , countSubSet = 1 , stretch , prev , next ; long tCaseCount [ 5 ] ; long count = 0 ; int i ; scanf ( \"%ld\" , & T ) ; for ( i = 0 ; i < T ; i ++ ) { scanf ( \"%ld\" , & N ) ; stretch = 1 ; scanf ( \"%ld\" , & prev ) ; if ( N == 1 ) { tCaseCount [ i ] = 1 ; continue ; } N -- ; countSubSet = 0 ; while ( N -- ) { scanf ( \"%ld\" , & next ) ; if ( prev < next ) { prev = next ; stretch ++ ; } else { prev = next ; if ( stretch == 1 ) countSubSet ++ ; else { countSubSet += ( stretch * ( stretch + 1 ) / 2 ) ; stretch = 1 ; } } } countSubSet += ( stretch * ( stretch + 1 ) / 2 ) ; tCaseCount [ i ] = countSubSet ; countSubSet = 0 ; } for ( i = 0 ; i < T ; i ++ ) printf ( \"%ld\\n\" , tCaseCount [ i ] ) ; return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 731,
      "text": "int main ( ) { long T , N , countSubSet = 1 , stretch , prev , next ; long tCaseCount [ 5 ] ; long count = 0 ; int i ; scanf ( \"%ld\" , & T ) ; for ( i = 0 ; i < T ; i ++ ) { scanf ( \"%ld\" , & N ) ; stretch = 1 ; scanf ( \"%ld\" , & prev ) ; if ( N == 1 ) { tCaseCount [ i ] = 1 ; continue ; } N -- ; countSubSet = 0 ; while ( N -- ) { scanf ( \"%ld\" , & next ) ; if ( prev < next ) { prev = next ; stretch ++ ; } else { prev = next ; if ( stretch == 1 ) countSubSet ++ ; else { countSubSet += ( stretch * ( stretch + 1 ) / 2 ) ; stretch = 1 ; } } } countSubSet += ( stretch * ( stretch + 1 ) / 2 ) ; tCaseCount [ i ] = countSubSet ; countSubSet = 0 ; } for ( i = 0 ; i < T ; i ++ ) printf ( \"%ld\\n\" , tCaseCount [ i ] ) ; return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 731,
          "text": "{ long T , N , countSubSet = 1 , stretch , prev , next ; long tCaseCount [ 5 ] ; long count = 0 ; int i ; scanf ( \"%ld\" , & T ) ; for ( i = 0 ; i < T ; i ++ ) { scanf ( \"%ld\" , & N ) ; stretch = 1 ; scanf ( \"%ld\" , & prev ) ; if ( N == 1 ) { tCaseCount [ i ] = 1 ; continue ; } N -- ; countSubSet = 0 ; while ( N -- ) { scanf ( \"%ld\" , & next ) ; if ( prev < next ) { prev = next ; stretch ++ ; } else { prev = next ; if ( stretch == 1 ) countSubSet ++ ; else { countSubSet += ( stretch * ( stretch + 1 ) / 2 ) ; stretch = 1 ; } } } countSubSet += ( stretch * ( stretch + 1 ) / 2 ) ; tCaseCount [ i ] = countSubSet ; countSubSet = 0 ; } for ( i = 0 ; i < T ; i ++ ) printf ( \"%ld\\n\" , tCaseCount [ i ] ) ; return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 69,
              "text": "long T , N , countSubSet = 1 , stretch , prev , next ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 15,
                  "end_byte": 19,
                  "text": "long",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 15,
                      "end_byte": 19,
                      "text": "long",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 20,
                  "end_byte": 21,
                  "text": "T",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 22,
                  "end_byte": 23,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 24,
                  "end_byte": 25,
                  "text": "N",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 26,
                  "end_byte": 27,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 28,
                  "end_byte": 43,
                  "text": "countSubSet = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 28,
                      "end_byte": 39,
                      "text": "countSubSet",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 40,
                      "end_byte": 41,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 42,
                      "end_byte": 43,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 44,
                  "end_byte": 45,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 46,
                  "end_byte": 53,
                  "text": "stretch",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 54,
                  "end_byte": 55,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 56,
                  "end_byte": 60,
                  "text": "prev",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 61,
                  "end_byte": 62,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 63,
                  "end_byte": 67,
                  "text": "next",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 68,
                  "end_byte": 69,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 70,
              "end_byte": 93,
              "text": "long tCaseCount [ 5 ] ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 70,
                  "end_byte": 74,
                  "text": "long",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 70,
                      "end_byte": 74,
                      "text": "long",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "array_declarator",
                  "start_byte": 75,
                  "end_byte": 91,
                  "text": "tCaseCount [ 5 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 75,
                      "end_byte": 85,
                      "text": "tCaseCount",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 86,
                      "end_byte": 87,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 88,
                      "end_byte": 89,
                      "text": "5",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 90,
                      "end_byte": 91,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 92,
                  "end_byte": 93,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 94,
              "end_byte": 110,
              "text": "long count = 0 ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 94,
                  "end_byte": 98,
                  "text": "long",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 94,
                      "end_byte": 98,
                      "text": "long",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "init_declarator",
                  "start_byte": 99,
                  "end_byte": 108,
                  "text": "count = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 99,
                      "end_byte": 104,
                      "text": "count",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 105,
                      "end_byte": 106,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 107,
                      "end_byte": 108,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 109,
                  "end_byte": 110,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 111,
              "end_byte": 118,
              "text": "int i ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 111,
                  "end_byte": 114,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 115,
                  "end_byte": 116,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 117,
                  "end_byte": 118,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 119,
              "end_byte": 142,
              "text": "scanf ( \"%ld\" , & T ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 119,
                  "end_byte": 140,
                  "text": "scanf ( \"%ld\" , & T )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 119,
                      "end_byte": 124,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 125,
                      "end_byte": 140,
                      "text": "( \"%ld\" , & T )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 125,
                          "end_byte": 126,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 127,
                          "end_byte": 132,
                          "text": "\"%ld\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 127,
                              "end_byte": 128,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 128,
                              "end_byte": 131,
                              "text": "%ld",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 131,
                              "end_byte": 132,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 133,
                          "end_byte": 134,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 135,
                          "end_byte": 138,
                          "text": "& T",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 135,
                              "end_byte": 136,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 137,
                              "end_byte": 138,
                              "text": "T",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 139,
                          "end_byte": 140,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 141,
                  "end_byte": 142,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 143,
              "end_byte": 649,
              "text": "for ( i = 0 ; i < T ; i ++ ) { scanf ( \"%ld\" , & N ) ; stretch = 1 ; scanf ( \"%ld\" , & prev ) ; if ( N == 1 ) { tCaseCount [ i ] = 1 ; continue ; } N -- ; countSubSet = 0 ; while ( N -- ) { scanf ( \"%ld\" , & next ) ; if ( prev < next ) { prev = next ; stretch ++ ; } else { prev = next ; if ( stretch == 1 ) countSubSet ++ ; else { countSubSet += ( stretch * ( stretch + 1 ) / 2 ) ; stretch = 1 ; } } } countSubSet += ( stretch * ( stretch + 1 ) / 2 ) ; tCaseCount [ i ] = countSubSet ; countSubSet = 0 ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 143,
                  "end_byte": 146,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 147,
                  "end_byte": 148,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 149,
                  "end_byte": 154,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 149,
                      "end_byte": 150,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 151,
                      "end_byte": 152,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 153,
                      "end_byte": 154,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 155,
                  "end_byte": 156,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 157,
                  "end_byte": 162,
                  "text": "i < T",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 157,
                      "end_byte": 158,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 159,
                      "end_byte": 160,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 161,
                      "end_byte": 162,
                      "text": "T",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 163,
                  "end_byte": 164,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 165,
                  "end_byte": 169,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 165,
                      "end_byte": 166,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 167,
                      "end_byte": 169,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 170,
                  "end_byte": 171,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 172,
                  "end_byte": 649,
                  "text": "{ scanf ( \"%ld\" , & N ) ; stretch = 1 ; scanf ( \"%ld\" , & prev ) ; if ( N == 1 ) { tCaseCount [ i ] = 1 ; continue ; } N -- ; countSubSet = 0 ; while ( N -- ) { scanf ( \"%ld\" , & next ) ; if ( prev < next ) { prev = next ; stretch ++ ; } else { prev = next ; if ( stretch == 1 ) countSubSet ++ ; else { countSubSet += ( stretch * ( stretch + 1 ) / 2 ) ; stretch = 1 ; } } } countSubSet += ( stretch * ( stretch + 1 ) / 2 ) ; tCaseCount [ i ] = countSubSet ; countSubSet = 0 ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 172,
                      "end_byte": 173,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 174,
                      "end_byte": 197,
                      "text": "scanf ( \"%ld\" , & N ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 174,
                          "end_byte": 195,
                          "text": "scanf ( \"%ld\" , & N )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 174,
                              "end_byte": 179,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 180,
                              "end_byte": 195,
                              "text": "( \"%ld\" , & N )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 180,
                                  "end_byte": 181,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 182,
                                  "end_byte": 187,
                                  "text": "\"%ld\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 182,
                                      "end_byte": 183,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 183,
                                      "end_byte": 186,
                                      "text": "%ld",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 186,
                                      "end_byte": 187,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 188,
                                  "end_byte": 189,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 190,
                                  "end_byte": 193,
                                  "text": "& N",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 190,
                                      "end_byte": 191,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 192,
                                      "end_byte": 193,
                                      "text": "N",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 194,
                                  "end_byte": 195,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 196,
                          "end_byte": 197,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 198,
                      "end_byte": 211,
                      "text": "stretch = 1 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 198,
                          "end_byte": 209,
                          "text": "stretch = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 198,
                              "end_byte": 205,
                              "text": "stretch",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 206,
                              "end_byte": 207,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 208,
                              "end_byte": 209,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 210,
                          "end_byte": 211,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 212,
                      "end_byte": 238,
                      "text": "scanf ( \"%ld\" , & prev ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 212,
                          "end_byte": 236,
                          "text": "scanf ( \"%ld\" , & prev )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 212,
                              "end_byte": 217,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 218,
                              "end_byte": 236,
                              "text": "( \"%ld\" , & prev )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 218,
                                  "end_byte": 219,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 220,
                                  "end_byte": 225,
                                  "text": "\"%ld\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 220,
                                      "end_byte": 221,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 221,
                                      "end_byte": 224,
                                      "text": "%ld",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 224,
                                      "end_byte": 225,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 226,
                                  "end_byte": 227,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 228,
                                  "end_byte": 234,
                                  "text": "& prev",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 228,
                                      "end_byte": 229,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 230,
                                      "end_byte": 234,
                                      "text": "prev",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 235,
                                  "end_byte": 236,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 237,
                          "end_byte": 238,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 239,
                      "end_byte": 290,
                      "text": "if ( N == 1 ) { tCaseCount [ i ] = 1 ; continue ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 239,
                          "end_byte": 241,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 242,
                          "end_byte": 252,
                          "text": "( N == 1 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 242,
                              "end_byte": 243,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 244,
                              "end_byte": 250,
                              "text": "N == 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 244,
                                  "end_byte": 245,
                                  "text": "N",
                                  "children": []
                                },
                                {
                                  "type": "==",
                                  "start_byte": 246,
                                  "end_byte": 248,
                                  "text": "==",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 249,
                                  "end_byte": 250,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 251,
                              "end_byte": 252,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 253,
                          "end_byte": 290,
                          "text": "{ tCaseCount [ i ] = 1 ; continue ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 253,
                              "end_byte": 254,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 255,
                              "end_byte": 277,
                              "text": "tCaseCount [ i ] = 1 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 255,
                                  "end_byte": 275,
                                  "text": "tCaseCount [ i ] = 1",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 255,
                                      "end_byte": 271,
                                      "text": "tCaseCount [ i ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 255,
                                          "end_byte": 265,
                                          "text": "tCaseCount",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 266,
                                          "end_byte": 271,
                                          "text": "[ i ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 266,
                                              "end_byte": 267,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 268,
                                              "end_byte": 269,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 270,
                                              "end_byte": 271,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 272,
                                      "end_byte": 273,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 274,
                                      "end_byte": 275,
                                      "text": "1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 276,
                                  "end_byte": 277,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "continue_statement",
                              "start_byte": 278,
                              "end_byte": 288,
                              "text": "continue ;",
                              "children": [
                                {
                                  "type": "continue",
                                  "start_byte": 278,
                                  "end_byte": 286,
                                  "text": "continue",
                                  "children": []
                                },
                                {
                                  "type": ";",
                                  "start_byte": 287,
                                  "end_byte": 288,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 289,
                              "end_byte": 290,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 291,
                      "end_byte": 297,
                      "text": "N -- ;",
                      "children": [
                        {
                          "type": "update_expression",
                          "start_byte": 291,
                          "end_byte": 295,
                          "text": "N --",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 291,
                              "end_byte": 292,
                              "text": "N",
                              "children": []
                            },
                            {
                              "type": "--",
                              "start_byte": 293,
                              "end_byte": 295,
                              "text": "--",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 296,
                          "end_byte": 297,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 298,
                      "end_byte": 315,
                      "text": "countSubSet = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 298,
                          "end_byte": 313,
                          "text": "countSubSet = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 298,
                              "end_byte": 309,
                              "text": "countSubSet",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 310,
                              "end_byte": 311,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 312,
                              "end_byte": 313,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 314,
                          "end_byte": 315,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 316,
                      "end_byte": 545,
                      "text": "while ( N -- ) { scanf ( \"%ld\" , & next ) ; if ( prev < next ) { prev = next ; stretch ++ ; } else { prev = next ; if ( stretch == 1 ) countSubSet ++ ; else { countSubSet += ( stretch * ( stretch + 1 ) / 2 ) ; stretch = 1 ; } } }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 316,
                          "end_byte": 321,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 322,
                          "end_byte": 330,
                          "text": "( N -- )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 322,
                              "end_byte": 323,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "update_expression",
                              "start_byte": 324,
                              "end_byte": 328,
                              "text": "N --",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 324,
                                  "end_byte": 325,
                                  "text": "N",
                                  "children": []
                                },
                                {
                                  "type": "--",
                                  "start_byte": 326,
                                  "end_byte": 328,
                                  "text": "--",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 329,
                              "end_byte": 330,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 331,
                          "end_byte": 545,
                          "text": "{ scanf ( \"%ld\" , & next ) ; if ( prev < next ) { prev = next ; stretch ++ ; } else { prev = next ; if ( stretch == 1 ) countSubSet ++ ; else { countSubSet += ( stretch * ( stretch + 1 ) / 2 ) ; stretch = 1 ; } } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 331,
                              "end_byte": 332,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 333,
                              "end_byte": 359,
                              "text": "scanf ( \"%ld\" , & next ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 333,
                                  "end_byte": 357,
                                  "text": "scanf ( \"%ld\" , & next )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 333,
                                      "end_byte": 338,
                                      "text": "scanf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 339,
                                      "end_byte": 357,
                                      "text": "( \"%ld\" , & next )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 339,
                                          "end_byte": 340,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 341,
                                          "end_byte": 346,
                                          "text": "\"%ld\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 341,
                                              "end_byte": 342,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 342,
                                              "end_byte": 345,
                                              "text": "%ld",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 345,
                                              "end_byte": 346,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 347,
                                          "end_byte": 348,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "pointer_expression",
                                          "start_byte": 349,
                                          "end_byte": 355,
                                          "text": "& next",
                                          "children": [
                                            {
                                              "type": "&",
                                              "start_byte": 349,
                                              "end_byte": 350,
                                              "text": "&",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 351,
                                              "end_byte": 355,
                                              "text": "next",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 356,
                                          "end_byte": 357,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 358,
                                  "end_byte": 359,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 360,
                              "end_byte": 543,
                              "text": "if ( prev < next ) { prev = next ; stretch ++ ; } else { prev = next ; if ( stretch == 1 ) countSubSet ++ ; else { countSubSet += ( stretch * ( stretch + 1 ) / 2 ) ; stretch = 1 ; } }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 360,
                                  "end_byte": 362,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 363,
                                  "end_byte": 378,
                                  "text": "( prev < next )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 363,
                                      "end_byte": 364,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 365,
                                      "end_byte": 376,
                                      "text": "prev < next",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 365,
                                          "end_byte": 369,
                                          "text": "prev",
                                          "children": []
                                        },
                                        {
                                          "type": "<",
                                          "start_byte": 370,
                                          "end_byte": 371,
                                          "text": "<",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 372,
                                          "end_byte": 376,
                                          "text": "next",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 377,
                                      "end_byte": 378,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 379,
                                  "end_byte": 409,
                                  "text": "{ prev = next ; stretch ++ ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 379,
                                      "end_byte": 380,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 381,
                                      "end_byte": 394,
                                      "text": "prev = next ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 381,
                                          "end_byte": 392,
                                          "text": "prev = next",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 381,
                                              "end_byte": 385,
                                              "text": "prev",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 386,
                                              "end_byte": 387,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 388,
                                              "end_byte": 392,
                                              "text": "next",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 393,
                                          "end_byte": 394,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 395,
                                      "end_byte": 407,
                                      "text": "stretch ++ ;",
                                      "children": [
                                        {
                                          "type": "update_expression",
                                          "start_byte": 395,
                                          "end_byte": 405,
                                          "text": "stretch ++",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 395,
                                              "end_byte": 402,
                                              "text": "stretch",
                                              "children": []
                                            },
                                            {
                                              "type": "++",
                                              "start_byte": 403,
                                              "end_byte": 405,
                                              "text": "++",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 406,
                                          "end_byte": 407,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 408,
                                      "end_byte": 409,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start_byte": 410,
                                  "end_byte": 543,
                                  "text": "else { prev = next ; if ( stretch == 1 ) countSubSet ++ ; else { countSubSet += ( stretch * ( stretch + 1 ) / 2 ) ; stretch = 1 ; } }",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start_byte": 410,
                                      "end_byte": 414,
                                      "text": "else",
                                      "children": []
                                    },
                                    {
                                      "type": "compound_statement",
                                      "start_byte": 415,
                                      "end_byte": 543,
                                      "text": "{ prev = next ; if ( stretch == 1 ) countSubSet ++ ; else { countSubSet += ( stretch * ( stretch + 1 ) / 2 ) ; stretch = 1 ; } }",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start_byte": 415,
                                          "end_byte": 416,
                                          "text": "{",
                                          "children": []
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 417,
                                          "end_byte": 430,
                                          "text": "prev = next ;",
                                          "children": [
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 417,
                                              "end_byte": 428,
                                              "text": "prev = next",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 417,
                                                  "end_byte": 421,
                                                  "text": "prev",
                                                  "children": []
                                                },
                                                {
                                                  "type": "=",
                                                  "start_byte": 422,
                                                  "end_byte": 423,
                                                  "text": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 424,
                                                  "end_byte": 428,
                                                  "text": "next",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 429,
                                              "end_byte": 430,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "if_statement",
                                          "start_byte": 431,
                                          "end_byte": 541,
                                          "text": "if ( stretch == 1 ) countSubSet ++ ; else { countSubSet += ( stretch * ( stretch + 1 ) / 2 ) ; stretch = 1 ; }",
                                          "children": [
                                            {
                                              "type": "if",
                                              "start_byte": 431,
                                              "end_byte": 433,
                                              "text": "if",
                                              "children": []
                                            },
                                            {
                                              "type": "condition_clause",
                                              "start_byte": 434,
                                              "end_byte": 450,
                                              "text": "( stretch == 1 )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 434,
                                                  "end_byte": 435,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 436,
                                                  "end_byte": 448,
                                                  "text": "stretch == 1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 436,
                                                      "end_byte": 443,
                                                      "text": "stretch",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "==",
                                                      "start_byte": 444,
                                                      "end_byte": 446,
                                                      "text": "==",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 447,
                                                      "end_byte": 448,
                                                      "text": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 449,
                                                  "end_byte": 450,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 451,
                                              "end_byte": 467,
                                              "text": "countSubSet ++ ;",
                                              "children": [
                                                {
                                                  "type": "update_expression",
                                                  "start_byte": 451,
                                                  "end_byte": 465,
                                                  "text": "countSubSet ++",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 451,
                                                      "end_byte": 462,
                                                      "text": "countSubSet",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "++",
                                                      "start_byte": 463,
                                                      "end_byte": 465,
                                                      "text": "++",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 466,
                                                  "end_byte": 467,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "else_clause",
                                              "start_byte": 468,
                                              "end_byte": 541,
                                              "text": "else { countSubSet += ( stretch * ( stretch + 1 ) / 2 ) ; stretch = 1 ; }",
                                              "children": [
                                                {
                                                  "type": "else",
                                                  "start_byte": 468,
                                                  "end_byte": 472,
                                                  "text": "else",
                                                  "children": []
                                                },
                                                {
                                                  "type": "compound_statement",
                                                  "start_byte": 473,
                                                  "end_byte": 541,
                                                  "text": "{ countSubSet += ( stretch * ( stretch + 1 ) / 2 ) ; stretch = 1 ; }",
                                                  "children": [
                                                    {
                                                      "type": "{",
                                                      "start_byte": 473,
                                                      "end_byte": 474,
                                                      "text": "{",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "expression_statement",
                                                      "start_byte": 475,
                                                      "end_byte": 525,
                                                      "text": "countSubSet += ( stretch * ( stretch + 1 ) / 2 ) ;",
                                                      "children": [
                                                        {
                                                          "type": "assignment_expression",
                                                          "start_byte": 475,
                                                          "end_byte": 523,
                                                          "text": "countSubSet += ( stretch * ( stretch + 1 ) / 2 )",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 475,
                                                              "end_byte": 486,
                                                              "text": "countSubSet",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "+=",
                                                              "start_byte": 487,
                                                              "end_byte": 489,
                                                              "text": "+=",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "parenthesized_expression",
                                                              "start_byte": 490,
                                                              "end_byte": 523,
                                                              "text": "( stretch * ( stretch + 1 ) / 2 )",
                                                              "children": [
                                                                {
                                                                  "type": "(",
                                                                  "start_byte": 490,
                                                                  "end_byte": 491,
                                                                  "text": "(",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "binary_expression",
                                                                  "start_byte": 492,
                                                                  "end_byte": 521,
                                                                  "text": "stretch * ( stretch + 1 ) / 2",
                                                                  "children": [
                                                                    {
                                                                      "type": "binary_expression",
                                                                      "start_byte": 492,
                                                                      "end_byte": 517,
                                                                      "text": "stretch * ( stretch + 1 )",
                                                                      "children": [
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 492,
                                                                          "end_byte": 499,
                                                                          "text": "stretch",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "*",
                                                                          "start_byte": 500,
                                                                          "end_byte": 501,
                                                                          "text": "*",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "parenthesized_expression",
                                                                          "start_byte": 502,
                                                                          "end_byte": 517,
                                                                          "text": "( stretch + 1 )",
                                                                          "children": [
                                                                            {
                                                                              "type": "(",
                                                                              "start_byte": 502,
                                                                              "end_byte": 503,
                                                                              "text": "(",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "binary_expression",
                                                                              "start_byte": 504,
                                                                              "end_byte": 515,
                                                                              "text": "stretch + 1",
                                                                              "children": [
                                                                                {
                                                                                  "type": "identifier",
                                                                                  "start_byte": 504,
                                                                                  "end_byte": 511,
                                                                                  "text": "stretch",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "+",
                                                                                  "start_byte": 512,
                                                                                  "end_byte": 513,
                                                                                  "text": "+",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "number_literal",
                                                                                  "start_byte": 514,
                                                                                  "end_byte": 515,
                                                                                  "text": "1",
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": ")",
                                                                              "start_byte": 516,
                                                                              "end_byte": 517,
                                                                              "text": ")",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "/",
                                                                      "start_byte": 518,
                                                                      "end_byte": 519,
                                                                      "text": "/",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "number_literal",
                                                                      "start_byte": 520,
                                                                      "end_byte": 521,
                                                                      "text": "2",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": ")",
                                                                  "start_byte": 522,
                                                                  "end_byte": 523,
                                                                  "text": ")",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ";",
                                                          "start_byte": 524,
                                                          "end_byte": 525,
                                                          "text": ";",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "expression_statement",
                                                      "start_byte": 526,
                                                      "end_byte": 539,
                                                      "text": "stretch = 1 ;",
                                                      "children": [
                                                        {
                                                          "type": "assignment_expression",
                                                          "start_byte": 526,
                                                          "end_byte": 537,
                                                          "text": "stretch = 1",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 526,
                                                              "end_byte": 533,
                                                              "text": "stretch",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "=",
                                                              "start_byte": 534,
                                                              "end_byte": 535,
                                                              "text": "=",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "number_literal",
                                                              "start_byte": 536,
                                                              "end_byte": 537,
                                                              "text": "1",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ";",
                                                          "start_byte": 538,
                                                          "end_byte": 539,
                                                          "text": ";",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "}",
                                                      "start_byte": 540,
                                                      "end_byte": 541,
                                                      "text": "}",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start_byte": 542,
                                          "end_byte": 543,
                                          "text": "}",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 544,
                              "end_byte": 545,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 546,
                      "end_byte": 596,
                      "text": "countSubSet += ( stretch * ( stretch + 1 ) / 2 ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 546,
                          "end_byte": 594,
                          "text": "countSubSet += ( stretch * ( stretch + 1 ) / 2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 546,
                              "end_byte": 557,
                              "text": "countSubSet",
                              "children": []
                            },
                            {
                              "type": "+=",
                              "start_byte": 558,
                              "end_byte": 560,
                              "text": "+=",
                              "children": []
                            },
                            {
                              "type": "parenthesized_expression",
                              "start_byte": 561,
                              "end_byte": 594,
                              "text": "( stretch * ( stretch + 1 ) / 2 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 561,
                                  "end_byte": 562,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 563,
                                  "end_byte": 592,
                                  "text": "stretch * ( stretch + 1 ) / 2",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 563,
                                      "end_byte": 588,
                                      "text": "stretch * ( stretch + 1 )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 563,
                                          "end_byte": 570,
                                          "text": "stretch",
                                          "children": []
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 571,
                                          "end_byte": 572,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "parenthesized_expression",
                                          "start_byte": 573,
                                          "end_byte": 588,
                                          "text": "( stretch + 1 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 573,
                                              "end_byte": 574,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 575,
                                              "end_byte": 586,
                                              "text": "stretch + 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 575,
                                                  "end_byte": 582,
                                                  "text": "stretch",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 583,
                                                  "end_byte": 584,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 585,
                                                  "end_byte": 586,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 587,
                                              "end_byte": 588,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "/",
                                      "start_byte": 589,
                                      "end_byte": 590,
                                      "text": "/",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 591,
                                      "end_byte": 592,
                                      "text": "2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 593,
                                  "end_byte": 594,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 595,
                          "end_byte": 596,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 597,
                      "end_byte": 629,
                      "text": "tCaseCount [ i ] = countSubSet ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 597,
                          "end_byte": 627,
                          "text": "tCaseCount [ i ] = countSubSet",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 597,
                              "end_byte": 613,
                              "text": "tCaseCount [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 597,
                                  "end_byte": 607,
                                  "text": "tCaseCount",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 608,
                                  "end_byte": 613,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 608,
                                      "end_byte": 609,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 610,
                                      "end_byte": 611,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 612,
                                      "end_byte": 613,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 614,
                              "end_byte": 615,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 616,
                              "end_byte": 627,
                              "text": "countSubSet",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 628,
                          "end_byte": 629,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 630,
                      "end_byte": 647,
                      "text": "countSubSet = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 630,
                          "end_byte": 645,
                          "text": "countSubSet = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 630,
                              "end_byte": 641,
                              "text": "countSubSet",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 642,
                              "end_byte": 643,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 644,
                              "end_byte": 645,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 646,
                          "end_byte": 647,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 648,
                      "end_byte": 649,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 650,
              "end_byte": 718,
              "text": "for ( i = 0 ; i < T ; i ++ ) printf ( \"%ld\\n\" , tCaseCount [ i ] ) ;",
              "children": [
                {
                  "type": "for",
                  "start_byte": 650,
                  "end_byte": 653,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 654,
                  "end_byte": 655,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 656,
                  "end_byte": 661,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 656,
                      "end_byte": 657,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 658,
                      "end_byte": 659,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 660,
                      "end_byte": 661,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 662,
                  "end_byte": 663,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 664,
                  "end_byte": 669,
                  "text": "i < T",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 664,
                      "end_byte": 665,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 666,
                      "end_byte": 667,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 668,
                      "end_byte": 669,
                      "text": "T",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 670,
                  "end_byte": 671,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 672,
                  "end_byte": 676,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 672,
                      "end_byte": 673,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 674,
                      "end_byte": 676,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 677,
                  "end_byte": 678,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "expression_statement",
                  "start_byte": 679,
                  "end_byte": 718,
                  "text": "printf ( \"%ld\\n\" , tCaseCount [ i ] ) ;",
                  "children": [
                    {
                      "type": "call_expression",
                      "start_byte": 679,
                      "end_byte": 716,
                      "text": "printf ( \"%ld\\n\" , tCaseCount [ i ] )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 679,
                          "end_byte": 685,
                          "text": "printf",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 686,
                          "end_byte": 716,
                          "text": "( \"%ld\\n\" , tCaseCount [ i ] )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 686,
                              "end_byte": 687,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "string_literal",
                              "start_byte": 688,
                              "end_byte": 695,
                              "text": "\"%ld\\n\"",
                              "children": [
                                {
                                  "type": "\"",
                                  "start_byte": 688,
                                  "end_byte": 689,
                                  "text": "\"",
                                  "children": []
                                },
                                {
                                  "type": "string_content",
                                  "start_byte": 689,
                                  "end_byte": 692,
                                  "text": "%ld",
                                  "children": []
                                },
                                {
                                  "type": "escape_sequence",
                                  "start_byte": 692,
                                  "end_byte": 694,
                                  "text": "\\n",
                                  "children": []
                                },
                                {
                                  "type": "\"",
                                  "start_byte": 694,
                                  "end_byte": 695,
                                  "text": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 696,
                              "end_byte": 697,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 698,
                              "end_byte": 714,
                              "text": "tCaseCount [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 698,
                                  "end_byte": 708,
                                  "text": "tCaseCount",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 709,
                                  "end_byte": 714,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 709,
                                      "end_byte": 710,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 711,
                                      "end_byte": 712,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 713,
                                      "end_byte": 714,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 715,
                              "end_byte": 716,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 717,
                      "end_byte": 718,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 719,
              "end_byte": 729,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 719,
                  "end_byte": 725,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 726,
                  "end_byte": 727,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 728,
                  "end_byte": 729,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 730,
              "end_byte": 731,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}