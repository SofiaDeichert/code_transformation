{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 654,
  "text": "int main ( ) { long long int n , i , num1 , num2 , gcd , lcm , remainder , numerator , denominator ; scanf ( \"%lld\" , & n ) ; long long int a [ n ] , b [ n ] ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%lld %lld\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } a [ i ] = denominator ; b [ i ] = num1 * num2 / a [ i ] ; } for ( i = 0 ; i < n ; i ++ ) { printf ( \"%lld %lld\\n\" , a [ i ] , b [ i ] ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 654,
      "text": "int main ( ) { long long int n , i , num1 , num2 , gcd , lcm , remainder , numerator , denominator ; scanf ( \"%lld\" , & n ) ; long long int a [ n ] , b [ n ] ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%lld %lld\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } a [ i ] = denominator ; b [ i ] = num1 * num2 / a [ i ] ; } for ( i = 0 ; i < n ; i ++ ) { printf ( \"%lld %lld\\n\" , a [ i ] , b [ i ] ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 654,
          "text": "{ long long int n , i , num1 , num2 , gcd , lcm , remainder , numerator , denominator ; scanf ( \"%lld\" , & n ) ; long long int a [ n ] , b [ n ] ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%lld %lld\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } a [ i ] = denominator ; b [ i ] = num1 * num2 / a [ i ] ; } for ( i = 0 ; i < n ; i ++ ) { printf ( \"%lld %lld\\n\" , a [ i ] , b [ i ] ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 100,
              "text": "long long int n , i , num1 , num2 , gcd , lcm , remainder , numerator , denominator ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 15,
                  "end_byte": 28,
                  "text": "long long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 15,
                      "end_byte": 19,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "long",
                      "start_byte": 20,
                      "end_byte": 24,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 25,
                      "end_byte": 28,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 29,
                  "end_byte": 30,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 31,
                  "end_byte": 32,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 33,
                  "end_byte": 34,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 35,
                  "end_byte": 36,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 37,
                  "end_byte": 41,
                  "text": "num1",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 42,
                  "end_byte": 43,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 44,
                  "end_byte": 48,
                  "text": "num2",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 49,
                  "end_byte": 50,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 51,
                  "end_byte": 54,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 55,
                  "end_byte": 56,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 57,
                  "end_byte": 60,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 61,
                  "end_byte": 62,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 63,
                  "end_byte": 72,
                  "text": "remainder",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 73,
                  "end_byte": 74,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 75,
                  "end_byte": 84,
                  "text": "numerator",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 85,
                  "end_byte": 86,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 87,
                  "end_byte": 98,
                  "text": "denominator",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 99,
                  "end_byte": 100,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 101,
              "end_byte": 125,
              "text": "scanf ( \"%lld\" , & n ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 101,
                  "end_byte": 123,
                  "text": "scanf ( \"%lld\" , & n )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 101,
                      "end_byte": 106,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 107,
                      "end_byte": 123,
                      "text": "( \"%lld\" , & n )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 107,
                          "end_byte": 108,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 109,
                          "end_byte": 115,
                          "text": "\"%lld\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 109,
                              "end_byte": 110,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 110,
                              "end_byte": 114,
                              "text": "%lld",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 114,
                              "end_byte": 115,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 116,
                          "end_byte": 117,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 118,
                          "end_byte": 121,
                          "text": "& n",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 118,
                              "end_byte": 119,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 120,
                              "end_byte": 121,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 122,
                          "end_byte": 123,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 124,
                  "end_byte": 125,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 126,
              "end_byte": 159,
              "text": "long long int a [ n ] , b [ n ] ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 126,
                  "end_byte": 139,
                  "text": "long long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 126,
                      "end_byte": 130,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "long",
                      "start_byte": 131,
                      "end_byte": 135,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 136,
                      "end_byte": 139,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "array_declarator",
                  "start_byte": 140,
                  "end_byte": 147,
                  "text": "a [ n ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 140,
                      "end_byte": 141,
                      "text": "a",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 142,
                      "end_byte": 143,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 144,
                      "end_byte": 145,
                      "text": "n",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 146,
                      "end_byte": 147,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 148,
                  "end_byte": 149,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 150,
                  "end_byte": 157,
                  "text": "b [ n ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 150,
                      "end_byte": 151,
                      "text": "b",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 152,
                      "end_byte": 153,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 154,
                      "end_byte": 155,
                      "text": "n",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 156,
                      "end_byte": 157,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 158,
                  "end_byte": 159,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 160,
              "end_byte": 561,
              "text": "for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%lld %lld\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } a [ i ] = denominator ; b [ i ] = num1 * num2 / a [ i ] ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 160,
                  "end_byte": 163,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 164,
                  "end_byte": 165,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 166,
                  "end_byte": 171,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 166,
                      "end_byte": 167,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 168,
                      "end_byte": 169,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 170,
                      "end_byte": 171,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 172,
                  "end_byte": 173,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 174,
                  "end_byte": 179,
                  "text": "i < n",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 174,
                      "end_byte": 175,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 176,
                      "end_byte": 177,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 178,
                      "end_byte": 179,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 180,
                  "end_byte": 181,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 182,
                  "end_byte": 186,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 182,
                      "end_byte": 183,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 184,
                      "end_byte": 186,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 187,
                  "end_byte": 188,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 189,
                  "end_byte": 561,
                  "text": "{ scanf ( \"%lld %lld\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } a [ i ] = denominator ; b [ i ] = num1 * num2 / a [ i ] ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 189,
                      "end_byte": 190,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 191,
                      "end_byte": 232,
                      "text": "scanf ( \"%lld %lld\" , & num1 , & num2 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 191,
                          "end_byte": 230,
                          "text": "scanf ( \"%lld %lld\" , & num1 , & num2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 191,
                              "end_byte": 196,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 197,
                              "end_byte": 230,
                              "text": "( \"%lld %lld\" , & num1 , & num2 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 197,
                                  "end_byte": 198,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 199,
                                  "end_byte": 210,
                                  "text": "\"%lld %lld\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 199,
                                      "end_byte": 200,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 200,
                                      "end_byte": 209,
                                      "text": "%lld %lld",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 209,
                                      "end_byte": 210,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 211,
                                  "end_byte": 212,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 213,
                                  "end_byte": 219,
                                  "text": "& num1",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 213,
                                      "end_byte": 214,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 215,
                                      "end_byte": 219,
                                      "text": "num1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 220,
                                  "end_byte": 221,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 222,
                                  "end_byte": 228,
                                  "text": "& num2",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 222,
                                      "end_byte": 223,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 224,
                                      "end_byte": 228,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 229,
                                  "end_byte": 230,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 231,
                          "end_byte": 232,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 233,
                      "end_byte": 344,
                      "text": "if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 233,
                          "end_byte": 235,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 236,
                          "end_byte": 251,
                          "text": "( num1 > num2 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 236,
                              "end_byte": 237,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 238,
                              "end_byte": 249,
                              "text": "num1 > num2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 238,
                                  "end_byte": 242,
                                  "text": "num1",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 243,
                                  "end_byte": 244,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 245,
                                  "end_byte": 249,
                                  "text": "num2",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 250,
                              "end_byte": 251,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 252,
                          "end_byte": 295,
                          "text": "{ numerator = num1 ; denominator = num2 ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 252,
                              "end_byte": 253,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 254,
                              "end_byte": 272,
                              "text": "numerator = num1 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 254,
                                  "end_byte": 270,
                                  "text": "numerator = num1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 254,
                                      "end_byte": 263,
                                      "text": "numerator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 264,
                                      "end_byte": 265,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 266,
                                      "end_byte": 270,
                                      "text": "num1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 271,
                                  "end_byte": 272,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 273,
                              "end_byte": 293,
                              "text": "denominator = num2 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 273,
                                  "end_byte": 291,
                                  "text": "denominator = num2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 273,
                                      "end_byte": 284,
                                      "text": "denominator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 285,
                                      "end_byte": 286,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 287,
                                      "end_byte": 291,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 292,
                                  "end_byte": 293,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 294,
                              "end_byte": 295,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 296,
                          "end_byte": 344,
                          "text": "else { numerator = num2 ; denominator = num1 ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 296,
                              "end_byte": 300,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 301,
                              "end_byte": 344,
                              "text": "{ numerator = num2 ; denominator = num1 ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 301,
                                  "end_byte": 302,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 303,
                                  "end_byte": 321,
                                  "text": "numerator = num2 ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 303,
                                      "end_byte": 319,
                                      "text": "numerator = num2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 303,
                                          "end_byte": 312,
                                          "text": "numerator",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 313,
                                          "end_byte": 314,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 315,
                                          "end_byte": 319,
                                          "text": "num2",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 320,
                                      "end_byte": 321,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 322,
                                  "end_byte": 342,
                                  "text": "denominator = num1 ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 322,
                                      "end_byte": 340,
                                      "text": "denominator = num1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 322,
                                          "end_byte": 333,
                                          "text": "denominator",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 334,
                                          "end_byte": 335,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 336,
                                          "end_byte": 340,
                                          "text": "num1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 341,
                                      "end_byte": 342,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 343,
                                  "end_byte": 344,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 345,
                      "end_byte": 382,
                      "text": "remainder = numerator % denominator ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 345,
                          "end_byte": 380,
                          "text": "remainder = numerator % denominator",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 345,
                              "end_byte": 354,
                              "text": "remainder",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 355,
                              "end_byte": 356,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 357,
                              "end_byte": 380,
                              "text": "numerator % denominator",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 357,
                                  "end_byte": 366,
                                  "text": "numerator",
                                  "children": []
                                },
                                {
                                  "type": "%",
                                  "start_byte": 367,
                                  "end_byte": 368,
                                  "text": "%",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 369,
                                  "end_byte": 380,
                                  "text": "denominator",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 381,
                          "end_byte": 382,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 383,
                      "end_byte": 501,
                      "text": "while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 383,
                          "end_byte": 388,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 389,
                          "end_byte": 407,
                          "text": "( remainder != 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 389,
                              "end_byte": 390,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 391,
                              "end_byte": 405,
                              "text": "remainder != 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 391,
                                  "end_byte": 400,
                                  "text": "remainder",
                                  "children": []
                                },
                                {
                                  "type": "!=",
                                  "start_byte": 401,
                                  "end_byte": 403,
                                  "text": "!=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 404,
                                  "end_byte": 405,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 406,
                              "end_byte": 407,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 408,
                          "end_byte": 501,
                          "text": "{ numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 408,
                              "end_byte": 409,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 410,
                              "end_byte": 435,
                              "text": "numerator = denominator ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 410,
                                  "end_byte": 433,
                                  "text": "numerator = denominator",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 410,
                                      "end_byte": 419,
                                      "text": "numerator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 420,
                                      "end_byte": 421,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 422,
                                      "end_byte": 433,
                                      "text": "denominator",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 434,
                                  "end_byte": 435,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 436,
                              "end_byte": 461,
                              "text": "denominator = remainder ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 436,
                                  "end_byte": 459,
                                  "text": "denominator = remainder",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 436,
                                      "end_byte": 447,
                                      "text": "denominator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 448,
                                      "end_byte": 449,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 450,
                                      "end_byte": 459,
                                      "text": "remainder",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 460,
                                  "end_byte": 461,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 462,
                              "end_byte": 499,
                              "text": "remainder = numerator % denominator ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 462,
                                  "end_byte": 497,
                                  "text": "remainder = numerator % denominator",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 462,
                                      "end_byte": 471,
                                      "text": "remainder",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 472,
                                      "end_byte": 473,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 474,
                                      "end_byte": 497,
                                      "text": "numerator % denominator",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 474,
                                          "end_byte": 483,
                                          "text": "numerator",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 484,
                                          "end_byte": 485,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 486,
                                          "end_byte": 497,
                                          "text": "denominator",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 498,
                                  "end_byte": 499,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 500,
                              "end_byte": 501,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 502,
                      "end_byte": 525,
                      "text": "a [ i ] = denominator ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 502,
                          "end_byte": 523,
                          "text": "a [ i ] = denominator",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 502,
                              "end_byte": 509,
                              "text": "a [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 502,
                                  "end_byte": 503,
                                  "text": "a",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 504,
                                  "end_byte": 509,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 504,
                                      "end_byte": 505,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 506,
                                      "end_byte": 507,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 508,
                                      "end_byte": 509,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 510,
                              "end_byte": 511,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 512,
                              "end_byte": 523,
                              "text": "denominator",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 524,
                          "end_byte": 525,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 526,
                      "end_byte": 559,
                      "text": "b [ i ] = num1 * num2 / a [ i ] ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 526,
                          "end_byte": 557,
                          "text": "b [ i ] = num1 * num2 / a [ i ]",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 526,
                              "end_byte": 533,
                              "text": "b [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 526,
                                  "end_byte": 527,
                                  "text": "b",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 528,
                                  "end_byte": 533,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 528,
                                      "end_byte": 529,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 530,
                                      "end_byte": 531,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 532,
                                      "end_byte": 533,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 534,
                              "end_byte": 535,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 536,
                              "end_byte": 557,
                              "text": "num1 * num2 / a [ i ]",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 536,
                                  "end_byte": 547,
                                  "text": "num1 * num2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 536,
                                      "end_byte": 540,
                                      "text": "num1",
                                      "children": []
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 541,
                                      "end_byte": 542,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 543,
                                      "end_byte": 547,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 548,
                                  "end_byte": 549,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 550,
                                  "end_byte": 557,
                                  "text": "a [ i ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 550,
                                      "end_byte": 551,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 552,
                                      "end_byte": 557,
                                      "text": "[ i ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 552,
                                          "end_byte": 553,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 554,
                                          "end_byte": 555,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 556,
                                          "end_byte": 557,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 558,
                          "end_byte": 559,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 560,
                      "end_byte": 561,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 562,
              "end_byte": 641,
              "text": "for ( i = 0 ; i < n ; i ++ ) { printf ( \"%lld %lld\\n\" , a [ i ] , b [ i ] ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 562,
                  "end_byte": 565,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 566,
                  "end_byte": 567,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 568,
                  "end_byte": 573,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 568,
                      "end_byte": 569,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 570,
                      "end_byte": 571,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 572,
                      "end_byte": 573,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 574,
                  "end_byte": 575,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 576,
                  "end_byte": 581,
                  "text": "i < n",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 576,
                      "end_byte": 577,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 578,
                      "end_byte": 579,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 580,
                      "end_byte": 581,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 582,
                  "end_byte": 583,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 584,
                  "end_byte": 588,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 584,
                      "end_byte": 585,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 586,
                      "end_byte": 588,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 589,
                  "end_byte": 590,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 591,
                  "end_byte": 641,
                  "text": "{ printf ( \"%lld %lld\\n\" , a [ i ] , b [ i ] ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 591,
                      "end_byte": 592,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 593,
                      "end_byte": 639,
                      "text": "printf ( \"%lld %lld\\n\" , a [ i ] , b [ i ] ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 593,
                          "end_byte": 637,
                          "text": "printf ( \"%lld %lld\\n\" , a [ i ] , b [ i ] )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 593,
                              "end_byte": 599,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 600,
                              "end_byte": 637,
                              "text": "( \"%lld %lld\\n\" , a [ i ] , b [ i ] )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 600,
                                  "end_byte": 601,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 602,
                                  "end_byte": 615,
                                  "text": "\"%lld %lld\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 602,
                                      "end_byte": 603,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 603,
                                      "end_byte": 612,
                                      "text": "%lld %lld",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 612,
                                      "end_byte": 614,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 614,
                                      "end_byte": 615,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 616,
                                  "end_byte": 617,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 618,
                                  "end_byte": 625,
                                  "text": "a [ i ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 618,
                                      "end_byte": 619,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 620,
                                      "end_byte": 625,
                                      "text": "[ i ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 620,
                                          "end_byte": 621,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 622,
                                          "end_byte": 623,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 624,
                                          "end_byte": 625,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 626,
                                  "end_byte": 627,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 628,
                                  "end_byte": 635,
                                  "text": "b [ i ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 628,
                                      "end_byte": 629,
                                      "text": "b",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 630,
                                      "end_byte": 635,
                                      "text": "[ i ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 630,
                                          "end_byte": 631,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 632,
                                          "end_byte": 633,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 634,
                                          "end_byte": 635,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 636,
                                  "end_byte": 637,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 638,
                          "end_byte": 639,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 640,
                      "end_byte": 641,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 642,
              "end_byte": 652,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 642,
                  "end_byte": 648,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 649,
                  "end_byte": 650,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 651,
                  "end_byte": 652,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 653,
              "end_byte": 654,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}