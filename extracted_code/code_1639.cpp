void lcm_gcd ( int , int ) ; int main ( ) { int i , t , a1 , a2 ; int * p ; scanf ( "%d" , & t ) ; if ( t >= 1 && t <= 1000 ) { p = ( int * ) calloc ( 2 * t , sizeof ( int ) ) ; for ( i = 0 ; i < 2 * t ; i += 2 ) { scanf ( "%d%d" , p + i , p + i + 1 ) ; } for ( i = 0 ; i < 2 * t ; i += 2 ) { a1 = * ( p + i ) ; a2 = * ( p + i + 1 ) ; if ( a1 >= 1 && a2 <= 1000000 && a2 >= 1 && a2 <= 1000000 ) lcm_gcd ( a1 , a2 ) ; else printf ( "0 0\n" ) ; } } return 0 ; } void lcm_gcd ( int n1 , int n2 ) { int i , j , a , b , lcm , gcd ; if ( n1 > 0 && n2 > 0 ) { for ( i = 1 ; i <= n1 && i <= n2 ; i ++ ) { if ( n1 % i == 0 && n2 % i == 0 ) { gcd = i ; } } if ( n1 > n2 ) { a = n1 ; b = n2 ; } else { a = n2 ; b = n1 ; } for ( j = b ; ; j ++ ) { if ( j % b == 0 && j % a == 0 ) { lcm = j ; break ; } } } else { lcm = gcd = 0 ; } printf ( "%d %d\n" , gcd , lcm ) ; }